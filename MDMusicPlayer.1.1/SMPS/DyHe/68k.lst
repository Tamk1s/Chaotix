00000000                            ; =============== S U B	R O U T	I N E =======================================
00000000                            	include "..\..\code\macro.asm"
00000000                            	opt ae+		; automatic even's
00000000                            	opt l+		; . is local lable symbol
00000000                            	opt w-		; don't print warnings
00000000                            	opt op+		; optimize PC relative addressing
00000000                            	opt os+		; optimize short branches
00000000                            	opt ow+		; optimize absolute long addressing
00000000                            	opt oz+		; optimize zero displacements
00000000                            	opt oaq+	; optimize addq
00000000                            	opt osq+	; optimize subq
00000000                            	opt omq+	; optimize moveq
00000000                            
00000000                            ; ===========================================================================
00000000                            align macro
00000000                            	if narg>=2
00000000                            		cnop \2,\1
00000000                            	else
00000000                            		cnop 0,\1
00000000                            	endif
00000000                            	endm
00000000                            
00000000                            ; ===========================================================================
00000000                            vdpComm		macro ins,addr,type,rwd,end,end2
00000000                            	if narg=5
00000000                            		\ins #(((\type&\rwd)&3)<<30)|((\addr&$3FFF)<<16)|(((\type&\rwd)&$FC)<<2)|((\addr&$C000)>>14), \end
00000000                            
00000000                            	elseif narg=6
00000000                            		\ins #(((((\type&\rwd)&3)<<30)|((\addr&$3FFF)<<16)|(((\type&\rwd)&$FC)<<2)|((\addr&$C000)>>14))\end, \end2
00000000                            
00000000                            	else
00000000                            		\ins (((\type&\rwd)&3)<<30)|((\addr&$3FFF)<<16)|(((\type&\rwd)&$FC)<<2)|((\addr&$C000)>>14)
00000000                            	endif
00000000                                endm
00000000                            
00000000                            vdpCoord	macro base,x,y,rwd
00000000                            .addr =		(\base+\x+\x+(\y*$40))
00000000                            	dc.l (((VRAM&\rwd)&3)<<30)|((.addr&$3FFF)<<16)|(((VRAM&\rwd)&$FC)<<2)|((.addr&$C000)>>14)
00000000                                endm
00000000                            
00000000                            ; ===========================================================================
00000000                            ; values for the type argument
00000000 =00000021                  VRAM =  %100001
00000000 =0000002B                  CRAM =  %101011
00000000 =00000025                  VSRAM = %100101
00000000                            
00000000                            ; values for the rwd argument
00000000 =0000000C                  READ =  %001100
00000000 =00000007                  WRITE = %000111
00000000 =00000027                  DMA =   %100111
00000000                            
00000000                            ; ===========================================================================
00000000                            ; tells the VDP to copy a region of 68k memory to VRAM or CRAM or VSRAM
00000000                            dma68kToVDP macro source,dest,length,type
00000000                            		lea	VDP_control_port,a5
00000000                            		move.l	#(($9400|((((length)>>1)&$FF00)>>8))<<16)|($9300|(((length)>>1)&$FF)),(a5)
00000000                            		move.l	#(($9600|((((source)>>1)&$FF00)>>8))<<16)|($9500|(((source)>>1)&$FF)),(a5)
00000000                            		move.w	#$9700|(((((source)>>1)&$FF0000)>>16)&$7F),(a5)
00000000                            	vdpComm	move.l,\dest,\type,DMA,(a5)
00000000                                endm
00000000                            
00000000                            ; ===========================================================================
00000000                            ; tells the VDP to fill a region of VRAM with a certain byte
00000000                            dmaFillVRAM macro byte,addr,length,wait
00000000                            	lea	VDP_control_port,a5
00000000                            	move.w	#$8F01,(a5) ; VRAM pointer increment: $0001
00000000                            	move.l	#(($9400|((((length)-1)&$FF00)>>8))<<16)|($9300|(((length)-1)&$FF)),(a5) ; DMA length ...
00000000                            	move.w	#$9780,(a5) ; VRAM fill
00000000                            	move.l	#$40000080|(((addr)&$3FFF)<<16)|(((addr)&$C000)>>14),(a5) ; Start at ...
00000000                            	move.w	#(byte)<<8,(VDP_data_port).l ; Fill with byte
00000000                            
00000000                            	if narg<4
00000000                            .loop\@		move.w	(a5),d1
00000000                            		btst	#1,d1
00000000                            		bne.s	.loop\@	; busy loop until the VDP is finished filling...
00000000                            		move.w	#$8F02,(a5) ; VRAM pointer increment: $0002
00000000                            	endif
00000000                                endm
00000000                            
00000000                            ; ===========================================================================
00000000                            ; allows you to declare string to be converted to character map or mappings
00000000                            asc2	macro	or, str
00000000                            	dc.W strlen(\str)-1
00000000                            	asc	\or, \str
00000000                                endm
00000000                            
00000000                            asc	macro	or, str
00000000                            .lc = 0
00000000                            	rept strlen(\str)
00000000                            .cc		substr .lc+1,.lc+1,\str
00000000                            
00000000                            		if '\.cc'=' '
00000000                            			dc.\0 0|or			; whitespace
00000000                            
00000000                            		elseif ('\.cc'>='0')&('\.cc'<='9')
00000000                            			dc.\0 ('\.cc'-'0'+1)|or		; 0-9
00000000                            
00000000                            		elseif ('\.cc'>='a')&('\.cc'<='z')
00000000                            			dc.\0 ('\.cc'-'a'+$2B)|or	; a-z
00000000                            
00000000                            		elseif ('\.cc'>='A')&('\.cc'<='Z')
00000000                            			dc.\0 ('\.cc'-'A'+$B)|or	; A-Z
00000000                            
00000000                            		elseif '\.cc'='!'
00000000                            			dc.\0 $25|or	; !
00000000                            
00000000                            		elseif '\.cc'='?'
00000000                            			dc.\0 $26|or	; ?
00000000                            
00000000                            		elseif '\.cc'='.'
00000000                            			dc.\0 $27|or	; .
00000000                            
00000000                            		elseif '\.cc'=','
00000000                            			dc.\0 $28|or	; ,
00000000                            
00000000                            		elseif '\.cc'=':'
00000000                            			dc.\0 $29|or	; :
00000000                            
00000000                            		elseif '\.cc'=';'
00000000                            			dc.\0 $2A|or	; ;
00000000                            
00000000                            		elseif '\.cc'='^'
00000000                            			dc.\0 $45|or	; ^
00000000                            
00000000                            		elseif '\.cc'='/'
00000000                            			dc.\0 $46|or	; /
00000000                            
00000000                            		elseif '\.cc'='\\'
00000000                            			dc.\0 $47|or	; \
00000000                            
00000000                            		elseif '\.cc'='*'
00000000                            			dc.\0 $48|or	; *
00000000                            
00000000                            		elseif '\.cc'='-'
00000000                            			dc.\0 $49|or	; -
00000000                            
00000000                            		elseif '\.cc'='|'
00000000                            			dc.\0 $4A|or	; _ (wider)
00000000                            
00000000                            		elseif '\.cc'='$'
00000000                            			dc.\0 $4B|or	; $
00000000                            
00000000                            		elseif '\.cc'='%'
00000000                            			dc.\0 $4C|or	; %
00000000                            
00000000                            		elseif '\.cc'='#'
00000000                            			dc.\0 $4D|or	; #
00000000                            
00000000                            		elseif '\.cc'='+'
00000000                            			dc.\0 $4E|or	; +
00000000                            
00000000                            		elseif '\.cc'='}'
00000000                            			dc.\0 $4F|or	; ->
00000000                            
00000000                            		elseif '\.cc'='{'
00000000                            			dc.\0 $50|or	; <-
00000000                            
00000000                            		elseif '\.cc'='@'
00000000                            			dc.\0 $51|or	; @
00000000                            
00000000                            		elseif '\.cc'='_'
00000000                            			dc.\0 $52|or	; _
00000000                            
00000000                            		elseif '\.cc'='('
00000000                            			dc.\0 $53|or	; (
00000000                            
00000000                            		elseif '\.cc'=')'
00000000                            			dc.\0 $54|or	; )
00000000                            
00000000                            		elseif '\.cc'='['
00000000                            			dc.\0 $55|or	; [
00000000                            
00000000                            		elseif '\.cc'=']'
00000000                            			dc.\0 $56|or	; ]
00000000                            
00000000                            		elseif '\.cc'='>'
00000000                            			dc.\0 $57|or	; >
00000000                            
00000000                            		elseif '\.cc'='<'
00000000                            			dc.\0 $58|or	; <
00000000                            
00000000                            		elseif '\.cc'='&'
00000000                            			dc.\0 $59|or	; &
00000000                            
00000000                            		elseif '\.cc'='~'
00000000                            			dc.\0 $5A|or	; ~
00000000                            
00000000                            		elseif '\.cc'="'"
00000000                            			dc.\0 $5B|or	; '
00000000                            
00000000                            		elseif '\.cc'='"'
00000000                            			dc.\0 $5C|or	; "
00000000                            
00000000                            		elseif '\.cc'='='
00000000                            			dc.\0 $5D|or	; =
00000000                            
00000000                            		elseif '\.cc'='`'
00000000                            			dc.\0 $5E|or	; `
00000000                            
00000000                            		else
00000000                            			inform 2,"ASCII value failure: \.cc %d", .cc
00000000                            		endif
00000000                            
00000000                            .lc =		.lc+1
00000000                            	endr
00000000                                endm
00000000                            
00000000                            ; ===========================================================================
00000000                            ; tells the Z80 to stop, and waits for it to finish stopping (acquire bus)
00000000                            stopZ80 macro
00000000                            		move.w	#$100,Z80_bus_request	; stop the Z80
00000000                            .loop\@		btst	#0,Z80_bus_request
00000000                            		bne.s	.loop\@			; loop until it says it's stopped
00000000                                endm
00000000                            
00000000                            ; tells the Z80 to start again
00000000                            startZ80 macro
00000000                            		move.w	#0,Z80_bus_request	; start the Z80
00000000                                endm
00000000                            
00000000                            ; waits for YM
00000000                            waitYM        macro	reg
00000000                            .wait\@:	move.b	(\reg),d2
00000000                            		btst	#7,d2
00000000                            		bne.s	.wait\@
00000000                                    endm
00000000                            
00000000                            ; ===========================================================================
00000000                            	rsreset		; set __rs to 0
00000000 =00000000                  cmp_none	rs.l 1	; no data
00000000 =00000004                  cmp_unc		rs.l 1	; uncompressed driver image
00000000 =00000008                  cmp_kos		rs.l 1	; kosinski compressed driver image
00000000 =0000000C                  cmp_comp	rs.l 1	; comper compressed driver image
00000000 =00000010                  cmp_nem		rs.l 1	; nemesis compressed driver image
00000000 =00000014                  cmp_eni		rs.l 1	; enigma compressed driver image
00000000                            
00000000                            ; ===========================================================================
00000000                            incdrv	macro	type, folder, comp
00000000                            \folder	=	drvnum		; equate driver name with it's ID
00000000                            Driver_Folder_\#drvnum	equs "\folder"; get the folder the driver is installed on
00000000                            
00000000                            	dc.l \folder\_dmaon
00000000                            	dc.l \folder\_dmaoff
00000000                            	dc.l \folder\_load
00000000                            	dc.l \folder\_play
00000000                            	dc.l \folder\_update
00000000                            
00000000                            Driver68k_\#drvnum:
00000000                            	dc.w \comp		; set compression mode
00000000                            
00000000                            	if \comp<>cmp_none	; if compression is none, dont include any files
00000000                            	if \comp=cmp_unc	; set size of the driver if uncompressed
00000000                            		dc.w ((DriverZ80_\#drvnum-DriverZ80_End_\#drvnum-4)/4)-1
00000000                            	else			; if not uncompressed, set a pointer to z80 driver
00000000                            		dc.l DriverZ80_\#drvnum
00000000                            	endif
00000000                            	incbin	"\type\/\folder\/drv.68k"; include the actual driver code
00000000                            Driver68k_End_\#drvnum:		; set ending point for the driver (uncompressed only)
00000000                            
00000000                            DriverZ80_\#drvnum:
00000000                            	if \comp=cmp_unc	; set size of the driver if uncompressed
00000000                            		dc.w ((DriverZ80_\#drvnum-DriverZ80_End_\#drvnum-4)/4)-1
00000000                            	endif
00000000                            	incbin	"\type\/\folder\/drv.z80"; include the actual driver code
00000000                            DriverZ80_End_\#drvnum:		; set ending point for the driver (uncompressed only)
00000000                            	endif
00000000                            
00000000                            	include	"\type\/\folder\/code.asm"; finally include play, load and update code
00000000                            
00000000                            drvnum	=	drvnum+4	; next driver ID
00000000                                endm
00000000                            
00000000                            ; ===========================================================================
00000000                            ; following macros are all about including specific array's to driver images
00000000                            ; and specific data.
00000000                            drvimg	macro
00000000                            rvar	= 0			; reset driver ID
00000000                            	rept	drvnum/4	; do for all installed drivers
00000000                            		dc.l Driver68k_\#rvar; set pointer to driver data
00000000                            
00000000                            rvar	= rvar+4		; next driver
00000000                            	endr
00000000                                endm
00000000                            ; ===========================================================================
00000000                            ; Driver type definition
00000000                            		rsset 0
00000000 =00000000                  TYPE_NULL	rs.w 1
00000000 =00000002                  TYPE_SMPS	rs.w 1
00000000 =00000004                  TYPE_GEMS	rs.w 1
00000000                            
00000000                            ; ===========================================================================
00000000                            ; Z80 addresses
00000000 =00A00000                  Z80_RAM =			$A00000 ; start of Z80 RAM
00000000 =00A02000                  Z80_RAM_end =			$A02000 ; end of non-reserved Z80 RAM
00000000 =00A11100                  Z80_bus_request =		$A11100
00000000 =00A11200                  Z80_reset =			$A11200
00000000                            
00000000 =00A130F1                  SRAM_access =			$A130F1
00000000 =00A14000                  Security_addr =			$A14000
00000000                            ; ===========================================================================
00000000                            ; I/O Area
00000000 =00A10001                  HW_Version =			$A10001
00000000 =00A10003                  HW_Port_1_Data =		$A10003
00000000 =00A10005                  HW_Port_2_Data =		$A10005
00000000 =00A10007                  HW_Expansion_Data =		$A10007
00000000 =00A10009                  HW_Port_1_Control =		$A10009
00000000 =00A1000B                  HW_Port_2_Control =		$A1000B
00000000 =00A1000D                  HW_Expansion_Control =		$A1000D
00000000 =00A1000F                  HW_Port_1_TxData =		$A1000F
00000000 =00A10011                  HW_Port_1_RxData =		$A10011
00000000 =00A10013                  HW_Port_1_SCtrl =		$A10013
00000000 =00A10015                  HW_Port_2_TxData =		$A10015
00000000 =00A10017                  HW_Port_2_RxData =		$A10017
00000000 =00A10019                  HW_Port_2_SCtrl =		$A10019
00000000 =00A1001B                  HW_Expansion_TxData =		$A1001B
00000000 =00A1001D                  HW_Expansion_RxData =		$A1001D
00000000 =00A1001F                  HW_Expansion_SCtrl =		$A1001F
00000000                            
00000000                            ; ===========================================================================
00000000                            ; VDP addresses
00000000 =00C00000                  VDP_data_port =			$C00000
00000000 =00C00004                  VDP_control_port =		$C00004
00000000 =00C00011                  PSG_input =			$C00011
00000000                            ; ===========================================================================
00000000                            	rsset	$FFFF0000
00000000 =FFFF0002                  Z80music	equ __rs+2	; if z80 driver, this is the address of the music file.
00000000 =FFFF0000                  Driver68K	rs.b $8000	; 68k driver ROM. if Z80 driver, this is rte
00000000 =FFFF8000                  Drv68Kmem	rs.b 0		; memory for the 68k driver.
00000000 =FFFF8000                  NemDecBuffer	rs.b $1C00	; used when decompressing Nemesis format sound drivers
00000000 =FFFF9C00                  HBlankRAM	rs.b $400	; code to run in HBlank. Can also be used as extra RAM for sound driver
00000000                            		rs.l 3		; stack overflow area
00000000 =FFFFA00C                  StackUflowRAM	rs.l 1		; stack overflow area
00000000 =FFFFA010                  StackStart	rs.b $100	; 68k stack
00000000 =FFFFA110                  Stack		rs.b 0		; 68k stack pointer
00000000 =FFFFA110                  StackOflowRAM	rs.l 4		; stack underflow area
00000000 =FFFFA120                  MainPalette	rs.b $80	; current palette of the program
00000000 =FFFFA1A0                  VScrollRAM	rs.b 80		; Vertical scrolling RAM
00000000 =FFFFA1F0                  ActiveChnLast	rs.w 1		; active sound channels for last frame
00000000 =FFFFA1F2                  ActiveChn	rs.w 1		; currently active sound channels. Bits 0-5 = FM1-FM6, Bits 6-9 = PSG1-PSG3, Bit 10 = DAC
00000000 =FFFFA1F4                  MusSelection	rs.w 1		; current song selection
00000000 =FFFFA1F6                  MusPlaying	rs.w 1		; current song playing
00000000 =FFFFA1F8                  DMAlen		rs.w 1		; current fake DMA mode
00000000 =FFFFA1FA                  LoadedDriver	rs.b 1		; currently loaded sound driver
00000000 =FFFFA1FB                  DriverType	rs.b 1		; the type of the sound driver loaded
00000000 =FFFFA1FC                  HWVersion	rs.b 1		; determines the region of the machine
00000000 =FFFFA1FE                  VintTime	rs.w 1		; V-int timer in frames
00000000 =FFFFA200                  Ctrl1Held	rs.b 1		; controller 1 held buttons
00000000 =FFFFA201                  Ctrl1Press	rs.b 1		; controller 1 pressed buttons
00000000 =FFFFA202                  Ctrl2Held	rs.b 1		; controller 2 held buttons
00000000 =FFFFA203                  Ctrl2Press	rs.b 1		; controller 2 pressed buttons
00000000 =FFFFA204                  Ctrl0Held	rs.b 1		; controller 0 held buttons
00000000 =FFFFA205                  Ctrl0Press	rs.b 1		; controller 0 pressed buttons
00000000 =FFFFA206                  ChanDat		rs.b 8+(16*6)	; total amount of space for channel data
00000000                            
00000000                            ; SMPS Channel data
00000000                            	rsset ChanDat
00000000 =FFFFA206                  sTempo		rs.b 1		; tempo of the driver
00000000 =FFFFA207                  sTickMul	rs.b 1		; tick multiplier of the driver
00000000 =FFFFA208                  sDACnumber	rs.b 1		; the DAC ID we are playing currently
00000000 =FFFFA209                  sDACtime	rs.b 1		; timer for the currently playing DAC
00000000                            		rs.w 0		; make sure these addresses are even
00000000                            
00000000 =FFFFA20A                  sPSG3tmul	rs.b 1		; PSG3 tick multiplier
00000000 =FFFFA20B                  sPSG3inst	rs.b 1		; PSG3 instrument
00000000 =FFFFA20C                  sPSG3vol	rs.b 1		; PSG3 volume
00000000 =FFFFA20D                  sPSG3note	rs.b 1		; PSG3 note
00000000 =FFFFA20E                  sPSG3time	rs.b 1		; PSG3 timer
00000000 =FFFFA20F                  sPSG2		rs.b 5
00000000 =FFFFA214                  sPSG1		rs.b 5
00000000 =FFFFA219                  sFM6		rs.b 5
00000000 =FFFFA21E                  sFM5		rs.b 5
00000000 =FFFFA223                  sFM4		rs.b 5
00000000 =FFFFA228                  sFM3		rs.b 5
00000000 =FFFFA22D                  sFM2		rs.b 5
00000000 =FFFFA232                  sFM1		rs.b 5
00000000                            
00000000                            ; GEMS Channel data
00000000                            	rsset ChanDat
00000000 =FFFFA206                  gTempo		rs.w 1		; current bpm
00000000 =FFFFA208                  gVolume		rs.b 1		; master volume
00000000 =FFFFA209                  gCurSeq		rs.b 1		; sequence number (used in GEMS manipulate mode!)
00000000 =FFFFA20A                  gSeq		rs.b 1		; current sequence(!)
00000000 =FFFFA20B                  gFlags		rs.b 1		; channel flags
00000000 =FFFFA20C                  gPrio		rs.b 1		; current priority
00000000 =FFFFA20D                  gPatch		rs.b 1		; current patch id
00000000 =FFFFA20E                  gVol		rs.b 1		; how loud the channel is
00000000 =FFFFA210                  gTime		rs.w 1		; timer for next event
00000000 =FFFFA212                  gNote		rs.b 1		; doesnt seem to be possible ;(
00000000                            		rs.b 8*16	; do the same for the rest of the channels
00000000                            
00000000 =FFFFA294                  gMutedChs	rs.w 1		; muted channels list
00000000 =FFFFA296                  gSustain	rs.w 1		; sustained channels list
00000000 =FFFFA298                  gCursor		rs.b 1		; current cursor position for manipulate menu
00000000                            ; ===========================================================================
00000000 =00000000                  pal60mod =	0	; Set to 1 if you want to enable 60hz PAL mode for all sound drivers (note; some may not correctly play music)
00000000                            			; NOTE: Drivers are modified in order to support this feature.
00000000 =00000000                  extremeDMA =	0	; set to 1 to unlock extreme ($4000 bytes!!!) DMA mode.
00000000                            			; You must acknowledge however, that most drivers can not cope with this and it will cause all kinds of crazy glitches.
00000000                            			; this is nonstandard and no driver is designed to be able to deal with this.
00000000                            ; ===========================================================================
00000000                            ; ===========================================================================
00000000                            
00000000                            	org $FFFF0000		; pretend we are in RAM
FFFF0000                            UpdateSound:
FFFF0000 4238 800E                  		clr.b	(Drv68Kmem+$0E).w
FFFF0004                            
FFFF0004 4A38 8007                  		tst.b	(Drv68Kmem+$07).w
FFFF0008 6600 0000                  		bne.w	PauseMusic
FFFF000C 4EB9 0000 0000             		jsr	sub_5CEF6
FFFF0012 4EB9 0000 0000             		jsr	DoTempo
FFFF0018 4EB9 0000 0000             		jsr	DoFadeOut
FFFF001E 4AB8 800A                  		tst.l	(Drv68Kmem+$0A).w
FFFF0022 6700                       		beq.s	loc_5BDCA
FFFF0024 4EB9 0000 0000             		jsr	DoSoundQueue
FFFF002A                            
FFFF002A                            loc_5BDCA:				; CODE XREF: UpdateSound+1Cj
FFFF002A 4EB9 0000 0000             		jsr	PlaySoundID
FFFF0030 4BF8 8040                  		lea	(Drv68Kmem+$40).w,a5
FFFF0034 4A15                       		tst.b	(a5)
FFFF0036 6A00                       		bpl.s	loc_5BDDA
FFFF0038 4EB9 0000 0000             		jsr	UpdateDACTrack
FFFF003E                            
FFFF003E                            loc_5BDDA:				; CODE XREF: UpdateSound+2Cj
FFFF003E 4238 8008                  		clr.b	(Drv68Kmem+$08).w
FFFF0042 7E05                       		moveq	#5,d7
FFFF0044                            
FFFF0044                            loc_5BDE0:				; CODE XREF: UpdateSound:loc_5BDECj
FFFF0044 DAFC 0030                  		adda.w	#$30,a5
FFFF0048 4A15                       		tst.b	(a5)
FFFF004A 6A00                       		bpl.s	loc_5BDEC
FFFF004C 4EB9 0000 0000             		jsr	UpdateFMTrack
FFFF0052                            
FFFF0052                            loc_5BDEC:				; CODE XREF: UpdateSound+3Ej
FFFF0052 51CF FFF0                  		dbf	d7,loc_5BDE0
FFFF0056 7E02                       		moveq	#2,d7
FFFF0058                            
FFFF0058                            loc_5BDF2:				; CODE XREF: UpdateSound:loc_5BDFEj
FFFF0058 DAFC 0030                  		adda.w	#$30,a5
FFFF005C 4A15                       		tst.b	(a5)
FFFF005E 6A00                       		bpl.s	loc_5BDFE
FFFF0060 4EB9 0000 0000             		jsr	UpdatePSGTrack
FFFF0066                            
FFFF0066                            loc_5BDFE:				; CODE XREF: UpdateSound+50j
FFFF0066 51CF FFF0                  		dbf	d7,loc_5BDF2
FFFF006A 11FC 0080 800E             		move.b	#$80,(Drv68Kmem+$0E).w
FFFF0070 7E02                       		moveq	#2,d7
FFFF0072                            
FFFF0072                            loc_5BE0A:				; CODE XREF: UpdateSound:loc_5BE16j
FFFF0072 DAFC 0030                  		adda.w	#$30,a5
FFFF0076 4A15                       		tst.b	(a5)
FFFF0078 6A00                       		bpl.s	loc_5BE16
FFFF007A 4EB9 0000 0000             		jsr	UpdateFMTrack
FFFF0080                            
FFFF0080                            loc_5BE16:				; CODE XREF: UpdateSound+68j
FFFF0080 51CF FFF0                  		dbf	d7,loc_5BE0A
FFFF0084 7E02                       		moveq	#2,d7
FFFF0086                            
FFFF0086                            loc_5BE1C:				; CODE XREF: UpdateSound:loc_5BE28j
FFFF0086 DAFC 0030                  		adda.w	#$30,a5
FFFF008A 4A15                       		tst.b	(a5)
FFFF008C 6A00                       		bpl.s	loc_5BE28
FFFF008E 4EB9 0000 0000             		jsr	UpdatePSGTrack
FFFF0094                            
FFFF0094                            loc_5BE28:				; CODE XREF: UpdateSound+7Aj
FFFF0094 51CF FFF0                  		dbf	d7,loc_5BE1C
FFFF0098 11FC 0040 800E             		move.b	#$40,(Drv68Kmem+$0E).w
FFFF009E 7E01                       		moveq	#1,d7
FFFF00A0                            
FFFF00A0                            loc_5BE34:				; CODE XREF: UpdateSound:loc_5BE4Cj
FFFF00A0 DAFC 0030                  		adda.w	#$30,a5
FFFF00A4 4A15                       		tst.b	(a5)
FFFF00A6 6A00                       		bpl.s	loc_5BE4C
FFFF00A8 4A2D 0001                  		tst.b	1(a5)
FFFF00AC 6B00                       		bmi.s	loc_5BE48
FFFF00AE 4EB9 0000 0000             		jsr	UpdateFMTrack
FFFF00B4 6000                       		bra.s	loc_5BE4C
FFFF00B6                            ; ---------------------------------------------------------------------------
FFFF00B6                            
FFFF00B6                            loc_5BE48:				; CODE XREF: UpdateSound+98j
FFFF00B6 4EB9 0000 0000             		jsr	UpdatePSGTrack
FFFF00BC                            
FFFF00BC                            loc_5BE4C:				; CODE XREF: UpdateSound+92j
FFFF00BC                            					; UpdateSound+9Ej
FFFF00BC 51CF FFE2                  		dbf	d7,loc_5BE34
FFFF00C0 4E75                       		rts
FFFF00C2                            ; End of function UpdateSound
FFFF00C2                            
FFFF00C2                            
FFFF00C2                            ; =============== S U B	R O U T	I N E =======================================
FFFF00C2                            
FFFF00C2                            
FFFF00C2                            UpdateDACTrack:				; CODE XREF: UpdateSound+2Ep
FFFF00C2 532D 000E                  		subq.b	#1,$E(a5)
FFFF00C6 6600 0000                  		bne.w	locret_5BF06
FFFF00CA 11FC 0080 8008             		move.b	#$80,(Drv68Kmem+$08).w
FFFF00D0 286D 0004                  		movea.l	4(a5),a4
FFFF00D4                            
FFFF00D4                            loc_5BE64:				; CODE XREF: UpdateDACTrack+20j
FFFF00D4 7A00                       		moveq	#0,d5
FFFF00D6 1A1C                       		move.b	(a4)+,d5
FFFF00D8 0C05 00E0                  		cmpi.b	#$E0,d5
FFFF00DC 6500                       		bcs.s	loc_5BE74
FFFF00DE 4EB9 0000 0000             		jsr	cfHandler
FFFF00E4 60EE                       		bra.s	loc_5BE64
FFFF00E6                            ; ---------------------------------------------------------------------------
FFFF00E6                            
FFFF00E6                            loc_5BE74:				; CODE XREF: UpdateDACTrack+1Aj
FFFF00E6 4A05                       		tst.b	d5
FFFF00E8 6A00                       		bpl.s	loc_5BE8A
FFFF00EA 1B45 0010                  		move.b	d5,$10(a5)
FFFF00EE 1A1C                       		move.b	(a4)+,d5
FFFF00F0 6A00                       		bpl.s	loc_5BE8A
FFFF00F2 534C                       		subq.w	#1,a4
FFFF00F4 1B6D 000F 000E             		move.b	$F(a5),$E(a5)
FFFF00FA 6000                       		bra.s	loc_5BE8E
FFFF00FC                            ; ---------------------------------------------------------------------------
FFFF00FC                            
FFFF00FC                            loc_5BE8A:				; CODE XREF: UpdateDACTrack+24j
FFFF00FC                            					; UpdateDACTrack+2Cj
FFFF00FC 4EB9 0000 0000             		jsr	TickMultiplier
FFFF0102                            
FFFF0102                            loc_5BE8E:				; CODE XREF: UpdateDACTrack+36j
FFFF0102 2B4C 0004                  		move.l	a4,4(a5)
FFFF0106 7000                       		moveq	#0,d0
FFFF0108 102D 0010                  		move.b	$10(a5),d0
FFFF010C 0400 0081                  		subi.b	#$81,d0
FFFF0110 6500                       		bcs.s	locret_5BF06
FFFF0112 4880                       		ext.w	d0
FFFF0114 E740                       		asl.w	#3,d0
FFFF0116 47FB 0000                  		lea	DACDrum_Table(pc,d0.w),a3
FFFF011A 4EB9 0000 0000             		jsr	drv_stopz80
FFFF0120 4A39 00A0 1FFD             		tst.b	($A01FFD).l
FFFF0126 6B00                       		bmi.s	loc_5BEFE
FFFF0128 1039 00A0 1FFC             		move.b	($A01FFC).l,d0
FFFF012E 0200 00C0                  		andi.b	#$C0,d0
FFFF0132 122B 0005                  		move.b	5(a3),d1
FFFF0136 0201 00C0                  		andi.b	#$C0,d1
FFFF013A B200                       		cmp.b	d0,d1
FFFF013C 6500 0000                  		bcs.w	loc_5BEFE
FFFF0140 13FC 0001 00A0 1FFD        		move.b	#1,($A01FFD).l
FFFF0148                            	; upload DAC information to Z80
FFFF0148 13DB 00A0 1FE8             		move.b	(a3)+,($A01FE8).l	; Z80 DAC bank
FFFF014E 13DB 00A0 1FE9             		move.b	(a3)+,($A01FE9).l	; ^
FFFF0154 13DB 00A0 1FE6             		move.b	(a3)+,($A01FE6).l	; ROM PTR
FFFF015A 13DB 00A0 1FE7             		move.b	(a3)+,($A01FE7).l	; ^
FFFF0160 13DB 00A0 1FFE             		move.b	(a3)+,($A01FFE).l	; pitch
FFFF0166 13DB 00A0 1FFB             		move.b	(a3)+,($A01FFB).l	; priority(?)
FFFF016C 13ED 0027 00A0 1FF9        		move.b	$27(a5),($A01FF9).l
FFFF0174                            
FFFF0174                            loc_5BEFE:				; CODE XREF: UpdateDACTrack+5Ej
FFFF0174                            					; UpdateDACTrack+74j
FFFF0174 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF017C                            
FFFF017C                            locret_5BF06:				; CODE XREF: UpdateDACTrack+4j
FFFF017C                            					; UpdateDACTrack+4Aj
FFFF017C 4E75                       		rts
FFFF017E                            ; End of function UpdateDACTrack
FFFF017E                            
FFFF017E                            ; ---------------------------------------------------------------------------
FFFF017E 0880 0080 0200 0000        DACDrum_Table:	dc.b	8, $80,	  0, $80,   2,	 0,   0,   0 ; DATA XREF: UpdateDACTrack+50o
FFFF0186 0880 0480 0100 0000        		dc.b	8, $80,	  4, $80,   1,	 0,   0,   0
FFFF018E 0880 0880 0200 0000        		dc.b	8, $80,	  8, $80,   2,	 0,   0,   0
FFFF0196 0880 0C80 0200 0000        		dc.b	8, $80,	 $C, $80,   2,	 0,   0,   0
FFFF019E 0880 1080 0100 0000        		dc.b	8, $80,	$10, $80,   1,	 0,   0,   0
FFFF01A6 0880 1480 0800 0000        		dc.b	8, $80,	$14, $80,   8,	 0,   0,   0
FFFF01AE 0880 1880 0100 0000        		dc.b	8, $80,	$18, $80,   1,	 0,   0,   0
FFFF01B6 0880 1080 0200 0000        		dc.b	8, $80,	$10, $80,   2,	 0,   0,   0
FFFF01BE 0880 1080 1100 0000        		dc.b	8, $80,	$10, $80, $11,	 0,   0,   0
FFFF01C6 0880 1080 1E00 0000        		dc.b	8, $80,	$10, $80, $1E,	 0,   0,   0
FFFF01CE 0880 1C80 0600 0000        		dc.b	8, $80,	$1C, $80,   6,	 0,   0,   0
FFFF01D6 0880 2080 0100 0000        		dc.b	8, $80,	$20, $80,   1,	 0,   0,   0
FFFF01DE 0880 2480 0100 0000        		dc.b	8, $80,	$24, $80,   1,	 0,   0,   0
FFFF01E6 0880 2480 0800 0000        		dc.b	8, $80,	$24, $80,   8,	 0,   0,   0
FFFF01EE 0880 2480 1400 0000        		dc.b	8, $80,	$24, $80, $14,	 0,   0,   0
FFFF01F6 0880 2880 1000 0000        		dc.b	8, $80,	$28, $80, $10,	 0,   0,   0
FFFF01FE 0880 2880 1300 0000        		dc.b	8, $80,	$28, $80, $13,	 0,   0,   0
FFFF0206 0880 2C80 1300 0000        		dc.b	8, $80,	$2C, $80, $13,	 0,   0,   0
FFFF020E 0880 2C80 1A00 0000        		dc.b	8, $80,	$2C, $80, $1A,	 0,   0,   0
FFFF0216 0880 3080 0200 0000        		dc.b	8, $80,	$30, $80,   2,	 0,   0,   0
FFFF021E 0880 3480 0300 0000        		dc.b	8, $80,	$34, $80,   3,	 0,   0,   0
FFFF0226 0880 3480 0400 0000        		dc.b	8, $80,	$34, $80,   4,	 0,   0,   0
FFFF022E 0880 3480 0500 0000        		dc.b	8, $80,	$34, $80,   5,	 0,   0,   0
FFFF0236 0880 3480 0600 0000        		dc.b	8, $80,	$34, $80,   6,	 0,   0,   0
FFFF023E 0880 3480 0700 0000        		dc.b	8, $80,	$34, $80,   7,	 0,   0,   0
FFFF0246 0880 3480 0800 0000        		dc.b	8, $80,	$34, $80,   8,	 0,   0,   0
FFFF024E 0880 3480 0900 0000        		dc.b	8, $80,	$34, $80,   9,	 0,   0,   0
FFFF0256 0880 3480 0A00 0000        		dc.b	8, $80,	$34, $80,  $A,	 0,   0,   0
FFFF025E 0880 3480 0B00 0000        		dc.b	8, $80,	$34, $80,  $B,	 0,   0,   0
FFFF0266 0880 3480 0C00 0000        		dc.b	8, $80,	$34, $80,  $C,	 0,   0,   0
FFFF026E 0880 3480 0D00 0000        		dc.b	8, $80,	$34, $80,  $D,	 0,   0,   0	; $9F
FFFF0276 0900 0080 0100 0000        		dc.b	9,   0,	  0, $80,   1,	 0,   0,   0
FFFF027E 0900 0480 0200 0000        		dc.b	9,   0,	  4, $80,   2,	 0,   0,   0
FFFF0286 0900 0880 0300 0000        		dc.b	9,   0,	  8, $80,   3,	 0,   0,   0
FFFF028E 0900 0C80 0300 0000        		dc.b	9,   0,	 $C, $80,   3,	 0,   0,   0
FFFF0296 0900 1080 0100 0000        		dc.b	9,   0,	$10, $80,   1,	 0,   0,   0
FFFF029E 0900 1080 0200 0000        		dc.b	9,   0,	$10, $80,   2,	 0,   0,   0
FFFF02A6 0900 1080 0300 0000        		dc.b	9,   0,	$10, $80,   3,	 0,   0,   0
FFFF02AE 0900 1080 0400 0000        		dc.b	9,   0,	$10, $80,   4,	 0,   0,   0
FFFF02B6 0900 1080 0500 0000        		dc.b	9,   0,	$10, $80,   5,	 0,   0,   0
FFFF02BE 0900 1480 0200 0000        		dc.b	9,   0,	$14, $80,   2,	 0,   0,   0
FFFF02C6 0900 1480 0300 0000        		dc.b	9,   0,	$14, $80,   3,	 0,   0,   0
FFFF02CE 0900 1480 0400 0000        		dc.b	9,   0,	$14, $80,   4,	 0,   0,   0
FFFF02D6 0900 1480 0500 0000        		dc.b	9,   0,	$14, $80,   5,	 0,   0,   0
FFFF02DE 0900 1480 0600 0000        		dc.b	9,   0,	$14, $80,   6,	 0,   0,   0
FFFF02E6 0900 1480 0700 0000        		dc.b	9,   0,	$14, $80,   7,	 0,   0,   0
FFFF02EE 0900 1480 0800 0000        		dc.b	9,   0,	$14, $80,   8,	 0,   0,   0
FFFF02F6 0900 1480 0900 0000        		dc.b	9,   0,	$14, $80,   9,	 0,   0,   0
FFFF02FE 0900 1480 0A00 0000        		dc.b	9,   0,	$14, $80,  $A,	 0,   0,   0
FFFF0306 0900 1480 0B00 0000        		dc.b	9,   0,	$14, $80,  $B,	 0,   0,   0
FFFF030E 0900 1480 0C00 0000        		dc.b	9,   0,	$14, $80,  $C,	 0,   0,   0
FFFF0316 0900 1880 0100 0000        		dc.b	9,   0,	$18, $80,   1,	 0,   0,   0
FFFF031E 0900 1C80 0100 0000        		dc.b	9,   0,	$1C, $80,   1,	 0,   0,   0
FFFF0326 0900 1C80 0200 0000        		dc.b	9,   0,	$1C, $80,   2,	 0,   0,   0
FFFF032E 0900 1C80 0300 0000        		dc.b	9,   0,	$1C, $80,   3,	 0,   0,   0
FFFF0336 0900 1C80 0400 0000        		dc.b	9,   0,	$1C, $80,   4,	 0,   0,   0
FFFF033E 0900 1C80 0500 0000        		dc.b	9,   0,	$1C, $80,   5,	 0,   0,   0
FFFF0346 0900 2080 0100 0000        		dc.b	9,   0,	$20, $80,   1,	 0,   0,   0
FFFF034E 0900 2480 0200 0000        		dc.b	9,   0,	$24, $80,   2,	 0,   0,   0	; $BC
FFFF0356 0980 0080 0100 0000        		dc.b	9, $80,	  0, $80,   1,	 0,   0,   0
FFFF035E 0980 0480 0100 0000        		dc.b	9, $80,	  4, $80,   1,	 0,   0,   0
FFFF0366 0980 0880 0100 0000        		dc.b	9, $80,	  8, $80,   1,	 0,   0,   0
FFFF036E 0980 0C80 0300 0000        		dc.b	9, $80,	 $C, $80,   3,	 0,   0,   0
FFFF0376 0980 1080 0100 0000        		dc.b	9, $80,	$10, $80,   1,	 0,   0,   0
FFFF037E 0980 1480 0100 0000        		dc.b	9, $80,	$14, $80,   1,	 0,   0,   0
FFFF0386 0980 1480 0300 0000        		dc.b	9, $80,	$14, $80,   3,	 0,   0,   0
FFFF038E 0980 1480 0600 0000        		dc.b	9, $80,	$14, $80,   6,	 0,   0,   0	; $C4
FFFF0396 0900 1C80 0600 0000        		dc.b	9,   0,	$1C, $80,   6,	 0,   0,   0
FFFF039E 0900 1C80 0700 0000        		dc.b	9,   0,	$1C, $80,   7,	 0,   0,   0
FFFF03A6 0900 1C80 0800 0000        		dc.b	9,   0,	$1C, $80,   8,	 0,   0,   0
FFFF03AE 0900 1C80 0900 0000        		dc.b	9,   0,	$1C, $80,   9,	 0,   0,   0
FFFF03B6 0900 1C80 0A00 0000        		dc.b	9,   0,	$1C, $80,  $A,	 0,   0,   0
FFFF03BE                            ; =============== S U B	R O U T	I N E =======================================
FFFF03BE                            
FFFF03BE                            
FFFF03BE                            UpdateFMTrack:				; CODE XREF: UpdateSound+40p
FFFF03BE                            					; UpdateSound+6Ap ...
FFFF03BE                            
FFFF03BE                            ; FUNCTION CHUNK AT 0005CE02 SIZE 0000001C BYTES
FFFF03BE                            
FFFF03BE 532D 000E                  		subq.b	#1,$E(a5)
FFFF03C2 6600                       		bne.s	loc_5C162
FFFF03C4 0895 0004                  		bclr	#4,(a5)
FFFF03C8 4EB9 0000 0000             		jsr	sub_5C172
FFFF03CE 4EB9 0000 0000             		jsr	sub_5C2BA
FFFF03D4 4EB9 0000 0000             		jsr	sub_5C3FE
FFFF03DA 6000 0000                  		bra.w	loc_5CE02
FFFF03DE                            ; ---------------------------------------------------------------------------
FFFF03DE                            
FFFF03DE                            loc_5C162:				; CODE XREF: UpdateFMTrack+4j
FFFF03DE 4EB9 0000 0000             		jsr	sub_5C242
FFFF03E4 4EB9 0000 0000             		jsr	sub_5C418
FFFF03EA 4EB9 0000 0000             		jsr	sub_5C26A
FFFF03F0 6000 0000                  		bra.w	loc_5C2C6
FFFF03F4                            ; End of function UpdateFMTrack
FFFF03F4                            
FFFF03F4                            
FFFF03F4                            ; =============== S U B	R O U T	I N E =======================================
FFFF03F4                            
FFFF03F4                            
FFFF03F4                            sub_5C172:				; CODE XREF: UpdateFMTrack+Ap
FFFF03F4 286D 0004                  		movea.l	4(a5),a4
FFFF03F8 0895 0001                  		bclr	#1,(a5)
FFFF03FC                            
FFFF03FC                            loc_5C17A:				; CODE XREF: sub_5C172+16j
FFFF03FC 7A00                       		moveq	#0,d5
FFFF03FE 1A1C                       		move.b	(a4)+,d5
FFFF0400 0C05 00E0                  		cmpi.b	#$E0,d5
FFFF0404 6500                       		bcs.s	loc_5C18A
FFFF0406 4EB9 0000 0000             		jsr	cfHandler
FFFF040C 60EE                       		bra.s	loc_5C17A
FFFF040E                            ; ---------------------------------------------------------------------------
FFFF040E                            
FFFF040E                            loc_5C18A:				; CODE XREF: sub_5C172+10j
FFFF040E 4EB9 0000 0000             		jsr	sub_5CE1E
FFFF0414 4A05                       		tst.b	d5
FFFF0416 6A00                       		bpl.s	loc_5C1A0
FFFF0418 4EB9 0000 0000             		jsr	sub_5C1A8
FFFF041E 1A1C                       		move.b	(a4)+,d5
FFFF0420 6A00                       		bpl.s	loc_5C1A0
FFFF0422 534C                       		subq.w	#1,a4
FFFF0424 6000 0000                  		bra.w	sub_5C1FA
FFFF0428                            ; ---------------------------------------------------------------------------
FFFF0428                            
FFFF0428                            loc_5C1A0:				; CODE XREF: sub_5C172+1Ej
FFFF0428                            					; sub_5C172+26j
FFFF0428 4EB9 0000 0000             		jsr	TickMultiplier
FFFF042E 6000 0000                  		bra.w	sub_5C1FA
FFFF0432                            ; End of function sub_5C172
FFFF0432                            
FFFF0432                            
FFFF0432                            ; =============== S U B	R O U T	I N E =======================================
FFFF0432                            
FFFF0432                            
FFFF0432                            sub_5C1A8:				; CODE XREF: sub_5C172+20p
FFFF0432                            
FFFF0432                            ; FUNCTION CHUNK AT 0005C1F2 SIZE 00000008 BYTES
FFFF0432                            
FFFF0432 0405 0080                  		subi.b	#$80,d5
FFFF0436 6700                       		beq.s	loc_5C1F2
FFFF0438 DA2D 0008                  		add.b	8(a5),d5
FFFF043C 0285 0000 007F             		andi.l	#$7F,d5	; ''
FFFF0442 8AFC 000C                  		divu.w	#$C,d5
FFFF0446 4845                       		swap	d5
FFFF0448 E34D                       		lsl.w	#1,d5
FFFF044A 41F9 0000 0000             		lea	FMFreqs,a0
FFFF0450 3C30 5000                  		move.w	(a0,d5.w),d6
FFFF0454 4845                       		swap	d5
FFFF0456 0245 0007                  		andi.w	#7,d5
FFFF045A 700B                       		moveq	#$B,d0
FFFF045C E16D                       		lsl.w	d0,d5
FFFF045E 8C45                       		or.w	d5,d6
FFFF0460 3B46 0010                  		move.w	d6,$10(a5)
FFFF0464 4E75                       		rts
FFFF0466                            ; End of function sub_5C1A8
FFFF0466                            
FFFF0466                            
FFFF0466                            ; =============== S U B	R O U T	I N E =======================================
FFFF0466                            
FFFF0466                            
FFFF0466                            TickMultiplier:				; CODE XREF: UpdateDACTrack:loc_5BE8Ap
FFFF0466                            					; sub_5C172:loc_5C1A0p	...
FFFF0466 1005                       		move.b	d5,d0
FFFF0468 122D 0002                  		move.b	2(a5),d1
FFFF046C                            
FFFF046C                            loc_5C1E0:				; CODE XREF: TickMultiplier+Cj
FFFF046C 5301                       		subq.b	#1,d1
FFFF046E 6700                       		beq.s	loc_5C1E8
FFFF0470 D005                       		add.b	d5,d0
FFFF0472 60F8                       		bra.s	loc_5C1E0
FFFF0474                            ; ---------------------------------------------------------------------------
FFFF0474                            
FFFF0474                            loc_5C1E8:				; CODE XREF: TickMultiplier+8j
FFFF0474 1B40 000F                  		move.b	d0,$F(a5)
FFFF0478 1B40 000E                  		move.b	d0,$E(a5)
FFFF047C 4E75                       		rts
FFFF047E                            ; End of function TickMultiplier
FFFF047E                            
FFFF047E                            ; ---------------------------------------------------------------------------
FFFF047E                            ; START	OF FUNCTION CHUNK FOR sub_5C1A8
FFFF047E                            
FFFF047E                            loc_5C1F2:				; CODE XREF: sub_5C1A8+4j
FFFF047E 08D5 0001                  		bset	#1,(a5)
FFFF0482 426D 0010                  		clr.w	$10(a5)
FFFF0486                            ; END OF FUNCTION CHUNK	FOR sub_5C1A8
FFFF0486                            
FFFF0486                            ; =============== S U B	R O U T	I N E =======================================
FFFF0486                            
FFFF0486                            
FFFF0486                            sub_5C1FA:				; CODE XREF: sub_5C172+2Aj
FFFF0486                            					; sub_5C172+32j ...
FFFF0486 2B4C 0004                  		move.l	a4,4(a5)
FFFF048A 1B6D 000F 000E             		move.b	$F(a5),$E(a5)
FFFF0490 0815 0004                  		btst	#4,(a5)
FFFF0494 6600                       		bne.s	locret_5C240
FFFF0496 1B6D 0013 0012             		move.b	$13(a5),$12(a5)
FFFF049C 422D 000C                  		clr.b	$C(a5)
FFFF04A0 422D 0026                  		clr.b	$26(a5)
FFFF04A4 422D 0003                  		clr.b	3(a5)
FFFF04A8 082D 0007 000A             		btst	#7,$A(a5)
FFFF04AE 6700                       		beq.s	locret_5C240
FFFF04B0 206D 0014                  		movea.l	$14(a5),a0
FFFF04B4 1B58 0018                  		move.b	(a0)+,$18(a5)
FFFF04B8 1B58 0019                  		move.b	(a0)+,$19(a5)
FFFF04BC 1B58 001A                  		move.b	(a0)+,$1A(a5)
FFFF04C0 1018                       		move.b	(a0)+,d0
FFFF04C2 E208                       		lsr.b	#1,d0
FFFF04C4 1B40 001B                  		move.b	d0,$1B(a5)
FFFF04C8 426D 001C                  		clr.w	$1C(a5)
FFFF04CC                            
FFFF04CC                            locret_5C240:				; CODE XREF: sub_5C1FA+Ej
FFFF04CC                            					; sub_5C1FA+28j
FFFF04CC 4E75                       		rts
FFFF04CE                            ; End of function sub_5C1FA
FFFF04CE                            
FFFF04CE                            
FFFF04CE                            ; =============== S U B	R O U T	I N E =======================================
FFFF04CE                            
FFFF04CE                            
FFFF04CE                            sub_5C242:				; CODE XREF: UpdateFMTrack:loc_5C162p
FFFF04CE                            					; UpdatePSGTrack:loc_5D060p
FFFF04CE 4A2D 0012                  		tst.b	$12(a5)
FFFF04D2 6700                       		beq.s	locret_5C268
FFFF04D4 532D 0012                  		subq.b	#1,$12(a5)
FFFF04D8 6600                       		bne.s	locret_5C268
FFFF04DA 08D5 0001                  		bset	#1,(a5)
FFFF04DE 4A2D 0001                  		tst.b	1(a5)
FFFF04E2 6B00 0000                  		bmi.w	loc_5C262
FFFF04E6 4EB9 0000 0000             		jsr	sub_5CE1E
FFFF04EC 584F                       		addq.w	#4,sp
FFFF04EE 4E75                       		rts
FFFF04F0                            ; ---------------------------------------------------------------------------
FFFF04F0                            
FFFF04F0                            loc_5C262:				; CODE XREF: sub_5C242+14j
FFFF04F0 4EB9 0000 0000             		jsr	sub_5D1C4
FFFF04F6 584F                       		addq.w	#4,sp
FFFF04F8                            
FFFF04F8                            locret_5C268:				; CODE XREF: sub_5C242+4j sub_5C242+Aj
FFFF04F8 4E75                       		rts
FFFF04FA                            ; End of function sub_5C242
FFFF04FA                            
FFFF04FA                            
FFFF04FA                            ; =============== S U B	R O U T	I N E =======================================
FFFF04FA                            
FFFF04FA                            
FFFF04FA                            sub_5C26A:				; CODE XREF: UpdateFMTrack+22p
FFFF04FA                            					; UpdatePSGTrack+1Ep
FFFF04FA 082D 0007 000A             		btst	#7,$A(a5)
FFFF0500 6700                       		beq.s	locret_5C2B8
FFFF0502 4A2D 0018                  		tst.b	$18(a5)
FFFF0506 6700                       		beq.s	loc_5C27E
FFFF0508 532D 0018                  		subq.b	#1,$18(a5)
FFFF050C 4E75                       		rts
FFFF050E                            ; ---------------------------------------------------------------------------
FFFF050E                            
FFFF050E                            loc_5C27E:				; CODE XREF: sub_5C26A+Cj
FFFF050E 532D 0019                  		subq.b	#1,$19(a5)
FFFF0512 6700                       		beq.s	loc_5C286
FFFF0514 4E75                       		rts
FFFF0516                            ; ---------------------------------------------------------------------------
FFFF0516                            
FFFF0516                            loc_5C286:				; CODE XREF: sub_5C26A+18j
FFFF0516 206D 0014                  		movea.l	$14(a5),a0
FFFF051A 1B68 0001 0019             		move.b	1(a0),$19(a5)
FFFF0520 4A2D 001B                  		tst.b	$1B(a5)
FFFF0524 6600                       		bne.s	loc_5C2A2
FFFF0526 1B68 0003 001B             		move.b	3(a0),$1B(a5)
FFFF052C 442D 001A                  		neg.b	$1A(a5)
FFFF0530 4E75                       		rts
FFFF0532                            ; ---------------------------------------------------------------------------
FFFF0532                            
FFFF0532                            loc_5C2A2:				; CODE XREF: sub_5C26A+2Aj
FFFF0532 532D 001B                  		subq.b	#1,$1B(a5)
FFFF0536 1C2D 001A                  		move.b	$1A(a5),d6
FFFF053A 4886                       		ext.w	d6
FFFF053C DC6D 001C                  		add.w	$1C(a5),d6
FFFF0540 3B46 001C                  		move.w	d6,$1C(a5)
FFFF0544 DC6D 0010                  		add.w	$10(a5),d6
FFFF0548                            
FFFF0548                            locret_5C2B8:				; CODE XREF: sub_5C26A+6j
FFFF0548 4E75                       		rts
FFFF054A                            ; End of function sub_5C26A
FFFF054A                            
FFFF054A                            
FFFF054A                            ; =============== S U B	R O U T	I N E =======================================
FFFF054A                            
FFFF054A                            
FFFF054A                            sub_5C2BA:				; CODE XREF: UpdateFMTrack+Ep
FFFF054A                            
FFFF054A                            ; FUNCTION CHUNK AT 0005C3B8 SIZE 0000003E BYTES
FFFF054A                            
FFFF054A 3C2D 0010                  		move.w	$10(a5),d6
FFFF054E 6600                       		bne.s	loc_5C2CE
FFFF0550 08D5 0001                  		bset	#1,(a5)
FFFF0554 4E75                       		rts
FFFF0556                            ; ---------------------------------------------------------------------------
FFFF0556                            
FFFF0556                            loc_5C2C6:				; CODE XREF: UpdateFMTrack+26j
FFFF0556 4A2D 000A                  		tst.b	$A(a5)
FFFF055A 6700 0000                  		beq.w	locret_5C314
FFFF055E                            
FFFF055E                            loc_5C2CE:				; CODE XREF: sub_5C2BA+4j
FFFF055E 0815 0001                  		btst	#1,(a5)
FFFF0562 6600 0000                  		bne.w	locret_5C314
FFFF0566 0815 0002                  		btst	#2,(a5)
FFFF056A 6600 0000                  		bne.w	locret_5C314
FFFF056E 4EB9 0000 0000             		jsr	DoModEnv
FFFF0574 4A38 800F                  		tst.b	(Drv68Kmem+$0F).w
FFFF0578 6700                       		beq.s	loc_5C2F2
FFFF057A 0C2D 0002 0001             		cmpi.b	#2,1(a5)
FFFF0580 6700 0000                  		beq.w	loc_5C3B8
FFFF0584                            
FFFF0584                            loc_5C2F2:				; CODE XREF: sub_5C2BA+2Cj
FFFF0584 3206                       		move.w	d6,d1
FFFF0586 E049                       		lsr.w	#8,d1
FFFF0588 103C 00A4                  		move.b	#$A4,d0
FFFF058C 4EB9 0000 0000             		jsr	drv_stopz80
FFFF0592 4EB9 0000 0000             		jsr	WriteFMMain
FFFF0598 1206                       		move.b	d6,d1
FFFF059A 103C 00A0                  		move.b	#$A0,d0
FFFF059E 4EB9 0000 0000             		jsr	WriteFMMain
FFFF05A4 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF05AC                            
FFFF05AC                            locret_5C314:				; CODE XREF: sub_5C2BA+10j
FFFF05AC                            					; sub_5C2BA+18j ...
FFFF05AC 4E75                       		rts
FFFF05AE                            ; End of function sub_5C2BA
FFFF05AE                            
FFFF05AE                            
FFFF05AE                            ; =============== S U B	R O U T	I N E =======================================
FFFF05AE                            
FFFF05AE                            
FFFF05AE                            DoModEnv:				; CODE XREF: sub_5C2BA+24p
FFFF05AE                            					; sub_5D0D4+1Ep
FFFF05AE 7C00                       		moveq	#0,d6
FFFF05B0 102D 000A                  		move.b	$A(a5),d0
FFFF05B4 0240 007F                  		andi.w	#$7F,d0
FFFF05B8 6700                       		beq.s	loc_5C366
FFFF05BA 41F9 0000 0000             		lea	ModEnvPtrs,a0
FFFF05C0 5340                       		subq.w	#1,d0
FFFF05C2 E548                       		lsl.w	#2,d0
FFFF05C4 2070 0000                  		movea.l	(a0,d0.w),a0
FFFF05C8                            
FFFF05C8                            loc_5C32E:				; CODE XREF: DoModEnv+70j DoModEnv+76j ...
FFFF05C8 7000                       		moveq	#0,d0
FFFF05CA 102D 0026                  		move.b	$26(a5),d0
FFFF05CE 522D 0026                  		addq.b	#1,$26(a5)
FFFF05D2 1C30 0000                  		move.b	(a0,d0.w),d6
FFFF05D6 6A00                       		bpl.s	loc_5C35C
FFFF05D8 0C06 0080                  		cmpi.b	#$80,d6
FFFF05DC 6700                       		beq.s	loc_5C382
FFFF05DE 0C06 0081                  		cmpi.b	#$81,d6
FFFF05E2 6700                       		beq.s	loc_5C388
FFFF05E4 0C06 0083                  		cmpi.b	#$83,d6
FFFF05E8 6700                       		beq.s	loc_5C38E
FFFF05EA 0C06 0082                  		cmpi.b	#$82,d6
FFFF05EE 6700                       		beq.s	loc_5C3A0
FFFF05F0 0C06 0084                  		cmpi.b	#$84,d6
FFFF05F4 6700                       		beq.s	loc_5C3A8
FFFF05F6                            
FFFF05F6                            loc_5C35C:				; CODE XREF: DoModEnv+26j
FFFF05F6 4886                       		ext.w	d6
FFFF05F8 102D 0003                  		move.b	3(a5),d0
FFFF05FC 4880                       		ext.w	d0
FFFF05FE CCC0                       		mulu.w	d0,d6
FFFF0600                            
FFFF0600                            loc_5C366:				; CODE XREF: DoModEnv+Aj
FFFF0600 102D 001E                  		move.b	$1E(a5),d0
FFFF0604 4880                       		ext.w	d0
FFFF0606 DC40                       		add.w	d0,d6
FFFF0608 DC6D 0010                  		add.w	$10(a5),d6
FFFF060C 4A2D 000A                  		tst.b	$A(a5)
FFFF0610 6A00                       		bpl.s	locret_5C37C
FFFF0612 DC6D 001C                  		add.w	$1C(a5),d6
FFFF0616                            
FFFF0616                            locret_5C37C:				; CODE XREF: DoModEnv+60j
FFFF0616 4E75                       		rts
FFFF0618                            ; ---------------------------------------------------------------------------
FFFF0618 584F                       		addq.w	#4,sp
FFFF061A 4E75                       		rts
FFFF061C                            ; ---------------------------------------------------------------------------
FFFF061C                            
FFFF061C                            loc_5C382:				; CODE XREF: DoModEnv+2Cj
FFFF061C 422D 0026                  		clr.b	$26(a5)
FFFF0620 60A6                       		bra.s	loc_5C32E
FFFF0622                            ; ---------------------------------------------------------------------------
FFFF0622                            
FFFF0622                            loc_5C388:				; CODE XREF: DoModEnv+32j
FFFF0622 552D 0026                  		subq.b	#2,$26(a5)
FFFF0626 60A0                       		bra.s	loc_5C32E
FFFF0628                            ; ---------------------------------------------------------------------------
FFFF0628                            
FFFF0628                            loc_5C38E:				; CODE XREF: DoModEnv+38j
FFFF0628 08D5 0001                  		bset	#1,(a5)
FFFF062C 4A2D 0001                  		tst.b	1(a5)
FFFF0630 6B00                       		bmi.s	loc_5C39C
FFFF0632 6000 0000                  		bra.w	sub_5CE1E
FFFF0636                            ; ---------------------------------------------------------------------------
FFFF0636                            
FFFF0636                            loc_5C39C:				; CODE XREF: DoModEnv+80j
FFFF0636 6000 0000                  		bra.w	sub_5D1C4
FFFF063A                            ; ---------------------------------------------------------------------------
FFFF063A                            
FFFF063A                            loc_5C3A0:				; CODE XREF: DoModEnv+3Ej
FFFF063A 1B70 0001 0026             		move.b	1(a0,d0.w),$26(a5)
FFFF0640 6086                       		bra.s	loc_5C32E
FFFF0642                            ; ---------------------------------------------------------------------------
FFFF0642                            
FFFF0642                            loc_5C3A8:				; CODE XREF: DoModEnv+44j
FFFF0642 1030 0001                  		move.b	1(a0,d0.w),d0
FFFF0646 D12D 0003                  		add.b	d0,3(a5)
FFFF064A 522D 0026                  		addq.b	#1,$26(a5)
FFFF064E 6000 FF78                  		bra.w	loc_5C32E
FFFF0652                            ; End of function DoModEnv
FFFF0652                            
FFFF0652                            ; ---------------------------------------------------------------------------
FFFF0652                            ; START	OF FUNCTION CHUNK FOR sub_5C2BA
FFFF0652                            
FFFF0652                            loc_5C3B8:				; CODE XREF: sub_5C2BA+34j
FFFF0652 43F9 0000 0000             		lea	SpcFM3Regs,a1
FFFF0658 45F8 8010                  		lea	(Drv68Kmem+$10).w,a2
FFFF065C 4A38 800E                  		tst.b	(Drv68Kmem+$0E).w
FFFF0660 6700                       		beq.s	loc_5C3CA
FFFF0662 45F8 8018                  		lea	(Drv68Kmem+$18).w,a2
FFFF0666                            
FFFF0666                            loc_5C3CA:				; CODE XREF: sub_5C2BA+10Aj
FFFF0666 7A03                       		moveq	#3,d5
FFFF0668 4EB9 0000 0000             		jsr	drv_stopz80
FFFF066E                            
FFFF066E                            loc_5C3D0:				; CODE XREF: sub_5C2BA+12Ej
FFFF066E 3206                       		move.w	d6,d1
FFFF0670 301A                       		move.w	(a2)+,d0
FFFF0672 D240                       		add.w	d0,d1
FFFF0674 3601                       		move.w	d1,d3
FFFF0676 E049                       		lsr.w	#8,d1
FFFF0678 1019                       		move.b	(a1)+,d0
FFFF067A 4EB9 0000 0000             		jsr	WriteFMI
FFFF0680 1203                       		move.b	d3,d1
FFFF0682 1019                       		move.b	(a1)+,d0
FFFF0684 4EB9 0000 0000             		jsr	WriteFMI
FFFF068A 51CD FFE2                  		dbf	d5,loc_5C3D0
FFFF068E 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF0696 4E75                       		rts
FFFF0698                            ; END OF FUNCTION CHUNK	FOR sub_5C2BA
FFFF0698                            ; ---------------------------------------------------------------------------
FFFF0698 ADA9 ACA8 AEAA A6A2        SpcFM3Regs:	dc.b $AD, $A9, $AC, $A8, $AE, $AA, $A6,	$A2
FFFF06A0                            					; DATA XREF: sub_5C2BA:loc_5C3B8o
FFFF06A0                            
FFFF06A0                            ; =============== S U B	R O U T	I N E =======================================
FFFF06A0                            
FFFF06A0                            
FFFF06A0                            sub_5C3FE:				; CODE XREF: UpdateFMTrack+12p
FFFF06A0 0815 0001                  		btst	#1,(a5)
FFFF06A4 6600                       		bne.s	locret_5C410
FFFF06A6 7000                       		moveq	#0,d0
FFFF06A8 102D 001F                  		move.b	$1F(a5),d0
FFFF06AC E348                       		lsl.w	#1,d0
FFFF06AE 4EFB 0000                  		jmp	locret_5C410(pc,d0.w)
FFFF06B2                            
FFFF06B2                            locret_5C410:				; CODE XREF: sub_5C3FE+4j
FFFF06B2 4E75                       		rts
FFFF06B4                            ; End of function sub_5C3FE
FFFF06B4                            
FFFF06B4                            ; ---------------------------------------------------------------------------
FFFF06B4 6000                       		bra.s	loc_5C43C
FFFF06B6                            ; ---------------------------------------------------------------------------
FFFF06B6 6000                       		bra.s	loc_5C432
FFFF06B8                            ; ---------------------------------------------------------------------------
FFFF06B8 6000                       		bra.s	loc_5C432
FFFF06BA                            
FFFF06BA                            ; =============== S U B	R O U T	I N E =======================================
FFFF06BA                            
FFFF06BA                            
FFFF06BA                            sub_5C418:				; CODE XREF: UpdateFMTrack+1Ep
FFFF06BA 0815 0001                  		btst	#1,(a5)
FFFF06BE 6600                       		bne.s	locret_5C42A
FFFF06C0 7000                       		moveq	#0,d0
FFFF06C2 102D 001F                  		move.b	$1F(a5),d0
FFFF06C6 E348                       		lsl.w	#1,d0
FFFF06C8 4EFB 0000                  		jmp	locret_5C42A(pc,d0.w)
FFFF06CC                            
FFFF06CC                            locret_5C42A:				; CODE XREF: sub_5C418+4j
FFFF06CC 4E75                       		rts
FFFF06CE                            ; End of function sub_5C418
FFFF06CE                            
FFFF06CE                            ; ---------------------------------------------------------------------------
FFFF06CE 4E75                       		rts
FFFF06D0                            ; ---------------------------------------------------------------------------
FFFF06D0 6000                       		bra.s	loc_5C43C
FFFF06D2                            ; ---------------------------------------------------------------------------
FFFF06D2 6000                       		bra.s	loc_5C43C
FFFF06D4                            ; ---------------------------------------------------------------------------
FFFF06D4                            
FFFF06D4                            loc_5C432:				; CODE XREF: ROM:0005C414j
FFFF06D4                            					; ROM:0005C416j
FFFF06D4 1B6D 0023 0024             		move.b	$23(a5),$24(a5)
FFFF06DA 422D 0021                  		clr.b	$21(a5)
FFFF06DE                            
FFFF06DE                            loc_5C43C:				; CODE XREF: ROM:0005C412j
FFFF06DE                            					; ROM:0005C42Ej ...
FFFF06DE 102D 0024                  		move.b	$24(a5),d0
FFFF06E2 B02D 0023                  		cmp.b	$23(a5),d0
FFFF06E6 6600                       		bne.s	loc_5C464
FFFF06E8 162D 0022                  		move.b	$22(a5),d3
FFFF06EC B62D 0021                  		cmp.b	$21(a5),d3
FFFF06F0 6A00                       		bpl.s	loc_5C45C
FFFF06F2 0C2D 0002 001F             		cmpi.b	#2,$1F(a5)
FFFF06F8 6700                       		beq.s	locret_5C490
FFFF06FA 422D 0021                  		clr.b	$21(a5)
FFFF06FE                            
FFFF06FE                            loc_5C45C:				; CODE XREF: ROM:0005C44Ej
FFFF06FE 422D 0024                  		clr.b	$24(a5)
FFFF0702 522D 0021                  		addq.b	#1,$21(a5)
FFFF0706                            
FFFF0706                            loc_5C464:				; CODE XREF: ROM:0005C444j
FFFF0706 7000                       		moveq	#0,d0
FFFF0708 102D 0020                  		move.b	$20(a5),d0
FFFF070C 5340                       		subq.w	#1,d0
FFFF070E E548                       		lsl.w	#2,d0
FFFF0710 207B 0000                  		movea.l	PanAniPtrList(pc,d0.w),a0
FFFF0714 7000                       		moveq	#0,d0
FFFF0716 102D 0021                  		move.b	$21(a5),d0
FFFF071A 5340                       		subq.w	#1,d0
FFFF071C 1230 0000                  		move.b	(a0,d0.w),d1
FFFF0720 102D 0027                  		move.b	$27(a5),d0
FFFF0724 0200 0037                  		andi.b	#$37,d0
FFFF0728 8200                       		or.b	d0,d1
FFFF072A 4EB9 0000 0000             		jsr	SendPan
FFFF0730 522D 0024                  		addq.b	#1,$24(a5)
FFFF0734                            
FFFF0734                            locret_5C490:				; CODE XREF: ROM:0005C456j
FFFF0734 4E75                       		rts
FFFF0736                            ; ---------------------------------------------------------------------------
FFFF0736 0000 0000 0000 0000 0000+  PanAniPtrList:	dc.l byte_5C49E, byte_5C4A0, byte_5C4A3	; DATA XREF: ROM:0005C46Er
FFFF0742 4080                       byte_5C49E:	dc.b $40, $80		; DATA XREF: ROM:PanAniPtrListo
FFFF0744 40C0 80                    byte_5C4A0:	dc.b $40, $C0, $80	; DATA XREF: ROM:PanAniPtrListo
FFFF0747 C080 C040                  byte_5C4A3:	dc.b $C0, $80, $C0, $40	; DATA XREF: ROM:PanAniPtrListo
FFFF074C 00                         		even
FFFF074C                            
FFFF074C                            ; =============== S U B	R O U T	I N E =======================================
FFFF074C                            
FFFF074C                            
FFFF074C                            SendPan:				; CODE XREF: ROM:0005C488p
FFFF074C                            					; cfHandler+BAj ...
FFFF074C 0815 0002                  		btst	#2,(a5)
FFFF0750 6600                       		bne.s	locret_5C4EA
FFFF0752 4EB9 0000 0000             		jsr	drv_stopz80
FFFF0758 0C2D 0006 0001             		cmpi.b	#6,1(a5)
FFFF075E 6600 0000                  		bne.w	loc_5C4DA
FFFF0762 BBFC 0000 0040             		cmpa.l	#$40,a5
FFFF0768 6700 0000                  		beq.w	loc_5C4E2
FFFF076C 4A39 00A0 1FFD             		tst.b	($A01FFD).l
FFFF0772 6700 0000                  		beq.w	loc_5C4DA
FFFF0776 13ED 0027 00A0 1FF8        		move.b	$27(a5),($A01FF8).l
FFFF077E 6000                       		bra.s	loc_5C4E2
FFFF0780                            ; ---------------------------------------------------------------------------
FFFF0780                            
FFFF0780                            loc_5C4DA:				; CODE XREF: SendPan+10j SendPan+24j
FFFF0780 103C 00B4                  		move.b	#$B4,d0
FFFF0784 4EB9 0000 0000             		jsr	WriteFMMain
FFFF078A                            
FFFF078A                            loc_5C4E2:				; CODE XREF: SendPan+1Aj SendPan+30j
FFFF078A 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF0792                            
FFFF0792                            locret_5C4EA:				; CODE XREF: SendPan+4j
FFFF0792 4E75                       		rts
FFFF0794                            ; End of function SendPan
FFFF0794                            
FFFF0794                            ; ---------------------------------------------------------------------------
FFFF0794                            ; START	OF FUNCTION CHUNK FOR UpdateSound
FFFF0794                            
FFFF0794                            PauseMusic:				; CODE XREF: UpdateSound+8j
FFFF0794 0C38 00FF 8007             		cmpi.b	#$FF,(Drv68Kmem+$07).w
FFFF079A 6600 0000                  		bne.w	loc_5C4F8
FFFF079E 4E75                       		rts
FFFF07A0                            ; ---------------------------------------------------------------------------
FFFF07A0                            
FFFF07A0                            loc_5C4F8:				; CODE XREF: UpdateSound+74Aj
FFFF07A0 4A38 8007                  		tst.b	(Drv68Kmem+$07).w
FFFF07A4 6B00                       		bmi.s	loc_5C536
FFFF07A6 11FC 00FF 8007             		move.b	#$FF,(Drv68Kmem+$07).w
FFFF07AC 7402                       		moveq	#2,d2
FFFF07AE 103C 00B4                  		move.b	#$B4,d0
FFFF07B2 7200                       		moveq	#0,d1
FFFF07B4 4EB9 0000 0000             		jsr	drv_stopz80
FFFF07BA                            
FFFF07BA                            loc_5C510:				; CODE XREF: UpdateSound+772j
FFFF07BA 4EB9 0000 0000             		jsr	WriteFMI
FFFF07C0 4EB9 0000 0000             		jsr	sub_5CE92
FFFF07C6 5200                       		addq.b	#1,d0
FFFF07C8 51CA FFF0                  		dbf	d2,loc_5C510
FFFF07CC 7402                       		moveq	#2,d2
FFFF07CE 7028                       		moveq	#$28,d0
FFFF07D0                            
FFFF07D0                            loc_5C522:				; CODE XREF: UpdateSound+786j
FFFF07D0 1202                       		move.b	d2,d1
FFFF07D2 4EB9 0000 0000             		jsr	WriteFMI
FFFF07D8 5801                       		addq.b	#4,d1
FFFF07DA 4EB9 0000 0000             		jsr	WriteFMI
FFFF07E0 51CA FFEE                  		dbf	d2,loc_5C522
FFFF07E4 6000 0000                  		bra.w	loc_5D1DA
FFFF07E8                            ; ---------------------------------------------------------------------------
FFFF07E8                            
FFFF07E8                            loc_5C536:				; CODE XREF: UpdateSound+754j
FFFF07E8 4238 8007                  		clr.b	(Drv68Kmem+$07).w
FFFF07EC 7630                       		moveq	#$30,d3	; '0'
FFFF07EE 4EB9 0000 0000             		jsr	drv_stopz80
FFFF07F4 4A39 00A0 1FFD             		tst.b	($A01FFD).l
FFFF07FA 6700 0000                  		beq.w	loc_5C564
FFFF07FE 6B00 0000                  		bmi.w	loc_5C556
FFFF0802 1239 00A0 1FF9             		move.b	($A01FF9).l,d1
FFFF0808 6000                       		bra.s	loc_5C55C
FFFF080A                            ; ---------------------------------------------------------------------------
FFFF080A                            
FFFF080A                            loc_5C556:				; CODE XREF: UpdateSound+7A2j
FFFF080A 1239 00A0 1FFA             		move.b	($A01FFA).l,d1
FFFF0810                            
FFFF0810                            loc_5C55C:				; CODE XREF: UpdateSound+7ACj
FFFF0810 103C 00B6                  		move.b	#$B6,d0
FFFF0814 4EB9 0000 0000             		jsr	sub_5CE92
FFFF081A                            
FFFF081A                            loc_5C564:				; CODE XREF: UpdateSound+79Ej
FFFF081A 4BF8 8070                  		lea	(Drv68Kmem+$70).w,a5
FFFF081E 7805                       		moveq	#5,d4
FFFF0820                            
FFFF0820                            loc_5C56A:				; CODE XREF: UpdateSound+7D4j
FFFF0820 0815 0007                  		btst	#7,(a5)
FFFF0824 6700                       		beq.s	loc_5C57A
FFFF0826 0815 0002                  		btst	#2,(a5)
FFFF082A 6600                       		bne.s	loc_5C57A
FFFF082C 4EB9 0000 0000             		jsr	sub_5C5BA
FFFF0832                            
FFFF0832                            loc_5C57A:				; CODE XREF: UpdateSound+7C6j
FFFF0832                            					; UpdateSound+7CCj
FFFF0832 DAC3                       		adda.w	d3,a5
FFFF0834 51CC FFEA                  		dbf	d4,loc_5C56A
FFFF0838 4BF8 8220                  		lea	(Drv68Kmem+$220).w,a5
FFFF083C 7802                       		moveq	#2,d4
FFFF083E                            
FFFF083E                            loc_5C586:				; CODE XREF: UpdateSound+7F0j
FFFF083E 0815 0007                  		btst	#7,(a5)
FFFF0842 6700                       		beq.s	loc_5C596
FFFF0844 0815 0002                  		btst	#2,(a5)
FFFF0848 6600                       		bne.s	loc_5C596
FFFF084A 4EB9 0000 0000             		jsr	sub_5C5BA
FFFF0850                            
FFFF0850                            loc_5C596:				; CODE XREF: UpdateSound+7E2j
FFFF0850                            					; UpdateSound+7E8j
FFFF0850 DAC3                       		adda.w	d3,a5
FFFF0852 51CC FFEA                  		dbf	d4,loc_5C586
FFFF0856 4BF8 8340                  		lea	(Drv68Kmem+$340).w,a5
FFFF085A 0815 0007                  		btst	#7,(a5)
FFFF085E 6700                       		beq.s	loc_5C5B0
FFFF0860 0815 0002                  		btst	#2,(a5)
FFFF0864 6600                       		bne.s	loc_5C5B0
FFFF0866 4EB9 0000 0000             		jsr	sub_5C5BA
FFFF086C                            
FFFF086C                            loc_5C5B0:				; CODE XREF: UpdateSound+7FCj
FFFF086C                            					; UpdateSound+802j
FFFF086C 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF0874 4E75                       		rts
FFFF0876                            ; END OF FUNCTION CHUNK	FOR UpdateSound
FFFF0876                            
FFFF0876                            ; =============== S U B	R O U T	I N E =======================================
FFFF0876                            
FFFF0876                            
FFFF0876                            sub_5C5BA:				; CODE XREF: UpdateSound+7CEp
FFFF0876                            					; UpdateSound+7EAp ...
FFFF0876 0C2D 0006 0001             		cmpi.b	#6,1(a5)
FFFF087C 6600 0000                  		bne.w	loc_5C5CE
FFFF0880 4A39 00A0 1FFD             		tst.b	($A01FFD).l
FFFF0886 6600 0000                  		bne.w	locret_5C5DA
FFFF088A                            
FFFF088A                            loc_5C5CE:				; CODE XREF: sub_5C5BA+6j
FFFF088A 122D 0027                  		move.b	$27(a5),d1
FFFF088E 103C 00B4                  		move.b	#$B4,d0
FFFF0892 4EF9 0000 0000             		jmp	WriteFMMain
FFFF0898                            ; ---------------------------------------------------------------------------
FFFF0898                            
FFFF0898                            locret_5C5DA:				; CODE XREF: sub_5C5BA+10j
FFFF0898 4E75                       		rts
FFFF089A                            ; End of function sub_5C5BA
FFFF089A                            
FFFF089A                            
FFFF089A                            ; =============== S U B	R O U T	I N E =======================================
FFFF089A                            
FFFF089A                            
FFFF089A                            DoSoundQueue:				; CODE XREF: UpdateSound+1Ep
FFFF089A 41F9 0000 0000             		lea	SndPriorities,a0
FFFF08A0 43F8 800E                  		lea	(Drv68Kmem+$0E).w,a1
FFFF08A4 1638 8000                  		move.b	(Drv68Kmem+$00).w,d3
FFFF08A8 7803                       		moveq	#3,d4
FFFF08AA                            
FFFF08AA                            loc_5C5EA:				; CODE XREF: DoSoundQueue:loc_5C60Aj
FFFF08AA 1021                       		move.b	-(a1),d0
FFFF08AC 1200                       		move.b	d0,d1
FFFF08AE 4211                       		clr.b	(a1)
FFFF08B0 5300                       		subq.b	#1,d0
FFFF08B2 6500                       		bcs.s	loc_5C60A
FFFF08B4 0240 00FF                  		andi.w	#$FF,d0
FFFF08B8 1430 0000                  		move.b	(a0,d0.w),d2
FFFF08BC 6B00 0000                  		bmi.w	loc_5C610
FFFF08C0 B403                       		cmp.b	d3,d2
FFFF08C2 6500                       		bcs.s	loc_5C60A
FFFF08C4 1602                       		move.b	d2,d3
FFFF08C6 11C1 8009                  		move.b	d1,(Drv68Kmem+$09).w
FFFF08CA                            
FFFF08CA                            loc_5C60A:				; CODE XREF: DoSoundQueue+16j
FFFF08CA                            					; DoSoundQueue+26j
FFFF08CA 51CC FFDE                  		dbf	d4,loc_5C5EA
FFFF08CE 6000                       		bra.s	loc_5C630
FFFF08D0                            ; ---------------------------------------------------------------------------
FFFF08D0                            
FFFF08D0                            loc_5C610:				; CODE XREF: DoSoundQueue+20j
FFFF08D0 1602                       		move.b	d2,d3
FFFF08D2 11C1 8009                  		move.b	d1,(Drv68Kmem+$09).w
FFFF08D6 6000                       		bra.s	loc_5C62C
FFFF08D8                            ; ---------------------------------------------------------------------------
FFFF08D8                            
FFFF08D8                            loc_5C618:				; CODE XREF: DoSoundQueue:loc_5C62Cj
FFFF08D8 1021                       		move.b	-(a1),d0
FFFF08DA 5300                       		subq.b	#1,d0
FFFF08DC 6500                       		bcs.s	loc_5C62A
FFFF08DE 0240 00FF                  		andi.w	#$FF,d0
FFFF08E2 1430 0000                  		move.b	(a0,d0.w),d2
FFFF08E6 6B00 0000                  		bmi.w	loc_5C62C
FFFF08EA                            
FFFF08EA                            loc_5C62A:				; CODE XREF: DoSoundQueue+40j
FFFF08EA 4211                       		clr.b	(a1)
FFFF08EC                            
FFFF08EC                            loc_5C62C:				; CODE XREF: DoSoundQueue+3Aj
FFFF08EC                            					; DoSoundQueue+4Aj
FFFF08EC 51CC FFEA                  		dbf	d4,loc_5C618
FFFF08F0                            
FFFF08F0                            loc_5C630:				; CODE XREF: DoSoundQueue+32j
FFFF08F0 4A03                       		tst.b	d3
FFFF08F2 6B00                       		bmi.s	locret_5C638
FFFF08F4 11C3 8000                  		move.b	d3,(Drv68Kmem+$00).w
FFFF08F8                            
FFFF08F8                            locret_5C638:				; CODE XREF: DoSoundQueue+56j
FFFF08F8 4E75                       		rts
FFFF08FA                            ; End of function DoSoundQueue
FFFF08FA                            
FFFF08FA                            
FFFF08FA                            ; =============== S U B	R O U T	I N E =======================================
FFFF08FA                            
FFFF08FA                            
FFFF08FA                            PlaySoundID:				; CODE XREF: UpdateSound:loc_5BDCAp
FFFF08FA                            
FFFF08FA                            ; FUNCTION CHUNK AT 0005CC34 SIZE 0000001A BYTES
FFFF08FA                            ; FUNCTION CHUNK AT 0005CD5A SIZE 00000024 BYTES
FFFF08FA                            
FFFF08FA 7E00                       		moveq	#0,d7
FFFF08FC 1E38 8009                  		move.b	(Drv68Kmem+$09).w,d7
FFFF0900 11FC 00FF 8009             		move.b	#$FF,(Drv68Kmem+$09).w
FFFF0906 4A07                       		tst.b	d7
FFFF0908 0C07 00FF                  		cmpi.b	#$FF,d7
FFFF090C 6700                       		beq.s	locret_5C68A
FFFF090E 0C07 0001                  		cmpi.b	#1,d7
FFFF0912 6500 0000                  		bcs.w	StopAllSound
FFFF0916 0C07 0010                  		cmpi.b	#$10,d7
FFFF091A 6500 0000                  		bcs.w	PlaySnd_Command
FFFF091E 0C07 0040                  		cmpi.b	#$40,d7
FFFF0922 6500 0000                  		bcs.w	PlayDACSFX	; 10-3F	- DAC SFX
FFFF0926 0C07 0081                  		cmpi.b	#$81,d7
FFFF092A 6500 0000                  		bcs.w	PlaySFX2	; 40-7F	- SFX (2)
FFFF092E 0C07 00AB                  		cmpi.b	#$AB,d7
FFFF0932 6500 0000                  		bcs.w	PlayMusic	; 81-AA	- Music
FFFF0936 0C07 00FB                  		cmpi.b	#$FB,d7
FFFF093A 6500 0000                  		bcs.w	PlaySFX		; AB-FA	- SFX (1)
FFFF093E 0C07 00FD                  		cmpi.b	#$FD,d7
FFFF0942 6500 0000                  		bcs.w	PlaySpcSFX	; FD-FE	- Special SFX
FFFF0946                            
FFFF0946                            locret_5C68A:				; CODE XREF: PlaySoundID+16j
FFFF0946 4E75                       		rts
FFFF0948                            ; ---------------------------------------------------------------------------
FFFF0948                            
FFFF0948                            PlaySnd_Command:			; CODE XREF: PlaySoundID+24j
FFFF0948 0C07 0005                  		cmpi.b	#5,d7
FFFF094C 6500 0000                  		bcs.w	loc_5C696
FFFF0950 4E75                       		rts
FFFF0952                            ; ---------------------------------------------------------------------------
FFFF0952                            
FFFF0952                            loc_5C696:				; CODE XREF: PlaySoundID+56j
FFFF0952 5307                       		subq.b	#1,d7
FFFF0954 E54F                       		lsl.w	#2,d7
FFFF0956 4EFB 7000                  		jmp	CmdJmpTable(pc,d7.w)
FFFF095A                            
FFFF095A                            CmdJmpTable:
FFFF095A 6000 0000                  		bra.w	FadeOutMusic
FFFF095E                            ; ---------------------------------------------------------------------------
FFFF095E 6000 0000                  		bra.w	StopSFX
FFFF0962                            ; ---------------------------------------------------------------------------
FFFF0962 6000 0000                  		bra.w	StopSpcSFX
FFFF0966                            ; ---------------------------------------------------------------------------
FFFF0966 6000 0000                  		bra.w	StopAllSound
FFFF096A                            ; ---------------------------------------------------------------------------
FFFF096A                            
FFFF096A                            PlayDACSFX:				; CODE XREF: PlaySoundID+2Cj
FFFF096A 0C07 0028                  		cmpi.b	#$28,d7
FFFF096E 6400 0000                  		bcc.w	locret_5C734
FFFF0972 0407 0010                  		subi.b	#$10,d7
FFFF0976 4887                       		ext.w	d7
FFFF0978 E747                       		asl.w	#3,d7
FFFF097A 47FB 7000                  		lea	DACSFX_Table(pc,d7.w),a3
FFFF097E 4EB9 0000 0000             		jsr	drv_stopz80
FFFF0984 1039 00A0 1FFC             		move.b	($A01FFC).l,d0
FFFF098A 0200 00C0                  		andi.b	#$C0,d0
FFFF098E 122B 0005                  		move.b	5(a3),d1
FFFF0992 0201 00C0                  		andi.b	#$C0,d1
FFFF0996 B200                       		cmp.b	d0,d1
FFFF0998 6500 0000                  		bcs.w	loc_5C72C
FFFF099C 13FC 0080 00A0 1FFD        		move.b	#$80,($A01FFD).l
FFFF09A4 13DB 00A0 1FE8             		move.b	(a3)+,($A01FE8).l
FFFF09AA 13DB 00A0 1FE9             		move.b	(a3)+,($A01FE9).l
FFFF09B0 13DB 00A0 1FE6             		move.b	(a3)+,($A01FE6).l
FFFF09B6 13DB 00A0 1FE7             		move.b	(a3)+,($A01FE7).l
FFFF09BC 13DB 00A0 1FFE             		move.b	(a3)+,($A01FFE).l
FFFF09C2 13DB 00A0 1FFB             		move.b	(a3)+,($A01FFB).l
FFFF09C8 0839 0005 00A0 1FFB        		btst	#5,($A01FFB).l
FFFF09D0 6700 0000                  		beq.w	loc_5C726
FFFF09D4 0C38 0002 802B             		cmpi.b	#2,(Drv68Kmem+$2B).w
FFFF09DA 6700 0000                  		beq.w	loc_5C726
FFFF09DE 11FC 0001 802B             		move.b	#1,(Drv68Kmem+$2B).w
FFFF09E4                            
FFFF09E4                            loc_5C726:				; CODE XREF: PlaySoundID+D8j
FFFF09E4                            					; PlaySoundID+E2j
FFFF09E4 13D3 00A0 1FFA             		move.b	(a3),($A01FFA).l
FFFF09EA                            
FFFF09EA                            loc_5C72C:				; CODE XREF: PlaySoundID+A0j
FFFF09EA 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF09F2                            
FFFF09F2                            locret_5C734:				; CODE XREF: PlaySoundID+78j
FFFF09F2 4E75                       		rts
FFFF09F4                            ; ---------------------------------------------------------------------------
FFFF09F4                            DACSFX_Table:				; DATA XREF: PlaySoundID+84o
FFFF09F4 0A00 0080 1300 C000        		dc.b   $A,   0,	  0, $80, $13,	 0, $C0,   0
FFFF09FC 0A00 0080 3600 C000        		dc.b   $A,   0,	  0, $80, $36,	 0, $C0,   0
FFFF0A04 0A00 0080 0800 C000        		dc.b   $A,   0,	  0, $80,   8,	 0, $C0,   0
FFFF0A0C 0A00 0480 0100 C000        		dc.b   $A,   0,	  4, $80,   1,	 0, $C0,   0
FFFF0A14 0A00 0880 0200 C000        		dc.b   $A,   0,	  8, $80,   2,	 0, $C0,   0
FFFF0A1C 0A00 0C80 0100 C000        		dc.b   $A,   0,	 $C, $80,   1,	 0, $C0,   0
FFFF0A24 0A00 1080 02E0 C000        		dc.b   $A,   0,	$10, $80,   2, $E0, $C0,   0
FFFF0A2C 0A00 1480 0200 C000        		dc.b   $A,   0,	$14, $80,   2,	 0, $C0,   0
FFFF0A34 0A00 1880 0280 C000        		dc.b   $A,   0,	$18, $80,   2, $80, $C0,   0
FFFF0A3C 0A80 0080 02E0 C000        		dc.b   $A, $80,	  0, $80,   2, $E0, $C0,   0
FFFF0A44 0A80 0480 0280 C000        		dc.b   $A, $80,	  4, $80,   2, $80, $C0,   0
FFFF0A4C 0A80 0880 0280 C000        		dc.b   $A, $80,	  8, $80,   2, $80, $C0,   0
FFFF0A54 0B00 0080 0280 C000        		dc.b   $B,   0,	  0, $80,   2, $80, $C0,   0
FFFF0A5C 0B00 0480 02E0 C000        		dc.b   $B,   0,	  4, $80,   2, $E0, $C0,   0
FFFF0A64 0B80 0080 02E0 C000        		dc.b   $B, $80,	  0, $80,   2, $E0, $C0,   0
FFFF0A6C 0B80 0480 0280 C000        		dc.b   $B, $80,	  4, $80,   2, $80, $C0,   0
FFFF0A74 0B80 0880 0280 C000        		dc.b   $B, $80,	  8, $80,   2, $80, $C0,   0
FFFF0A7C 0B80 0C80 0280 C000        		dc.b   $B, $80,	 $C, $80,   2, $80, $C0,   0
FFFF0A84 0C00 0080 0280 C000        		dc.b   $C,   0,	  0, $80,   2, $80, $C0,   0
FFFF0A8C 0C00 0480 0280 C000        		dc.b   $C,   0,	  4, $80,   2, $80, $C0,   0
FFFF0A94 0C00 0880 0280 C000        		dc.b   $C,   0,	  8, $80,   2, $80, $C0,   0
FFFF0A9C 0C00 0C80 0280 C000        		dc.b   $C,   0,	 $C, $80,   2, $80, $C0,   0
FFFF0AA4 0C00 1080 0280 C000        		dc.b   $C,   0,	$10, $80,   2, $80, $C0,   0
FFFF0AAC 0C80 0080 0280 C000        		dc.b   $C, $80,	  0, $80,   2, $80, $C0,   0
FFFF0AB4                            ; ---------------------------------------------------------------------------
FFFF0AB4                            
FFFF0AB4                            PlayMusic:				; CODE XREF: PlaySoundID+3Cj
FFFF0AB4 0C07 00AB                  		cmpi.b	#$AB,d7
FFFF0AB8 6500 0000                  		bcs.w	loc_5C800
FFFF0ABC 4E75                       		rts
FFFF0ABE                            ; ---------------------------------------------------------------------------
FFFF0ABE                            
FFFF0ABE                            loc_5C800:				; CODE XREF: PlaySoundID+1C0j
FFFF0ABE 4EB9 0000 0000             		jsr	StopSFX
FFFF0AC4 4EB9 0000 0000             		jsr	StopSpcSFX
FFFF0ACA 4EB9 0000 0000             		jsr	SilenceFM
FFFF0AD0 49F9 0000 0000             		lea	MusPtrs,a4
FFFF0AD6 0407 0081                  		subi.b	#$81,d7
FFFF0ADA E54F                       		lsl.w	#2,d7
FFFF0ADC 2874 7000                  		movea.l	(a4,d7.w),a4
FFFF0AE0 7000                       		moveq	#0,d0
FFFF0AE2 3014                       		move.w	(a4),d0
FFFF0AE4 D08C                       		add.l	a4,d0
FFFF0AE6 21C0 8020                  		move.l	d0,(Drv68Kmem+$20).w
FFFF0AEA 11EC 0005 8002             		move.b	5(a4),(Drv68Kmem+$02).w
FFFF0AF0 11EC 0005 8001             		move.b	5(a4),(Drv68Kmem+$01).w
FFFF0AF6 7200                       		moveq	#0,d1
FFFF0AF8 264C                       		movea.l	a4,a3
FFFF0AFA 5C4C                       		addq.w	#6,a4
FFFF0AFC 7E00                       		moveq	#0,d7
FFFF0AFE 1E2B 0002                  		move.b	2(a3),d7
FFFF0B02 6700                       		beq.s	loc_5C884
FFFF0B04 5307                       		subq.b	#1,d7
FFFF0B06 123C 00C0                  		move.b	#$C0,d1
FFFF0B0A 163C 0080                  		move.b	#$80,d3
FFFF0B0E 182B 0004                  		move.b	4(a3),d4
FFFF0B12 7C30                       		moveq	#$30,d6
FFFF0B14 1A3C 0001                  		move.b	#1,d5
FFFF0B18 43F8 8040                  		lea	(Drv68Kmem+$40).w,a1
FFFF0B1C 45F9 0000 0000             		lea	FMInitBytes,a2
FFFF0B22                            
FFFF0B22                            loc_5C85A:				; CODE XREF: PlaySoundID+246j
FFFF0B22 1283                       		move.b	d3,(a1)
FFFF0B24 135A 0001                  		move.b	(a2)+,1(a1)
FFFF0B28 1344 0002                  		move.b	d4,2(a1)
FFFF0B2C 1346 000D                  		move.b	d6,$D(a1)
FFFF0B30 1341 0027                  		move.b	d1,$27(a1)
FFFF0B34 1345 000E                  		move.b	d5,$E(a1)
FFFF0B38 7000                       		moveq	#0,d0
FFFF0B3A 301C                       		move.w	(a4)+,d0
FFFF0B3C D08B                       		add.l	a3,d0
FFFF0B3E 2340 0004                  		move.l	d0,4(a1)
FFFF0B42 335C 0008                  		move.w	(a4)+,8(a1)
FFFF0B46 D2C6                       		adda.w	d6,a1
FFFF0B48 51CF FFD8                  		dbf	d7,loc_5C85A
FFFF0B4C                            
FFFF0B4C                            loc_5C884:				; CODE XREF: PlaySoundID+202j
FFFF0B4C 7E00                       		moveq	#0,d7
FFFF0B4E 1E2B 0003                  		move.b	3(a3),d7
FFFF0B52 6700                       		beq.s	loc_5C8C4
FFFF0B54 5307                       		subq.b	#1,d7
FFFF0B56 43F8 8190                  		lea	(Drv68Kmem+$190).w,a1
FFFF0B5A 45F9 0000 0000             		lea	PSGInitBytes,a2
FFFF0B60                            
FFFF0B60                            loc_5C896:				; CODE XREF: PlaySoundID+286j
FFFF0B60 1283                       		move.b	d3,(a1)
FFFF0B62 135A 0001                  		move.b	(a2)+,1(a1)
FFFF0B66 1344 0002                  		move.b	d4,2(a1)
FFFF0B6A 1346 000D                  		move.b	d6,$D(a1)
FFFF0B6E 1345 000E                  		move.b	d5,$E(a1)
FFFF0B72 7000                       		moveq	#0,d0
FFFF0B74 301C                       		move.w	(a4)+,d0
FFFF0B76 D08B                       		add.l	a3,d0
FFFF0B78 2340 0004                  		move.l	d0,4(a1)
FFFF0B7C 335C 0008                  		move.w	(a4)+,8(a1)
FFFF0B80 135C 000A                  		move.b	(a4)+,$A(a1)
FFFF0B84 135C 000B                  		move.b	(a4)+,$B(a1)
FFFF0B88 D2C6                       		adda.w	d6,a1
FFFF0B8A 51CF FFD4                  		dbf	d7,loc_5C896
FFFF0B8E                            
FFFF0B8E                            loc_5C8C4:				; CODE XREF: PlaySoundID+250j
FFFF0B8E 43F8 8220                  		lea	(Drv68Kmem+$220).w,a1
FFFF0B92 7E05                       		moveq	#5,d7
FFFF0B94                            
FFFF0B94                            loc_5C8CA:				; CODE XREF: PlaySoundID+2B4j
FFFF0B94 4A11                       		tst.b	(a1)
FFFF0B96 6A00 0000                  		bpl.w	loc_5C8EC
FFFF0B9A 7000                       		moveq	#0,d0
FFFF0B9C 1029 0001                  		move.b	1(a1),d0
FFFF0BA0 6B00                       		bmi.s	loc_5C8DE
FFFF0BA2 5500                       		subq.b	#2,d0
FFFF0BA4 E508                       		lsl.b	#2,d0
FFFF0BA6 6000                       		bra.s	loc_5C8E0
FFFF0BA8                            ; ---------------------------------------------------------------------------
FFFF0BA8                            
FFFF0BA8                            loc_5C8DE:				; CODE XREF: PlaySoundID+29Cj
FFFF0BA8 E608                       		lsr.b	#3,d0
FFFF0BAA                            
FFFF0BAA                            loc_5C8E0:				; CODE XREF: PlaySoundID+2A2j
FFFF0BAA 41F9 0000 0000             		lea	BGMChnPtrs,a0
FFFF0BB0 2070 0000                  		movea.l	(a0,d0.w),a0
FFFF0BB4 08D0 0002                  		bset	#2,(a0)
FFFF0BB8                            
FFFF0BB8                            loc_5C8EC:				; CODE XREF: PlaySoundID+292j
FFFF0BB8 D2C6                       		adda.w	d6,a1
FFFF0BBA 51CF FFD8                  		dbf	d7,loc_5C8CA
FFFF0BBE 4A78 8340                  		tst.w	(Drv68Kmem+$340).w
FFFF0BC2 6A00                       		bpl.s	loc_5C8FE
FFFF0BC4 08F8 0002 8100             		bset	#2,(Drv68Kmem+$100).w
FFFF0BCA                            
FFFF0BCA                            loc_5C8FE:				; CODE XREF: PlaySoundID+2BCj
FFFF0BCA 4A78 8370                  		tst.w	(Drv68Kmem+$370).w
FFFF0BCE 6A00                       		bpl.s	loc_5C90A
FFFF0BD0 08F8 0002 81F0             		bset	#2,(Drv68Kmem+$1F0).w
FFFF0BD6                            
FFFF0BD6                            loc_5C90A:				; CODE XREF: PlaySoundID+2C8j
FFFF0BD6 4BF8 8070                  		lea	(Drv68Kmem+$70).w,a5
FFFF0BDA 7805                       		moveq	#5,d4
FFFF0BDC                            
FFFF0BDC                            loc_5C910:				; CODE XREF: PlaySoundID+2DCj
FFFF0BDC 4EB9 0000 0000             		jsr	sub_5CE1E
FFFF0BE2 DAC6                       		adda.w	d6,a5
FFFF0BE4 51CC FFF6                  		dbf	d4,loc_5C910
FFFF0BE8 7802                       		moveq	#2,d4
FFFF0BEA                            
FFFF0BEA                            loc_5C91C:				; CODE XREF: PlaySoundID+2E8j
FFFF0BEA 4EB9 0000 0000             		jsr	sub_5D1C4
FFFF0BF0 DAC6                       		adda.w	d6,a5
FFFF0BF2 51CC FFF6                  		dbf	d4,loc_5C91C
FFFF0BF6 0838 0002 81F0             		btst	#2,(Drv68Kmem+$1F0).w
FFFF0BFC 6600                       		bne.s	loc_5C936
FFFF0BFE 13FC 00FF 00C0 0011        		move.b	#$FF,($C00011).l
FFFF0C06                            
FFFF0C06                            loc_5C936:				; CODE XREF: PlaySoundID+2F2j
FFFF0C06 584F                       		addq.w	#4,sp
FFFF0C08 4E75                       		rts
FFFF0C0A                            ; ---------------------------------------------------------------------------
FFFF0C0A                            FMInitBytes:				; DATA XREF: PlaySoundID+21Co
FFFF0C0A 0600 0102 0405 06          		dc.b 6,	0, 1, 2, 4, 5, 6
FFFF0C12                            PSGInitBytes:				; DATA XREF: PlaySoundID+258o
FFFF0C12 80A0 C0                    		dc.b $80, $A0, $C0
FFFF0C16                            
FFFF0C16                            PlaySFX2:				; CODE XREF: PlaySoundID+34j
FFFF0C16 0C07 006F                  		cmpi.b	#$6F,d7
FFFF0C1A 6500 0000                  		bcs.w	loc_5C950
FFFF0C1E 4E75                       		rts
FFFF0C20                            ; ---------------------------------------------------------------------------
FFFF0C20                            
FFFF0C20                            loc_5C950:				; CODE XREF: PlaySoundID+310j
FFFF0C20 41F9 0000 0000             		lea	SFXPtrs2,a0
FFFF0C26 0407 0040                  		subi.b	#$40,d7
FFFF0C2A 6000 0000                  		bra.w	loc_5C96E
FFFF0C2E                            ; ---------------------------------------------------------------------------
FFFF0C2E                            
FFFF0C2E                            PlaySFX:				; CODE XREF: PlaySoundID+44j
FFFF0C2E 0C07 00FB                  		cmpi.b	#$FB,d7
FFFF0C32 6500 0000                  		bcs.w	loc_5C966
FFFF0C36 4E75                       		rts
FFFF0C38                            ; ---------------------------------------------------------------------------
FFFF0C38                            
FFFF0C38                            loc_5C966:				; CODE XREF: PlaySoundID+326j
FFFF0C38 41F9 0000 0000             		lea	SFXPtrs,a0
FFFF0C3E 0407 00AB                  		subi.b	#$AB,d7
FFFF0C42                            
FFFF0C42                            loc_5C96E:				; CODE XREF: PlaySoundID+31Ej
FFFF0C42 E54F                       		lsl.w	#2,d7
FFFF0C44 2670 7000                  		movea.l	(a0,d7.w),a3
FFFF0C48 224B                       		movea.l	a3,a1
FFFF0C4A 7200                       		moveq	#0,d1
FFFF0C4C 3219                       		move.w	(a1)+,d1
FFFF0C4E D28B                       		add.l	a3,d1
FFFF0C50 1A19                       		move.b	(a1)+,d5
FFFF0C52 7E00                       		moveq	#0,d7
FFFF0C54 1E19                       		move.b	(a1)+,d7
FFFF0C56 5347                       		subq.w	#1,d7
FFFF0C58 7C30                       		moveq	#$30,d6
FFFF0C5A                            
FFFF0C5A                            loc_5C986:				; CODE XREF: PlaySoundID:loc_5CA02j
FFFF0C5A 7600                       		moveq	#0,d3
FFFF0C5C 1629 0001                  		move.b	1(a1),d3
FFFF0C60 1803                       		move.b	d3,d4
FFFF0C62 6B00                       		bmi.s	loc_5C9A2
FFFF0C64 5543                       		subq.w	#2,d3
FFFF0C66 E54B                       		lsl.w	#2,d3
FFFF0C68 4BF9 0000 0000             		lea	BGMChnPtrs,a5
FFFF0C6E 2A75 3000                  		movea.l	(a5,d3.w),a5
FFFF0C72 08D5 0002                  		bset	#2,(a5)
FFFF0C76 6000                       		bra.s	loc_5C9C8
FFFF0C78                            ; ---------------------------------------------------------------------------
FFFF0C78                            
FFFF0C78                            loc_5C9A2:				; CODE XREF: PlaySoundID+354j
FFFF0C78 E64B                       		lsr.w	#3,d3
FFFF0C7A 2A7B 3000                  		movea.l	BGMChnPtrs(pc,d3.w),a5
FFFF0C7E 08D5 0002                  		bset	#2,(a5)
FFFF0C82 0C04 00C0                  		cmpi.b	#$C0,d4
FFFF0C86 6600                       		bne.s	loc_5C9C8
FFFF0C88 1004                       		move.b	d4,d0
FFFF0C8A 0000 001F                  		ori.b	#$1F,d0
FFFF0C8E 13C0 00C0 0011             		move.b	d0,($C00011).l
FFFF0C94 0840 0005                  		bchg	#5,d0
FFFF0C98 13C0 00C0 0011             		move.b	d0,($C00011).l
FFFF0C9E                            
FFFF0C9E                            loc_5C9C8:				; CODE XREF: PlaySoundID+366j
FFFF0C9E                            					; PlaySoundID+376j
FFFF0C9E 2A7B 3000                  		movea.l	SFXChnPtrs(pc,d3.w),a5
FFFF0CA2 244D                       		movea.l	a5,a2
FFFF0CA4 700B                       		moveq	#$B,d0
FFFF0CA6                            
FFFF0CA6                            loc_5C9D0:				; CODE XREF: PlaySoundID+398j
FFFF0CA6 429A                       		clr.l	(a2)+
FFFF0CA8 51C8 FFFC                  		dbf	d0,loc_5C9D0
FFFF0CAC 2B41 0020                  		move.l	d1,$20(a5)
FFFF0CB0 3A99                       		move.w	(a1)+,(a5)
FFFF0CB2 1B45 0002                  		move.b	d5,2(a5)
FFFF0CB6 7000                       		moveq	#0,d0
FFFF0CB8 3019                       		move.w	(a1)+,d0
FFFF0CBA D08B                       		add.l	a3,d0
FFFF0CBC 2B40 0004                  		move.l	d0,4(a5)
FFFF0CC0 3B59 0008                  		move.w	(a1)+,8(a5)
FFFF0CC4 1B7C 0001 000E             		move.b	#1,$E(a5)
FFFF0CCA 1B46 000D                  		move.b	d6,$D(a5)
FFFF0CCE 4A04                       		tst.b	d4
FFFF0CD0 6B00                       		bmi.s	loc_5CA02
FFFF0CD2 1B7C 00C0 0027             		move.b	#$C0,$27(a5)
FFFF0CD8                            
FFFF0CD8                            loc_5CA02:				; CODE XREF: PlaySoundID+3C0j
FFFF0CD8 51CF FF80                  		dbf	d7,loc_5C986
FFFF0CDC 4A38 8250                  		tst.b	(Drv68Kmem+$250).w
FFFF0CE0 6A00                       		bpl.s	loc_5CA12
FFFF0CE2 08F8 0002 8340             		bset	#2,(Drv68Kmem+$340).w
FFFF0CE8                            
FFFF0CE8                            loc_5CA12:				; CODE XREF: PlaySoundID+3D0j
FFFF0CE8 4A38 8310                  		tst.b	(Drv68Kmem+$310).w
FFFF0CEC 6A00                       		bpl.s	locret_5CA1E
FFFF0CEE 08F8 0002 8370             		bset	#2,(Drv68Kmem+$370).w
FFFF0CF4                            
FFFF0CF4                            locret_5CA1E:				; CODE XREF: PlaySoundID+3DCj
FFFF0CF4 4E75                       		rts
FFFF0CF6                            ; ---------------------------------------------------------------------------
FFFF0CF6 FFFF 80D0                  BGMChnPtrs:	dc.l Drv68Kmem+$D0		; DATA XREF: PlaySoundID:loc_5C8E0o
FFFF0CFA                            					; PlaySoundID+35Ao ...
FFFF0CFA 0000 0000                  		dc.l 0
FFFF0CFE FFFF 8100                  		dc.l Drv68Kmem+$100
FFFF0D02 FFFF 8130                  		dc.l Drv68Kmem+$130
FFFF0D06 FFFF 8190                  		dc.l Drv68Kmem+$190
FFFF0D0A FFFF 81C0                  		dc.l Drv68Kmem+$1C0
FFFF0D0E FFFF 81F0                  		dc.l Drv68Kmem+$1F0
FFFF0D12 FFFF 81F0                  		dc.l Drv68Kmem+$1F0
FFFF0D16                            SFXChnPtrs:				; DATA XREF: PlaySoundID:loc_5C9C8r
FFFF0D16 FFFF 8220                  		dc.l Drv68Kmem+$220
FFFF0D1A 0000 0000                  		dc.l 0
FFFF0D1E FFFF 8250                  		dc.l Drv68Kmem+$250
FFFF0D22 FFFF 8280                  		dc.l Drv68Kmem+$280
FFFF0D26 FFFF 82B0                  		dc.l Drv68Kmem+$2B0
FFFF0D2A FFFF 82E0                  		dc.l Drv68Kmem+$2E0
FFFF0D2E FFFF 8310                  		dc.l Drv68Kmem+$310
FFFF0D32 FFFF 8310                  		dc.l Drv68Kmem+$310
FFFF0D36                            ; ---------------------------------------------------------------------------
FFFF0D36                            
FFFF0D36                            PlaySpcSFX:				; CODE XREF: PlaySoundID+4Cj
FFFF0D36 0C07 00FD                  		cmpi.b	#$FD,d7
FFFF0D3A 6500 0000                  		bcs.w	loc_5CA6A
FFFF0D3E 4E75                       		rts
FFFF0D40                            ; ---------------------------------------------------------------------------
FFFF0D40                            
FFFF0D40                            loc_5CA6A:				; CODE XREF: PlaySoundID+42Aj
FFFF0D40 41F9 0000 0000             		lea	SpcSFXPtrs,a0
FFFF0D46 0407 00FB                  		subi.b	#$FB,d7
FFFF0D4A E54F                       		lsl.w	#2,d7
FFFF0D4C 2670 7000                  		movea.l	(a0,d7.w),a3
FFFF0D50 224B                       		movea.l	a3,a1
FFFF0D52 7000                       		moveq	#0,d0
FFFF0D54 3019                       		move.w	(a1)+,d0
FFFF0D56 D08B                       		add.l	a3,d0
FFFF0D58 21C0 8024                  		move.l	d0,(Drv68Kmem+$24).w
FFFF0D5C 1A19                       		move.b	(a1)+,d5
FFFF0D5E 7E00                       		moveq	#0,d7
FFFF0D60 1E19                       		move.b	(a1)+,d7
FFFF0D62 5347                       		subq.w	#1,d7
FFFF0D64 7C30                       		moveq	#$30,d6
FFFF0D66                            
FFFF0D66                            loc_5CA8E:				; CODE XREF: PlaySoundID:loc_5CADCj
FFFF0D66 1829 0001                  		move.b	1(a1),d4
FFFF0D6A 6B00                       		bmi.s	loc_5CAA0
FFFF0D6C 08F8 0002 8100             		bset	#2,(Drv68Kmem+$100).w
FFFF0D72 4BF8 8340                  		lea	(Drv68Kmem+$340).w,a5
FFFF0D76 6000                       		bra.s	loc_5CAAA
FFFF0D78                            ; ---------------------------------------------------------------------------
FFFF0D78                            
FFFF0D78                            loc_5CAA0:				; CODE XREF: PlaySoundID+458j
FFFF0D78 08F8 0002 81F0             		bset	#2,(Drv68Kmem+$1F0).w
FFFF0D7E 4BF8 8370                  		lea	(Drv68Kmem+$370).w,a5
FFFF0D82                            
FFFF0D82                            loc_5CAAA:				; CODE XREF: PlaySoundID+464j
FFFF0D82 244D                       		movea.l	a5,a2
FFFF0D84 700B                       		moveq	#$B,d0
FFFF0D86                            
FFFF0D86                            loc_5CAAE:				; CODE XREF: PlaySoundID+476j
FFFF0D86 429A                       		clr.l	(a2)+
FFFF0D88 51C8 FFFC                  		dbf	d0,loc_5CAAE
FFFF0D8C 3A99                       		move.w	(a1)+,(a5)
FFFF0D8E 1B45 0002                  		move.b	d5,2(a5)
FFFF0D92 7000                       		moveq	#0,d0
FFFF0D94 3019                       		move.w	(a1)+,d0
FFFF0D96 D08B                       		add.l	a3,d0
FFFF0D98 2B40 0004                  		move.l	d0,4(a5)
FFFF0D9C 3B59 0008                  		move.w	(a1)+,8(a5)
FFFF0DA0 1B7C 0001 000E             		move.b	#1,$E(a5)
FFFF0DA6 1B46 000D                  		move.b	d6,$D(a5)
FFFF0DAA 4A04                       		tst.b	d4
FFFF0DAC 6B00                       		bmi.s	loc_5CADC
FFFF0DAE 1B7C 00C0 0027             		move.b	#$C0,$27(a5)
FFFF0DB4                            
FFFF0DB4                            loc_5CADC:				; CODE XREF: PlaySoundID+49Aj
FFFF0DB4 51CF FFB0                  		dbf	d7,loc_5CA8E
FFFF0DB8 4A38 8250                  		tst.b	(Drv68Kmem+$250).w
FFFF0DBC 6A00                       		bpl.s	loc_5CAEC
FFFF0DBE 08F8 0002 8340             		bset	#2,(Drv68Kmem+$340).w
FFFF0DC4                            
FFFF0DC4                            loc_5CAEC:				; CODE XREF: PlaySoundID+4AAj
FFFF0DC4 4A38 8310                  		tst.b	(Drv68Kmem+$310).w
FFFF0DC8 6A00                       		bpl.s	locret_5CB0C
FFFF0DCA 08F8 0002 8370             		bset	#2,(Drv68Kmem+$370).w
FFFF0DD0 0004 001F                  		ori.b	#$1F,d4
FFFF0DD4 13C4 00C0 0011             		move.b	d4,($C00011).l
FFFF0DDA 0844 0005                  		bchg	#5,d4
FFFF0DDE 13C4 00C0 0011             		move.b	d4,($C00011).l
FFFF0DE4                            
FFFF0DE4                            locret_5CB0C:				; CODE XREF: PlaySoundID+4B6j
FFFF0DE4 4E75                       		rts
FFFF0DE6                            ; End of function PlaySoundID
FFFF0DE6                            
FFFF0DE6                            ; ---------------------------------------------------------------------------
FFFF0DE6 FFFF 8100                  		dc.l Drv68Kmem+$100
FFFF0DEA FFFF 81F0                  		dc.l Drv68Kmem+$1F0
FFFF0DEE FFFF 8250                  		dc.l Drv68Kmem+$250
FFFF0DF2 FFFF 8310                  		dc.l Drv68Kmem+$310
FFFF0DF6 FFFF 8340                  		dc.l Drv68Kmem+$340
FFFF0DFA FFFF 8370                  		dc.l Drv68Kmem+$370
FFFF0DFE                            
FFFF0DFE                            ; =============== S U B	R O U T	I N E =======================================
FFFF0DFE                            
FFFF0DFE                            
FFFF0DFE                            StopSFX:				; CODE XREF: PlaySoundID+68j
FFFF0DFE                            					; PlaySoundID:loc_5C800p ...
FFFF0DFE 4238 8000                  		clr.b	(Drv68Kmem+$00).w
FFFF0E02 7027                       		moveq	#$27,d0	; '''
FFFF0E04 7200                       		moveq	#0,d1
FFFF0E06 4EB9 0000 0000             		jsr	WriteFMI_Z
FFFF0E0C 4BF8 8220                  		lea	(Drv68Kmem+$220).w,a5
FFFF0E10 7C05                       		moveq	#5,d6
FFFF0E12                            
FFFF0E12                            loc_5CB38:				; CODE XREF: StopSFX+9Ej
FFFF0E12 4A15                       		tst.b	(a5)
FFFF0E14 6A00 0000                  		bpl.w	loc_5CBC0
FFFF0E18 0895 0007                  		bclr	#7,(a5)
FFFF0E1C 7600                       		moveq	#0,d3
FFFF0E1E 162D 0001                  		move.b	1(a5),d3
FFFF0E22 6B00                       		bmi.s	loc_5CB8A
FFFF0E24 4EB9 0000 0000             		jsr	sub_5CE1E
FFFF0E2A 0C03 0004                  		cmpi.b	#4,d3
FFFF0E2E 6600                       		bne.s	loc_5CB64
FFFF0E30 4A38 8340                  		tst.b	(Drv68Kmem+$340).w
FFFF0E34 6A00                       		bpl.s	loc_5CB64
FFFF0E36 4BF8 8340                  		lea	(Drv68Kmem+$340).w,a5
FFFF0E3A 2278 8024                  		movea.l	(Drv68Kmem+$24).w,a1
FFFF0E3E 6000                       		bra.s	loc_5CB76
FFFF0E40                            ; ---------------------------------------------------------------------------
FFFF0E40                            
FFFF0E40                            loc_5CB64:				; CODE XREF: StopSFX+2Cj StopSFX+32j
FFFF0E40 5503                       		subq.b	#2,d3
FFFF0E42 E50B                       		lsl.b	#2,d3
FFFF0E44 41FA FEB0                  		lea	BGMChnPtrs,a0
FFFF0E48 264D                       		movea.l	a5,a3
FFFF0E4A 2A70 3000                  		movea.l	(a0,d3.w),a5
FFFF0E4E 2278 8020                  		movea.l	(Drv68Kmem+$20).w,a1
FFFF0E52                            
FFFF0E52                            loc_5CB76:				; CODE XREF: StopSFX+3Cj
FFFF0E52 0895 0002                  		bclr	#2,(a5)
FFFF0E56 08D5 0001                  		bset	#1,(a5)
FFFF0E5A 102D 000B                  		move.b	$B(a5),d0
FFFF0E5E 4EB9 0000 0000             		jsr	SendFMIns
FFFF0E64 2A4B                       		movea.l	a3,a5
FFFF0E66 6000                       		bra.s	loc_5CBC0
FFFF0E68                            ; ---------------------------------------------------------------------------
FFFF0E68                            
FFFF0E68                            loc_5CB8A:				; CODE XREF: StopSFX+22j
FFFF0E68 4EB9 0000 0000             		jsr	sub_5D1C4
FFFF0E6E 41F8 8370                  		lea	(Drv68Kmem+$370).w,a0
FFFF0E72 0C03 00E0                  		cmpi.b	#$E0,d3
FFFF0E76 6700                       		beq.s	loc_5CBA8
FFFF0E78 0C03 00C0                  		cmpi.b	#$C0,d3
FFFF0E7C 6700                       		beq.s	loc_5CBA8
FFFF0E7E E60B                       		lsr.b	#3,d3
FFFF0E80 41FA FE74                  		lea	BGMChnPtrs,a0
FFFF0E84 2070 3000                  		movea.l	(a0,d3.w),a0
FFFF0E88                            
FFFF0E88                            loc_5CBA8:				; CODE XREF: StopSFX+70j StopSFX+76j
FFFF0E88 0890 0002                  		bclr	#2,(a0)
FFFF0E8C 08D0 0001                  		bset	#1,(a0)
FFFF0E90 0C28 00E0 0001             		cmpi.b	#$E0,1(a0)
FFFF0E96 6600                       		bne.s	loc_5CBC0
FFFF0E98 13E8 0025 00C0 0011        		move.b	$25(a0),($C00011).l
FFFF0EA0                            
FFFF0EA0                            loc_5CBC0:				; CODE XREF: StopSFX+14j StopSFX+62j ...
FFFF0EA0 DAFC 0030                  		adda.w	#$30,a5	; '0'
FFFF0EA4 51CE FF6C                  		dbf	d6,loc_5CB38
FFFF0EA8 4E75                       		rts
FFFF0EAA                            ; End of function StopSFX
FFFF0EAA                            
FFFF0EAA                            
FFFF0EAA                            ; =============== S U B	R O U T	I N E =======================================
FFFF0EAA                            
FFFF0EAA                            
FFFF0EAA                            StopSpcSFX:				; CODE XREF: PlaySoundID+6Cj
FFFF0EAA                            					; PlaySoundID+1CAp ...
FFFF0EAA 4BF8 8340                  		lea	(Drv68Kmem+$340).w,a5
FFFF0EAE 4A15                       		tst.b	(a5)
FFFF0EB0 6A00                       		bpl.s	loc_5CBFC
FFFF0EB2 0895 0007                  		bclr	#7,(a5)
FFFF0EB6 0815 0002                  		btst	#2,(a5)
FFFF0EBA 6600                       		bne.s	loc_5CBFC
FFFF0EBC 4EB9 0000 0000             		jsr	sub_5CE2A
FFFF0EC2 4BF8 8100                  		lea	(Drv68Kmem+$100).w,a5
FFFF0EC6 0895 0002                  		bclr	#2,(a5)
FFFF0ECA 08D5 0001                  		bset	#1,(a5)
FFFF0ECE 4A15                       		tst.b	(a5)
FFFF0ED0 6A00                       		bpl.s	loc_5CBFC
FFFF0ED2 2278 8020                  		movea.l	(Drv68Kmem+$20).w,a1
FFFF0ED6 102D 000B                  		move.b	$B(a5),d0
FFFF0EDA 4EB9 0000 0000             		jsr	SendFMIns
FFFF0EE0                            
FFFF0EE0                            loc_5CBFC:				; CODE XREF: StopSpcSFX+6j
FFFF0EE0                            					; StopSpcSFX+10j ...
FFFF0EE0 4BF8 8370                  		lea	(Drv68Kmem+$370).w,a5
FFFF0EE4 4A15                       		tst.b	(a5)
FFFF0EE6 6A00                       		bpl.s	locret_5CC32
FFFF0EE8 0895 0007                  		bclr	#7,(a5)
FFFF0EEC 0815 0002                  		btst	#2,(a5)
FFFF0EF0 6600                       		bne.s	locret_5CC32
FFFF0EF2 4EB9 0000 0000             		jsr	sub_5D1CA
FFFF0EF8 4BF8 81F0                  		lea	(Drv68Kmem+$1F0).w,a5
FFFF0EFC 0895 0002                  		bclr	#2,(a5)
FFFF0F00 08D5 0001                  		bset	#1,(a5)
FFFF0F04 4A15                       		tst.b	(a5)
FFFF0F06 6A00                       		bpl.s	locret_5CC32
FFFF0F08 0C2D 00E0 0001             		cmpi.b	#$E0,1(a5)
FFFF0F0E 6600                       		bne.s	locret_5CC32
FFFF0F10 13ED 0025 00C0 0011        		move.b	$25(a5),($C00011).l
FFFF0F18                            
FFFF0F18                            locret_5CC32:				; CODE XREF: StopSpcSFX+38j
FFFF0F18                            					; StopSpcSFX+42j ...
FFFF0F18 4E75                       		rts
FFFF0F1A                            ; End of function StopSpcSFX
FFFF0F1A                            
FFFF0F1A                            ; ---------------------------------------------------------------------------
FFFF0F1A                            ; START	OF FUNCTION CHUNK FOR PlaySoundID
FFFF0F1A                            
FFFF0F1A                            FadeOutMusic:				; CODE XREF: PlaySoundID:CmdJmpTablej
FFFF0F1A 4EBA FEE2                  		jsr	StopSFX
FFFF0F1E 4EBA FF8A                  		jsr	StopSpcSFX
FFFF0F22 11FC 0003 8006             		move.b	#3,(Drv68Kmem+$06).w
FFFF0F28 11FC 0028 8004             		move.b	#$28,(Drv68Kmem+$04).w
FFFF0F2E 4238 8040                  		clr.b	(Drv68Kmem+$40).w
FFFF0F32 4E75                       		rts
FFFF0F34                            ; END OF FUNCTION CHUNK	FOR PlaySoundID
FFFF0F34                            
FFFF0F34                            ; =============== S U B	R O U T	I N E =======================================
FFFF0F34                            
FFFF0F34                            
FFFF0F34                            DoFadeOut:				; CODE XREF: UpdateSound+14p
FFFF0F34 7000                       		moveq	#0,d0
FFFF0F36 1038 8004                  		move.b	(Drv68Kmem+$04).w,d0
FFFF0F3A 6700                       		beq.s	locret_5CC60
FFFF0F3C 1038 8006                  		move.b	(Drv68Kmem+$06).w,d0
FFFF0F40 6700                       		beq.s	loc_5CC62
FFFF0F42 5338 8006                  		subq.b	#1,(Drv68Kmem+$06).w
FFFF0F46                            
FFFF0F46                            locret_5CC60:				; CODE XREF: DoFadeOut+6j
FFFF0F46 4E75                       		rts
FFFF0F48                            ; ---------------------------------------------------------------------------
FFFF0F48                            
FFFF0F48                            loc_5CC62:				; CODE XREF: DoFadeOut+Cj
FFFF0F48 5338 8004                  		subq.b	#1,(Drv68Kmem+$04).w
FFFF0F4C 6700 0000                  		beq.w	StopAllSound
FFFF0F50 11FC 0003 8006             		move.b	#3,(Drv68Kmem+$06).w
FFFF0F56 4BF8 8070                  		lea	(Drv68Kmem+$70).w,a5
FFFF0F5A 7E05                       		moveq	#5,d7
FFFF0F5C                            
FFFF0F5C                            loc_5CC76:				; CODE XREF: DoFadeOut+40j
FFFF0F5C 4A15                       		tst.b	(a5)
FFFF0F5E 6A00                       		bpl.s	loc_5CC8A
FFFF0F60 522D 0009                  		addq.b	#1,9(a5)
FFFF0F64 6A00                       		bpl.s	loc_5CC86
FFFF0F66 0895 0007                  		bclr	#7,(a5)
FFFF0F6A 6000                       		bra.s	loc_5CC8A
FFFF0F6C                            ; ---------------------------------------------------------------------------
FFFF0F6C                            
FFFF0F6C                            loc_5CC86:				; CODE XREF: DoFadeOut+30j
FFFF0F6C 4EB9 0000 0000             		jsr	RefreshVolume
FFFF0F72                            
FFFF0F72                            loc_5CC8A:				; CODE XREF: DoFadeOut+2Aj
FFFF0F72                            					; DoFadeOut+36j
FFFF0F72 DAFC 0030                  		adda.w	#$30,a5	; '0'
FFFF0F76 51CF FFE4                  		dbf	d7,loc_5CC76
FFFF0F7A 7E02                       		moveq	#2,d7
FFFF0F7C                            
FFFF0F7C                            loc_5CC94:				; CODE XREF: DoFadeOut+68j
FFFF0F7C 4A15                       		tst.b	(a5)
FFFF0F7E 6A00                       		bpl.s	loc_5CCB2
FFFF0F80 522D 0009                  		addq.b	#1,9(a5)
FFFF0F84 0C2D 0010 0009             		cmpi.b	#$10,9(a5)
FFFF0F8A 6500                       		bcs.s	loc_5CCAA
FFFF0F8C 0895 0007                  		bclr	#7,(a5)
FFFF0F90 6000                       		bra.s	loc_5CCB2
FFFF0F92                            ; ---------------------------------------------------------------------------
FFFF0F92                            
FFFF0F92                            loc_5CCAA:				; CODE XREF: DoFadeOut+54j
FFFF0F92 1C2D 0009                  		move.b	9(a5),d6
FFFF0F96 4EB9 0000 0000             		jsr	sub_5D172
FFFF0F9C                            
FFFF0F9C                            loc_5CCB2:				; CODE XREF: DoFadeOut+48j
FFFF0F9C                            					; DoFadeOut+5Aj
FFFF0F9C DAFC 0030                  		adda.w	#$30,a5	; '0'
FFFF0FA0 51CF FFDA                  		dbf	d7,loc_5CC94
FFFF0FA4 4E75                       		rts
FFFF0FA6                            ; End of function DoFadeOut
FFFF0FA6                            
FFFF0FA6                            
FFFF0FA6                            ; =============== S U B	R O U T	I N E =======================================
FFFF0FA6                            
FFFF0FA6                            
FFFF0FA6                            DoTempo:				; CODE XREF: UpdateSound+10p
FFFF0FA6 4A38 8002                  		tst.b	(Drv68Kmem+$02).w
FFFF0FAA 6700                       		beq.s	locret_5CCE4
FFFF0FAC 5338 8001                  		subq.b	#1,(Drv68Kmem+$01).w
FFFF0FB0 6600                       		bne.s	locret_5CCE4
FFFF0FB2 11F8 8002 8001             		move.b	(Drv68Kmem+$02).w,(Drv68Kmem+$01).w
FFFF0FB8 41F8 8040                  		lea	(Drv68Kmem+$40).w,a0
FFFF0FBC 7030                       		moveq	#$30,d0
FFFF0FBE 7209                       		moveq	#9,d1
FFFF0FC0                            
FFFF0FC0                            loc_5CCD6:				; CODE XREF: DoTempo+24j
FFFF0FC0 4A10                       		tst.b	(a0)
FFFF0FC2 6A00                       		bpl.s	loc_5CCDE
FFFF0FC4 5228 000E                  		addq.b	#1,$E(a0)
FFFF0FC8                            
FFFF0FC8                            loc_5CCDE:				; CODE XREF: DoTempo+1Cj
FFFF0FC8 D0C0                       		adda.w	d0,a0
FFFF0FCA 51C9 FFF4                  		dbf	d1,loc_5CCD6
FFFF0FCE                            
FFFF0FCE                            locret_5CCE4:				; CODE XREF: DoTempo+4j DoTempo+Aj
FFFF0FCE 4E75                       		rts
FFFF0FD0                            ; End of function DoTempo
FFFF0FD0                            
FFFF0FD0                            
FFFF0FD0                            ; =============== S U B	R O U T	I N E =======================================
FFFF0FD0                            
FFFF0FD0                            
FFFF0FD0                            SilenceFMChn:				; CODE XREF: cfHandler:cfE3_SilenceTrkp
FFFF0FD0 4EB9 0000 0000             		jsr	drv_stopz80
FFFF0FD6 7803                       		moveq	#3,d4
FFFF0FD8 7640                       		moveq	#$40,d3
FFFF0FDA 727F                       		moveq	#$7F,d1
FFFF0FDC                            
FFFF0FDC                            loc_5CCF0:				; CODE XREF: SilenceFMChn+12j
FFFF0FDC 1003                       		move.b	d3,d0
FFFF0FDE 4EB9 0000 0000             		jsr	WriteFMMain
FFFF0FE4 5803                       		addq.b	#4,d3
FFFF0FE6 51CC FFF4                  		dbf	d4,loc_5CCF0
FFFF0FEA 7803                       		moveq	#3,d4
FFFF0FEC 163C 0080                  		move.b	#$80,d3
FFFF0FF0 720F                       		moveq	#$F,d1
FFFF0FF2                            
FFFF0FF2                            loc_5CD04:				; CODE XREF: SilenceFMChn+26j
FFFF0FF2 1003                       		move.b	d3,d0
FFFF0FF4 4EB9 0000 0000             		jsr	WriteFMMain
FFFF0FFA 5803                       		addq.b	#4,d3
FFFF0FFC 51CC FFF4                  		dbf	d4,loc_5CD04
FFFF1000 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1008 4E75                       		rts
FFFF100A                            ; End of function SilenceFMChn
FFFF100A                            
FFFF100A                            
FFFF100A                            ; =============== S U B	R O U T	I N E =======================================
FFFF100A                            
FFFF100A                            
FFFF100A                            sub_5CD1A:				; CODE XREF: PlaySoundID+73Cp
FFFF100A 7402                       		moveq	#2,d2
FFFF100C 7028                       		moveq	#$28,d0	; '('
FFFF100E 4EB9 0000 0000             		jsr	drv_stopz80
FFFF1014                            
FFFF1014                            loc_5CD22:				; CODE XREF: sub_5CD1A+14j
FFFF1014 1202                       		move.b	d2,d1
FFFF1016 4EB9 0000 0000             		jsr	WriteFMI
FFFF101C 5801                       		addq.b	#4,d1
FFFF101E 4EB9 0000 0000             		jsr	WriteFMI
FFFF1024 51CA FFEE                  		dbf	d2,loc_5CD22
FFFF1028 7040                       		moveq	#$40,d0	; '@'
FFFF102A 727F                       		moveq	#$7F,d1	; ''
FFFF102C 7602                       		moveq	#2,d3
FFFF102E                            
FFFF102E                            loc_5CD38:				; CODE XREF: sub_5CD1A+32j
FFFF102E 7403                       		moveq	#3,d2
FFFF1030                            
FFFF1030                            loc_5CD3A:				; CODE XREF: sub_5CD1A+2Aj
FFFF1030 4EB9 0000 0000             		jsr	WriteFMI
FFFF1036 4EB9 0000 0000             		jsr	sub_5CE92
FFFF103C 5840                       		addq.w	#4,d0
FFFF103E 51CA FFF0                  		dbf	d2,loc_5CD3A
FFFF1042 0400 000F                  		subi.b	#$F,d0
FFFF1046 51CB FFE6                  		dbf	d3,loc_5CD38
FFFF104A 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1052 4E75                       		rts
FFFF1054                            ; End of function sub_5CD1A
FFFF1054                            
FFFF1054                            ; ---------------------------------------------------------------------------
FFFF1054                            ; START	OF FUNCTION CHUNK FOR PlaySoundID
FFFF1054                            
FFFF1054                            StopAllSound:				; CODE XREF: PlaySoundID+1Cj
FFFF1054                            					; PlaySoundID+70j ...
FFFF1054 7027                       		moveq	#$27,d0
FFFF1056 7200                       		moveq	#0,d1
FFFF1058 4EB9 0000 0000             		jsr	WriteFMI_Z
FFFF105E 41F8 8000                  		lea	(Drv68Kmem+$00).w,a0
FFFF1062 303C 00E3                  		move.w	#$E3,d0
FFFF1066                            
FFFF1066                            loc_5CD6A:				; CODE XREF: PlaySoundID+732j
FFFF1066 4298                       		clr.l	(a0)+
FFFF1068 51C8 FFFC                  		dbf	d0,loc_5CD6A
FFFF106C 11FC 00FF 8009             		move.b	#$FF,(Drv68Kmem+$09).w
FFFF1072 4EBA FF96                  		jsr	sub_5CD1A
FFFF1076 6000 0000                  		bra.w	loc_5D1DA
FFFF107A                            ; END OF FUNCTION CHUNK	FOR PlaySoundID
FFFF107A                            
FFFF107A                            ; =============== S U B	R O U T	I N E =======================================
FFFF107A                            
FFFF107A                            
FFFF107A                            SilenceFM:				; CODE XREF: PlaySoundID+1CEp
FFFF107A 7027                       		moveq	#$27,d0
FFFF107C 7200                       		moveq	#0,d1
FFFF107E 4EB9 0000 0000             		jsr	WriteFMI_Z
FFFF1084 41F8 8000                  		lea	(Drv68Kmem+$00).w,a0
FFFF1088 1238 8000                  		move.b	(Drv68Kmem+$00).w,d1
FFFF108C 303C 0087                  		move.w	#$87,d0
FFFF1090                            
FFFF1090                            loc_5CD92:				; CODE XREF: SilenceFM+16j
FFFF1090 4298                       		clr.l	(a0)+
FFFF1092 51C8 FFFC                  		dbf	d0,loc_5CD92
FFFF1096 11C1 8000                  		move.b	d1,(Drv68Kmem+$00).w
FFFF109A 11FC 00FF 8009             		move.b	#$FF,(Drv68Kmem+$09).w
FFFF10A0 4E75                       		rts
FFFF10A2                            ; End of function SilenceFM
FFFF10A2                            
FFFF10A2                            ; ---------------------------------------------------------------------------
FFFF10A2                            ; START	OF FUNCTION CHUNK FOR UpdateFMTrack
FFFF10A2                            
FFFF10A2                            loc_5CE02:				; CODE XREF: UpdateFMTrack+16j
FFFF10A2 0815 0001                  		btst	#1,(a5)
FFFF10A6 6600                       		bne.s	locret_5CE1C
FFFF10A8 0815 0002                  		btst	#2,(a5)
FFFF10AC 6600                       		bne.s	locret_5CE1C
FFFF10AE 7028                       		moveq	#$28,d0
FFFF10B0 122D 0001                  		move.b	1(a5),d1
FFFF10B4 0001 00F0                  		ori.b	#$F0,d1
FFFF10B8 6000 0000                  		bra.w	WriteFMI_Z
FFFF10BC                            ; ---------------------------------------------------------------------------
FFFF10BC                            
FFFF10BC                            locret_5CE1C:				; CODE XREF: UpdateFMTrack+CBEj
FFFF10BC                            					; UpdateFMTrack+CC4j
FFFF10BC 4E75                       		rts
FFFF10BE                            ; END OF FUNCTION CHUNK	FOR UpdateFMTrack
FFFF10BE                            
FFFF10BE                            ; =============== S U B	R O U T	I N E =======================================
FFFF10BE                            
FFFF10BE                            
FFFF10BE                            sub_5CE1E:				; CODE XREF: sub_5C172:loc_5C18Ap
FFFF10BE                            					; sub_5C242+18p ...
FFFF10BE                            
FFFF10BE                            ; FUNCTION CHUNK AT 0005CE34 SIZE 00000002 BYTES
FFFF10BE                            
FFFF10BE 0815 0004                  		btst	#4,(a5)
FFFF10C2 6600                       		bne.s	locret_5CE34
FFFF10C4 0815 0002                  		btst	#2,(a5)
FFFF10C8 6600                       		bne.s	locret_5CE34
FFFF10CA                            ; End of function sub_5CE1E
FFFF10CA                            
FFFF10CA                            
FFFF10CA                            ; =============== S U B	R O U T	I N E =======================================
FFFF10CA                            
FFFF10CA                            
FFFF10CA                            sub_5CE2A:				; CODE XREF: StopSpcSFX+12p
FFFF10CA 7028                       		moveq	#$28,d0
FFFF10CC 122D 0001                  		move.b	1(a5),d1
FFFF10D0 6000 0000                  		bra.w	WriteFMI_Z
FFFF10D4                            ; End of function sub_5CE2A
FFFF10D4                            
FFFF10D4                            ; ---------------------------------------------------------------------------
FFFF10D4                            ; START	OF FUNCTION CHUNK FOR sub_5CE1E
FFFF10D4                            
FFFF10D4                            locret_5CE34:				; CODE XREF: sub_5CE1E+4j sub_5CE1E+Aj
FFFF10D4 4E75                       		rts
FFFF10D6                            ; END OF FUNCTION CHUNK	FOR sub_5CE1E
FFFF10D6                            
FFFF10D6                            ; =============== S U B	R O U T	I N E =======================================
FFFF10D6                            
FFFF10D6                            
FFFF10D6                            WriteFMMain_Z:				; CODE XREF: cfHandler+146p
FFFF10D6                            					; cfHandler+18Cj ...
FFFF10D6 0815 0002                  		btst	#2,(a5)
FFFF10DA 6600                       		bne.s	locret_5CE4C
FFFF10DC 4EB9 0000 0000             		jsr	drv_stopz80
FFFF10E2 4EB9 0000 0000             		jsr	WriteFMMain
FFFF10E8 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF10F0                            
FFFF10F0                            locret_5CE4C:				; CODE XREF: WriteFMMain_Z+4j
FFFF10F0 4E75                       		rts
FFFF10F2                            ; End of function WriteFMMain_Z
FFFF10F2                            
FFFF10F2                            
FFFF10F2                            ; =============== S U B	R O U T	I N E =======================================
FFFF10F2                            
FFFF10F2                            
FFFF10F2                            WriteFMI_Z:				; CODE XREF: StopSFX+8p
FFFF10F2                            					; PlaySoundID+724p ...
FFFF10F2 4EB9 0000 0000             		jsr	drv_stopz80
FFFF10F8 4EB9 0000 0000             		jsr	WriteFMI
FFFF10FE 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1106 4E75                       		rts
FFFF1108                            ; End of function WriteFMI_Z
FFFF1108                            
FFFF1108                            
FFFF1108                            ; =============== S U B	R O U T	I N E =======================================
FFFF1108                            
FFFF1108                            
FFFF1108                            WriteFMMain:				; CODE XREF: sub_5C2BA+44p
FFFF1108                            					; sub_5C2BA+4Ep ...
FFFF1108                            
FFFF1108                            ; FUNCTION CHUNK AT 0005CE88 SIZE 0000000A BYTES
FFFF1108                            
FFFF1108 082D 0002 0001             		btst	#2,1(a5)
FFFF110E 6600                       		bne.s	loc_5CE88
FFFF1110 D02D 0001                  		add.b	1(a5),d0
FFFF1114                            ; End of function WriteFMMain
FFFF1114                            
FFFF1114                            
FFFF1114                            ; =============== S U B	R O U T	I N E =======================================
FFFF1114                            
FFFF1114                            
FFFF1114                            WriteFMI:				; CODE XREF: sub_5C2BA+122p
FFFF1114                            					; sub_5C2BA+12Ap ...
FFFF1114 41F9 00A0 4000             		lea	($A04000).l,a0
FFFF111A                            
FFFF111A                            loc_5CE72:				; CODE XREF: WriteFMI+Aj
FFFF111A 0810 0007                  		btst	#7,(a0)
FFFF111E 66FA                       		bne.s	loc_5CE72
FFFF1120 1080                       		move.b	d0,(a0)
FFFF1122 4E71                       		nop
FFFF1124                            
FFFF1124                            loc_5CE7C:				; CODE XREF: WriteFMI+14j
FFFF1124 0810 0007                  		btst	#7,(a0)
FFFF1128 66FA                       		bne.s	loc_5CE7C
FFFF112A 1141 0001                  		move.b	d1,1(a0)
FFFF112E 4E75                       		rts
FFFF1130                            ; End of function WriteFMI
FFFF1130                            
FFFF1130                            ; ---------------------------------------------------------------------------
FFFF1130                            ; START	OF FUNCTION CHUNK FOR WriteFMMain
FFFF1130                            
FFFF1130                            loc_5CE88:				; CODE XREF: WriteFMMain+6j
FFFF1130 142D 0001                  		move.b	1(a5),d2
FFFF1134 0882 0002                  		bclr	#2,d2
FFFF1138 D002                       		add.b	d2,d0
FFFF113A                            ; END OF FUNCTION CHUNK	FOR WriteFMMain
FFFF113A                            
FFFF113A                            ; =============== S U B	R O U T	I N E =======================================
FFFF113A                            
FFFF113A                            
FFFF113A                            sub_5CE92:				; CODE XREF: UpdateSound+76Cp
FFFF113A                            					; UpdateSound+7B8p ...
FFFF113A 41F9 00A0 4000             		lea	($A04000).l,a0
FFFF1140                            
FFFF1140                            loc_5CE98:				; CODE XREF: sub_5CE92+Aj
FFFF1140 0810 0007                  		btst	#7,(a0)
FFFF1144 66FA                       		bne.s	loc_5CE98
FFFF1146 1140 0002                  		move.b	d0,2(a0)
FFFF114A 4E71                       		nop
FFFF114C                            
FFFF114C                            loc_5CEA4:				; CODE XREF: sub_5CE92+16j
FFFF114C 0810 0007                  		btst	#7,(a0)
FFFF1150 66FA                       		bne.s	loc_5CEA4
FFFF1152 1141 0003                  		move.b	d1,3(a0)
FFFF1156 4E75                       		rts
FFFF1158                            ; End of function sub_5CE92
FFFF1158                            
FFFF1158                            
FFFF1158                            ; =============== S U B	R O U T	I N E =======================================
FFFF1158                            
FFFF1158                            
FFFF1158                            drv_stopz80:				; CODE XREF: UpdateDACTrack+54p
FFFF1158                            					; sub_5C2BA+40p ...
FFFF1158 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
FFFF1160                            
FFFF1160                            loc_5CEB8:				; CODE XREF: drv_stopz80+10j
FFFF1160 0839 0000 00A1 1100        		btst	#0,($A11100).l
FFFF1168 66F6                       		bne.s	loc_5CEB8
FFFF116A 4A39 00A0 1F2A             		tst.b	($A01F2A).l
FFFF1170 6700                       		beq.s	locret_5CEF4
FFFF1172 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF117A 4E71                       		nop
FFFF117C 4E71                       		nop
FFFF117E 4E71                       		nop
FFFF1180 4E71                       		nop
FFFF1182 4E71                       		nop
FFFF1184 4E71                       		nop
FFFF1186 4E71                       		nop
FFFF1188 4E71                       		nop
FFFF118A 4E71                       		nop
FFFF118C 4E71                       		nop
FFFF118E 4E71                       		nop
FFFF1190 4E71                       		nop
FFFF1192 4E71                       		nop
FFFF1194 4E71                       		nop
FFFF1196 4E71                       		nop
FFFF1198 4E71                       		nop
FFFF119A 60BC                       		bra.s	drv_stopz80
FFFF119C                            ; ---------------------------------------------------------------------------
FFFF119C                            
FFFF119C                            locret_5CEF4:				; CODE XREF: drv_stopz80+18j
FFFF119C 4E75                       		rts
FFFF119E                            ; End of function drv_stopz80
FFFF119E                            
FFFF119E                            
FFFF119E                            ; =============== S U B	R O U T	I N E =======================================
FFFF119E                            
FFFF119E                            
FFFF119E                            sub_5CEF6:				; CODE XREF: UpdateSound+Cp
FFFF119E 0C38 0002 802B             		cmpi.b	#2,(Drv68Kmem+$2B).w
FFFF11A4 6700 0000                  		beq.w	loc_5CF28
FFFF11A8 1038 8028                  		move.b	(Drv68Kmem+$28).w,d0
FFFF11AC 6700 0000                  		beq.w	loc_5CF28
FFFF11B0 6B00 0000                  		bmi.w	loc_5CF1E
FFFF11B4 0C00 0001                  		cmpi.b	#1,d0
FFFF11B8 6600 0000                  		bne.w	loc_5CF28
FFFF11BC 11FC 0002 8028             		move.b	#2,(Drv68Kmem+$28).w
FFFF11C2 6000 0000                  		bra.w	loc_5CFA4
FFFF11C6                            ; ---------------------------------------------------------------------------
FFFF11C6                            
FFFF11C6                            loc_5CF1E:				; CODE XREF: sub_5CEF6+12j
FFFF11C6 11FC 0000 8028             		move.b	#0,(Drv68Kmem+$28).w
FFFF11CC 6000 0000                  		bra.w	loc_5CFEC
FFFF11D0                            ; ---------------------------------------------------------------------------
FFFF11D0                            
FFFF11D0                            loc_5CF28:				; CODE XREF: sub_5CEF6+6j sub_5CEF6+Ej ...
FFFF11D0 0C38 0002 8028             		cmpi.b	#2,(Drv68Kmem+$28).w
FFFF11D6 6700 0000                  		beq.w	locret_5CFA2
FFFF11DA 1038 802B                  		move.b	(Drv68Kmem+$2B).w,d0
FFFF11DE 6700 0000                  		beq.w	locret_5CFA2
FFFF11E2 0C00 0001                  		cmpi.b	#1,d0
FFFF11E6 6600 0000                  		bne.w	loc_5CF7E
FFFF11EA 4EBA FF6C                  		jsr	drv_stopz80
FFFF11EE 1E39 00A0 1FFC             		move.b	($A01FFC).l,d7
FFFF11F4 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF11FC 0807 0005                  		btst	#5,d7
FFFF1200 6700 0000                  		beq.w	locret_5CFA2
FFFF1204 11FC 0002 802B             		move.b	#2,(Drv68Kmem+$2B).w
FFFF120A 1038 8029                  		move.b	(Drv68Kmem+$29).w,d0
FFFF120E 8038 802A                  		or.b	(Drv68Kmem+$2A).w,d0
FFFF1212 6600 0000                  		bne.w	loc_5CFA4
FFFF1216 11FC 000A 8029             		move.b	#$A,(Drv68Kmem+$29).w
FFFF121C 11FC 0002 802A             		move.b	#2,(Drv68Kmem+$2A).w
FFFF1222 6000 0000                  		bra.w	loc_5CFA4
FFFF1226                            ; ---------------------------------------------------------------------------
FFFF1226                            
FFFF1226                            loc_5CF7E:				; CODE XREF: sub_5CEF6+48j
FFFF1226 4EBA FF30                  		jsr	drv_stopz80
FFFF122A 1E39 00A0 1FFC             		move.b	($A01FFC).l,d7
FFFF1230 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1238 0807 0005                  		btst	#5,d7
FFFF123C 6600 0000                  		bne.w	locret_5CFA2
FFFF1240 11FC 0000 802B             		move.b	#0,(Drv68Kmem+$2B).w
FFFF1246 6000 0000                  		bra.w	loc_5CFEC
FFFF124A                            ; ---------------------------------------------------------------------------
FFFF124A                            
FFFF124A                            locret_5CFA2:				; CODE XREF: sub_5CEF6+38j
FFFF124A                            					; sub_5CEF6+40j ...
FFFF124A 4E75                       		rts
FFFF124C                            ; ---------------------------------------------------------------------------
FFFF124C                            
FFFF124C                            loc_5CFA4:				; CODE XREF: sub_5CEF6+24j
FFFF124C                            					; sub_5CEF6+74j ...
FFFF124C 1C38 8029                  		move.b	(Drv68Kmem+$29).w,d6
FFFF1250 4BF8 8070                  		lea	(Drv68Kmem+$70).w,a5
FFFF1254 7E05                       		moveq	#5,d7
FFFF1256                            
FFFF1256                            loc_5CFAE:				; CODE XREF: sub_5CEF6+CAj
FFFF1256 4A15                       		tst.b	(a5)
FFFF1258 6A00                       		bpl.s	loc_5CFBC
FFFF125A DD2D 0009                  		add.b	d6,9(a5)
FFFF125E 6B00                       		bmi.s	loc_5CFBC
FFFF1260 4EB9 0000 0000             		jsr	RefreshVolume
FFFF1266                            
FFFF1266                            loc_5CFBC:				; CODE XREF: sub_5CEF6+BAj
FFFF1266                            					; sub_5CEF6+C0j
FFFF1266 DAFC 0030                  		adda.w	#$30,a5
FFFF126A 51CF FFEA                  		dbf	d7,loc_5CFAE
FFFF126E 1A38 802A                  		move.b	(Drv68Kmem+$2A).w,d5
FFFF1272 7E02                       		moveq	#2,d7
FFFF1274                            
FFFF1274                            loc_5CFCA:				; CODE XREF: sub_5CEF6+F0j
FFFF1274 4A15                       		tst.b	(a5)
FFFF1276 6A00                       		bpl.s	loc_5CFE2
FFFF1278 DB2D 0009                  		add.b	d5,9(a5)
FFFF127C 0C2D 0010 0009             		cmpi.b	#$10,9(a5)
FFFF1282 6400                       		bcc.s	loc_5CFE2
FFFF1284 1C2D 0009                  		move.b	9(a5),d6
FFFF1288 4EB9 0000 0000             		jsr	sub_5D172
FFFF128E                            
FFFF128E                            loc_5CFE2:				; CODE XREF: sub_5CEF6+D6j
FFFF128E                            					; sub_5CEF6+E2j
FFFF128E DAFC 0030                  		adda.w	#$30,a5
FFFF1292 51CF FFE0                  		dbf	d7,loc_5CFCA
FFFF1296 4E75                       		rts
FFFF1298                            ; ---------------------------------------------------------------------------
FFFF1298                            
FFFF1298                            loc_5CFEC:				; CODE XREF: sub_5CEF6+2Ej
FFFF1298                            					; sub_5CEF6+A8j
FFFF1298 1C38 8029                  		move.b	(Drv68Kmem+$29).w,d6
FFFF129C 4BF8 8070                  		lea	(Drv68Kmem+$70).w,a5
FFFF12A0 7E05                       		moveq	#5,d7
FFFF12A2                            
FFFF12A2                            loc_5CFF6:				; CODE XREF: sub_5CEF6+110j
FFFF12A2 4A15                       		tst.b	(a5)
FFFF12A4 6A00                       		bpl.s	loc_5D002
FFFF12A6 9D2D 0009                  		sub.b	d6,9(a5)
FFFF12AA 4EB9 0000 0000             		jsr	RefreshVolume
FFFF12B0                            
FFFF12B0                            loc_5D002:				; CODE XREF: sub_5CEF6+102j
FFFF12B0 DAFC 0030                  		adda.w	#$30,a5
FFFF12B4 51CF FFEC                  		dbf	d7,loc_5CFF6
FFFF12B8 1A38 802A                  		move.b	(Drv68Kmem+$2A).w,d5
FFFF12BC 7E02                       		moveq	#2,d7
FFFF12BE                            
FFFF12BE                            loc_5D010:				; CODE XREF: sub_5CEF6+12Ej
FFFF12BE 4A15                       		tst.b	(a5)
FFFF12C0 6A00                       		bpl.s	loc_5D020
FFFF12C2 9B2D 0009                  		sub.b	d5,9(a5)
FFFF12C6 1C2D 0009                  		move.b	9(a5),d6
FFFF12CA 4EB9 0000 0000             		jsr	sub_5D172
FFFF12D0                            
FFFF12D0                            loc_5D020:				; CODE XREF: sub_5CEF6+11Cj
FFFF12D0 DAFC 0030                  		adda.w	#$30,a5
FFFF12D4 51CF FFE8                  		dbf	d7,loc_5D010
FFFF12D8 4238 8029                  		clr.b	(Drv68Kmem+$29).w
FFFF12DC 4238 802A                  		clr.b	(Drv68Kmem+$2A).w
FFFF12E0 4E75                       		rts
FFFF12E2                            ; End of function sub_5CEF6
FFFF12E2                            
FFFF12E2                            ; ---------------------------------------------------------------------------
FFFF12E2 025E 0284 02AB 02D3 02FE+  FMFreqs:	dc.w $25E, $284, $2AB, $2D3, $2FE, $32D, $35C, $38F, $3C5, $3FF, $43C, $47C
FFFF12FA                            					; DATA XREF: sub_5C1A8+18o
FFFF12FA                            
FFFF12FA                            ; =============== S U B	R O U T	I N E =======================================
FFFF12FA                            
FFFF12FA                            
FFFF12FA                            UpdatePSGTrack:				; CODE XREF: UpdateSound+52p
FFFF12FA                            					; UpdateSound+7Cp ...
FFFF12FA 532D 000E                  		subq.b	#1,$E(a5)
FFFF12FE 6600                       		bne.s	loc_5D060
FFFF1300 0895 0004                  		bclr	#4,(a5)
FFFF1304 4EB9 0000 0000             		jsr	sub_5D070
FFFF130A 4EB9 0000 0000             		jsr	sub_5D0D4
FFFF1310 6000 0000                  		bra.w	loc_5D128
FFFF1314                            ; ---------------------------------------------------------------------------
FFFF1314                            
FFFF1314                            loc_5D060:				; CODE XREF: UpdatePSGTrack+4j
FFFF1314 4EBA F1B8                  		jsr	sub_5C242
FFFF1318 4EB9 0000 0000             		jsr	DoVolEnv
FFFF131E 4EBA F1DA                  		jsr	sub_5C26A
FFFF1322 6000 0000                  		bra.w	loc_5D0E0
FFFF1326                            ; End of function UpdatePSGTrack
FFFF1326                            
FFFF1326                            
FFFF1326                            ; =============== S U B	R O U T	I N E =======================================
FFFF1326                            
FFFF1326                            
FFFF1326                            sub_5D070:				; CODE XREF: UpdatePSGTrack+Ap
FFFF1326 0895 0001                  		bclr	#1,(a5)
FFFF132A 286D 0004                  		movea.l	4(a5),a4
FFFF132E                            
FFFF132E                            loc_5D078:				; CODE XREF: sub_5D070+16j
FFFF132E 7A00                       		moveq	#0,d5
FFFF1330 1A1C                       		move.b	(a4)+,d5
FFFF1332 0C05 00E0                  		cmpi.b	#$E0,d5
FFFF1336 6500                       		bcs.s	loc_5D088
FFFF1338 4EB9 0000 0000             		jsr	cfHandler
FFFF133E 60EE                       		bra.s	loc_5D078
FFFF1340                            ; ---------------------------------------------------------------------------
FFFF1340                            
FFFF1340                            loc_5D088:				; CODE XREF: sub_5D070+10j
FFFF1340 4A05                       		tst.b	d5
FFFF1342 6A00                       		bpl.s	loc_5D09C
FFFF1344 4EB9 0000 0000             		jsr	sub_5D0A4
FFFF134A 1A1C                       		move.b	(a4)+,d5
FFFF134C 4A05                       		tst.b	d5
FFFF134E 6A00                       		bpl.s	loc_5D09C
FFFF1350 534C                       		subq.w	#1,a4
FFFF1352 6000 F132                  		bra.w	sub_5C1FA
FFFF1356                            ; ---------------------------------------------------------------------------
FFFF1356                            
FFFF1356                            loc_5D09C:				; CODE XREF: sub_5D070+1Aj
FFFF1356                            					; sub_5D070+24j
FFFF1356 4EBA F10E                  		jsr	TickMultiplier
FFFF135A 6000 F12A                  		bra.w	sub_5C1FA
FFFF135E                            ; End of function sub_5D070
FFFF135E                            
FFFF135E                            
FFFF135E                            ; =============== S U B	R O U T	I N E =======================================
FFFF135E                            
FFFF135E                            
FFFF135E                            sub_5D0A4:				; CODE XREF: sub_5D070+1Cp
FFFF135E 0405 0081                  		subi.b	#$81,d5
FFFF1362 6500                       		bcs.s	loc_5D0C2
FFFF1364 DA2D 0008                  		add.b	8(a5),d5
FFFF1368 0245 007F                  		andi.w	#$7F,d5
FFFF136C E34D                       		lsl.w	#1,d5
FFFF136E 41F9 0000 0000             		lea	PSGFreqs,a0
FFFF1374 3B70 5000 0010             		move.w	(a0,d5.w),$10(a5)
FFFF137A 6000 F10A                  		bra.w	sub_5C1FA
FFFF137E                            ; ---------------------------------------------------------------------------
FFFF137E                            
FFFF137E                            loc_5D0C2:				; CODE XREF: sub_5D0A4+4j
FFFF137E 08D5 0001                  		bset	#1,(a5)
FFFF1382 3B7C FFFF 0010             		move.w	#$FFFF,$10(a5)
FFFF1388 4EBA F0FC                  		jsr	sub_5C1FA
FFFF138C 6000 0000                  		bra.w	sub_5D1C4
FFFF1390                            ; End of function sub_5D0A4
FFFF1390                            
FFFF1390                            
FFFF1390                            ; =============== S U B	R O U T	I N E =======================================
FFFF1390                            
FFFF1390                            
FFFF1390                            sub_5D0D4:				; CODE XREF: UpdatePSGTrack+Ep
FFFF1390 3C2D 0010                  		move.w	$10(a5),d6
FFFF1394 6A00                       		bpl.s	loc_5D0E6
FFFF1396 08D5 0001                  		bset	#1,(a5)
FFFF139A 4E75                       		rts
FFFF139C                            ; ---------------------------------------------------------------------------
FFFF139C                            
FFFF139C                            loc_5D0E0:				; CODE XREF: UpdatePSGTrack+22j
FFFF139C 4A2D 000A                  		tst.b	$A(a5)
FFFF13A0 6700                       		beq.s	locret_5D11E
FFFF13A2                            
FFFF13A2                            loc_5D0E6:				; CODE XREF: sub_5D0D4+4j
FFFF13A2 0815 0001                  		btst	#1,(a5)
FFFF13A6 6600                       		bne.s	locret_5D11E
FFFF13A8 0815 0002                  		btst	#2,(a5)
FFFF13AC 6600                       		bne.s	locret_5D11E
FFFF13AE 4EBA F1FE                  		jsr	DoModEnv
FFFF13B2 102D 0001                  		move.b	1(a5),d0
FFFF13B6 0C00 00E0                  		cmpi.b	#$E0,d0
FFFF13BA 6600                       		bne.s	loc_5D104
FFFF13BC 103C 00C0                  		move.b	#$C0,d0
FFFF13C0                            
FFFF13C0                            loc_5D104:				; CODE XREF: sub_5D0D4+2Aj
FFFF13C0 3206                       		move.w	d6,d1
FFFF13C2 0201 000F                  		andi.b	#$F,d1
FFFF13C6 8001                       		or.b	d1,d0
FFFF13C8 E84E                       		lsr.w	#4,d6
FFFF13CA 0206 003F                  		andi.b	#$3F,d6
FFFF13CE 13C0 00C0 0011             		move.b	d0,($C00011).l
FFFF13D4 13C6 00C0 0011             		move.b	d6,($C00011).l
FFFF13DA                            
FFFF13DA                            locret_5D11E:				; CODE XREF: sub_5D0D4+10j
FFFF13DA                            					; sub_5D0D4+16j ...
FFFF13DA 4E75                       		rts
FFFF13DC                            ; End of function sub_5D0D4
FFFF13DC                            
FFFF13DC                            
FFFF13DC                            ; =============== S U B	R O U T	I N E =======================================
FFFF13DC                            
FFFF13DC                            
FFFF13DC                            DoVolEnv:				; CODE XREF: UpdatePSGTrack+1Ap
FFFF13DC                            
FFFF13DC                            ; FUNCTION CHUNK AT 0005D1A2 SIZE 00000022 BYTES
FFFF13DC                            
FFFF13DC 4A2D 000B                  		tst.b	$B(a5)
FFFF13E0 6700 0000                  		beq.w	locret_5D192
FFFF13E4                            
FFFF13E4                            loc_5D128:				; CODE XREF: UpdatePSGTrack+12j
FFFF13E4 1C2D 0009                  		move.b	9(a5),d6
FFFF13E8 7000                       		moveq	#0,d0
FFFF13EA 102D 000B                  		move.b	$B(a5),d0
FFFF13EE 6700                       		beq.s	sub_5D172
FFFF13F0 41F9 0000 0000             		lea	VolEnvPtrs,a0
FFFF13F6 5340                       		subq.w	#1,d0
FFFF13F8 E548                       		lsl.w	#2,d0
FFFF13FA 2070 0000                  		movea.l	(a0,d0.w),a0
FFFF13FE                            
FFFF13FE                            loc_5D140:				; CODE XREF: DoVolEnv+9Aj DoVolEnv+A0j
FFFF13FE 7000                       		moveq	#0,d0
FFFF1400 102D 000C                  		move.b	$C(a5),d0
FFFF1404 522D 000C                  		addq.b	#1,$C(a5)
FFFF1408 1030 0000                  		move.b	(a0,d0.w),d0
FFFF140C 6A00                       		bpl.s	loc_5D168
FFFF140E 0C00 0083                  		cmpi.b	#$83,d0
FFFF1412 6700                       		beq.s	loc_5D1A2
FFFF1414 0C00 0081                  		cmpi.b	#$81,d0
FFFF1418 6700                       		beq.s	loc_5D1AE
FFFF141A 0C00 0082                  		cmpi.b	#$82,d0
FFFF141E 6700                       		beq.s	loc_5D1B4
FFFF1420 0C00 0080                  		cmpi.b	#$80,d0
FFFF1424 6700                       		beq.s	loc_5D1BC
FFFF1426                            
FFFF1426                            loc_5D168:				; CODE XREF: DoVolEnv+2Ej
FFFF1426 DC40                       		add.w	d0,d6
FFFF1428 0C06 0010                  		cmpi.b	#$10,d6
FFFF142C 6500                       		bcs.s	sub_5D172
FFFF142E 7C0F                       		moveq	#$F,d6
FFFF1430                            ; End of function DoVolEnv
FFFF1430                            
FFFF1430                            
FFFF1430                            ; =============== S U B	R O U T	I N E =======================================
FFFF1430                            
FFFF1430                            
FFFF1430                            sub_5D172:				; CODE XREF: DoFadeOut+60p
FFFF1430                            					; sub_5CEF6+E8p ...
FFFF1430 0815 0001                  		btst	#1,(a5)
FFFF1434 6600                       		bne.s	locret_5D192
FFFF1436 0815 0002                  		btst	#2,(a5)
FFFF143A 6600                       		bne.s	locret_5D192
FFFF143C 0815 0004                  		btst	#4,(a5)
FFFF1440 6600                       		bne.s	loc_5D194
FFFF1442                            
FFFF1442                            loc_5D184:				; CODE XREF: sub_5D172+26j
FFFF1442                            					; sub_5D172+2Cj
FFFF1442 8C2D 0001                  		or.b	1(a5),d6
FFFF1446 0606 0010                  		addi.b	#$10,d6
FFFF144A 13C6 00C0 0011             		move.b	d6,($C00011).l
FFFF1450                            
FFFF1450                            locret_5D192:				; CODE XREF: DoVolEnv+4j sub_5D172+4j	...
FFFF1450 4E75                       		rts
FFFF1452                            ; ---------------------------------------------------------------------------
FFFF1452                            
FFFF1452                            loc_5D194:				; CODE XREF: sub_5D172+10j
FFFF1452 4A2D 0013                  		tst.b	$13(a5)
FFFF1456 67EA                       		beq.s	loc_5D184
FFFF1458 4A2D 0012                  		tst.b	$12(a5)
FFFF145C 66E4                       		bne.s	loc_5D184
FFFF145E 4E75                       		rts
FFFF1460                            ; End of function sub_5D172
FFFF1460                            
FFFF1460                            ; ---------------------------------------------------------------------------
FFFF1460                            ; START	OF FUNCTION CHUNK FOR DoVolEnv
FFFF1460                            
FFFF1460                            loc_5D1A2:				; CODE XREF: DoVolEnv+34j
FFFF1460 552D 000C                  		subq.b	#2,$C(a5)
FFFF1464 08D5 0001                  		bset	#1,(a5)
FFFF1468 6000 0000                  		bra.w	sub_5D1C4
FFFF146C                            ; ---------------------------------------------------------------------------
FFFF146C                            
FFFF146C                            loc_5D1AE:				; CODE XREF: DoVolEnv+3Aj
FFFF146C 552D 000C                  		subq.b	#2,$C(a5)
FFFF1470 4E75                       		rts
FFFF1472                            ; ---------------------------------------------------------------------------
FFFF1472                            
FFFF1472                            loc_5D1B4:				; CODE XREF: DoVolEnv+40j
FFFF1472 1B70 0001 000C             		move.b	1(a0,d0.w),$C(a5)
FFFF1478 6084                       		bra.s	loc_5D140
FFFF147A                            ; ---------------------------------------------------------------------------
FFFF147A                            
FFFF147A                            loc_5D1BC:				; CODE XREF: DoVolEnv+46j
FFFF147A 422D 000C                  		clr.b	$C(a5)
FFFF147E 6000 FF7E                  		bra.w	loc_5D140
FFFF1482                            ; END OF FUNCTION CHUNK	FOR DoVolEnv
FFFF1482                            
FFFF1482                            ; =============== S U B	R O U T	I N E =======================================
FFFF1482                            
FFFF1482                            
FFFF1482                            sub_5D1C4:				; CODE XREF: sub_5C242:loc_5C262p
FFFF1482                            					; DoModEnv:loc_5C39Cj ...
FFFF1482 0815 0002                  		btst	#2,(a5)
FFFF1486 6600                       		bne.s	locret_5D1D8
FFFF1488                            ; End of function sub_5D1C4
FFFF1488                            
FFFF1488                            
FFFF1488                            ; =============== S U B	R O U T	I N E =======================================
FFFF1488                            
FFFF1488                            
FFFF1488                            sub_5D1CA:				; CODE XREF: StopSpcSFX+44p
FFFF1488 102D 0001                  		move.b	1(a5),d0
FFFF148C 0000 001F                  		ori.b	#$1F,d0
FFFF1490 13C0 00C0 0011             		move.b	d0,($C00011).l
FFFF1496                            
FFFF1496                            locret_5D1D8:				; CODE XREF: sub_5D1C4+4j
FFFF1496 4E75                       		rts
FFFF1498                            ; End of function sub_5D1CA
FFFF1498                            
FFFF1498                            ; ---------------------------------------------------------------------------
FFFF1498                            ; START	OF FUNCTION CHUNK FOR UpdateSound
FFFF1498                            
FFFF1498                            loc_5D1DA:				; CODE XREF: UpdateSound+78Aj
FFFF1498                            					; PlaySoundID+740j
FFFF1498 41F9 00C0 0011             		lea	($C00011).l,a0
FFFF149E 10BC 009F                  		move.b	#$9F,(a0)
FFFF14A2 10BC 00BF                  		move.b	#$BF,(a0)
FFFF14A6 10BC 00DF                  		move.b	#$DF,(a0)
FFFF14AA 10BC 00FF                  		move.b	#$FF,(a0)
FFFF14AE 4E75                       		rts
FFFF14B0                            ; END OF FUNCTION CHUNK	FOR UpdateSound
FFFF14B0                            ; ---------------------------------------------------------------------------
FFFF14B0 0356 0326 02F9 02CE 02A5+  PSGFreqs:	dc.w  $356, $326, $2F9,	$2CE, $2A5, $280, $25C,	$23A, $21A, $1FB, $1DF,	$1C4
FFFF14C8                            					; DATA XREF: sub_5D0A4+10o
FFFF14C8 01AB 0193 017D 0167 0153+  		dc.w  $1AB, $193, $17D,	$167, $153, $140, $12E,	$11D, $10D,  $FE,  $EF,	 $E2
FFFF14E0 00D6 00C9 00BE 00B4 00A9+  		dc.w   $D6,  $C9,  $BE,	 $B4,  $A9,  $A0,  $97,	 $8F,  $87,  $7F,  $78,	 $71
FFFF14F8 006B 0065 005F 005A 0055+  		dc.w   $6B,  $65,  $5F,	 $5A,  $55,  $50,  $4B,	 $47,  $43,  $40,  $3C,	 $39
FFFF1510 0036 0033 0030 002D 002B+  		dc.w   $36,  $33,  $30,	 $2D,  $2B,  $28,  $26,	 $24,  $22,  $20,  $1F,	 $1D
FFFF1528 001B 001A 0018 0017 0016+  		dc.w   $1B,  $1A,  $18,	 $17,  $16,  $15,  $13,	 $12,  $11,    0
FFFF153C                            
FFFF153C                            ; =============== S U B	R O U T	I N E =======================================
FFFF153C                            
FFFF153C                            
FFFF153C                            cfHandler:
FFFF153C 0445 00E0                  		subi.w	#$E0,d5
FFFF1540 E54D                       		lsl.w	#2,d5
FFFF1542 4EFB 5000                  		jmp	cfPtrTable(pc,d5.w)
FFFF1546                            ; ---------------------------------------------------------------------------
FFFF1546                            
FFFF1546                            cfPtrTable:
FFFF1546 6000 0000                  		bra.w	cfE0_Pan
FFFF154A                            ; ---------------------------------------------------------------------------
FFFF154A 6000 0000                  		bra.w	cfE1_Detune
FFFF154E                            ; ---------------------------------------------------------------------------
FFFF154E 6000 0000                  		bra.w	cfE2_SetComm
FFFF1552                            ; ---------------------------------------------------------------------------
FFFF1552 6000 0000                  		bra.w	cfE3_SilenceTrk
FFFF1556                            ; ---------------------------------------------------------------------------
FFFF1556 6000 0000                  		bra.w	cfE4_PanAnim
FFFF155A                            ; ---------------------------------------------------------------------------
FFFF155A 6000 0000                  		bra.w	cfE5_ChgPFMVol
FFFF155E                            ; ---------------------------------------------------------------------------
FFFF155E 6000 0000                  		bra.w	cfE6_ChgFMVol
FFFF1562                            ; ---------------------------------------------------------------------------
FFFF1562 6000 0000                  		bra.w	cfE7_Hold
FFFF1566                            ; ---------------------------------------------------------------------------
FFFF1566 6000 0000                  		bra.w	cfE8_NoteStop
FFFF156A                            ; ---------------------------------------------------------------------------
FFFF156A 6000 0000                  		bra.w	cfE9_SetLFO
FFFF156E                            ; ---------------------------------------------------------------------------
FFFF156E 6000 0000                  		bra.w	cfEA_SetTempo
FFFF1572                            ; ---------------------------------------------------------------------------
FFFF1572 6000 0000                  		bra.w	cfEB_PlaySnd
FFFF1576                            ; ---------------------------------------------------------------------------
FFFF1576 6000 0000                  		bra.w	cfEC_ChgPSGVol
FFFF157A                            ; ---------------------------------------------------------------------------
FFFF157A 6000 0000                  		bra.w	cfED_FMChnWrite
FFFF157E                            ; ---------------------------------------------------------------------------
FFFF157E 6000 0000                  		bra.w	cfEE_FM1Write
FFFF1582                            ; ---------------------------------------------------------------------------
FFFF1582 6000 0000                  		bra.w	cfEF_SetFMIns
FFFF1586                            ; ---------------------------------------------------------------------------
FFFF1586 6000 0000                  		bra.w	cfF0_ModSetup
FFFF158A                            ; ---------------------------------------------------------------------------
FFFF158A 6000 0000                  		bra.w	cfF1_ModTypePFM
FFFF158E                            ; ---------------------------------------------------------------------------
FFFF158E 6000 0000                  		bra.w	cfF2_StopTrk
FFFF1592                            ; ---------------------------------------------------------------------------
FFFF1592 6000 0000                  		bra.w	cfF3_PSGNoise
FFFF1596                            ; ---------------------------------------------------------------------------
FFFF1596 6000 0000                  		bra.w	cfF4_ModType
FFFF159A                            ; ---------------------------------------------------------------------------
FFFF159A 6000 0000                  		bra.w	cfF5_SetPSGIns
FFFF159E                            ; ---------------------------------------------------------------------------
FFFF159E 6000 0000                  		bra.w	cfF6_GoTo
FFFF15A2                            ; ---------------------------------------------------------------------------
FFFF15A2 6000 0000                  		bra.w	cfF7_Loop
FFFF15A6                            ; ---------------------------------------------------------------------------
FFFF15A6 6000 0000                  		bra.w	cfF8_GoSub
FFFF15AA                            ; ---------------------------------------------------------------------------
FFFF15AA 6000 0000                  		bra.w	cfF9_Return
FFFF15AE                            ; ---------------------------------------------------------------------------
FFFF15AE 6000 0000                  		bra.w	cfFA_TickMult
FFFF15B2                            ; ---------------------------------------------------------------------------
FFFF15B2 6000 0000                  		bra.w	cfFB_ChgTransp
FFFF15B6                            ; ---------------------------------------------------------------------------
FFFF15B6 6000 0000                  		bra.w	cfFC_ModulatOn
FFFF15BA                            ; ---------------------------------------------------------------------------
FFFF15BA 6000 0000                  		bra.w	cfFD_ModulatOff
FFFF15BE                            ; ---------------------------------------------------------------------------
FFFF15BE 6000 0000                  		bra.w	cfFE_SpcFM3Mode
FFFF15C2                            ; ---------------------------------------------------------------------------
FFFF15C2                            
FFFF15C2                            cfMetaCoordFlag:
FFFF15C2 7000                       		moveq	#0,d0
FFFF15C4 101C                       		move.b	(a4)+,d0
FFFF15C6 E548                       		lsl.w	#2,d0
FFFF15C8 4EFB 0000                  		jmp	cfMetaPtrTable(pc,d0.w)
FFFF15CC                            ; ---------------------------------------------------------------------------
FFFF15CC                            
FFFF15CC                            cfMetaPtrTable:
FFFF15CC 6000 0000                  		bra.w	cf00_SSGEG
FFFF15D0                            ; ---------------------------------------------------------------------------
FFFF15D0 6000 0000                  		bra.w	cf01_MusPause
FFFF15D4                            ; ---------------------------------------------------------------------------
FFFF15D4 6000 0000                  		bra.w	cf02_TickMulAll
FFFF15D8                            ; ---------------------------------------------------------------------------
FFFF15D8 6000 0000                  		bra.w	cf03_FadeIn_On
FFFF15DC                            ; ---------------------------------------------------------------------------
FFFF15DC 6000 0000                  		bra.w	cf04_FadeIn_Off
FFFF15E0                            ; ---------------------------------------------------------------------------
FFFF15E0                            
FFFF15E0                            cfE0_Pan:				; CODE XREF: cfHandler:cfPtrTablej
FFFF15E0 121C                       		move.b	(a4)+,d1
FFFF15E2 4A2D 0001                  		tst.b	1(a5)
FFFF15E6 6B00                       		bmi.s	locret_5D33C
FFFF15E8 102D 0027                  		move.b	$27(a5),d0
FFFF15EC 0200 0037                  		andi.b	#$37,d0
FFFF15F0 8200                       		or.b	d0,d1
FFFF15F2 1B41 0027                  		move.b	d1,$27(a5)
FFFF15F6 4EFA F154                  		jmp	SendPan
FFFF15FA                            ; ---------------------------------------------------------------------------
FFFF15FA                            
FFFF15FA                            locret_5D33C:				; CODE XREF: cfHandler+AAj
FFFF15FA 4E75                       		rts
FFFF15FC                            ; ---------------------------------------------------------------------------
FFFF15FC                            
FFFF15FC                            cfE1_Detune:				; CODE XREF: cfHandler+Ej
FFFF15FC 1B5C 001E                  		move.b	(a4)+,$1E(a5)
FFFF1600 4E75                       		rts
FFFF1602                            ; ---------------------------------------------------------------------------
FFFF1602                            
FFFF1602                            cfE2_SetComm:				; CODE XREF: cfHandler+12j
FFFF1602 11DC 8003                  		move.b	(a4)+,(Drv68Kmem+$03).w
FFFF1606 4E75                       		rts
FFFF1608                            ; ---------------------------------------------------------------------------
FFFF1608                            
FFFF1608                            cfE3_SilenceTrk:			; CODE XREF: cfHandler+16j
FFFF1608 4EBA F9C6                  		jsr	SilenceFMChn
FFFF160C 6000 0000                  		bra.w	cfF2_StopTrk
FFFF1610                            ; ---------------------------------------------------------------------------
FFFF1610                            
FFFF1610                            cfE4_PanAnim:				; CODE XREF: cfHandler+1Aj
FFFF1610 1B5C 001F                  		move.b	(a4)+,$1F(a5)
FFFF1614 6700                       		beq.s	loc_5D36E
FFFF1616 1B5C 0020                  		move.b	(a4)+,$20(a5)
FFFF161A 1B5C 0021                  		move.b	(a4)+,$21(a5)
FFFF161E 1B5C 0022                  		move.b	(a4)+,$22(a5)
FFFF1622 1B54 0023                  		move.b	(a4),$23(a5)
FFFF1626 1B5C 0024                  		move.b	(a4)+,$24(a5)
FFFF162A 4E75                       		rts
FFFF162C                            ; ---------------------------------------------------------------------------
FFFF162C                            
FFFF162C                            loc_5D36E:				; CODE XREF: cfHandler+D8j
FFFF162C 122D 0027                  		move.b	$27(a5),d1
FFFF1630 4EFA F11A                  		jmp	SendPan
FFFF1634                            ; ---------------------------------------------------------------------------
FFFF1634                            
FFFF1634                            cfE5_ChgPFMVol:				; CODE XREF: cfHandler+1Ej
FFFF1634 101C                       		move.b	(a4)+,d0
FFFF1636 4A2D 0001                  		tst.b	1(a5)
FFFF163A 6A00                       		bpl.s	cfE6_ChgFMVol
FFFF163C D12D 0009                  		add.b	d0,9(a5)
FFFF1640 524C                       		addq.w	#1,a4
FFFF1642 4E75                       		rts
FFFF1644                            ; ---------------------------------------------------------------------------
FFFF1644                            
FFFF1644                            cfE6_ChgFMVol:				; CODE XREF: cfHandler+22j
FFFF1644                            					; cfHandler+FEj
FFFF1644 101C                       		move.b	(a4)+,d0
FFFF1646 D12D 0009                  		add.b	d0,9(a5)
FFFF164A 6000 0000                  		bra.w	RefreshVolume
FFFF164E                            ; ---------------------------------------------------------------------------
FFFF164E                            
FFFF164E                            cfE7_Hold:				; CODE XREF: cfHandler+26j
FFFF164E 08D5 0004                  		bset	#4,(a5)
FFFF1652 4E75                       		rts
FFFF1654                            ; ---------------------------------------------------------------------------
FFFF1654                            
FFFF1654                            cfE8_NoteStop:				; CODE XREF: cfHandler+2Aj
FFFF1654 1B54 0012                  		move.b	(a4),$12(a5)
FFFF1658 1B5C 0013                  		move.b	(a4)+,$13(a5)
FFFF165C 4E75                       		rts
FFFF165E                            ; ---------------------------------------------------------------------------
FFFF165E                            
FFFF165E                            cfE9_SetLFO:				; CODE XREF: cfHandler+2Ej
FFFF165E 2278 8020                  		movea.l	(Drv68Kmem+$20).w,a1
FFFF1662 6700                       		beq.s	loc_5D3AA
FFFF1664 226D 0020                  		movea.l	$20(a5),a1
FFFF1668                            
FFFF1668                            loc_5D3AA:				; CODE XREF: cfHandler+126j
FFFF1668 1614                       		move.b	(a4),d3
FFFF166A D0FC 0009                  		adda.w	#9,a0
FFFF166E 45F9 0000 0000             		lea	AMSEn_Ops,a2
FFFF1674 7C03                       		moveq	#3,d6
FFFF1676                            
FFFF1676                            loc_5D3B6:				; CODE XREF: cfHandler+14Cj
FFFF1676 1219                       		move.b	(a1)+,d1
FFFF1678 101A                       		move.b	(a2)+,d0
FFFF167A 0803 0007                  		btst	#7,d3
FFFF167E 6700                       		beq.s	loc_5D3C8
FFFF1680 08C1 0007                  		bset	#7,d1
FFFF1684 4EBA FA50                  		jsr	WriteFMMain_Z
FFFF1688                            
FFFF1688                            loc_5D3C8:				; CODE XREF: cfHandler+140j
FFFF1688 E34B                       		lsl.w	#1,d3
FFFF168A 51CE FFEA                  		dbf	d6,loc_5D3B6
FFFF168E 121C                       		move.b	(a4)+,d1
FFFF1690 7022                       		moveq	#$22,d0
FFFF1692 4EBA FA5E                  		jsr	WriteFMI_Z
FFFF1696 121C                       		move.b	(a4)+,d1
FFFF1698 102D 0027                  		move.b	$27(a5),d0
FFFF169C 0200 00C0                  		andi.b	#$C0,d0
FFFF16A0 8200                       		or.b	d0,d1
FFFF16A2 1B41 0027                  		move.b	d1,$27(a5)
FFFF16A6 4EFA F0A4                  		jmp	SendPan
FFFF16AA                            ; End of function cfHandler
FFFF16AA                            
FFFF16AA                            ; ---------------------------------------------------------------------------
FFFF16AA 6068 646C                  AMSEn_Ops:	dc.b $60, $68, $64, $6C	; DATA XREF: cfHandler+132o
FFFF16AE                            ; ---------------------------------------------------------------------------
FFFF16AE                            ; START	OF FUNCTION CHUNK FOR cfHandler
FFFF16AE                            
FFFF16AE                            cfEA_SetTempo:				; CODE XREF: cfHandler+32j
FFFF16AE 11D4 8002                  		move.b	(a4),(Drv68Kmem+$02).w
FFFF16B2 11DC 8001                  		move.b	(a4)+,(Drv68Kmem+$01).w
FFFF16B6 4E75                       		rts
FFFF16B8                            ; ---------------------------------------------------------------------------
FFFF16B8                            
FFFF16B8                            cfEB_PlaySnd:				; CODE XREF: cfHandler+36j
FFFF16B8 11DC 800A                  		move.b	(a4)+,(Drv68Kmem+$0A).w
FFFF16BC 4E75                       		rts
FFFF16BE                            ; ---------------------------------------------------------------------------
FFFF16BE                            
FFFF16BE                            cfEC_ChgPSGVol:				; CODE XREF: cfHandler+3Aj
FFFF16BE 101C                       		move.b	(a4)+,d0
FFFF16C0 D12D 0009                  		add.b	d0,9(a5)
FFFF16C4 4E75                       		rts
FFFF16C6                            ; ---------------------------------------------------------------------------
FFFF16C6                            
FFFF16C6                            cfED_FMChnWrite:			; CODE XREF: cfHandler+3Ej
FFFF16C6 101C                       		move.b	(a4)+,d0
FFFF16C8 121C                       		move.b	(a4)+,d1
FFFF16CA 6000 FA0A                  		bra.w	WriteFMMain_Z
FFFF16CE                            ; ---------------------------------------------------------------------------
FFFF16CE                            
FFFF16CE                            cfEE_FM1Write:				; CODE XREF: cfHandler+42j
FFFF16CE 101C                       		move.b	(a4)+,d0
FFFF16D0 121C                       		move.b	(a4)+,d1
FFFF16D2 6000 FA1E                  		bra.w	WriteFMI_Z
FFFF16D6                            ; ---------------------------------------------------------------------------
FFFF16D6                            
FFFF16D6                            cfEF_SetFMIns:				; CODE XREF: cfHandler+46j
FFFF16D6 7000                       		moveq	#0,d0
FFFF16D8 101C                       		move.b	(a4)+,d0
FFFF16DA 1B40 000B                  		move.b	d0,$B(a5)
FFFF16DE 0815 0002                  		btst	#2,(a5)
FFFF16E2 6600 0000                  		bne.w	locret_5D4CA
FFFF16E6 2278 8020                  		movea.l	(Drv68Kmem+$20).w,a1
FFFF16EA 4A38 800E                  		tst.b	(Drv68Kmem+$0E).w
FFFF16EE 6700                       		beq.s	SendFMIns
FFFF16F0 226D 0020                  		movea.l	$20(a5),a1
FFFF16F4 6B00                       		bmi.s	SendFMIns
FFFF16F6 2278 8024                  		movea.l	(Drv68Kmem+$24).w,a1
FFFF16FA                            ; END OF FUNCTION CHUNK	FOR cfHandler
FFFF16FA                            
FFFF16FA                            ; =============== S U B	R O U T	I N E =======================================
FFFF16FA                            
FFFF16FA                            
FFFF16FA                            SendFMIns:				; CODE XREF: StopSFX+5Cp
FFFF16FA                            					; StopSpcSFX+2Ep ...
FFFF16FA 5340                       		subq.w	#1,d0
FFFF16FC 6B00                       		bmi.s	loc_5D448
FFFF16FE 323C 0019                  		move.w	#$19,d1
FFFF1702                            
FFFF1702                            loc_5D442:				; CODE XREF: SendFMIns+Aj
FFFF1702 D2C1                       		adda.w	d1,a1
FFFF1704 51C8 FFFC                  		dbf	d0,loc_5D442
FFFF1708                            
FFFF1708                            loc_5D448:				; CODE XREF: SendFMIns+2j
FFFF1708 4EBA FA4E                  		jsr	drv_stopz80
FFFF170C 1219                       		move.b	(a1)+,d1
FFFF170E 1B41 0025                  		move.b	d1,$25(a5)
FFFF1712 1801                       		move.b	d1,d4
FFFF1714 103C 00B0                  		move.b	#$B0,d0
FFFF1718 4EBA F9EE                  		jsr	WriteFMMain
FFFF171C 45F9 0000 0000             		lea	FMInsOperators,a2
FFFF1722 7613                       		moveq	#$13,d3
FFFF1724                            
FFFF1724                            loc_5D462:				; CODE XREF: SendFMIns+30j
FFFF1724 101A                       		move.b	(a2)+,d0
FFFF1726 1219                       		move.b	(a1)+,d1
FFFF1728 4EBA F9DE                  		jsr	WriteFMMain
FFFF172C 51CB FFF6                  		dbf	d3,loc_5D462
FFFF1730 7A03                       		moveq	#3,d5
FFFF1732 0244 0007                  		andi.w	#7,d4
FFFF1736 183B 4000                  		move.b	FMAlgoMask(pc,d4.w),d4
FFFF173A 162D 0009                  		move.b	9(a5),d3
FFFF173E                            
FFFF173E                            loc_5D47C:				; CODE XREF: SendFMIns+50j
FFFF173E 101A                       		move.b	(a2)+,d0
FFFF1740 1219                       		move.b	(a1)+,d1
FFFF1742 E20C                       		lsr.b	#1,d4
FFFF1744 6400                       		bcc.s	loc_5D486
FFFF1746 D203                       		add.b	d3,d1
FFFF1748                            
FFFF1748                            loc_5D486:				; CODE XREF: SendFMIns+48j
FFFF1748 4EBA F9BE                  		jsr	WriteFMMain
FFFF174C 51CD FFF0                  		dbf	d5,loc_5D47C
FFFF1750 0C2D 0006 0001             		cmpi.b	#6,1(a5)
FFFF1756 6600 0000                  		bne.w	loc_5D4B6
FFFF175A BBFC 0000 0040             		cmpa.l	#$40,a5
FFFF1760 6700 0000                  		beq.w	loc_5D4C2
FFFF1764 4A39 00A0 1FFD             		tst.b	($A01FFD).l
FFFF176A 6700 0000                  		beq.w	loc_5D4B6
FFFF176E 13ED 0027 00A0 1FF8        		move.b	$27(a5),($A01FF8).l
FFFF1776 6000                       		bra.s	loc_5D4C2
FFFF1778                            ; ---------------------------------------------------------------------------
FFFF1778                            
FFFF1778                            loc_5D4B6:				; CODE XREF: SendFMIns+5Aj
FFFF1778                            					; SendFMIns+6Ej
FFFF1778 122D 0027                  		move.b	$27(a5),d1
FFFF177C 103C 00B4                  		move.b	#$B4,d0
FFFF1780 4EBA F986                  		jsr	WriteFMMain
FFFF1784                            
FFFF1784                            loc_5D4C2:				; CODE XREF: SendFMIns+64j
FFFF1784                            					; SendFMIns+7Aj
FFFF1784 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF178C                            
FFFF178C                            locret_5D4CA:				; CODE XREF: cfHandler+1A4j
FFFF178C 4E75                       		rts
FFFF178E                            ; End of function SendFMIns
FFFF178E                            
FFFF178E                            ; ---------------------------------------------------------------------------
FFFF178E 0808 0808 0A0E 0E0F        FMAlgoMask:	dc.b 8,	8, 8, 8, $A, $E, $E, $F	; DATA XREF: SendFMIns+3Ar
FFFF1796                            					; RefreshVolume+42r
FFFF1796                            
FFFF1796                            ; =============== S U B	R O U T	I N E =======================================
FFFF1796                            
FFFF1796                            
FFFF1796                            RefreshVolume:				; CODE XREF: DoFadeOut:loc_5CC86p
FFFF1796                            					; sub_5CEF6+C2p ...
FFFF1796 0815 0002                  		btst	#2,(a5)
FFFF179A 6600                       		bne.s	locret_5D542
FFFF179C 7000                       		moveq	#0,d0
FFFF179E 102D 000B                  		move.b	$B(a5),d0
FFFF17A2 2278 8020                  		movea.l	(Drv68Kmem+$20).w,a1
FFFF17A6 4A38 800E                  		tst.b	(Drv68Kmem+$0E).w
FFFF17AA 6700                       		beq.s	loc_5D4F8
FFFF17AC 226D 0020                  		movea.l	$20(a5),a1
FFFF17B0 4A38 800E                  		tst.b	(Drv68Kmem+$0E).w
FFFF17B4 6B00                       		bmi.s	loc_5D4F8
FFFF17B6 2278 8024                  		movea.l	(Drv68Kmem+$24).w,a1
FFFF17BA                            
FFFF17BA                            loc_5D4F8:				; CODE XREF: RefreshVolume+14j
FFFF17BA                            					; RefreshVolume+1Ej
FFFF17BA 5340                       		subq.w	#1,d0
FFFF17BC 6B00                       		bmi.s	loc_5D506
FFFF17BE 323C 0019                  		move.w	#$19,d1
FFFF17C2                            
FFFF17C2                            loc_5D500:				; CODE XREF: RefreshVolume+2Ej
FFFF17C2 D2C1                       		adda.w	d1,a1
FFFF17C4 51C8 FFFC                  		dbf	d0,loc_5D500
FFFF17C8                            
FFFF17C8                            loc_5D506:				; CODE XREF: RefreshVolume+26j
FFFF17C8 D2FC 0015                  		adda.w	#$15,a1
FFFF17CC 45F9 0000 0000             		lea	Volume_Ops,a2
FFFF17D2 102D 0025                  		move.b	$25(a5),d0
FFFF17D6 0240 0007                  		andi.w	#7,d0
FFFF17DA 183B 00B2                  		move.b	FMAlgoMask(pc,d0.w),d4
FFFF17DE 162D 0009                  		move.b	9(a5),d3
FFFF17E2 6B00                       		bmi.s	locret_5D542
FFFF17E4 7A03                       		moveq	#3,d5
FFFF17E6 4EBA F970                  		jsr	drv_stopz80
FFFF17EA                            
FFFF17EA                            loc_5D526:				; CODE XREF: RefreshVolume:loc_5D536j
FFFF17EA 101A                       		move.b	(a2)+,d0
FFFF17EC 1219                       		move.b	(a1)+,d1
FFFF17EE E20C                       		lsr.b	#1,d4
FFFF17F0 6400                       		bcc.s	loc_5D536
FFFF17F2 D203                       		add.b	d3,d1
FFFF17F4 6500                       		bcs.s	loc_5D536
FFFF17F6 4EBA F910                  		jsr	WriteFMMain
FFFF17FA                            
FFFF17FA                            loc_5D536:				; CODE XREF: RefreshVolume+58j
FFFF17FA                            					; RefreshVolume+5Cj
FFFF17FA 51CD FFEE                  		dbf	d5,loc_5D526
FFFF17FE 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1806                            
FFFF1806                            locret_5D542:				; CODE XREF: RefreshVolume+4j
FFFF1806                            					; RefreshVolume+4Aj
FFFF1806 4E75                       		rts
FFFF1808                            ; End of function RefreshVolume
FFFF1808                            
FFFF1808                            ; ---------------------------------------------------------------------------
FFFF1808 3038 343C                  FMInsOperators:	dc.b  $30, $38,	$34, $3C ; DATA	XREF: SendFMIns+22o
FFFF180C 5058 545C                  		dc.b  $50, $58,	$54, $5C
FFFF1810 6068 646C                  		dc.b  $60, $68,	$64, $6C
FFFF1814 7078 747C                  		dc.b  $70, $78,	$74, $7C
FFFF1818 8088 848C                  		dc.b  $80, $88,	$84, $8C
FFFF181C 4048 444C                  Volume_Ops:	dc.b  $40, $48,	$44, $4C ; DATA	XREF: RefreshVolume+36o
FFFF1820                            ; ---------------------------------------------------------------------------
FFFF1820                            ; START	OF FUNCTION CHUNK FOR cfHandler
FFFF1820                            
FFFF1820                            cfF0_ModSetup:				; CODE XREF: cfHandler+4Aj
FFFF1820 08ED 0007 000A             		bset	#7,$A(a5)
FFFF1826 2B4C 0014                  		move.l	a4,$14(a5)
FFFF182A 1B5C 0018                  		move.b	(a4)+,$18(a5)
FFFF182E 1B5C 0019                  		move.b	(a4)+,$19(a5)
FFFF1832 1B5C 001A                  		move.b	(a4)+,$1A(a5)
FFFF1836 101C                       		move.b	(a4)+,d0
FFFF1838 E208                       		lsr.b	#1,d0
FFFF183A 1B40 001B                  		move.b	d0,$1B(a5)
FFFF183E 426D 001C                  		clr.w	$1C(a5)
FFFF1842 4E75                       		rts
FFFF1844                            ; ---------------------------------------------------------------------------
FFFF1844                            
FFFF1844                            cfF1_ModTypePFM:			; CODE XREF: cfHandler+4Ej
FFFF1844 101C                       		move.b	(a4)+,d0
FFFF1846 4A2D 0001                  		tst.b	1(a5)
FFFF184A 6A00 0000                  		bpl.w	cfF4_ModType
FFFF184E 1B40 000A                  		move.b	d0,$A(a5)
FFFF1852 101C                       		move.b	(a4)+,d0
FFFF1854 4E75                       		rts
FFFF1856                            ; ---------------------------------------------------------------------------
FFFF1856                            
FFFF1856                            cfF2_StopTrk:				; CODE XREF: cfHandler+52j
FFFF1856                            					; cfHandler+D0j
FFFF1856 0895 0007                  		bclr	#7,(a5)
FFFF185A 0895 0004                  		bclr	#4,(a5)
FFFF185E 4A2D 0001                  		tst.b	1(a5)
FFFF1862 6B00                       		bmi.s	loc_5D5AE
FFFF1864 4A38 8008                  		tst.b	(Drv68Kmem+$08).w
FFFF1868 6B00 0000                  		bmi.w	loc_5D652
FFFF186C 4EBA F850                  		jsr	sub_5CE1E
FFFF1870 6000                       		bra.s	loc_5D5B2
FFFF1872                            ; ---------------------------------------------------------------------------
FFFF1872                            
FFFF1872                            loc_5D5AE:				; CODE XREF: cfHandler+320j
FFFF1872 4EBA FC0E                  		jsr	sub_5D1C4
FFFF1876                            
FFFF1876                            loc_5D5B2:				; CODE XREF: cfHandler+32Ej
FFFF1876 4A38 800E                  		tst.b	(Drv68Kmem+$0E).w
FFFF187A 6A00 0000                  		bpl.w	loc_5D652
FFFF187E 4238 8000                  		clr.b	(Drv68Kmem+$00).w
FFFF1882 7000                       		moveq	#0,d0
FFFF1884 102D 0001                  		move.b	1(a5),d0
FFFF1888 6B00                       		bmi.s	loc_5D61C
FFFF188A 41FA F46A                  		lea	BGMChnPtrs,a0
FFFF188E 264D                       		movea.l	a5,a3
FFFF1890 0C00 0004                  		cmpi.b	#4,d0
FFFF1894 6600                       		bne.s	loc_5D5E2
FFFF1896 4A38 8340                  		tst.b	(Drv68Kmem+$340).w
FFFF189A 6A00                       		bpl.s	loc_5D5E2
FFFF189C 4BF8 8340                  		lea	(Drv68Kmem+$340).w,a5
FFFF18A0 2278 8024                  		movea.l	(Drv68Kmem+$24).w,a1
FFFF18A4 6000                       		bra.s	loc_5D5F2
FFFF18A6                            ; ---------------------------------------------------------------------------
FFFF18A6                            
FFFF18A6                            loc_5D5E2:				; CODE XREF: cfHandler+352j
FFFF18A6                            					; cfHandler+358j
FFFF18A6 5500                       		subq.b	#2,d0
FFFF18A8 E508                       		lsl.b	#2,d0
FFFF18AA 2A70 0000                  		movea.l	(a0,d0.w),a5
FFFF18AE 4A15                       		tst.b	(a5)
FFFF18B0 6A00                       		bpl.s	loc_5D602
FFFF18B2 2278 8020                  		movea.l	(Drv68Kmem+$20).w,a1
FFFF18B6                            
FFFF18B6                            loc_5D5F2:				; CODE XREF: cfHandler+362j
FFFF18B6 0895 0002                  		bclr	#2,(a5)
FFFF18BA 08D5 0001                  		bset	#1,(a5)
FFFF18BE 102D 000B                  		move.b	$B(a5),d0
FFFF18C2 4EBA FE36                  		jsr	SendFMIns
FFFF18C6                            
FFFF18C6                            loc_5D602:				; CODE XREF: cfHandler+36Ej
FFFF18C6 2A4B                       		movea.l	a3,a5
FFFF18C8 0C2D 0002 0001             		cmpi.b	#2,1(a5)
FFFF18CE 6600                       		bne.s	loc_5D652
FFFF18D0 4A38 800F                  		tst.b	(Drv68Kmem+$0F).w
FFFF18D4 6600                       		bne.s	loc_5D652
FFFF18D6 7200                       		moveq	#0,d1
FFFF18D8 7027                       		moveq	#$27,d0	; '''
FFFF18DA 4EBA F816                  		jsr	WriteFMI_Z
FFFF18DE 6000                       		bra.s	loc_5D652
FFFF18E0                            ; ---------------------------------------------------------------------------
FFFF18E0                            
FFFF18E0                            loc_5D61C:				; CODE XREF: cfHandler+346j
FFFF18E0 41F8 8370                  		lea	(Drv68Kmem+$370).w,a0
FFFF18E4 4A10                       		tst.b	(a0)
FFFF18E6 6A00                       		bpl.s	loc_5D630
FFFF18E8 0C00 00E0                  		cmpi.b	#$E0,d0
FFFF18EC 6700                       		beq.s	loc_5D63A
FFFF18EE 0C00 00C0                  		cmpi.b	#$C0,d0
FFFF18F2 6700                       		beq.s	loc_5D63A
FFFF18F4                            
FFFF18F4                            loc_5D630:				; CODE XREF: cfHandler+3A4j
FFFF18F4 41FA F400                  		lea	BGMChnPtrs,a0
FFFF18F8 E608                       		lsr.b	#3,d0
FFFF18FA 2070 0000                  		movea.l	(a0,d0.w),a0
FFFF18FE                            
FFFF18FE                            loc_5D63A:				; CODE XREF: cfHandler+3AAj
FFFF18FE                            					; cfHandler+3B0j
FFFF18FE 0890 0002                  		bclr	#2,(a0)
FFFF1902 08D0 0001                  		bset	#1,(a0)
FFFF1906 0C28 00E0 0001             		cmpi.b	#$E0,1(a0)
FFFF190C 6600                       		bne.s	loc_5D652
FFFF190E 13E8 0025 00C0 0011        		move.b	$25(a0),($C00011).l
FFFF1916                            
FFFF1916                            loc_5D652:				; CODE XREF: cfHandler+326j
FFFF1916                            					; cfHandler+338j ...
FFFF1916 504F                       		addq.w	#8,sp
FFFF1918 4E75                       		rts
FFFF191A                            ; ---------------------------------------------------------------------------
FFFF191A                            
FFFF191A                            cfF3_PSGNoise:				; CODE XREF: cfHandler+56j
FFFF191A 1B7C 00E0 0001             		move.b	#$E0,1(a5)
FFFF1920 1B5C 0025                  		move.b	(a4)+,$25(a5)
FFFF1924 0815 0002                  		btst	#2,(a5)
FFFF1928 6600                       		bne.s	locret_5D66E
FFFF192A 13EC FFFF 00C0 0011        		move.b	-1(a4),($C00011).l
FFFF1932                            
FFFF1932                            locret_5D66E:				; CODE XREF: cfHandler+3E6j
FFFF1932 4E75                       		rts
FFFF1934                            ; ---------------------------------------------------------------------------
FFFF1934                            
FFFF1934                            cfF4_ModType:				; CODE XREF: cfHandler+5Aj
FFFF1934                            					; cfHandler+308j
FFFF1934 1B5C 000A                  		move.b	(a4)+,$A(a5)
FFFF1938 4E75                       		rts
FFFF193A                            ; ---------------------------------------------------------------------------
FFFF193A                            
FFFF193A                            cfF5_SetPSGIns:				; CODE XREF: cfHandler+5Ej
FFFF193A 1B5C 000B                  		move.b	(a4)+,$B(a5)
FFFF193E 4E75                       		rts
FFFF1940                            ; ---------------------------------------------------------------------------
FFFF1940                            
FFFF1940                            cfF6_GoTo:				; CODE XREF: cfHandler+62j
FFFF1940                            					; cfHandler+41Ej ...
FFFF1940 101C                       		move.b	(a4)+,d0
FFFF1942 E148                       		lsl.w	#8,d0
FFFF1944 101C                       		move.b	(a4)+,d0
FFFF1946 D8C0                       		adda.w	d0,a4
FFFF1948 534C                       		subq.w	#1,a4
FFFF194A 4E75                       		rts
FFFF194C                            ; ---------------------------------------------------------------------------
FFFF194C                            
FFFF194C                            cfF7_Loop:				; CODE XREF: cfHandler+66j
FFFF194C 7000                       		moveq	#0,d0
FFFF194E 101C                       		move.b	(a4)+,d0
FFFF1950 121C                       		move.b	(a4)+,d1
FFFF1952 4A35 0028                  		tst.b	$28(a5,d0.w)
FFFF1956 6600                       		bne.s	loc_5D698
FFFF1958 1B81 0028                  		move.b	d1,$28(a5,d0.w)
FFFF195C                            
FFFF195C                            loc_5D698:				; CODE XREF: cfHandler+414j
FFFF195C 5335 0028                  		subq.b	#1,$28(a5,d0.w)
FFFF1960 66DE                       		bne.s	cfF6_GoTo
FFFF1962 544C                       		addq.w	#2,a4
FFFF1964 4E75                       		rts
FFFF1966                            ; ---------------------------------------------------------------------------
FFFF1966                            
FFFF1966                            cfF8_GoSub:				; CODE XREF: cfHandler+6Aj
FFFF1966 7000                       		moveq	#0,d0
FFFF1968 102D 000D                  		move.b	$D(a5),d0
FFFF196C 5900                       		subq.b	#4,d0
FFFF196E 2B8C 0000                  		move.l	a4,(a5,d0.w)
FFFF1972 1B40 000D                  		move.b	d0,$D(a5)
FFFF1976 60C8                       		bra.s	cfF6_GoTo
FFFF1978                            ; ---------------------------------------------------------------------------
FFFF1978                            
FFFF1978                            cfF9_Return:				; CODE XREF: cfHandler+6Ej
FFFF1978 7000                       		moveq	#0,d0
FFFF197A 102D 000D                  		move.b	$D(a5),d0
FFFF197E 2875 0000                  		movea.l	(a5,d0.w),a4
FFFF1982 544C                       		addq.w	#2,a4
FFFF1984 5800                       		addq.b	#4,d0
FFFF1986 1B40 000D                  		move.b	d0,$D(a5)
FFFF198A 4E75                       		rts
FFFF198C                            ; ---------------------------------------------------------------------------
FFFF198C                            
FFFF198C                            cfFA_TickMult:				; CODE XREF: cfHandler+72j
FFFF198C 1B5C 0002                  		move.b	(a4)+,2(a5)
FFFF1990 4E75                       		rts
FFFF1992                            ; ---------------------------------------------------------------------------
FFFF1992                            
FFFF1992                            cfFB_ChgTransp:				; CODE XREF: cfHandler+76j
FFFF1992 101C                       		move.b	(a4)+,d0
FFFF1994 D12D 0008                  		add.b	d0,8(a5)
FFFF1998 4E75                       		rts
FFFF199A                            ; ---------------------------------------------------------------------------
FFFF199A                            
FFFF199A                            cfFC_ModulatOn:				; CODE XREF: cfHandler+7Aj
FFFF199A 08ED 0007 000A             		bset	#7,$A(a5)
FFFF19A0 4E75                       		rts
FFFF19A2                            ; ---------------------------------------------------------------------------
FFFF19A2                            
FFFF19A2                            cfFD_ModulatOff:			; CODE XREF: cfHandler+7Ej
FFFF19A2 08AD 0007 000A             		bclr	#7,$A(a5)
FFFF19A8 4E75                       		rts
FFFF19AA                            ; ---------------------------------------------------------------------------
FFFF19AA                            
FFFF19AA                            cfFE_SpcFM3Mode:			; CODE XREF: cfHandler+82j
FFFF19AA 41F8 8018                  		lea	(Drv68Kmem+$18).w,a0
FFFF19AE 4A38 800E                  		tst.b	(Drv68Kmem+$0E).w
FFFF19B2 6600                       		bne.s	loc_5D6FA
FFFF19B4 41F8 8010                  		lea	(Drv68Kmem+$10).w,a0
FFFF19B8 11FC 0080 800F             		move.b	#$80,(Drv68Kmem+$0F).w
FFFF19BE                            
FFFF19BE                            loc_5D6FA:				; CODE XREF: cfHandler+470j
FFFF19BE 7003                       		moveq	#3,d0
FFFF19C0                            
FFFF19C0                            loc_5D6FC:				; CODE XREF: cfHandler+488j
FFFF19C0 7200                       		moveq	#0,d1
FFFF19C2 121C                       		move.b	(a4)+,d1
FFFF19C4 E349                       		lsl.w	#1,d1
FFFF19C6 30FB 1000                  		move.w	FM3_FreqVals(pc,d1.w),(a0)+
FFFF19CA 51C8 FFF4                  		dbf	d0,loc_5D6FC
FFFF19CE 103C 0027                  		move.b	#$27,d0
FFFF19D2 7240                       		moveq	#$40,d1
FFFF19D4 6000 F71C                  		bra.w	WriteFMI_Z
FFFF19D8                            ; END OF FUNCTION CHUNK	FOR cfHandler
FFFF19D8                            ; ---------------------------------------------------------------------------
FFFF19D8 0000 0180 01F4 0260        FM3_FreqVals:	dc.w 0,	$180, $1F4, $260 ; DATA	XREF: cfHandler+484r
FFFF19E0                            ; ---------------------------------------------------------------------------
FFFF19E0                            ; START	OF FUNCTION CHUNK FOR cfHandler
FFFF19E0                            
FFFF19E0                            cf00_SSGEG:				; CODE XREF: cfHandler:cfMetaPtrTablej
FFFF19E0 43F9 0000 0000             		lea	SSGEG_Ops,a1
FFFF19E6 7603                       		moveq	#3,d3
FFFF19E8                            
FFFF19E8                            loc_5D722:				; CODE XREF: cfHandler+4B4j
FFFF19E8 1019                       		move.b	(a1)+,d0
FFFF19EA 121C                       		move.b	(a4)+,d1
FFFF19EC 4EBA F6E8                  		jsr	WriteFMMain_Z
FFFF19F0 1019                       		move.b	(a1)+,d0
FFFF19F2 721F                       		moveq	#$1F,d1
FFFF19F4 4EBA F6E0                  		jsr	WriteFMMain_Z
FFFF19F8 51CB FFEE                  		dbf	d3,loc_5D722
FFFF19FC 4E75                       		rts
FFFF19FE                            ; END OF FUNCTION CHUNK	FOR cfHandler
FFFF19FE                            ; ---------------------------------------------------------------------------
FFFF19FE 9050                       SSGEG_Ops:	dc.b  $90, $50		; DATA XREF: cfHandler:cf00_SSGEGo
FFFF1A00 9858                       		dc.b  $98, $58
FFFF1A02 9454                       		dc.b  $94, $54
FFFF1A04 9C5C                       		dc.b  $9C, $5C
FFFF1A06                            ; ---------------------------------------------------------------------------
FFFF1A06                            ; START	OF FUNCTION CHUNK FOR cfHandler
FFFF1A06                            
FFFF1A06                            cf01_MusPause:				; CODE XREF: cfHandler+94j
FFFF1A06 7630                       		moveq	#$30,d3
FFFF1A08 101C                       		move.b	(a4)+,d0
FFFF1A0A 6700                       		beq.s	loc_5D79C
FFFF1A0C 264D                       		movea.l	a5,a3
FFFF1A0E 4BF8 8040                  		lea	(Drv68Kmem+$40).w,a5
FFFF1A12 0815 0007                  		btst	#7,(a5)
FFFF1A16 6700                       		beq.s	loc_5D75A
FFFF1A18 0895 0007                  		bclr	#7,(a5)
FFFF1A1C 08D5 0000                  		bset	#0,(a5)
FFFF1A20                            
FFFF1A20                            loc_5D75A:				; CODE XREF: cfHandler+4D2j
FFFF1A20 7805                       		moveq	#5,d4
FFFF1A22                            
FFFF1A22                            loc_5D75C:				; CODE XREF: cfHandler:loc_5D77Aj
FFFF1A22 DAC3                       		adda.w	d3,a5
FFFF1A24 0815 0007                  		btst	#7,(a5)
FFFF1A28 6700                       		beq.s	loc_5D77A
FFFF1A2A 0895 0007                  		bclr	#7,(a5)
FFFF1A2E 08D5 0000                  		bset	#0,(a5)
FFFF1A32 103C 00B4                  		move.b	#$B4,d0
FFFF1A36 7200                       		moveq	#0,d1
FFFF1A38 4EBA F69C                  		jsr	WriteFMMain_Z
FFFF1A3C 4EBA F680                  		jsr	sub_5CE1E
FFFF1A40                            
FFFF1A40                            loc_5D77A:				; CODE XREF: cfHandler+4E4j
FFFF1A40 51CC FFE0                  		dbf	d4,loc_5D75C
FFFF1A44 7802                       		moveq	#2,d4
FFFF1A46                            
FFFF1A46                            loc_5D780:				; CODE XREF: cfHandler:loc_5D794j
FFFF1A46 DAC3                       		adda.w	d3,a5
FFFF1A48 0815 0007                  		btst	#7,(a5)
FFFF1A4C 6700                       		beq.s	loc_5D794
FFFF1A4E 0895 0007                  		bclr	#7,(a5)
FFFF1A52 08D5 0000                  		bset	#0,(a5)
FFFF1A56 4EBA FA2A                  		jsr	sub_5D1C4
FFFF1A5A                            
FFFF1A5A                            loc_5D794:				; CODE XREF: cfHandler+508j
FFFF1A5A 51CC FFEA                  		dbf	d4,loc_5D780
FFFF1A5E 2A4B                       		movea.l	a3,a5
FFFF1A60 4E75                       		rts
FFFF1A62                            ; ---------------------------------------------------------------------------
FFFF1A62                            
FFFF1A62                            loc_5D79C:				; CODE XREF: cfHandler+4C6j
FFFF1A62 264D                       		movea.l	a5,a3
FFFF1A64 4BF8 8040                  		lea	(Drv68Kmem+$40).w,a5
FFFF1A68 4EBA F6EE                  		jsr	drv_stopz80
FFFF1A6C 4A39 00A0 1FFD             		tst.b	($A01FFD).l
FFFF1A72 6700 0000                  		beq.w	loc_5D7CA
FFFF1A76 6B00 0000                  		bmi.w	loc_5D7BC
FFFF1A7A 1239 00A0 1FF9             		move.b	($A01FF9).l,d1
FFFF1A80 6000                       		bra.s	loc_5D7C2
FFFF1A82                            ; ---------------------------------------------------------------------------
FFFF1A82                            
FFFF1A82                            loc_5D7BC:				; CODE XREF: cfHandler+532j
FFFF1A82 1239 00A0 1FFA             		move.b	($A01FFA).l,d1
FFFF1A88                            
FFFF1A88                            loc_5D7C2:				; CODE XREF: cfHandler+53Cj
FFFF1A88 103C 00B6                  		move.b	#$B6,d0
FFFF1A8C 4EBA F6AC                  		jsr	sub_5CE92
FFFF1A90                            
FFFF1A90                            loc_5D7CA:				; CODE XREF: cfHandler+52Ej
FFFF1A90 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1A98 0815 0000                  		btst	#0,(a5)
FFFF1A9C 6700                       		beq.s	loc_5D7E0
FFFF1A9E 08D5 0007                  		bset	#7,(a5)
FFFF1AA2 0895 0000                  		bclr	#0,(a5)
FFFF1AA6                            
FFFF1AA6                            loc_5D7E0:				; CODE XREF: cfHandler+558j
FFFF1AA6 7805                       		moveq	#5,d4
FFFF1AA8                            
FFFF1AA8                            loc_5D7E2:				; CODE XREF: cfHandler:loc_5D824j
FFFF1AA8 DAC3                       		adda.w	d3,a5
FFFF1AAA 0815 0000                  		btst	#0,(a5)
FFFF1AAE 6700                       		beq.s	loc_5D824
FFFF1AB0 08D5 0007                  		bset	#7,(a5)
FFFF1AB4 0895 0000                  		bclr	#0,(a5)
FFFF1AB8 0815 0002                  		btst	#2,(a5)
FFFF1ABC 6600                       		bne.s	loc_5D824
FFFF1ABE 122D 0027                  		move.b	$27(a5),d1
FFFF1AC2 103C 00B4                  		move.b	#$B4,d0
FFFF1AC6 4EBA F690                  		jsr	drv_stopz80
FFFF1ACA 0C2D 0006 0001             		cmpi.b	#6,1(a5)
FFFF1AD0 6600 0000                  		bne.w	loc_5D818
FFFF1AD4 4A39 00A0 1FFD             		tst.b	($A01FFD).l
FFFF1ADA 6600 0000                  		bne.w	loc_5D81C
FFFF1ADE                            
FFFF1ADE                            loc_5D818:				; CODE XREF: cfHandler+58Cj
FFFF1ADE 4EBA F628                  		jsr	WriteFMMain
FFFF1AE2                            
FFFF1AE2                            loc_5D81C:				; CODE XREF: cfHandler+596j
FFFF1AE2 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
FFFF1AEA                            
FFFF1AEA                            loc_5D824:				; CODE XREF: cfHandler+56Aj
FFFF1AEA                            					; cfHandler+578j
FFFF1AEA 51CC FFBC                  		dbf	d4,loc_5D7E2
FFFF1AEE 7802                       		moveq	#2,d4
FFFF1AF0                            
FFFF1AF0                            loc_5D82A:				; CODE XREF: cfHandler:loc_5D83Aj
FFFF1AF0 DAC3                       		adda.w	d3,a5
FFFF1AF2 0815 0000                  		btst	#0,(a5)
FFFF1AF6 6700                       		beq.s	loc_5D83A
FFFF1AF8 08D5 0007                  		bset	#7,(a5)
FFFF1AFC 0895 0000                  		bclr	#0,(a5)
FFFF1B00                            
FFFF1B00                            loc_5D83A:				; CODE XREF: cfHandler+5B2j
FFFF1B00 51CC FFEE                  		dbf	d4,loc_5D82A
FFFF1B04 2A4B                       		movea.l	a3,a5
FFFF1B06 4E75                       		rts
FFFF1B08                            ; ---------------------------------------------------------------------------
FFFF1B08                            
FFFF1B08                            cf02_TickMulAll:			; CODE XREF: cfHandler+98j
FFFF1B08 41F8 8040                  		lea	(Drv68Kmem+$40).w,a0
FFFF1B0C 101C                       		move.b	(a4)+,d0
FFFF1B0E 7230                       		moveq	#$30,d1
FFFF1B10 7409                       		moveq	#9,d2
FFFF1B12                            
FFFF1B12                            loc_5D84C:				; CODE XREF: cfHandler+5D4j
FFFF1B12 1140 0002                  		move.b	d0,2(a0)
FFFF1B16 D0C1                       		adda.w	d1,a0
FFFF1B18 51CA FFF8                  		dbf	d2,loc_5D84C
FFFF1B1C 4E75                       		rts
FFFF1B1E                            ; ---------------------------------------------------------------------------
FFFF1B1E                            
FFFF1B1E                            cf03_FadeIn_On:				; CODE XREF: cfHandler+9Cj
FFFF1B1E 4A38 8028                  		tst.b	(Drv68Kmem+$28).w
FFFF1B22 6700 0000                  		beq.w	loc_5D864
FFFF1B26 544C                       		addq.w	#2,a4
FFFF1B28 4E75                       		rts
FFFF1B2A                            ; ---------------------------------------------------------------------------
FFFF1B2A                            
FFFF1B2A                            loc_5D864:				; CODE XREF: cfHandler+5DEj
FFFF1B2A 11FC 0001 8028             		move.b	#1,(Drv68Kmem+$28).w
FFFF1B30 1038 8029                  		move.b	(Drv68Kmem+$29).w,d0
FFFF1B34 8038 802A                  		or.b	(Drv68Kmem+$2A).w,d0
FFFF1B38 6600 0000                  		bne.w	locret_5D87E
FFFF1B3C 11DC 8029                  		move.b	(a4)+,(Drv68Kmem+$29).w
FFFF1B40 11DC 802A                  		move.b	(a4)+,(Drv68Kmem+$2A).w
FFFF1B44                            
FFFF1B44                            locret_5D87E:				; CODE XREF: cfHandler+5F4j
FFFF1B44 4E75                       		rts
FFFF1B46                            ; ---------------------------------------------------------------------------
FFFF1B46                            
FFFF1B46                            cf04_FadeIn_Off:			; CODE XREF: cfHandler+A0j
FFFF1B46 0C38 0002 8028             		cmpi.b	#2,(Drv68Kmem+$28).w
FFFF1B4C 6600 0000                  		bne.w	locret_5D890
FFFF1B50 11FC 0080 8028             		move.b	#$80,(Drv68Kmem+$28).w
FFFF1B56                            
FFFF1B56                            locret_5D890:				; CODE XREF: cfHandler+608j
FFFF1B56 4E75                       		rts
FFFF1B58                            ; END OF FUNCTION CHUNK	FOR cfHandler
FFFF1B58                            ; ---------------------------------------------------------------------------
FFFF1B58                            SFXPtrs:
FFFF1B58                            SpcSFXPtrs:
FFFF1B58                            SFXPtrs2:
FFFF1B58 0000 0000                  GeneralPtrList:	dc.l SndPriorities
FFFF1B5C FFFF 1B58                  		dc.l SpcSFXPtrs
FFFF1B60 0000 0000                  		dc.l MusPtrs
FFFF1B64 FFFF 1B58                  		dc.l SFXPtrs
FFFF1B68 0000 0000                  		dc.l ModEnvPtrs
FFFF1B6C 0000 0000                  		dc.l VolEnvPtrs
FFFF1B70 0000 00AB                  		dc.l $AB
FFFF1B74 FFFF 0000                  		dc.l UpdateSound
FFFF1B78 FFFF 1B58                  		dc.l SFXPtrs2
FFFF1B7C 0000 0000 0000 0000 0000+  ModEnvPtrs:	dc.l byte_5E0DE, byte_5E0F4, byte_5E10A, byte_5E114, byte_5E12F
FFFF1B90                            					; DATA XREF: DoModEnv+Co ROM:0005E0AAo
FFFF1B90 0000 0000 0000 0000 0000+  		dc.l byte_5E11E, byte_5E159, byte_5E15B
FFFF1B9C 0001 0203 0405 0607 0809+  byte_5E0DE:	dc.b 0,	1, 2, 3, 4, 5, 6, 7, 8,	9, $A, $B, $C, $D, $E
FFFF1BAB                            					; DATA XREF: ROM:ModEnvPtrso
FFFF1BAB 0F10 1112 1314 83          		dc.b $F, $10, $11, $12,	$13, $14, $83
FFFF1BB2 0001 0203 0405 0607 0809+  byte_5E0F4:	dc.b 0,	1, 2, 3, 4, 5, 6, 7, 8,	9, $A, $B, $C, $D, $E
FFFF1BC1                            					; DATA XREF: ROM:ModEnvPtrso
FFFF1BC1 0F10 1112 1314 80          		dc.b $F, $10, $11, $12,	$13, $14, $80
FFFF1BC8 D8E2 ECF6 000A 141E 2883   byte_5E10A:	dc.b $D8, $E2, $EC, $F6, 0, $A,	$14, $1E, $28, $83
FFFF1BD2                            					; DATA XREF: ROM:ModEnvPtrso
FFFF1BD2 D8E2 ECF6 000A 141E 2880   byte_5E114:	dc.b $D8, $E2, $EC, $F6, 0, $A,	$14, $1E, $28, $80
FFFF1BDC                            					; DATA XREF: ROM:ModEnvPtrso
FFFF1BDC 0404 0404 0303 0303 0202+  byte_5E11E:	dc.b 4,	4, 4, 4, 3, 3, 3, 3, 2,	2, 2, 2, 1, 1, 1, 1, $80
FFFF1BED                            					; DATA XREF: ROM:ModEnvPtrso
FFFF1BED 0000 0000 0000 0000 0000+  byte_5E12F:	dc.b 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 1, 1, 1, 1, 1, 1, 1
FFFF1BFE                            					; DATA XREF: ROM:ModEnvPtrso
FFFF1BFE 0101 0101 0101 0102 0202+  		dc.b 1,	1, 1, 1, 1, 1, 1, 2, 2,	2, 2, 2, 2, 2, 2, 3, 3
FFFF1C0F 0303 0303 0303 0483        		dc.b 3,	3, 3, 3, 3, 3, 4, $83
FFFF1C17 0283                       byte_5E159:	dc.b 2,	$83		; DATA XREF: ROM:ModEnvPtrso
FFFF1C19 0000 0000 0001 0101 0101+  byte_5E15B:	dc.b 0,	0, 0, 0, 0, 1, 1, 1, 1,	1, 2, 2, 2, 2, 2, 2, 3
FFFF1C2A                            					; DATA XREF: ROM:ModEnvPtrso
FFFF1C2A 0303 0303 0404 0404 0405+  		dc.b 3,	3, 3, 3, 4, 4, 4, 4, 4,	5, 5, 5, 5, 5, 6, 6, 6
FFFF1C3B 0606 0707 0783 00          		dc.b 6,	6, 7, 7, 7, $83, 0
FFFF1C42 0000 0000 0000 0000 0000+  VolEnvPtrs:	dc.l byte_5E1DC, byte_5E1F3, byte_5E1FA, byte_5E203, byte_5E21E
FFFF1C56                            					; DATA XREF: DoVolEnv+14o
FFFF1C56                            					; ROM:0005E0AEo
FFFF1C56 0000 0000 0000 0000 0000+  		dc.l byte_5E20E, byte_5E248, byte_5E261, byte_5E289, byte_5E2C0
FFFF1C6A 0000 0000 0000 0000 0000+  		dc.l byte_5E32F, byte_5E344, byte_5E359, byte_5E36B, byte_5E3A6
FFFF1C7E 0000 0000 0000 0000 0000+  		dc.l byte_5E3E6, byte_5E413, byte_5E432, byte_5E452, byte_5E46B
FFFF1C92 0000 0000 0000 0000        		dc.l byte_5E4BF, byte_5E515
FFFF1C9A 0000 0001 0101 0202 0203+  byte_5E1DC:	dc.b 0,	0, 0, 1, 1, 1, 2, 2, 2,	3, 3, 3, 4, 4, 4, 5, 5
FFFF1CAB                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1CAB 0506 0606 0783             		dc.b 5,	6, 6, 6, 7, $83
FFFF1CB1 0002 0406 0810 83          byte_5E1F3:	dc.b 0,	2, 4, 6, 8, $10, $83 ; DATA XREF: ROM:VolEnvPtrso
FFFF1CB8 0000 0101 0303 0405 83     byte_5E1FA:	dc.b 0,	0, 1, 1, 3, 3, 4, 5, $83 ; DATA	XREF: ROM:VolEnvPtrso
FFFF1CC1 0000 0203 0404 0505 0506+  byte_5E203:	dc.b 0,	0, 2, 3, 4, 4, 5, 5, 5,	6, $83 ; DATA XREF: ROM:VolEnvPtrso
FFFF1CCC 0404 0404 0303 0303 0202+  byte_5E20E:	dc.b 4,	4, 4, 4, 3, 3, 3, 3, 2,	2, 2, 2, 1, 1, 1, 1
FFFF1CDC                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1CDC 0000 0000 0000 0000 0000+  byte_5E21E:	dc.b 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 1, 1, 1, 1, 1, 1, 1
FFFF1CED                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1CED 0101 0101 0101 0102 0202+  		dc.b 1,	1, 1, 1, 1, 1, 1, 2, 2,	2, 2, 2, 2, 2, 2, 3, 3
FFFF1CFE 0303 0303 0303 0483        		dc.b 3,	3, 3, 3, 3, 3, 4, $83
FFFF1D06 0001 0201 0100 0000 0000+  byte_5E248:	dc.b 0,	1, 2, 1, 1, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 1, 1
FFFF1D17                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1D17 0102 0202 0303 0481        		dc.b 1,	2, 2, 2, 3, 3, 4, $81
FFFF1D1F 0000 0000 0001 0101 0101+  byte_5E261:	dc.b 0,	0, 0, 0, 0, 1, 1, 1, 1,	1, 2, 2, 2, 2, 2, 2, 3
FFFF1D30                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1D30 0303 0303 0404 0404 0405+  		dc.b 3,	3, 3, 3, 4, 4, 4, 4, 4,	5, 5, 5, 5, 5, 6, 6, 6
FFFF1D41 0606 0707 0783             		dc.b 6,	6, 7, 7, 7, $83
FFFF1D47 0000 0000 0000 0101 0101+  byte_5E289:	dc.b 0,	0, 0, 0, 0, 0, 1, 1, 1,	1, 1, 1, 2, 2, 2, 2, 2
FFFF1D58                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1D58 0202 0203 0303 0303 0303+  		dc.b 2,	2, 2, 3, 3, 3, 3, 3, 3,	3, 4, 4, 4, 4, 4, 5, 5
FFFF1D69 0505 0506 0606 0606 0707+  		dc.b 5,	5, 5, 6, 6, 6, 6, 6, 7,	7, 7, 7, 7, 7, 7, 8, 8
FFFF1D7A 0809 0983                  		dc.b 8,	9, 9, $83
FFFF1D7E 0706 0606 0505 0504 0403+  byte_5E2C0:	dc.b 7,	6, 6, 6, 5, 5, 5, 4, 4,	3, 3, 3, 3, 3, 2, 2, 2
FFFF1D8F                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1D8F 0101 0100 0000 0000 0000+  		dc.b 1,	1, 1, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
FFFF1DA0 0000 0000 0000 0000 0000+  		dc.b 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 1
FFFF1DB1 0101 0101 0101 0101 0101+  		dc.b 1,	1, 1, 1, 1, 1, 1, 1, 1,	1, 1, 1, 1, 1, 1, 1, 1
FFFF1DC2 0101 0202 0202 0202 0303+  		dc.b 1,	1, 2, 2, 2, 2, 2, 2, 3,	3, 3, 3, 4, 4, 4, 4, 4
FFFF1DD3 0505 0505 0506 0606 0606+  		dc.b 5,	5, 5, 5, 5, 6, 6, 6, 6,	6, 7, 7, 7, 7, 7, 8, 8
FFFF1DE4 0808 0809 0909 0909 81     		dc.b 8,	8, 8, 9, 9, 9, 9, 9, $81
FFFF1DED 0000 0000 0202 0203 0304+  byte_5E32F:	dc.b 0,	0, 0, 0, 2, 2, 2, 3, 3,	4, 4, 4, 4, 5, 5, 5, 5
FFFF1DFE                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1DFE 0505 0683                  		dc.b 5,	5, 6, $83
FFFF1E02 0302 0201 0101 0100 0000+  byte_5E344:	dc.b 3,	2, 2, 1, 1, 1, 1, 0, 0,	0, 1, 1, 1, 2, 2, 2, 1
FFFF1E13                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1E13 0101 0181                  		dc.b 1,	1, 1, $81
FFFF1E17 0000 0000 0000 0002 0303+  byte_5E359:	dc.b 0,	0, 0, 0, 0, 0, 0, 2, 3,	3, 4, 4, 5, 5, 5, 6, 7
FFFF1E28                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1E28 83                         		dc.b $83
FFFF1E29 0302 0202 0101 0100 0000+  byte_5E36B:	dc.b 3,	2, 2, 2, 1, 1, 1, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
FFFF1E3A                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1E3A 0000 0000 0000 0000 0000+  		dc.b 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
FFFF1E4B 0000 0000 0000 0000 0000+  		dc.b 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
FFFF1E5C 0000 0000 0000 0181        		dc.b 0,	0, 0, 0, 0, 0, 1, $81
FFFF1E64 0606 0605 0505 0504 0404+  byte_5E3A6:	dc.b 6,	6, 6, 5, 5, 5, 5, 4, 4,	4, 4, 4, 4, 3, 3, 3, 3
FFFF1E75                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1E75 0303 0303 0303 0303 0303+  		dc.b 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3
FFFF1E86 0303 0303 0303 0303 0303+  		dc.b 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 2, 2, 2, 2, 2, 2
FFFF1E97 0202 0202 0101 0101 0101+  		dc.b 2,	2, 2, 2, 1, 1, 1, 1, 1,	1, 1, 0, $81
FFFF1EA4 0606 0606 0505 0505 0404+  byte_5E3E6:	dc.b 6,	6, 6, 6, 5, 5, 5, 5, 4,	4, 4, 4, 4, 3, 3, 3, 3
FFFF1EB5                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1EB5 0303 0303 0303 0303 0303+  		dc.b 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 2, 2, 2, 2, 2
FFFF1EC6 0202 0202 0101 0100 0000+  		dc.b 2,	2, 2, 2, 1, 1, 1, 0, 0,	0, $83
FFFF1ED1 0606 0605 0505 0404 0404+  byte_5E413:	dc.b 6,	6, 6, 5, 5, 5, 4, 4, 4,	4, 3, 3, 3, 3, 3, 3, 3
FFFF1EE2                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1EE2 0303 0202 0202 0201 0101+  		dc.b 3,	3, 2, 2, 2, 2, 2, 1, 1,	1, 0, 0, 0, $83
FFFF1EF0 0000 0001 0101 0202 0203+  byte_5E432:	dc.b 0,	0, 0, 1, 1, 1, 2, 2, 2,	3, 3, 3, 4, 4, 4, 4, 4
FFFF1F01                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1F01 0505 0505 0606 0606 0707+  		dc.b 5,	5, 5, 5, 6, 6, 6, 6, 7,	7, 8, 8, 9, $A,	$81
FFFF1F10 0001 0201 0100 0000 1211+  byte_5E452:	dc.b 0,	1, 2, 1, 1, 0, 0, 0, $12, $11, $18, $18, $18, $18
FFFF1F1E                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1F1E 1818 0404 0202 0203 0304+  		dc.b $18, $18, 4, 4, 2,	2, 2, 3, 3, 4, $81
FFFF1F29 0606 0605 0505 0504 0404+  byte_5E46B:	dc.b 6,	6, 6, 5, 5, 5, 5, 4, 4,	4, 4, 4, 4, 4, 4, 3, 3
FFFF1F3A                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1F3A 0303 0303 0303 0303 0303+  		dc.b 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3
FFFF1F4B 0303 0303 0303 0303 0303+  		dc.b 3,	3, 3, 3, 3, 3, 3, 3, 3,	3, 3, 3, 3, 3, 3, 3, 3
FFFF1F5C 0303 0303 0302 0202 0202+  		dc.b 3,	3, 3, 3, 3, 2, 2, 2, 2,	2, 2, 2, 2, 2, 2, 2, 2
FFFF1F6D 0202 0202 0202 0101 0101+  		dc.b 2,	2, 2, 2, 2, 2, 1, 1, 1,	1, 1, 1, 1, 1, 0, $81
FFFF1F7D 0706 0606 0505 0504 0403+  byte_5E4BF:	dc.b 7,	6, 6, 6, 5, 5, 5, 4, 4,	3, 3, 3, 3, 3, 2, 2, 2
FFFF1F8E                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1F8E 0101 0100 0000 0000 0000+  		dc.b 1,	1, 1, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 0
FFFF1F9F 0000 0000 0000 0000 0000+  		dc.b 0,	0, 0, 0, 0, 0, 0, 0, 0,	0, 0, 0, 0, 0, 0, 0, 1
FFFF1FB0 0101 0101 0101 0101 0101+  		dc.b 1,	1, 1, 1, 1, 1, 1, 1, 1,	1, 1, 1, 1, 1, 1, 1, 1
FFFF1FC1 0101 0202 0202 0202 0303+  		dc.b 1,	1, 2, 2, 2, 2, 2, 2, 3,	3, 3, 3, 4, 4, 4, 4, 4
FFFF1FD2 81                         		dc.b $81
FFFF1FD3 0403 0202 0202 0101 0101+  byte_5E515:	dc.b 4,	3, 2, 2, 2, 2, 1, 1, 1,	1, 1, 0, 0, 0, 0, 1, 2
FFFF1FE4                            					; DATA XREF: ROM:VolEnvPtrso
FFFF1FE4 0304 0503 0302 0202 0101+  		dc.b 3,	4, 5, 3, 3, 2, 2, 2, 1,	1, 1, 2, 3, 4, 5, $81
FFFF1FF4 0000 0000                  MusPtrs:	dc.l 0
FFFF1FF8 8080 8080 8080 8080 8080   SndPriorities:	dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2002                            					; DATA XREF: DoSoundQueueo
FFFF2002                            					; ROM:GeneralPtrListo
FFFF2002 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF200C 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2016 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2020 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF202A 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2034 8080 8040 4540 4040 5545   		dc.b $80, $80, $80, $40, $45, $40, $40,	$40, $55, $45
FFFF203E 5550 5050 4040 4550 5050   		dc.b $55, $50, $50, $50, $40, $40, $45,	$50, $50, $50
FFFF2048 5045 5040 5050 5050 4050   		dc.b $50, $45, $50, $40, $50, $50, $50,	$50, $40, $50
FFFF2052 6045 4355 5550 404A 5550   		dc.b $60, $45, $43, $55, $55, $50, $40,	$4A, $55, $50
FFFF205C 4080 8080 8080 8080 8080   		dc.b $40, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2066 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2070 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF207A 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2084 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF208E 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF2098 8080 8080 8080 8080 8080   		dc.b $80, $80, $80, $80, $80, $80, $80,	$80, $80, $80
FFFF20A2 4050 5050 5050 4550 6050   		dc.b $40, $50, $50, $50, $50, $50, $45,	$50, $60, $50
FFFF20AC 5040 5050 5050 5050 5045   		dc.b $50, $40, $50, $50, $50, $50, $50,	$50, $50, $45
FFFF20B6 4550 5045 6050 5040 5055   		dc.b $45, $50, $50, $45, $60, $50, $50,	$40, $50, $55
FFFF20C0 4040 4050 5050 4540 5045   		dc.b $40, $40, $40, $50, $50, $50, $45,	$40, $50, $45
FFFF20CA 7F60 5050 4040 4060 5070   		dc.b $7F, $60, $50, $50, $40, $40, $40,	$60, $50, $70
FFFF20D4 4040 4040 5050 5550 5060   		dc.b $40, $40, $40, $40, $50, $50, $55,	$50, $50, $60
FFFF20DE 5050 5050 5050 5050 5050   		dc.b $50, $50, $50, $50, $50, $50, $50,	$50, $50, $50
FFFF20E8 5050 5550 5550 5050 5050   		dc.b $50, $50, $55, $50, $55, $50, $50,	$50, $50, $50
FFFF20F2 8080 8080 80               		dc.b $80, $80, $80, $80, $80
FFFF20F7                            
FFFF20F7 00                         PalCounter:	dc.b 0	; NATSUMI: Count from 5 to -1 to check which frame to do double update
FFFF20F8 00                         IsPal:		dc.b 0	; NATSUMI: Is -1 if PAL mode is active.
