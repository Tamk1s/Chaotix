                        	LIST MACRO
                        	LIST EXPAND
000000                  	include _s1smps2asm_S1KC.asm
                        ; Standard Octave Pitch Equates
       = 000088         smpsPitch10lo		EQU	$88
       = 000094         smpsPitch09lo		EQU	$94
       = 0000A0         smpsPitch08lo		EQU	$A0
       = 0000AC         smpsPitch07lo		EQU	$AC
       = 0000B8         smpsPitch06lo		EQU	$B8
       = 0000C4         smpsPitch05lo		EQU	$C4
       = 0000D0         smpsPitch04lo		EQU	$D0
       = 0000DC         smpsPitch03lo		EQU	$DC
       = 0000E8         smpsPitch02lo		EQU	$E8
       = 0000F4         smpsPitch01lo		EQU	$F4
       = 000000         smpsPitch00			EQU	$00
       = 00000C         smpsPitch01hi		EQU	$0C
       = 000018         smpsPitch02hi		EQU	$18
       = 000024         smpsPitch03hi		EQU	$24
       = 000030         smpsPitch04hi		EQU	$30
       = 00003C         smpsPitch05hi		EQU	$3C
       = 000048         smpsPitch06hi		EQU	$48
       = 000054         smpsPitch07hi		EQU	$54
       = 000060         smpsPitch08hi		EQU	$60
       = 00006C         smpsPitch09hi		EQU	$6C
       = 000078         smpsPitch10hi		EQU	$78

                        ; Note Equates
       = 000080         nRst			EQU	$80
       = 000081         nC0			EQU	$81
       = 000082         nCs0			EQU	$82
       = 000083         nD0			EQU	$83
       = 000084         nEb0			EQU	$84
       = 000085         nE0			EQU	$85
       = 000086         nF0			EQU	$86
       = 000087         nFs0			EQU	$87
       = 000088         nG0			EQU	$88
       = 000089         nAb0			EQU	$89
       = 00008A         nA0			EQU	$8A
       = 00008B         nBb0			EQU	$8B
       = 00008C         nB0			EQU	$8C
       = 00008D         nC1			EQU	$8D
       = 00008E         nCs1			EQU	$8E
       = 00008F         nD1			EQU	$8F
       = 000090         nEb1			EQU	$90
       = 000091         nE1			EQU	$91
       = 000092         nF1			EQU	$92
       = 000093         nFs1			EQU	$93
       = 000094         nG1			EQU	$94
       = 000095         nAb1			EQU	$95
       = 000096         nA1			EQU	$96
       = 000097         nBb1			EQU	$97
       = 000098         nB1			EQU	$98
       = 000099         nC2			EQU	$99
       = 00009A         nCs2			EQU	$9A
       = 00009B         nD2			EQU	$9B
       = 00009C         nEb2			EQU	$9C
       = 00009D         nE2			EQU	$9D
       = 00009E         nF2			EQU	$9E
       = 00009F         nFs2			EQU	$9F
       = 0000A0         nG2			EQU	$A0
       = 0000A1         nAb2			EQU	$A1
       = 0000A2         nA2			EQU	$A2
       = 0000A3         nBb2			EQU	$A3
       = 0000A4         nB2			EQU	$A4
       = 0000A5         nC3			EQU	$A5
       = 0000A6         nCs3			EQU	$A6
       = 0000A7         nD3			EQU	$A7
       = 0000A8         nEb3			EQU	$A8
       = 0000A9         nE3			EQU	$A9
       = 0000AA         nF3			EQU	$AA
       = 0000AB         nFs3			EQU	$AB
       = 0000AC         nG3			EQU	$AC
       = 0000AD         nAb3			EQU	$AD
       = 0000AE         nA3			EQU	$AE
       = 0000AF         nBb3			EQU	$AF
       = 0000B0         nB3			EQU	$B0
       = 0000B1         nC4			EQU	$B1
       = 0000B2         nCs4			EQU	$B2
       = 0000B3         nD4			EQU	$B3
       = 0000B4         nEb4			EQU	$B4
       = 0000B5         nE4			EQU	$B5
       = 0000B6         nF4			EQU	$B6
       = 0000B7         nFs4			EQU	$B7
       = 0000B8         nG4			EQU	$B8
       = 0000B9         nAb4			EQU	$B9
       = 0000BA         nA4			EQU	$BA
       = 0000BB         nBb4			EQU	$BB
       = 0000BC         nB4			EQU	$BC
       = 0000BD         nC5			EQU	$BD
       = 0000BE         nCs5			EQU	$BE
       = 0000BF         nD5			EQU	$BF
       = 0000C0         nEb5			EQU	$C0
       = 0000C1         nE5			EQU	$C1
       = 0000C2         nF5			EQU	$C2
       = 0000C3         nFs5			EQU	$C3
       = 0000C4         nG5			EQU	$C4
       = 0000C5         nAb5			EQU	$C5
       = 0000C6         nA5			EQU	$C6
       = 0000C7         nBb5			EQU	$C7
       = 0000C8         nB5			EQU	$C8
       = 0000C9         nC6			EQU	$C9
       = 0000CA         nCs6			EQU	$CA
       = 0000CB         nD6			EQU	$CB
       = 0000CC         nEb6			EQU	$CC
       = 0000CD         nE6			EQU	$CD
       = 0000CE         nF6			EQU	$CE
       = 0000CF         nFs6			EQU	$CF
       = 0000D0         nG6			EQU	$D0
       = 0000D1         nAb6			EQU	$D1
       = 0000D2         nA6			EQU	$D2
       = 0000D3         nBb6			EQU	$D3
       = 0000D4         nB6			EQU	$D4
       = 0000D5         nC7			EQU	$D5
       = 0000D6         nCs7			EQU	$D6
       = 0000D7         nD7			EQU	$D7
       = 0000D8         nEb7			EQU	$D8
       = 0000D9         nE7			EQU	$D9
       = 0000DA         nF7			EQU	$DA
       = 0000DB         nFs7			EQU	$DB
       = 0000DC         nG7			EQU	$DC
       = 0000DD         nAb7			EQU	$DD
       = 0000DE         nA7			EQU	$DE
       = 0000DF         nBb7			EQU	$DF

                        ; DAC Equates (S1)
       = 000081         dKick			EQU	$81
       = 000082         dSnare			EQU	$82
       = 000083         dTimpani		EQU	$83
       = 000088         dHiTimpani		EQU	$88
       = 000089         dMidTimpani		EQU	$89
       = 00008A         dLowTimpani		EQU	$8A
       = 00008B         dVLowTimpani	EQU	$8B
       = 00008B         dFloorTimpani	EQU $8B

                        ; !@ PSGDelta (S1->KC has 12 semitone increase between PSG)
       = 00000C         PSGDelta	EQU	$0C

                        ; PWM Equates (KC)
       = 000081         pEKick		EQU	$81
       = 000082         pESnare		EQU	$82
       = 000083         pSplashCymb	EQU	$83
       = 000084         pRideBell	EQU $84
       = 000085         pTomHi		EQU	$85
       = 000086         pTomMid		EQU	$86
       = 000087         pTomLow		EQU	$87
       = 000088         pEHiHat		EQU	$88
       = 000089         pCrashCymb	EQU $89
       = 00008A         pClap		EQU $8A
       = 00008B         pAKick		EQU $8B
       = 00008C         pASnare		EQU	$8C
       = 00008D         pBell		EQU $8D

                        ;!@ Enum due to late PWM driver revision
       = 00008E         pFingSnap	EQU	$8E
       = 00008E         pFingSnapHi	EQU	$8E

       = 00008F         pCowbell	EQU	$8F
       = 000090         pClickHi	EQU	$90
       = 000091         pClickLo	EQU	$91
       = 000092         pBongoHi	EQU	$92
       = 000093         pBongoLo	EQU	$93
       = 000094         pTimpaniHi	EQU	$94
       = 000095         pTimpaniLo	EQU	$95
       = 000096         pSilence	EQU $96


                        ;!@ NEW DATA
       = 000097         pSega		EQU $97
       = 000098         pClosedHH	EQU $98
       = 000099         pOpenHH		EQU $99
       = 00009A         pTomLower		EQU	$9A
       = 00009B         pTomLowerer		EQU	$9B
       = 00009C         pTomLowerest	EQU	$9C
       = 00009D         pNepDada		EQU	$9D
       = 00009E         pFingSnapLo		EQU	$9E

                        ;!@ Crackers conversion enums. Knuckles Clackers equiv
       = 000081         pCra_d81	EQU	pEKick
       = 00008C         pCra_d82	EQU	pASnare
       = 000085         pCra_d83	EQU	pTomHi
       = 000086         pCra_d84	EQU	pTomMid
       = 000087         pCra_d85	EQU	pTomLow

                        ;!@ Convert ptrs to z80Ptr
                        ; function to make a little-endian 16-bit pointer for the Z80 sound driver
                        ;z80_ptr function x,y,((((x)|(y))<<8)&$FF00)|((((x)|(y))>>8)&$7F)|$80
                        ;z80_ptr_neg function x,y,((((y)-(x))<<8)&$FF00)|((((y)-(x))>>8)&$7F)|$80

                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        rom_ptr_z80 macro addr
                        	;dc.w z80_ptr(ptr,addr)
                        	dc.w  ((((addr)<<8)&$FF00)|(((addr)>>8)&$7F)|$80)
                            endm
                        	
                        ;Funciton to convert S1 tempo to S2 and then S3+
                        ;The conversion works for all values of main tempo other than 0 â€” this value cannot be converted exactly between the two drivers. The conversion of main tempos from Sonic 1 to Sonic 2 can be done (approximately) with the following formul
                        ;S2 main tempo = floor{ [ (S1 main tempo-1) * 256 + floor(S1 main tempo/2) ] / S1 main tempo }			
                        ;It is easy to convert between Sonic 2 and Sonic 3+ main tempo values:
                        ;S2 main tempo = (256 - S3 main tempo) mod 256
                        ;S3 main tempo = (256 - S2 main tempo) mod 256
                        tempo_conv macro tempo
                        		if tempo==0
                        			dc.b	((256 - (((256-1)*256 + (256/2)) / 256)) % 256)
                        		else
                        			dc.b	((256 - ((((tempo)-1)*256 + ((tempo)/2)) / (tempo))) % 256)
                        		endif
                        	endm
                        	
                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        ;rom_ptr_z80_neg macro ptr,addr
                        	;dc.w z80_ptr_neg(ptr,addr)
                        	;dc.w	(((((addr)-(ptr))<<8)&$FF00)|((((addr)-(ptr))>>8)&$7F)|$80)
                            ;endm

                        ; Header Macros

                        ;!@
                        ; Header - Set up Voice Location
                        ;smpsHeaderVoice macro loc
                        smpsHeaderVoice macro loc,songstart
                        ;songStart set *
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	endm
                        ; Header - Set up Channel Usage	
                        smpsHeaderChan macro fm,psg
                        	if \0==2
                        		dc.b	fm,psg
                        	else
                        		dc.b	fm
                        	endif	
                        	endm	
                        	

                        	
                        smpsHeaderTempo macro div,mod
                        	dc.b	div,mod
                        	endm

                        ;!@
                        ; Header - Set up Tempo. Mod is converted from S1 to S3 tempo
                        smpsHeaderTempoC macro div,mod
                        TempDiv set div
                        	dc.b	div
                        	tempo_conv(mod)
000000                  	endm
                        	
                        ; Header - Set up DAC Channel
                        smpsHeaderDAC macro loc
                        	dc.w	loc-songStart
                        	dc.w	$00
                        	endm
                        	
                        ;!@
                        ; Header - Set up FM Channel	
                        ;smpsHeaderFM macro loc,pitch,vol
                        smpsHeaderFM macro loc,songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	endm

                        ;!@	
                        ; Header - Set up PSG Channel
                        ;smpsHeaderPSG macro loc,pitch,vol,voice
                        smpsHeaderPSG macro loc,songstart,pitch,vol,null,voice
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	;dc.w	voice
                        	dc.b	null,voice
                        	endm

                        ;!@
                        ; Header - Set up SFX Channel
                        ;sHeaderSFX	macro play,patch,loc,pitch,vol
                        smpsHeaderSFX	macro play,patch,loc,pitch,vol,songstart
                        	dc.b play,patch
                        	;dc.w loc-sPointZero
                        	rom_ptr_z80(loc+songstart)
                        	dc.b pitch,vol
                            endm

                        ; Co-ord Flag Macros and Equates
                        ; E0xx - Panning, AMS, FMS
                        smpsPan macro direction,amsfms
                        panNone set $00
                        panRight set $40
                        panLeft set $80
                        panCentre set $C0
                        panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if \0==2
                        		dc.b $E0,direction|amsfms
                        	else
                        		dc.b $E0,direction
                        	endif
000000                  	endm
                        	
                        ; E1xx - Alter note values by xx
                        smpsAlterNote macro val
                        	dc.b	$E1,val
                        	endm
                        	
                        ; E2xx - Unknown
                        smpsE2 macro val
                        	dc.b	$E2,val
                        	endm

                        ; E3 - Return (generally used after F8)
                        ; F9 - Return (generally used after F8)
                        smpsReturn macro val
                        	;!@
                        	;dc.b	$E3
                        	dc.b	$F9
                        	endm
                        	
                        ; E4 - Fade in previous song (ie. 1-Up)
                        smpsFade macro val
                        	dc.b	$E4
                        	endm

                        ;!@ Invalid for S3+!
                        ; E5xx - Set channel tempo divider to xx
                        smpsChanTempoDiv macro val
                        	;Error No S3 equivalent for CF!
                        	dc.b	$E5,val	
                        	endm
                        	
                        ; E6xx - Alter Volume by xx
                        smpsAlterVol macro val
                        	dc.b	$E6,val
                        	endm
                        	
                        ; E7 - Prevent attack of next note
       = 0000E7         smpsNoAttack	EQU $E7

                        ;!@ This may have problems, needs some convesion factor due to usage of mult by tempo div in S3+
                        ; E8xx - Set note fill to xx
                        smpsNoteFill macro val		
                        	dc.b	$E8,(val/TempDiv)
                        	endm
                        	
                        ;!@
                        ; E9xx - Add xx to channel pitch
                        ; FBxx - Add xx to channel pitch
                        smpsAlterPitch macro val
                        	;!@
                        	;dc.b	$E9,val
                        	dc.b	$FB,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3
                        smpsSetTempoMod macro val
                        	;dc.b	$EA,val
                        	dc.b	$FF,$00,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3 (TEMPO - TEMPO_SET)
                        smpsSetTempoModC macro val
                        	;dc.b	$EA,val
                        	dc.b $FF,$00
                        	tempo_conv(val)
                        	endm
                        	
                        ;!@
                        ; EBxx - Set music tempo divider to xx
                        ; FF04xx - Set global tick multiplier to xx (TICK_MULT - TMULT_ALL)
                        smpsSetTempoDiv macro val
                        	;dc.b	$EB,val
                        TempDiv set val
                        	dc.b $FF,$04,val
000000                  	endm

                        ;!@	
                        ; ECxx - Add xx to PSG channel volume (VOLUME - VOL_NN_PSG)
                        ;
                        ; May need interpolation/conversion factor:
                        ; Change volume attenuation of PSG track.
                        ;The single parameter byte is added to track's current volume attenuation;
                        ;anything greater than $0F (unsigned comparison) is set to $0F (silence). Also, the flutter index is reduced by 1.
                        smpsSetVol macro val
                        	dc.b	$EC,val
                        	endm
                        	
                        ; ED - Unknown
       = 0000ED         smpsED		EQU $ED
                        	
                        ;!@ S3K= send cmd to YM2612 port; unused in S1
                        ; EE - Stops special SFX ($D0-$D4, S1 only) and restarts overridden music track
       = 0000EE         smpsEE 		EQU $EE
                        	
                        ;!@
                        ; EFxx - Set Voice of FM channel to xx
                        ; EFxx[yy] - Set patch id of FM channel to xx. If xx bit7 set, read from another song instead
                        ; (INSTRUMENT - INS_C_FMP)
                        ;smpsFMvoice macro voice
                        	;dc.b	$EF,voice
                        smpsFMvoice macro pat, song		
                        	;if song<>""
                        	if \0==2
                        		dc.b $EF,pat|$80,song+$81
                        	else
                        		dc.b $EF,pat
                        	endif
                            endm

                        ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
                        smpsModSet macro wait,speed,change,step
                        	dc.b	$F0,wait,speed,change,step
                        	endm
                        	
                        smpsModSet2	macro bytes
                        	smpsModSet	((bytes&$FF000000)>>24),((bytes&$00FF0000)>>16),((bytes&$0000FF00)>>8),(bytes&$000000FF)
                        	endm
                        	
                        ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
                        ;!@
                        smpsModSetC macro wait,speed,change,step
                        	dc.b	$F0
                        	;if (SonicDriverVer>=3)&&(SourceDriver<3)
                        		dc.b	wait+1,speed,change,(step*speed+1)&$FF
                        	;elseif (SonicDriverVer<3)&&(SourceDriver>=3)
                        		;dc.b	wait-1,speed,change,(((step==0)<<8)|step)/(((step==0)<<8)|step)-1		
                        	;else
                        		;dc.b	wait,speed,change,step
                        	;endif
                        	;dc.b	speed,change,step
                        	endm

                        ;!@	
                        smpsModSetC2 macro bytes
                        	smpsModSetC	((bytes&$FF000000)>>24),((bytes&$00FF0000)>>16),((bytes&$0000FF00)>>8),(bytes&$000000FF)
                        	endm
                        	

                        ;!@ Used very differently in S3; don't use
                        ; F1 - Turn on Modulation
       = 0000F1         smpsModOn 	EQU $F1
                        ; F4 - Turn off Modulation
       = 0000F4         smpsModOff 	EQU $F4

                        ; F2 - End of channel
                        smpsStop macro
                        	dc.b	$F2
                        	endm
                        	
                        ;!@
                        ; F3xx - PSG waveform to xx
                        ; S3+ only: If parameter byte is zero, the channel is converted
                        ; back into a normal PSG channel and the noise channel is silenced.
                        ; Otherwise, sets the PSG track to noise and sets PSG noise to parameter byte, which should be from $E0 to $E7 (inclusive).
                        smpsPSGform macro form
                        	dc.b	$F3,form
                        	endm
                        	
                        ; F5xx - PSG voice to xx
                        smpsPSGvoice macro voice
                        	dc.b	$F5,voice
                        	endm
                        	
                        ;BAD Cmpr
                        ;if (loc<*)
                        	;rom_ptr_z80_neg(*-loc,songstart)
                        ;else
                        	;rom_ptr_z80(loc-*-1,songstart)
                        ;endif

                        ;!@
                        ; F6xxxx - Jump to xxxx
                        ;smpsJump macro loc
                        smpsJump macro loc,songstart
                        	dc.b	$F6
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F7xxyyzzzz - Loop back to zzzz yy times, xx being the loop index for loop recursion fixing
                        ;smpsLoop macro index,loops,loc
                        smpsLoop macro index,loops,loc,songstart
                        	dc.b	$F7
                        	dc.b	index,loops
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F8xxxx - Call pattern at xxxx, saving return point
                        ;smpsCall macro loc
                        smpsCall macro loc,songstart
                        	dc.b	$F8
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm
                        	
                        ; F9 - Unknown
       = 0000F9         smpsF9		EQU $F9

                        ; Voices - Feedback
                        smpsVcFeedback macro val
                        vcFeedback set val
000000                  	endm

                        ; Voices - Algorithm
                        smpsVcAlgorithm macro val
                        vcAlgorithm set val
000000                  	endm

                        ; Voices - Detune
                        smpsVcDetune macro op1,op2,op3,op4
                        vcDT1 set op1
                        vcDT2 set op2
                        vcDT3 set op3
                        vcDT4 set op4
000000                  	endm

                        ; Voices - Coarse-Frequency
                        smpsVcCoarseFreq macro op1,op2,op3,op4
                        vcCF1 set op1
                        vcCF2 set op2
                        vcCF3 set op3
                        vcCF4 set op4
000000                  	endm

                        ; Voices - Rate Scale
                        smpsVcRateScale macro op1,op2,op3,op4
                        vcRS1 set op1
                        vcRS2 set op2
                        vcRS3 set op3
                        vcRS4 set op4
000000                  	endm

                        ; Voices - Attack Rate
                        smpsVcAttackRate macro op1,op2,op3,op4
                        vcAR1 set op1
                        vcAR2 set op2
                        vcAR3 set op3
                        vcAR4 set op4
000000                  	endm

                        ; Voices - Amplitude Modulation
                        smpsVcAmpMod macro op1,op2,op3,op4
                        vcAM1 set op1
                        vcAM2 set op2
                        vcAM3 set op3
                        vcAM4 set op4
000000                  	endm

                        ; Voices - First Decay Rate
                        smpsVcDecayRate1 macro op1,op2,op3,op4
                        vcD1R1 set op1
                        vcD1R2 set op2
                        vcD1R3 set op3
                        vcD1R4 set op4
000000                  	endm

                        ; Voices - Second Decay Rate
                        smpsVcDecayRate2 macro op1,op2,op3,op4
                        vcD2R1 set op1
                        vcD2R2 set op2
                        vcD2R3 set op3
                        vcD2R4 set op4
000000                  	endm

                        ; Voices - Decay Level	
                        smpsVcDecayLevel macro op1,op2,op3,op4
                        vcDL1 set op1
                        vcDL2 set op2
                        vcDL3 set op3
                        vcDL4 set op4
000000                  	endm

                        ; Voices - Release Rate
                        smpsVcReleaseRate macro op1,op2,op3,op4
                        vcRR1 set op1
                        vcRR2 set op2
                        vcRR3 set op3
                        vcRR4 set op4
000000                  	endm

                        ; Voices - Total Level
                        smpsVcTotalLevel macro op1,op2,op3,op4
                        vcTL1 set op1
                        vcTL2 set op2
                        vcTL3 set op3
                        vcTL4 set op4
                        	dc.b	(vcFeedback<<3)+vcAlgorithm
                        	dc.b	(vcDT4<<4)+vcCF4,(vcDT3<<4)+vcCF3,(vcDT2<<4)+vcCF2,(vcDT1<<4)+vcCF1
                        	dc.b	(vcRS4<<6)+vcAR4,(vcRS3<<6)+vcAR3,(vcRS2<<6)+vcAR2,(vcRS1<<6)+vcAR1
                        	dc.b	(vcAM4<<5)+vcD1R4,(vcAM3<<5)+vcD1R3,(vcAM2<<5)+vcD1R2,(vcAM1<<5)+vcD1R1
                        	dc.b	vcD2R4,vcD2R3,vcD2R2,vcD2R1
                        	dc.b	(vcDL4<<4)+vcRR4,(vcDL3<<4)+vcRR3,(vcDL2<<4)+vcRR2,(vcDL1<<4)+vcRR1
                        	dc.b	vcTL4,vcTL3,vcTL2,vcTL1	
000000                  	endm
                        	
                        	
                        ;==============================================
                        ;!@ The following CF flags/macros are KC-drive specific!
                        ;Rest here mostly used  to compile KC/Nat ASM files for BC purposes...

                        ;!@
                        ; Header - Set up a secondary PWM Channel
                        ;smpsHeaderPWM macro loc
                        smpsHeaderPWM macro loc, songstart,pitch,volL,volR
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)	
                        	;!@
                        	dc.b	pitch
                        	if \0==4
                        		dc.b	volL
                        	else
                        		dc.b	(volL<<4)+volR
                        	endif	
                        	endm
                        	
                        ;!@ Unused and unneeded; leftover Sonic 32x header stuff
                        ; Header - Set up first PWM Channel
                        ;smpsHeaderPWM1 macro loc,num
                        	;dc.w	loc-songStart
                        	;dc.b	num,0
                        	;endm

                        ;!@
                        ; Header - Set up Tick Multiplier (for Sfx)
                        ;sHeaderSFX
                        smpsHeaderTick	macro tmul
                        	dc.b tmul
                            endm

                        ;!@ KC Exclusives!
                        ;# PAN_ANIM
                        ;# pan animation has 2 modes; if first arg is 0, it will end it. Otherwise, more args will be used
                        ;!0xE4, 0 > sPanAni:;								
                        ;!0xE4, 1-0xFF > sPanAni: .lb, .db, .db, .db, .db;	
                        KC_smpsPanAni macro val1,val2,val3,val4,val5
                        	if val1==0
                        		dc.b	$E4,$00
                        	else
                        		dc.b	$E4,val1,val2,val3,val4,val5
                        	endif
                        	endm


                        ; Alter Volume
                        ;!0xE5 > saVolFMP: .db, .db;								
                        KC_smpsFMAlterVol macro val1,val2
                        	dc.b	$E5,val1,val2
                        	endm

                        ;!@ KC Exclusive!	
                        ;!0xE9 > ssLFO: .db, .db;									
                        KC_smpsSetLFO macro enable,amsfms
                        	dc.b	$E9,enable,amsfms
                        	endm

                        ;!0xEA > sPlayDAC: .db | 0x80;								
                        KC_smpsPlayDACSample macro sample
                        	dc.b	$EA,(sample&$7F)
                        	endm

                        ;!@ Songstart param added
                        ;!0xEB > sLoopExit: .db, .dw {						
                        ;smpsConditionalJump macro index,loc
                        KC_smpsConditionalJump macro index,loc,songstart
                        	dc.b	$EB
                        	dc.b	index
                        	;dc.w	z80_ptr(loc)
                        	rom_ptr_z80(loc+songstart)
                        	endm

                        ;!@ Usage/naming is speculative. Called ssTransposeS3K in S3k/Nat driver...	
                        ;!0xED > sYMcmd: .db, .db;							
                        ; Set note values to xx-$40
                        KC_smpsSetNote macro val
                        	dc.b	$ED,val
                        	endm

                        ;!0xEE > sYM1cmd: .db, .db;							
                        KC_smpsFMICommand macro reg,val
                        	dc.b	$EE,reg,val
                        	endm

                        ;!0xF1 > sModEnv: .db, .db {							
                        ; Set Modulation
                        KC_smpsModChange2 macro fmmod,psgmod
                        	dc.b	$F1,fmmod,psgmod
                        	endm
                        	
                        ;!0xF4 > sModEnv: .db {
                        ; Set Modulation
                        KC_smpsModChange macro val
                        	dc.b	$F4,val
                        	endm

                        ;!@ KC exclusive!
                        ;!0xFC > sPitchSlide: .db;						
                        KC_smpsPitchSlide macro enable
                        	dc.b	$FC,enable
                        	endm
                        	
                        ;!0xFD > sRawFreq: .db;							
                        KC_smpsAlternateSMPS macro flag
                        	dc.b	$FD,flag
                        	endm

                        ;!0xFE > sSpecFM3: .db, .db, .db, .db {			
                        	;%; Broken?
                        ;}
                        KC_smpsFM3SpecialMode macro ind1,ind2,ind3,ind4
                        	dc.b	$FE,ind1,ind2,ind3,ind4
                        	Error Broken?
                        	endm

                        ;!0xFF, 1 > sPlaySound: .db;						
                        KC_smpsPlaySound macro index
                        	dc.b	$FF,$01,index
                        	endm

                        ;!0xFF, 2 > sMusPause: .db;						
                        KC_smpsHaltMusic macro flag
                        	dc.b	$FF,$02,flag
                        	endm

                        ;!@ Modified with SongStart	param
                        ;!0xFF, 3 > sCopyMem: .dw, .db {					
                        	;%; No song should ever use this command. It may good idea to remove it.
                        ;}
                        ;KC_smpsCopyData macro data,len
                        KC_smpsCopyData macro data,len,songstart
                        	Error Coord. Flag to copy data should not be used. Complain to GenesisDoes if any music uses it.
                        	;Error No song should ever use this command. It may be a good idea to remove it.
                        	dc.b	$FF,$03
                        	;dc.w	little_endian(data)
                        	rom_ptr_z80(data+songstart)
                        	dc.b	len
                        	endm

                        ;!0xFF, 5 > sSSGEG: .db, .db, .db, .db {			
                        	;=op2 .a2
                        	;:=2 .a1
                        	;:=1 \op2\
                        ;}
                        KC_smpsSSGEG macro op1,op2,op3,op4
                        	dc.b	$FF,$05,op1,op3,op2,op4
                        	endm
                        	
                        	
                        ;!0xFF, 6 > sVolEnvFM: .db, .db {
                        	;:?0 {
                        		;?volenv;
                        	;}
                        ;}	
                        KC_smpsFMVolEnv macro tone,mask
                        	dc.b	$FF,$06,tone,mask
                        	endm
                        ;==============================================

000000                  	include "KC.asm"
       = 040000         Target	EQU	$40000
       = 00F480         sModOn	EQU	$F480

       = 000000         PSGVoi	EQU $00
       = 000001         PSGVol1	EQU	$01				;$05
       = 000003         PSGVol2	EQU	PSGVol1+$02		;$0B
       = 000002         PSGVol3	EQU	PSGVol2-$01		;$0A

       = 000000         PWMPitch	EQU	$00
       = 000077         PWMVol1		EQU	$77

000000                  	smpsHeaderVoice	HDN1R_Splash_Patches, Target
                        ;songStart set *
                        	;dc.w	loc-songStart
000000                  	rom_ptr_z80(HDN1R_Splash_Patches+Target)
                        	;dc.w z80_ptr(ptr,addr)
000000 389D             	dc.w  (((((HDN1R_Splash_Patches+Target))<<8)&$FF00)|((((HDN1R_Splash_Patches+Target))>>8)&$7F)|$80)
000002                  	smpsHeaderChan	$06, $03
                        	if 2==2
000002 0603             		dc.b	$06,$03
                        	else
                        	endif	
000004                  	smpsHeaderTempo	$03, $20
000004 0320             	dc.b	$03,$20
000006                  	smpsHeaderFM	HDN1R_Splash_FM1, Target, $00, $17
                        	;dc.w	loc-songStart
000006                  	rom_ptr_z80(HDN1R_Splash_FM1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000006 4080             	dc.w  (((((HDN1R_Splash_FM1+Target))<<8)&$FF00)|((((HDN1R_Splash_FM1+Target))>>8)&$7F)|$80)
000008 0017             	dc.b	$00,$17
00000A                  	smpsHeaderFM	HDN1R_Splash_FM2, Target, $00, $13
                        	;dc.w	loc-songStart
00000A                  	rom_ptr_z80(HDN1R_Splash_FM2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000A 0184             	dc.w  (((((HDN1R_Splash_FM2+Target))<<8)&$FF00)|((((HDN1R_Splash_FM2+Target))>>8)&$7F)|$80)
00000C 0013             	dc.b	$00,$13
00000E                  	smpsHeaderFM	HDN1R_Splash_FM3, Target, $00, $0E
                        	;dc.w	loc-songStart
00000E                  	rom_ptr_z80(HDN1R_Splash_FM3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000E 7C84             	dc.w  (((((HDN1R_Splash_FM3+Target))<<8)&$FF00)|((((HDN1R_Splash_FM3+Target))>>8)&$7F)|$80)
000010 000E             	dc.b	$00,$0E
000012                  	smpsHeaderFM	HDN1R_Splash_FM4, Target, $00, $19
                        	;dc.w	loc-songStart
000012                  	rom_ptr_z80(HDN1R_Splash_FM4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000012 3988             	dc.w  (((((HDN1R_Splash_FM4+Target))<<8)&$FF00)|((((HDN1R_Splash_FM4+Target))>>8)&$7F)|$80)
000014 0019             	dc.b	$00,$19
000016                  	smpsHeaderFM	HDN1R_Splash_FM5, Target, $00, $16
                        	;dc.w	loc-songStart
000016                  	rom_ptr_z80(HDN1R_Splash_FM5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000016 8A8B             	dc.w  (((((HDN1R_Splash_FM5+Target))<<8)&$FF00)|((((HDN1R_Splash_FM5+Target))>>8)&$7F)|$80)
000018 0016             	dc.b	$00,$16
00001A                  	smpsHeaderFM	HDN1R_Splash_FM6, Target, $00, $1B
                        	;dc.w	loc-songStart
00001A                  	rom_ptr_z80(HDN1R_Splash_FM6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001A AF8E             	dc.w  (((((HDN1R_Splash_FM6+Target))<<8)&$FF00)|((((HDN1R_Splash_FM6+Target))>>8)&$7F)|$80)
00001C 001B             	dc.b	$00,$1B
00001E                  	smpsHeaderPSG	HDN1R_Splash_PSG1, Target, PSGDelta, PSGVol1, $00, PSGVoi
                        	;dc.w	loc-songStart
00001E                  	rom_ptr_z80(HDN1R_Splash_PSG1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001E 0990             	dc.w  (((((HDN1R_Splash_PSG1+Target))<<8)&$FF00)|((((HDN1R_Splash_PSG1+Target))>>8)&$7F)|$80)
000020 0C01             	dc.b	PSGDelta,PSGVol1
                        	;dc.w	voice
000022 0000             	dc.b	$00,PSGVoi
000024                  	smpsHeaderPSG	HDN1R_Splash_PSG2, Target, PSGDelta, PSGVol2, $00, PSGVoi
                        	;dc.w	loc-songStart
000024                  	rom_ptr_z80(HDN1R_Splash_PSG2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000024 9A92             	dc.w  (((((HDN1R_Splash_PSG2+Target))<<8)&$FF00)|((((HDN1R_Splash_PSG2+Target))>>8)&$7F)|$80)
000026 0C03             	dc.b	PSGDelta,PSGVol2
                        	;dc.w	voice
000028 0000             	dc.b	$00,PSGVoi
00002A                  	smpsHeaderPSG	HDN1R_Splash_PSG3, Target, PSGDelta, PSGVol3, $00, PSGVoi
                        	;dc.w	loc-songStart
00002A                  	rom_ptr_z80(HDN1R_Splash_PSG3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00002A AB95             	dc.w  (((((HDN1R_Splash_PSG3+Target))<<8)&$FF00)|((((HDN1R_Splash_PSG3+Target))>>8)&$7F)|$80)
00002C 0C02             	dc.b	PSGDelta,PSGVol3
                        	;dc.w	voice
00002E 0000             	dc.b	$00,PSGVoi
000030                  	smpsHeaderPWM	HDN1R_Splash_PWM1, Target, PWMPitch, PWMVol1
                        	;dc.w	loc-songStart
000030                  	rom_ptr_z80(HDN1R_Splash_PWM1+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000030 AC97             	dc.w  (((((HDN1R_Splash_PWM1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1+Target))>>8)&$7F)|$80)
                        	;!@
000032 00               	dc.b	PWMPitch
                        	if 4==4
000033 77               		dc.b	PWMVol1
                        	else
                        	endif	
000034                  	smpsHeaderPWM	HDN1R_Splash_PWM2, Target, PWMPitch, PWMVol1
                        	;dc.w	loc-songStart
000034                  	rom_ptr_z80(HDN1R_Splash_PWM2+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000034 6299             	dc.w  (((((HDN1R_Splash_PWM2+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2+Target))>>8)&$7F)|$80)
                        	;!@
000036 00               	dc.b	PWMPitch
                        	if 4==4
000037 77               		dc.b	PWMVol1
                        	else
                        	endif	
000038                  	smpsHeaderPWM	HDN1R_Splash_PWM3, Target, PWMPitch, PWMVol1
                        	;dc.w	loc-songStart
000038                  	rom_ptr_z80(HDN1R_Splash_PWM3+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000038 559B             	dc.w  (((((HDN1R_Splash_PWM3+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3+Target))>>8)&$7F)|$80)
                        	;!@
00003A 00               	dc.b	PWMPitch
                        	if 4==4
00003B 77               		dc.b	PWMVol1
                        	else
                        	endif	
00003C                  	smpsHeaderPWM	HDN1R_Splash_PWM4, Target, PWMPitch, PWMVol1	
                        	;dc.w	loc-songStart
00003C                  	rom_ptr_z80(HDN1R_Splash_PWM4+Target)	
                        	;dc.w z80_ptr(ptr,addr)
00003C 7F9C             	dc.w  (((((HDN1R_Splash_PWM4+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4+Target))>>8)&$7F)|$80)
                        	;!@
00003E 00               	dc.b	PWMPitch
                        	if 4==4
00003F 77               		dc.b	PWMVol1
                        	else
                        	endif	

000040                  HDN1R_Splash_FM1:
000040                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000040 E0C0             		dc.b $E0,panCenter
                        	endif
000042                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
000042 EF00             		dc.b $EF,$00
                        	endif
000044 8006             	dc.b	nRst, $06

000046                  HDN1R_Splash_Loop1:
000046 C702C401C102BE01 	dc.b	nBb5, $02, nG5, $01, nE5, $02, nCs5, $01
00004E BB02B801BB02BE01 	dc.b	nBb4, $02, nG4, $01, nBb4, $02, nCs5, $01
000056 C102BE01BB02B801 	dc.b	nE5, $02, nCs5, $01, nBb4, $02, nG4, $01
00005E B502B201B502B801 	dc.b	nE4, $02, nCs4, $01, nE4, $02, nG4, $01
000066 BE02BB01B802B501 	dc.b	nCs5, $02, nBb4, $01, nG4, $02, nE4, $01
00006E B202AF01B202B501 	dc.b	nCs4, $02, nBb3, $01, nCs4, $02, nE4, $01
000076 BB02B801B502B201 	dc.b	nBb4, $02, nG4, $01, nE4, $02, nCs4, $01
00007E AF02AC01AF02B201 	dc.b	nBb3, $02, nG3, $01, nBb3, $02, nCs4, $01
000086                  	smpsLoop		$00, $02, HDN1R_Splash_Loop1, Target
000086 F7               	dc.b	$F7
000087 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop1<*)
000089                  		rom_ptr_z80(HDN1R_Splash_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000089 4680             	dc.w  (((((HDN1R_Splash_Loop1+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00008B CA02C701C402C101 	dc.b	nCs6, $02, nBb5, $01, nG5, $02, nE5, $01
000093 BE02BB01BE02C101 	dc.b	nCs5, $02, nBb4, $01, nCs5, $02, nE5, $01
00009B C702C401C102BE01 	dc.b	nBb5, $02, nG5, $01, nE5, $02, nCs5, $01
0000A3 BB02B801BB02BE01 	dc.b	nBb4, $02, nG4, $01, nBb4, $02, nCs5, $01
0000AB C402C101BE02BB01 	dc.b	nG5, $02, nE5, $01, nCs5, $02, nBb4, $01
0000B3 B802B501B802BB01 	dc.b	nG4, $02, nE4, $01, nG4, $02, nBb4, $01
0000BB C102BE01BB02B801 	dc.b	nE5, $02, nCs5, $01, nBb4, $02, nG4, $01
0000C3 B502B201B502B801 	dc.b	nE4, $02, nCs4, $01, nE4, $02, nG4, $01
0000CB AF02B201B502B801 	dc.b	nBb3, $02, nCs4, $01, nE4, $02, nG4, $01
0000D3 BB02BE01C102C401 	dc.b	nBb4, $02, nCs5, $01, nE5, $02, nG5, $01
0000DB B202B501B802BB01 	dc.b	nCs4, $02, nE4, $01, nG4, $02, nBb4, $01
0000E3 BE02C101C402C701 	dc.b	nCs5, $02, nE5, $01, nG5, $02, nBb5, $01
0000EB BE80C78002D30180 	dc.b	nCs5, nRst, nBb5, nRst, $02, nBb6, $01, nRst
0000F3 02C70180C1BB8005 	dc.b	$02, nBb5, $01, nRst, nE5, nBb4, nRst, $05
0000FB                  	smpsAlterNote	$03
0000FB E103             	dc.b	$E1,$03
0000FD 8001             	dc.b	nRst, $01
0000FF                  	smpsAlterNote	$05
0000FF E105             	dc.b	$E1,$05
000101 8001             	dc.b	nRst, $01
000103                  	smpsAlterNote	$07
000103 E107             	dc.b	$E1,$07
000105 8001             	dc.b	nRst, $01
000107                  	smpsAlterNote	$08
000107 E108             	dc.b	$E1,$08
000109 8001             	dc.b	nRst, $01
00010B                  	smpsAlterNote	$13
00010B E113             	dc.b	$E1,$13
00010D 8001             	dc.b	nRst, $01
00010F                  	smpsAlterNote	$14
00010F E114             	dc.b	$E1,$14
000111 8001             	dc.b	nRst, $01
000113                  	smpsAlterNote	$00
000113 E100             	dc.b	$E1,$00
000115 80018055803B     	dc.b	nRst, $01, nRst, $55, nRst, $3B
00011B                  	smpsAlterVol		$02
00011B E602             	dc.b	$E6,$02
00011D AC02AF01B202B501 	dc.b	nG3, $02, nBb3, $01, nCs4, $02, nE4, $01
000125 B802BB01BE02C101 	dc.b	nG4, $02, nBb4, $01, nCs5, $02, nE5, $01
00012D BE02BB01B802B501 	dc.b	nCs5, $02, nBb4, $01, nG4, $02, nE4, $01
000135 B802BB01BE02C101 	dc.b	nG4, $02, nBb4, $01, nCs5, $02, nE5, $01
00013D 8005             	dc.b	nRst, $05
00013F                  	smpsAlterVol		$01
00013F E601             	dc.b	$E6,$01
000141 CA018002C7018002 	dc.b	nCs6, $01, nRst, $02, nBb5, $01, nRst, $02
000149 D301             	dc.b	nBb6, $01

00014B                  HDN1R_Splash_Jump1:
00014B 8054805480548054 	dc.b	nRst, $54, nRst, $54, nRst, $54, nRst, $54
000153 8054             	dc.b	nRst, $54
000155                  	smpsAlterVol		$FA
000155 E6FA             	dc.b	$E6,$FA
000157 B302B601BA02BF01 	dc.b	nD4, $02, nF4, $01, nA4, $02, nD5, $01
00015F C202C601CB02CE01 	dc.b	nF5, $02, nA5, $01, nD6, $02, nF6, $01
000167 D202CE01CB02C601 	dc.b	nA6, $02, nF6, $01, nD6, $02, nA5, $01
00016F C202BF01BA02B301 	dc.b	nF5, $02, nD5, $01, nA4, $02, nD4, $01
000177 8018             	dc.b	nRst, $18
000179                  	smpsAlterVol		$FF
000179 E6FF             	dc.b	$E6,$FF
00017B B602BA01BF02C201 	dc.b	nF4, $02, nA4, $01, nD5, $02, nF5, $01
000183 C602CB01CE02D201 	dc.b	nA5, $02, nD6, $01, nF6, $02, nA6, $01
00018B D702D201CE02CB01 	dc.b	nD7, $02, nA6, $01, nF6, $02, nD6, $01
000193 C602C201BA02B601 	dc.b	nA5, $02, nF5, $01, nA4, $02, nF4, $01
00019B 8018             	dc.b	nRst, $18
00019D                  	smpsAlterVol		$FF
00019D E6FF             	dc.b	$E6,$FF
00019F B102B501B802BD01 	dc.b	nC4, $02, nE4, $01, nG4, $02, nC5, $01
0001A7 C102C401C902     	dc.b	nE5, $02, nG5, $01, nC6, $02
0001AD                  	smpsAlterVol		$01
0001AD E601             	dc.b	$E6,$01
0001AF CD01D002CD01C902 	dc.b	nE6, $01, nG6, $02, nE6, $01, nC6, $02
0001B7 C401C102BD01B802 	dc.b	nG5, $01, nE5, $02, nC5, $01, nG4, $02
0001BF B1018030         	dc.b	nC4, $01, nRst, $30
0001C3                  	smpsAlterNote	$00
0001C3 E100             	dc.b	$E1,$00
0001C5                  	smpsAlterVol		$FE
0001C5 E6FE             	dc.b	$E6,$FE
0001C7 C1028007C3028007 	dc.b	nE5, $02, nRst, $07, nFs5, $02, nRst, $07
0001CF BF028004B903C5BA 	dc.b	nD5, $02, nRst, $04, nAb4, $03, nAb5, nA4
0001D7 C6BCC8C1B5C20280 	dc.b	nA5, nB4, nB5, nE5, nE4, nF5, $02, nRst
0001DF 07C3028007BF0280 	dc.b	$07, nFs5, $02, nRst, $07, nD5, $02, nRst
0001E7 04C102C301C502C6 	dc.b	$04, nE5, $02, nFs5, $01, nAb5, $02, nA5
0001EF 01C302C501C602C8 	dc.b	$01, nFs5, $02, nAb5, $01, nA5, $02, nB5
0001F7 01C502C601C802CB 	dc.b	$01, nAb5, $02, nA5, $01, nB5, $02, nD6
0001FF 01CD03           	dc.b	$01, nE6, $03
000202                  	smpsAlterNote	$0F
000202 E10F             	dc.b	$E1,$0F
000204 E7CB01           	dc.b	smpsNoAttack, nD6, $01
000207                  	smpsAlterNote	$0A
000207 E10A             	dc.b	$E1,$0A
                        	;!@ dc.b	smpsNoAttack, nBb5
000209 E7C701           	dc.b	smpsNoAttack, nBb5, $01
00020C                  	smpsAlterNote	$FD
00020C E1FD             	dc.b	$E1,$FD
                        	;!@ dc.b	smpsNoAttack, nFs5
00020E E7C301           	dc.b	smpsNoAttack, nFs5, $01
000211                  	smpsAlterNote	$FF
000211 E1FF             	dc.b	$E1,$FF
000213 C1028007C3028007 	dc.b	nE5, $02, nRst, $07, nFs5, $02, nRst, $07
00021B BF028001B903C5C6 	dc.b	nD5, $02, nRst, $01, nAb4, $03, nAb5, nA5
                        	;!@ dc.b	nA4, nB5, nA5, nA4, nE5
000223 BAC8C6BAC103     	dc.b	nA4, nB5, nA5, nA4, nE5, $03
000229                  	smpsAlterNote	$13
000229 E113             	dc.b	$E1,$13
00022B E7BF01           	dc.b	smpsNoAttack, nD5, $01
00022E                  	smpsAlterNote	$15
00022E E115             	dc.b	$E1,$15
                        	;!@ dc.b	smpsNoAttack, nBb4
000230 E7BB01           	dc.b	smpsNoAttack, nBb4, $01
000233                  	smpsAlterNote	$0A
000233 E10A             	dc.b	$E1,$0A
                        	;!@ dc.b	smpsNoAttack, nFs4
000235 E7B701           	dc.b	smpsNoAttack, nFs4, $01
000238                  	smpsAlterNote	$01
000238 E101             	dc.b	$E1,$01
00023A C2028007C3028007 	dc.b	nF5, $02, nRst, $07, nFs5, $02, nRst, $07
000242 BF028004CE02CB01 	dc.b	nD5, $02, nRst, $04, nF6, $02, nD6, $01
00024A C802C601CB02C801 	dc.b	nB5, $02, nA5, $01, nD6, $02, nB5, $01
000252 C602C501C602C501 	dc.b	nA5, $02, nAb5, $01, nA5, $02, nAb5, $01
00025A C302C201BF03     	dc.b	nFs5, $02, nF5, $01, nD5, $03
000260                  	smpsAlterNote	$09
000260 E109             	dc.b	$E1,$09
000262 E7BD01           	dc.b	smpsNoAttack, nC5, $01
000265                  	smpsAlterNote	$0A
000265 E10A             	dc.b	$E1,$0A
                        	;!@ dc.b	smpsNoAttack, nAb4
000267 E7B901           	dc.b	smpsNoAttack, nAb4, $01
00026A                  	smpsAlterNote	$04
00026A E104             	dc.b	$E1,$04
                        	;!@ dc.b	smpsNoAttack, nE4
00026C E7B501           	dc.b	smpsNoAttack, nE4, $01
00026F                  	smpsAlterNote	$FF
00026F E1FF             	dc.b	$E1,$FF
000271 C5028007C6028007 	dc.b	nAb5, $02, nRst, $07, nA5, $02, nRst, $07
000279 C3028004BC03C8BD 	dc.b	nFs5, $02, nRst, $04, nB4, $03, nB5, nC5
000281 C9BFCBC4B8C50280 	dc.b	nC6, nD5, nD6, nG5, nG4, nAb5, $02, nRst
000289 07C6028007C30280 	dc.b	$07, nA5, $02, nRst, $07, nFs5, $02, nRst
000291 04C402C501C802C9 	dc.b	$04, nG5, $02, nAb5, $01, nB5, $02, nC6
000299 01C502C801C902CB 	dc.b	$01, nAb5, $02, nB5, $01, nC6, $02, nD6
0002A1 01C802C901CB02CE 	dc.b	$01, nB5, $02, nC6, $01, nD6, $02, nF6
0002A9 01D003           	dc.b	$01, nG6, $03
0002AC                  	smpsAlterNote	$06
0002AC E106             	dc.b	$E1,$06
0002AE E7CE01           	dc.b	smpsNoAttack, nF6, $01
0002B1                  	smpsAlterNote	$FF
0002B1 E1FF             	dc.b	$E1,$FF
                        	;!@ dc.b	smpsNoAttack, nCs6
0002B3 E7CA01           	dc.b	smpsNoAttack, nCs6, $01
0002B6                  	smpsAlterNote	$F4
0002B6 E1F4             	dc.b	$E1,$F4
                        	;!@ dc.b	smpsNoAttack, nA5
0002B8 E7C601           	dc.b	smpsNoAttack, nA5, $01
0002BB                  	smpsAlterNote	$01
0002BB E101             	dc.b	$E1,$01
0002BD C5028007C6028007 	dc.b	nAb5, $02, nRst, $07, nA5, $02, nRst, $07
0002C5 C3028001BC03C8C9 	dc.b	nFs5, $02, nRst, $01, nB4, $03, nB5, nC6
                        	;!@ dc.b	nC5, nD6, nC6, nC5, nG5
0002CD BDCBC9BDC403     	dc.b	nC5, nD6, nC6, nC5, nG5, $03
0002D3                  	smpsAlterNote	$EF
0002D3 E1EF             	dc.b	$E1,$EF
0002D5 E7C301           	dc.b	smpsNoAttack, nFs5, $01
0002D8                  	smpsAlterNote	$0C
0002D8 E10C             	dc.b	$E1,$0C
                        	;!@ dc.b	smpsNoAttack, nCs5
0002DA E7BE01           	dc.b	smpsNoAttack, nCs5, $01
                        	
0002DD                  	smpsAlterNote	$FD
0002DD E1FD             	dc.b	$E1,$FD
                        	;!@ dc.b	smpsNoAttack, nA4
0002DF E7BA01           	dc.b	smpsNoAttack, nA4, $01
0002E2                  	smpsAlterNote	$FF
0002E2 E1FF             	dc.b	$E1,$FF
0002E4 C5028007C6028007 	dc.b	nAb5, $02, nRst, $07, nA5, $02, nRst, $07
0002EC C3028004D102CF01 	dc.b	nFs5, $02, nRst, $04, nAb6, $02, nFs6, $01
0002F4 CE02CB01CE02CB01 	dc.b	nF6, $02, nD6, $01, nF6, $02, nD6, $01
0002FC C902C801C902C801 	dc.b	nC6, $02, nB5, $01, nC6, $02, nB5, $01
000304 C502C301C103     	dc.b	nAb5, $02, nFs5, $01, nE5, $03
00030A                  	smpsAlterNote	$06
00030A E106             	dc.b	$E1,$06
00030C E7BF01           	dc.b	smpsNoAttack, nD5, $01
00030F                  	smpsAlterNote	$FA
00030F E1FA             	dc.b	$E1,$FA
                        	;!@ dc.b	smpsNoAttack, nBb4
000311 E7BB01           	dc.b	smpsNoAttack, nBb4, $01
000314                  	smpsAlterNote	$F0
000314 E1F0             	dc.b	$E1,$F0
                        	;!@ dc.b	smpsNoAttack, nFs4
000316 E7B701           	dc.b	smpsNoAttack, nFs4, $01
000319                  	smpsAlterNote	$FF
000319 E1FF             	dc.b	$E1,$FF
00031B 805580558054803E 	dc.b	nRst, $55, nRst, $55, nRst, $54, nRst, $3E
000323 803E803E803E803E 	dc.b	nRst, $3E, nRst, $3E, nRst, $3E, nRst, $3E
00032B                  	smpsAlterVol		$07
00032B E607             	dc.b	$E6,$07
00032D B102B301B402B601 	dc.b	nC4, $02, nD4, $01, nEb4, $02, nF4, $01
000335 B802BB01BD02BF01 	dc.b	nG4, $02, nBb4, $01, nC5, $02, nD5, $01
                        	;!@ dc.b	nEb5, $18, nD5, $0C, nBb4, nC5, nG5
00033D C018BF0CBBBDC4   	dc.b	nEb5, $18, nD5, $0C, nBb4, nC5, nG5

000344                  HDN1R_Splash_Loop2:
000344                  	smpsAlterVol		$01
000344 E601             	dc.b	$E6,$01
                        	;!@ dc.b	smpsNoAttack, $01
000346 C4E701           	dc.b	nG5, smpsNoAttack, $01
000349                  	smpsLoop		$00, $03, HDN1R_Splash_Loop2, Target
000349 F7               	dc.b	$F7
00034A 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop2<*)
00034C                  		rom_ptr_z80(HDN1R_Splash_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00034C 4483             	dc.w  (((((HDN1R_Splash_Loop2+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00034E                  	smpsAlterVol		$02
00034E E602             	dc.b	$E6,$02
                        	;!@ dc.b	smpsNoAttack, $01
000350 C4E701           	dc.b	nG5, smpsNoAttack, $01
000353                  	smpsAlterVol		$01
000353 E601             	dc.b	$E6,$01

000355                  HDN1R_Splash_Loop3:
                        	;!@ dc.b	smpsNoAttack, $01
000355 C4E701           	dc.b	nG5, smpsNoAttack, $01
000358                  	smpsAlterVol		$01
000358 E601             	dc.b	$E6,$01
00035A E701             	dc.b	smpsNoAttack, $01
00035C                  	smpsAlterVol		$02
00035C E602             	dc.b	$E6,$02
00035E                  	smpsLoop		$00, $02, HDN1R_Splash_Loop3, Target
00035E F7               	dc.b	$F7
00035F 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop3<*)
000361                  		rom_ptr_z80(HDN1R_Splash_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000361 5583             	dc.w  (((((HDN1R_Splash_Loop3+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	smpsNoAttack, $01
000363 C4E701           	dc.b	nG5, smpsNoAttack, $01
000366                  	smpsAlterVol		$02
000366 E602             	dc.b	$E6,$02
000368 E701             	dc.b	smpsNoAttack, $01
00036A                  	smpsAlterVol		$01
00036A E601             	dc.b	$E6,$01
00036C E701             	dc.b	smpsNoAttack, $01
00036E                  	smpsAlterVol		$02
00036E E602             	dc.b	$E6,$02

000370                  HDN1R_Splash_Loop4:
                        	;!@ dc.b	smpsNoAttack, $01
000370 C4E701           	dc.b	nG5, smpsNoAttack, $01
000373                  	smpsAlterVol		$02
000373 E602             	dc.b	$E6,$02
000375 E701             	dc.b	smpsNoAttack, $01
000377                  	smpsAlterVol		$03
000377 E603             	dc.b	$E6,$03
000379                  	smpsLoop		$00, $02, HDN1R_Splash_Loop4, Target
000379 F7               	dc.b	$F7
00037A 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop4<*)
00037C                  		rom_ptr_z80(HDN1R_Splash_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
00037C 7083             	dc.w  (((((HDN1R_Splash_Loop4+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	smpsNoAttack, $01
00037E C4E701           	dc.b	nG5, smpsNoAttack, $01
000381                  	smpsAlterVol		$04
000381 E604             	dc.b	$E6,$04
000383 E701             	dc.b	smpsNoAttack, $01
000385                  	smpsAlterVol		$03
000385 E603             	dc.b	$E6,$03
000387 E701             	dc.b	smpsNoAttack, $01
000389                  	smpsAlterVol		$06
000389 E606             	dc.b	$E6,$06
00038B E701             	dc.b	smpsNoAttack, $01
00038D                  	smpsAlterVol		$05
00038D E605             	dc.b	$E6,$05
00038F E701             	dc.b	smpsNoAttack, $01
000391                  	smpsAlterVol		$0A
000391 E60A             	dc.b	$E6,$0A
000393 E701             	dc.b	smpsNoAttack, $01
000395                  	smpsAlterVol		$10
000395 E610             	dc.b	$E6,$10
000397 E701             	dc.b	smpsNoAttack, $01
000399                  	smpsAlterVol		$20
000399 E620             	dc.b	$E6,$20
00039B E70280           	dc.b	smpsNoAttack, $02, nRst

00039E                  HDN1R_Splash_Loop5:
                        	;!@ dc.b	$01
00039E 8001             	dc.b	nRst, $01
0003A0                  	smpsLoop		$00, $18, HDN1R_Splash_Loop5, Target
0003A0 F7               	dc.b	$F7
0003A1 0018             	dc.b	$00,$18
                        	if (HDN1R_Splash_Loop5<*)
0003A3                  		rom_ptr_z80(HDN1R_Splash_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003A3 9E83             	dc.w  (((((HDN1R_Splash_Loop5+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0003A5                  	smpsAlterVol		$BA
0003A5 E6BA             	dc.b	$E6,$BA
                        	;!@ dc.b	nC5
0003A7 BD01             	dc.b	nC5, $01

0003A9                  HDN1R_Splash_Loop6:
                        	;!@ dc.b	smpsNoAttack, $01
0003A9 BDE701           	dc.b	nC5, smpsNoAttack, $01
0003AC                  	smpsAlterVol		$FF
0003AC E6FF             	dc.b	$E6,$FF
0003AE                  	smpsLoop		$00, $04, HDN1R_Splash_Loop6, Target
0003AE F7               	dc.b	$F7
0003AF 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop6<*)
0003B1                  		rom_ptr_z80(HDN1R_Splash_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003B1 A983             	dc.w  (((((HDN1R_Splash_Loop6+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	smpsNoAttack, $02
0003B3 BDE702           	dc.b	nC5, smpsNoAttack, $02
0003B6                  	smpsAlterVol		$FF
0003B6 E6FF             	dc.b	$E6,$FF
0003B8 E701             	dc.b	smpsNoAttack, $01
0003BA                  	smpsAlterVol		$FF
0003BA E6FF             	dc.b	$E6,$FF
0003BC E701             	dc.b	smpsNoAttack, $01
0003BE                  	smpsAlterVol		$FF
0003BE E6FF             	dc.b	$E6,$FF
0003C0 E703             	dc.b	smpsNoAttack, $03
0003C2                  	smpsAlterVol		$FF
0003C2 E6FF             	dc.b	$E6,$FF
0003C4 E701             	dc.b	smpsNoAttack, $01
0003C6                  	smpsAlterVol		$FF
0003C6 E6FF             	dc.b	$E6,$FF
0003C8 E701             	dc.b	smpsNoAttack, $01

0003CA                  HDN1R_Splash_Loop7:
0003CA                  	smpsAlterVol		$FF
0003CA E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $02
0003CC BDE702           	dc.b	nC5, smpsNoAttack, $02
0003CF                  	smpsLoop		$00, $05, HDN1R_Splash_Loop7, Target
0003CF F7               	dc.b	$F7
0003D0 0005             	dc.b	$00,$05
                        	if (HDN1R_Splash_Loop7<*)
0003D2                  		rom_ptr_z80(HDN1R_Splash_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003D2 CA83             	dc.w  (((((HDN1R_Splash_Loop7+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0003D4                  	smpsAlterVol		$F1
0003D4 E6F1             	dc.b	$E6,$F1
0003D6 BC01             	dc.b	nB4, $01
0003D8                  	smpsAlterVol		$FF
0003D8 E6FF             	dc.b	$E6,$FF
0003DA E705             	dc.b	smpsNoAttack, $05
0003DC                  	smpsAlterVol		$FF
0003DC E6FF             	dc.b	$E6,$FF
0003DE E705             	dc.b	smpsNoAttack, $05
0003E0                  	smpsAlterVol		$FF
0003E0 E6FF             	dc.b	$E6,$FF
0003E2 E706             	dc.b	smpsNoAttack, $06
0003E4                  	smpsAlterVol		$FF
0003E4 E6FF             	dc.b	$E6,$FF
0003E6 E706             	dc.b	smpsNoAttack, $06
0003E8                  	smpsAlterVol		$FF
0003E8 E6FF             	dc.b	$E6,$FF
0003EA E705             	dc.b	smpsNoAttack, $05
0003EC                  	smpsAlterVol		$FF
0003EC E6FF             	dc.b	$E6,$FF
0003EE E706             	dc.b	smpsNoAttack, $06
0003F0                  	smpsAlterVol		$FF
0003F0 E6FF             	dc.b	$E6,$FF
0003F2 E707             	dc.b	smpsNoAttack, $07
0003F4                  	smpsAlterVol		$FF
0003F4 E6FF             	dc.b	$E6,$FF
0003F6 E707BD18BE0C     	dc.b	smpsNoAttack, $07, nC5, $18, nCs5, $0C
0003FC                  	smpsAlterVol		$06
0003FC E606             	dc.b	$E6,$06
0003FE                  	smpsJump		HDN1R_Splash_Jump1, Target
0003FE F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump1<*)
0003FF                  		rom_ptr_z80(HDN1R_Splash_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003FF 4B81             	dc.w  (((((HDN1R_Splash_Jump1+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000401                  HDN1R_Splash_FM2:
000401                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
000401 EF00             		dc.b $EF,$00
                        	endif
000403                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000403 E0C0             		dc.b $E0,panCenter
                        	endif
000405                  	smpsAlterNote	$FF
000405 E1FF             	dc.b	$E1,$FF
000407 8006             	dc.b	nRst, $06
000409                  	smpsAlterNote	$00
000409 E100             	dc.b	$E1,$00
00040B 803080558024C101 	dc.b	nRst, $30, nRst, $55, nRst, $24, nE5, $01
000413 C780CD80D0CD80C4 	dc.b	nBb5, nRst, nE6, nRst, nG6, nE6, nRst, nG5
00041B 8080B805         	dc.b	nRst, nRst, nG4, $05
00041F                  	smpsAlterNote	$03
00041F E103             	dc.b	$E1,$03
000421 E7B601           	dc.b	smpsNoAttack, nF4, $01
000424                  	smpsAlterNote	$05
000424 E105             	dc.b	$E1,$05
000426 E7B4             	dc.b	smpsNoAttack, nEb4
000428                  	smpsAlterNote	$07
000428 E107             	dc.b	$E1,$07
00042A E7B2             	dc.b	smpsNoAttack, nCs4
00042C                  	smpsAlterNote	$08
00042C E108             	dc.b	$E1,$08
00042E E7B0             	dc.b	smpsNoAttack, nB3
000430                  	smpsAlterNote	$13
000430 E113             	dc.b	$E1,$13
000432 E7AE             	dc.b	smpsNoAttack, nA3
000434                  	smpsAlterNote	$14
000434 E114             	dc.b	$E1,$14
000436 E7AC             	dc.b	smpsNoAttack, nG3
000438                  	smpsAlterNote	$00
000438 E100             	dc.b	$E1,$00
00043A E70180558053     	dc.b	smpsNoAttack, $01, nRst, $55, nRst, $53
000440                  	smpsAlterVol		$07
000440 E607             	dc.b	$E6,$07
000442 B501B88004BE0180 	dc.b	nE4, $01, nG4, nRst, $04, nCs5, $01, nRst
00044A C780CD80         	dc.b	nBb5, nRst, nE6, nRst

00044E                  HDN1R_Splash_Loop8:
00044E 8054             	dc.b	nRst, $54
000450                  	smpsLoop		$00, $07, HDN1R_Splash_Loop8, Target
000450 F7               	dc.b	$F7
000451 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_Loop8<*)
000453                  		rom_ptr_z80(HDN1R_Splash_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
000453 4E84             	dc.w  (((((HDN1R_Splash_Loop8+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000455                  	smpsAlterNote	$00
000455 E100             	dc.b	$E1,$00

000457                  HDN1R_Splash_Loop9:
000457 8055800A8001802F 	dc.b	nRst, $55, nRst, $0A, nRst, $01, nRst, $2F
00045F 8001802F8001     	dc.b	nRst, $01, nRst, $2F, nRst, $01
000465                  	smpsLoop		$00, $02, HDN1R_Splash_Loop9, Target
000465 F7               	dc.b	$F7
000466 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop9<*)
000468                  		rom_ptr_z80(HDN1R_Splash_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
000468 5784             	dc.w  (((((HDN1R_Splash_Loop9+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00046A                  HDN1R_Splash_Loop10:
00046A 804E             	dc.b	nRst, $4E
00046C                  	smpsLoop		$00, $07, HDN1R_Splash_Loop10, Target
00046C F7               	dc.b	$F7
00046D 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_Loop10<*)
00046F                  		rom_ptr_z80(HDN1R_Splash_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
00046F 6A84             	dc.w  (((((HDN1R_Splash_Loop10+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000471 8055805580558003 	dc.b	nRst, $55, nRst, $55, nRst, $55, nRst, $03
000479                  	smpsJump		HDN1R_Splash_Loop8, Target
000479 F6               	dc.b	$F6
                        	if (HDN1R_Splash_Loop8<*)
00047A                  		rom_ptr_z80(HDN1R_Splash_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
00047A 4E84             	dc.w  (((((HDN1R_Splash_Loop8+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00047C                  HDN1R_Splash_FM3:
00047C                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
00047C E0C0             		dc.b $E0,panCenter
                        	endif
00047E                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
00047E EF01             		dc.b $EF,$01
                        	endif
000480 8009             	dc.b	nRst, $09

000482                  HDN1R_Splash_Loop11:
000482 AF028001A3028001 	dc.b	nBb3, $02, nRst, $01, nBb2, $02, nRst, $01
00048A A9028004A9028001 	dc.b	nE3, $02, nRst, $04, nE3, $02, nRst, $01
000492 9D028001A3028004 	dc.b	nE2, $02, nRst, $01, nBb2, $02, nRst, $04
00049A A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
0004A2 9D0280049D028001 	dc.b	nE2, $02, nRst, $04, nE2, $02, nRst, $01
0004AA 9102800197028004 	dc.b	nE1, $02, nRst, $01, nBb1, $02, nRst, $04
0004B2                  	smpsLoop		$00, $02, HDN1R_Splash_Loop11, Target
0004B2 F7               	dc.b	$F7
0004B3 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop11<*)
0004B5                  		rom_ptr_z80(HDN1R_Splash_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004B5 8284             	dc.w  (((((HDN1R_Splash_Loop11+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0004B7 B2028001A6028001 	dc.b	nCs4, $02, nRst, $01, nCs3, $02, nRst, $01
0004BF B2028004AC028001 	dc.b	nCs4, $02, nRst, $04, nG3, $02, nRst, $01
0004C7 A0028001AC028004 	dc.b	nG2, $02, nRst, $01, nG3, $02, nRst, $04
0004CF A60280019A028001 	dc.b	nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
0004D7 A6028004A3028001 	dc.b	nCs3, $02, nRst, $04, nBb2, $02, nRst, $01
0004DF 97028001A3028001 	dc.b	nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
0004E7 9703             	dc.b	nBb1, $03
0004E9                  	smpsAlterVol		$0A
0004E9 E60A             	dc.b	$E6,$0A
0004EB A3028001         	dc.b	nBb2, $02, nRst, $01
0004EF                  	smpsAlterVol		$F6
0004EF E6F6             	dc.b	$E6,$F6
0004F1 9A03             	dc.b	nCs2, $03
0004F3                  	smpsAlterVol		$0A
0004F3 E60A             	dc.b	$E6,$0A
0004F5 A6028001         	dc.b	nCs3, $02, nRst, $01
0004F9                  	smpsAlterVol		$F6
0004F9 E6F6             	dc.b	$E6,$F6
0004FB A003             	dc.b	nG2, $03
0004FD                  	smpsAlterVol		$0A
0004FD E60A             	dc.b	$E6,$0A
0004FF AC028001         	dc.b	nG3, $02, nRst, $01
000503                  	smpsAlterVol		$F6
000503 E6F6             	dc.b	$E6,$F6
000505 A603             	dc.b	nCs3, $03
000507                  	smpsAlterVol		$0A
000507 E60A             	dc.b	$E6,$0A
000509 B2028001         	dc.b	nCs4, $02, nRst, $01
00050D                  	smpsAlterVol		$F6
00050D E6F6             	dc.b	$E6,$F6
00050F A90380A680A30680 	dc.b	nE3, $03, nRst, nCs3, nRst, nBb2, $06, nRst

000517                  HDN1R_Splash_Loop12:
000517 9B028001A7028001 	dc.b	nD2, $02, nRst, $01, nD3, $02, nRst, $01
00051F                  	smpsLoop		$00, $18, HDN1R_Splash_Loop12, Target
00051F F7               	dc.b	$F7
000520 0018             	dc.b	$00,$18
                        	if (HDN1R_Splash_Loop12<*)
000522                  		rom_ptr_z80(HDN1R_Splash_Loop12+Target)
                        	;dc.w z80_ptr(ptr,addr)
000522 1785             	dc.w  (((((HDN1R_Splash_Loop12+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop12+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000524                  HDN1R_Splash_Loop13:
000524 9A028001A6028001 	dc.b	nCs2, $02, nRst, $01, nCs3, $02, nRst, $01
00052C                  	smpsLoop		$00, $03, HDN1R_Splash_Loop13, Target
00052C F7               	dc.b	$F7
00052D 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop13<*)
00052F                  		rom_ptr_z80(HDN1R_Splash_Loop13+Target)
                        	;dc.w z80_ptr(ptr,addr)
00052F 2485             	dc.w  (((((HDN1R_Splash_Loop13+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop13+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000531 9A028001A602800D 	dc.b	nCs2, $02, nRst, $01, nCs3, $02, nRst, $0D

000539                  HDN1R_Splash_Jump2:
000539 800C             	dc.b	nRst, $0C
00053B                  	smpsAlterVol		$01
00053B E601             	dc.b	$E6,$01

00053D                  HDN1R_Splash_Loop14:
00053D 9B028001A7028001 	dc.b	nD2, $02, nRst, $01, nD3, $02, nRst, $01
000545                  	smpsLoop		$00, $06, HDN1R_Splash_Loop14, Target
000545 F7               	dc.b	$F7
000546 0006             	dc.b	$00,$06
                        	if (HDN1R_Splash_Loop14<*)
000548                  		rom_ptr_z80(HDN1R_Splash_Loop14+Target)
                        	;dc.w z80_ptr(ptr,addr)
000548 3D85             	dc.w  (((((HDN1R_Splash_Loop14+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop14+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00054A                  HDN1R_Splash_Loop15:
00054A 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
000552                  	smpsLoop		$00, $02, HDN1R_Splash_Loop15, Target
000552 F7               	dc.b	$F7
000553 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop15<*)
000555                  		rom_ptr_z80(HDN1R_Splash_Loop15+Target)
                        	;dc.w z80_ptr(ptr,addr)
000555 4A85             	dc.w  (((((HDN1R_Splash_Loop15+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop15+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000557                  HDN1R_Splash_Loop16:
000557 97028001A3028001 	dc.b	nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
00055F                  	smpsLoop		$00, $04, HDN1R_Splash_Loop16, Target
00055F F7               	dc.b	$F7
000560 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop16<*)
000562                  		rom_ptr_z80(HDN1R_Splash_Loop16+Target)
                        	;dc.w z80_ptr(ptr,addr)
000562 5785             	dc.w  (((((HDN1R_Splash_Loop16+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop16+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000564                  HDN1R_Splash_Loop17:
000564 99028001A5028001 	dc.b	nC2, $02, nRst, $01, nC3, $02, nRst, $01
00056C                  	smpsLoop		$00, $04, HDN1R_Splash_Loop17, Target
00056C F7               	dc.b	$F7
00056D 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop17<*)
00056F                  		rom_ptr_z80(HDN1R_Splash_Loop17+Target)
                        	;dc.w z80_ptr(ptr,addr)
00056F 6485             	dc.w  (((((HDN1R_Splash_Loop17+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop17+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000571                  HDN1R_Splash_Loop18:
000571 94028001A0028001 	dc.b	nG1, $02, nRst, $01, nG2, $02, nRst, $01
000579                  	smpsLoop		$00, $04, HDN1R_Splash_Loop18, Target
000579 F7               	dc.b	$F7
00057A 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop18<*)
00057C                  		rom_ptr_z80(HDN1R_Splash_Loop18+Target)
                        	;dc.w z80_ptr(ptr,addr)
00057C 7185             	dc.w  (((((HDN1R_Splash_Loop18+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop18+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00057E                  HDN1R_Splash_Loop19:
00057E 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
000586                  	smpsLoop		$00, $04, HDN1R_Splash_Loop19, Target
000586 F7               	dc.b	$F7
000587 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop19<*)
000589                  		rom_ptr_z80(HDN1R_Splash_Loop19+Target)
                        	;dc.w z80_ptr(ptr,addr)
000589 7E85             	dc.w  (((((HDN1R_Splash_Loop19+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop19+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00058B                  HDN1R_Splash_Loop20:
00058B 9D028001A9028001 	dc.b	nE2, $02, nRst, $01, nE3, $02, nRst, $01
000593                  	smpsLoop		$00, $08, HDN1R_Splash_Loop20, Target
000593 F7               	dc.b	$F7
000594 0008             	dc.b	$00,$08
                        	if (HDN1R_Splash_Loop20<*)
000596                  		rom_ptr_z80(HDN1R_Splash_Loop20+Target)
                        	;dc.w z80_ptr(ptr,addr)
000596 8B85             	dc.w  (((((HDN1R_Splash_Loop20+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop20+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000598                  HDN1R_Splash_Loop21:
000598 9B028001A7028001 	dc.b	nD2, $02, nRst, $01, nD3, $02, nRst, $01
0005A0                  	smpsLoop		$00, $06, HDN1R_Splash_Loop21, Target
0005A0 F7               	dc.b	$F7
0005A1 0006             	dc.b	$00,$06
                        	if (HDN1R_Splash_Loop21<*)
0005A3                  		rom_ptr_z80(HDN1R_Splash_Loop21+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005A3 9885             	dc.w  (((((HDN1R_Splash_Loop21+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop21+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005A5                  HDN1R_Splash_Loop22:
0005A5 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
0005AD                  	smpsLoop		$00, $02, HDN1R_Splash_Loop22, Target
0005AD F7               	dc.b	$F7
0005AE 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop22<*)
0005B0                  		rom_ptr_z80(HDN1R_Splash_Loop22+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005B0 A585             	dc.w  (((((HDN1R_Splash_Loop22+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop22+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005B2                  HDN1R_Splash_Loop23:
0005B2 97028001A3028001 	dc.b	nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
0005BA                  	smpsLoop		$00, $04, HDN1R_Splash_Loop23, Target
0005BA F7               	dc.b	$F7
0005BB 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop23<*)
0005BD                  		rom_ptr_z80(HDN1R_Splash_Loop23+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005BD B285             	dc.w  (((((HDN1R_Splash_Loop23+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop23+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005BF                  HDN1R_Splash_Loop24:
0005BF 99028001A5028001 	dc.b	nC2, $02, nRst, $01, nC3, $02, nRst, $01
0005C7                  	smpsLoop		$00, $04, HDN1R_Splash_Loop24, Target
0005C7 F7               	dc.b	$F7
0005C8 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop24<*)
0005CA                  		rom_ptr_z80(HDN1R_Splash_Loop24+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005CA BF85             	dc.w  (((((HDN1R_Splash_Loop24+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop24+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005CC                  HDN1R_Splash_Loop25:
0005CC 94028001A0028001 	dc.b	nG1, $02, nRst, $01, nG2, $02, nRst, $01
0005D4                  	smpsLoop		$00, $04, HDN1R_Splash_Loop25, Target
0005D4 F7               	dc.b	$F7
0005D5 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop25<*)
0005D7                  		rom_ptr_z80(HDN1R_Splash_Loop25+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005D7 CC85             	dc.w  (((((HDN1R_Splash_Loop25+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop25+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005D9                  HDN1R_Splash_Loop26:
0005D9 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
0005E1                  	smpsLoop		$00, $04, HDN1R_Splash_Loop26, Target
0005E1 F7               	dc.b	$F7
0005E2 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop26<*)
0005E4                  		rom_ptr_z80(HDN1R_Splash_Loop26+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005E4 D985             	dc.w  (((((HDN1R_Splash_Loop26+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop26+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005E6                  HDN1R_Splash_Loop27:
0005E6 9D028001A9028001 	dc.b	nE2, $02, nRst, $01, nE3, $02, nRst, $01
0005EE                  	smpsLoop		$00, $04, HDN1R_Splash_Loop27, Target
0005EE F7               	dc.b	$F7
0005EF 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop27<*)
0005F1                  		rom_ptr_z80(HDN1R_Splash_Loop27+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005F1 E685             	dc.w  (((((HDN1R_Splash_Loop27+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop27+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005F3                  HDN1R_Splash_Loop28:
0005F3 9B028001         	dc.b	nD2, $02, nRst, $01

0005F7                  HDN1R_Splash_Loop29:
0005F7 A7028001         	dc.b	nD3, $02, nRst, $01
0005FB                  	smpsLoop		$00, $04, HDN1R_Splash_Loop28, Target
0005FB F7               	dc.b	$F7
0005FC 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_Loop28<*)
0005FE                  		rom_ptr_z80(HDN1R_Splash_Loop28+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005FE F385             	dc.w  (((((HDN1R_Splash_Loop28+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop28+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000600 9B03             	dc.b	nD2, $03
000602                  	smpsLoop		$01, $02, HDN1R_Splash_Loop29, Target
000602 F7               	dc.b	$F7
000603 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop29<*)
000605                  		rom_ptr_z80(HDN1R_Splash_Loop29+Target)
                        	;dc.w z80_ptr(ptr,addr)
000605 F785             	dc.w  (((((HDN1R_Splash_Loop29+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop29+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000607                  HDN1R_Splash_Loop30:
000607 A70280019B028001 	dc.b	nD3, $02, nRst, $01, nD2, $02, nRst, $01
00060F                  	smpsLoop		$00, $03, HDN1R_Splash_Loop30, Target
00060F F7               	dc.b	$F7
000610 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop30<*)
000612                  		rom_ptr_z80(HDN1R_Splash_Loop30+Target)
                        	;dc.w z80_ptr(ptr,addr)
000612 0786             	dc.w  (((((HDN1R_Splash_Loop30+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop30+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000614 A702             	dc.b	nD3, $02

000616                  HDN1R_Splash_Loop32:
000616 80019703         	dc.b	nRst, $01, nBb1, $03

00061A                  HDN1R_Splash_Loop31:
00061A A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000622                  	smpsLoop		$00, $03, HDN1R_Splash_Loop31, Target
000622 F7               	dc.b	$F7
000623 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop31<*)
000625                  		rom_ptr_z80(HDN1R_Splash_Loop31+Target)
                        	;dc.w z80_ptr(ptr,addr)
000625 1A86             	dc.w  (((((HDN1R_Splash_Loop31+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop31+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000627 A302             	dc.b	nBb2, $02
000629                  	smpsLoop		$01, $02, HDN1R_Splash_Loop32, Target
000629 F7               	dc.b	$F7
00062A 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop32<*)
00062C                  		rom_ptr_z80(HDN1R_Splash_Loop32+Target)
                        	;dc.w z80_ptr(ptr,addr)
00062C 1686             	dc.w  (((((HDN1R_Splash_Loop32+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop32+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00062E                  HDN1R_Splash_Loop34:
00062E 80019903         	dc.b	nRst, $01, nC2, $03

000632                  HDN1R_Splash_Loop33:
000632 A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
00063A                  	smpsLoop		$00, $03, HDN1R_Splash_Loop33, Target
00063A F7               	dc.b	$F7
00063B 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop33<*)
00063D                  		rom_ptr_z80(HDN1R_Splash_Loop33+Target)
                        	;dc.w z80_ptr(ptr,addr)
00063D 3286             	dc.w  (((((HDN1R_Splash_Loop33+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop33+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00063F A502             	dc.b	nC3, $02
000641                  	smpsLoop		$01, $02, HDN1R_Splash_Loop34, Target
000641 F7               	dc.b	$F7
000642 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop34<*)
000644                  		rom_ptr_z80(HDN1R_Splash_Loop34+Target)
                        	;dc.w z80_ptr(ptr,addr)
000644 2E86             	dc.w  (((((HDN1R_Splash_Loop34+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop34+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000646 80019A03         	dc.b	nRst, $01, nCs2, $03

00064A                  HDN1R_Splash_Loop35:
00064A A60280019A028001 	dc.b	nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
000652                  	smpsLoop		$00, $03, HDN1R_Splash_Loop35, Target
000652 F7               	dc.b	$F7
000653 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop35<*)
000655                  		rom_ptr_z80(HDN1R_Splash_Loop35+Target)
                        	;dc.w z80_ptr(ptr,addr)
000655 4A86             	dc.w  (((((HDN1R_Splash_Loop35+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop35+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000657 A60280019B038002 	dc.b	nCs3, $02, nRst, $01, nD2, $03, nRst, $02
00065F 9B0380019B098006 	dc.b	nD2, $03, nRst, $01, nD2, $09, nRst, $06
000667                  	smpsAlterVol		$FF
000667 E6FF             	dc.b	$E6,$FF

000669                  HDN1R_Splash_Loop37:
000669 9603             	dc.b	nA1, $03

00066B                  HDN1R_Splash_Loop36:
00066B A202800196028001 	dc.b	nA2, $02, nRst, $01, nA1, $02, nRst, $01
000673                  	smpsLoop		$00, $03, HDN1R_Splash_Loop36, Target
000673 F7               	dc.b	$F7
000674 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop36<*)
000676                  		rom_ptr_z80(HDN1R_Splash_Loop36+Target)
                        	;dc.w z80_ptr(ptr,addr)
000676 6B86             	dc.w  (((((HDN1R_Splash_Loop36+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop36+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000678 A2028001         	dc.b	nA2, $02, nRst, $01
00067C                  	smpsLoop		$01, $08, HDN1R_Splash_Loop37, Target
00067C F7               	dc.b	$F7
00067D 0108             	dc.b	$01,$08
                        	if (HDN1R_Splash_Loop37<*)
00067F                  		rom_ptr_z80(HDN1R_Splash_Loop37+Target)
                        	;dc.w z80_ptr(ptr,addr)
00067F 6986             	dc.w  (((((HDN1R_Splash_Loop37+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop37+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000681                  HDN1R_Splash_Loop39:
000681 9903             	dc.b	nC2, $03

000683                  HDN1R_Splash_Loop38:
000683 A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
00068B                  	smpsLoop		$00, $03, HDN1R_Splash_Loop38, Target
00068B F7               	dc.b	$F7
00068C 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop38<*)
00068E                  		rom_ptr_z80(HDN1R_Splash_Loop38+Target)
                        	;dc.w z80_ptr(ptr,addr)
00068E 8386             	dc.w  (((((HDN1R_Splash_Loop38+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop38+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000690 A5028001         	dc.b	nC3, $02, nRst, $01
000694                  	smpsLoop		$01, $08, HDN1R_Splash_Loop39, Target
000694 F7               	dc.b	$F7
000695 0108             	dc.b	$01,$08
                        	if (HDN1R_Splash_Loop39<*)
000697                  		rom_ptr_z80(HDN1R_Splash_Loop39+Target)
                        	;dc.w z80_ptr(ptr,addr)
000697 8186             	dc.w  (((((HDN1R_Splash_Loop39+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop39+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000699                  	smpsAlterVol		$01
000699 E601             	dc.b	$E6,$01

00069B                  HDN1R_Splash_Loop41:
00069B 9B03             	dc.b	nD2, $03

00069D                  HDN1R_Splash_Loop40:
00069D A70280019B028001 	dc.b	nD3, $02, nRst, $01, nD2, $02, nRst, $01
0006A5                  	smpsLoop		$00, $03, HDN1R_Splash_Loop40, Target
0006A5 F7               	dc.b	$F7
0006A6 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop40<*)
0006A8                  		rom_ptr_z80(HDN1R_Splash_Loop40+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006A8 9D86             	dc.w  (((((HDN1R_Splash_Loop40+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop40+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006AA A7028001         	dc.b	nD3, $02, nRst, $01
0006AE                  	smpsLoop		$01, $02, HDN1R_Splash_Loop41, Target
0006AE F7               	dc.b	$F7
0006AF 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop41<*)
0006B1                  		rom_ptr_z80(HDN1R_Splash_Loop41+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006B1 9B86             	dc.w  (((((HDN1R_Splash_Loop41+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop41+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0006B3                  HDN1R_Splash_Loop43:
0006B3 9703             	dc.b	nBb1, $03

0006B5                  HDN1R_Splash_Loop42:
0006B5 A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
0006BD                  	smpsLoop		$00, $03, HDN1R_Splash_Loop42, Target
0006BD F7               	dc.b	$F7
0006BE 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop42<*)
0006C0                  		rom_ptr_z80(HDN1R_Splash_Loop42+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006C0 B586             	dc.w  (((((HDN1R_Splash_Loop42+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop42+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006C2 A3028001         	dc.b	nBb2, $02, nRst, $01
0006C6                  	smpsLoop		$01, $02, HDN1R_Splash_Loop43, Target
0006C6 F7               	dc.b	$F7
0006C7 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop43<*)
0006C9                  		rom_ptr_z80(HDN1R_Splash_Loop43+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006C9 B386             	dc.w  (((((HDN1R_Splash_Loop43+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop43+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0006CB                  HDN1R_Splash_Loop45:
0006CB 9903             	dc.b	nC2, $03

0006CD                  HDN1R_Splash_Loop44:
0006CD A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
0006D5                  	smpsLoop		$00, $03, HDN1R_Splash_Loop44, Target
0006D5 F7               	dc.b	$F7
0006D6 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop44<*)
0006D8                  		rom_ptr_z80(HDN1R_Splash_Loop44+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006D8 CD86             	dc.w  (((((HDN1R_Splash_Loop44+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop44+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006DA A5028001         	dc.b	nC3, $02, nRst, $01
0006DE                  	smpsLoop		$01, $02, HDN1R_Splash_Loop45, Target
0006DE F7               	dc.b	$F7
0006DF 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop45<*)
0006E1                  		rom_ptr_z80(HDN1R_Splash_Loop45+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006E1 CB86             	dc.w  (((((HDN1R_Splash_Loop45+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop45+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006E3 9A03             	dc.b	nCs2, $03

0006E5                  HDN1R_Splash_Loop46:
0006E5 A60280019A028001 	dc.b	nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
0006ED                  	smpsLoop		$00, $03, HDN1R_Splash_Loop46, Target
0006ED F7               	dc.b	$F7
0006EE 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop46<*)
0006F0                  		rom_ptr_z80(HDN1R_Splash_Loop46+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006F0 E586             	dc.w  (((((HDN1R_Splash_Loop46+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop46+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006F2 A60280019B038002 	dc.b	nCs3, $02, nRst, $01, nD2, $03, nRst, $02
0006FA 9B0380019B098006 	dc.b	nD2, $03, nRst, $01, nD2, $09, nRst, $06
000702 9403             	dc.b	nG1, $03

000704                  HDN1R_Splash_Loop47:
000704 A002800194028001 	dc.b	nG2, $02, nRst, $01, nG1, $02, nRst, $01
00070C                  	smpsLoop		$00, $03, HDN1R_Splash_Loop47, Target
00070C F7               	dc.b	$F7
00070D 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop47<*)
00070F                  		rom_ptr_z80(HDN1R_Splash_Loop47+Target)
                        	;dc.w z80_ptr(ptr,addr)
00070F 0487             	dc.w  (((((HDN1R_Splash_Loop47+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop47+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000711 A00280019503     	dc.b	nG2, $02, nRst, $01, nAb1, $03

000717                  HDN1R_Splash_Loop48:
000717 A102800195028001 	dc.b	nAb2, $02, nRst, $01, nAb1, $02, nRst, $01
00071F                  	smpsLoop		$00, $03, HDN1R_Splash_Loop48, Target
00071F F7               	dc.b	$F7
000720 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop48<*)
000722                  		rom_ptr_z80(HDN1R_Splash_Loop48+Target)
                        	;dc.w z80_ptr(ptr,addr)
000722 1787             	dc.w  (((((HDN1R_Splash_Loop48+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop48+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000724 A10280019703     	dc.b	nAb2, $02, nRst, $01, nBb1, $03

00072A                  HDN1R_Splash_Loop49:
00072A A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000732                  	smpsLoop		$00, $03, HDN1R_Splash_Loop49, Target
000732 F7               	dc.b	$F7
000733 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop49<*)
000735                  		rom_ptr_z80(HDN1R_Splash_Loop49+Target)
                        	;dc.w z80_ptr(ptr,addr)
000735 2A87             	dc.w  (((((HDN1R_Splash_Loop49+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop49+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000737 A30280019903     	dc.b	nBb2, $02, nRst, $01, nC2, $03

00073D                  HDN1R_Splash_Loop50:
00073D A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
000745                  	smpsLoop		$00, $03, HDN1R_Splash_Loop50, Target
000745 F7               	dc.b	$F7
000746 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop50<*)
000748                  		rom_ptr_z80(HDN1R_Splash_Loop50+Target)
                        	;dc.w z80_ptr(ptr,addr)
000748 3D87             	dc.w  (((((HDN1R_Splash_Loop50+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop50+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00074A A50280019C03     	dc.b	nC3, $02, nRst, $01, nEb2, $03

000750                  HDN1R_Splash_Loop51:
000750 A80280019C028001 	dc.b	nEb3, $02, nRst, $01, nEb2, $02, nRst, $01
000758                  	smpsLoop		$00, $03, HDN1R_Splash_Loop51, Target
000758 F7               	dc.b	$F7
000759 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop51<*)
00075B                  		rom_ptr_z80(HDN1R_Splash_Loop51+Target)
                        	;dc.w z80_ptr(ptr,addr)
00075B 5087             	dc.w  (((((HDN1R_Splash_Loop51+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop51+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00075D A80280019E03     	dc.b	nEb3, $02, nRst, $01, nF2, $03

000763                  HDN1R_Splash_Loop52:
000763 AA0280019E028001 	dc.b	nF3, $02, nRst, $01, nF2, $02, nRst, $01
00076B                  	smpsLoop		$00, $03, HDN1R_Splash_Loop52, Target
00076B F7               	dc.b	$F7
00076C 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop52<*)
00076E                  		rom_ptr_z80(HDN1R_Splash_Loop52+Target)
                        	;dc.w z80_ptr(ptr,addr)
00076E 6387             	dc.w  (((((HDN1R_Splash_Loop52+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop52+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000770 AA02             	dc.b	nF3, $02

000772                  HDN1R_Splash_Loop54:
000772 80019703         	dc.b	nRst, $01, nBb1, $03

000776                  HDN1R_Splash_Loop53:
000776 A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
00077E                  	smpsLoop		$00, $03, HDN1R_Splash_Loop53, Target
00077E F7               	dc.b	$F7
00077F 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop53<*)
000781                  		rom_ptr_z80(HDN1R_Splash_Loop53+Target)
                        	;dc.w z80_ptr(ptr,addr)
000781 7687             	dc.w  (((((HDN1R_Splash_Loop53+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop53+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000783 A302             	dc.b	nBb2, $02
000785                  	smpsLoop		$01, $02, HDN1R_Splash_Loop54, Target
000785 F7               	dc.b	$F7
000786 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop54<*)
000788                  		rom_ptr_z80(HDN1R_Splash_Loop54+Target)
                        	;dc.w z80_ptr(ptr,addr)
000788 7287             	dc.w  (((((HDN1R_Splash_Loop54+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop54+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00078A 80019403         	dc.b	nRst, $01, nG1, $03

00078E                  HDN1R_Splash_Loop55:
00078E A002800194028001 	dc.b	nG2, $02, nRst, $01, nG1, $02, nRst, $01
000796                  	smpsLoop		$00, $03, HDN1R_Splash_Loop55, Target
000796 F7               	dc.b	$F7
000797 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop55<*)
000799                  		rom_ptr_z80(HDN1R_Splash_Loop55+Target)
                        	;dc.w z80_ptr(ptr,addr)
000799 8E87             	dc.w  (((((HDN1R_Splash_Loop55+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop55+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00079B A00280019503     	dc.b	nG2, $02, nRst, $01, nAb1, $03

0007A1                  HDN1R_Splash_Loop56:
0007A1 A102800195028001 	dc.b	nAb2, $02, nRst, $01, nAb1, $02, nRst, $01
0007A9                  	smpsLoop		$00, $03, HDN1R_Splash_Loop56, Target
0007A9 F7               	dc.b	$F7
0007AA 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop56<*)
0007AC                  		rom_ptr_z80(HDN1R_Splash_Loop56+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007AC A187             	dc.w  (((((HDN1R_Splash_Loop56+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop56+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007AE A10280019703     	dc.b	nAb2, $02, nRst, $01, nBb1, $03

0007B4                  HDN1R_Splash_Loop57:
0007B4 A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
0007BC                  	smpsLoop		$00, $03, HDN1R_Splash_Loop57, Target
0007BC F7               	dc.b	$F7
0007BD 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop57<*)
0007BF                  		rom_ptr_z80(HDN1R_Splash_Loop57+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007BF B487             	dc.w  (((((HDN1R_Splash_Loop57+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop57+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007C1 A30280019903     	dc.b	nBb2, $02, nRst, $01, nC2, $03

0007C7                  HDN1R_Splash_Loop58:
0007C7 A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
0007CF                  	smpsLoop		$00, $03, HDN1R_Splash_Loop58, Target
0007CF F7               	dc.b	$F7
0007D0 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop58<*)
0007D2                  		rom_ptr_z80(HDN1R_Splash_Loop58+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007D2 C787             	dc.w  (((((HDN1R_Splash_Loop58+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop58+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007D4 A50280019C03     	dc.b	nC3, $02, nRst, $01, nEb2, $03

0007DA                  HDN1R_Splash_Loop59:
0007DA A80280019C028001 	dc.b	nEb3, $02, nRst, $01, nEb2, $02, nRst, $01
0007E2                  	smpsLoop		$00, $03, HDN1R_Splash_Loop59, Target
0007E2 F7               	dc.b	$F7
0007E3 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop59<*)
0007E5                  		rom_ptr_z80(HDN1R_Splash_Loop59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007E5 DA87             	dc.w  (((((HDN1R_Splash_Loop59+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop59+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007E7 A80280019203     	dc.b	nEb3, $02, nRst, $01, nF1, $03

0007ED                  HDN1R_Splash_Loop60:
0007ED 9E02800192028001 	dc.b	nF2, $02, nRst, $01, nF1, $02, nRst, $01
0007F5                  	smpsLoop		$00, $03, HDN1R_Splash_Loop60, Target
0007F5 F7               	dc.b	$F7
0007F6 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop60<*)
0007F8                  		rom_ptr_z80(HDN1R_Splash_Loop60+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007F8 ED87             	dc.w  (((((HDN1R_Splash_Loop60+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop60+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007FA 9E0280019503A102 	dc.b	nF2, $02, nRst, $01, nAb1, $03, nAb2, $02
000802 800195028001A102 	dc.b	nRst, $01, nAb1, $02, nRst, $01, nAb2, $02
00080A 80019703A3028001 	dc.b	nRst, $01, nBb1, $03, nBb2, $02, nRst, $01
000812 97028001A302     	dc.b	nBb1, $02, nRst, $01, nBb2, $02

000818                  HDN1R_Splash_Loop62:
000818 80019903         	dc.b	nRst, $01, nC2, $03

00081C                  HDN1R_Splash_Loop61:
00081C A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
000824                  	smpsLoop		$00, $03, HDN1R_Splash_Loop61, Target
000824 F7               	dc.b	$F7
000825 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop61<*)
000827                  		rom_ptr_z80(HDN1R_Splash_Loop61+Target)
                        	;dc.w z80_ptr(ptr,addr)
000827 1C88             	dc.w  (((((HDN1R_Splash_Loop61+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop61+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000829 A502             	dc.b	nC3, $02
00082B                  	smpsLoop		$01, $07, HDN1R_Splash_Loop62, Target
00082B F7               	dc.b	$F7
00082C 0107             	dc.b	$01,$07
                        	if (HDN1R_Splash_Loop62<*)
00082E                  		rom_ptr_z80(HDN1R_Splash_Loop62+Target)
                        	;dc.w z80_ptr(ptr,addr)
00082E 1888             	dc.w  (((((HDN1R_Splash_Loop62+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop62+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000830                  	smpsAlterNote	$00
000830 E100             	dc.b	$E1,$00
000832 8055             	dc.b	nRst, $55
000834                  	smpsAlterVol		$FF
000834 E6FF             	dc.b	$E6,$FF
000836                  	smpsJump		HDN1R_Splash_Jump2, Target
000836 F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump2<*)
000837                  		rom_ptr_z80(HDN1R_Splash_Jump2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000837 3985             	dc.w  (((((HDN1R_Splash_Jump2+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000839                  HDN1R_Splash_FM4:
000839                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000839 E0C0             		dc.b $E0,panCenter
                        	endif
00083B                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
00083B EF02             		dc.b $EF,$02
                        	endif
00083D 8006             	dc.b	nRst, $06

00083F                  HDN1R_Splash_Loop63:
00083F BB098003B5098003 	dc.b	nBb4, $09, nRst, $03, nE4, $09, nRst, $03
000847 B2098003AF098003 	dc.b	nCs4, $09, nRst, $03, nBb3, $09, nRst, $03
00084F                  	smpsLoop		$00, $02, HDN1R_Splash_Loop63, Target
00084F F7               	dc.b	$F7
000850 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop63<*)
000852                  		rom_ptr_z80(HDN1R_Splash_Loop63+Target)
                        	;dc.w z80_ptr(ptr,addr)
000852 3F88             	dc.w  (((((HDN1R_Splash_Loop63+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop63+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000854 BE098003BB098003 	dc.b	nCs5, $09, nRst, $03, nBb4, $09, nRst, $03
00085C B8098003B5098003 	dc.b	nG4, $09, nRst, $03, nE4, $09, nRst, $03
000864 AF06B2B4B2078011 	dc.b	nBb3, $06, nCs4, nEb4, nCs4, $07, nRst, $11
00086C                  	smpsFMvoice		$04
                        	;if song<>""
                        	if 1==2
                        	else
00086C EF04             		dc.b $EF,$04
                        	endif
00086E 8006             	dc.b	nRst, $06
000870                  	smpsAlterVol		$0C
000870 E60C             	dc.b	$E6,$0C
                        	;!@ dc.b	nD4

000872                  HDN1R_Splash_Loop64:
                        	;!@ dc.b	$03
000872 B303             	dc.b	nD4, $03
000874                  	smpsAlterVol		$F5
000874 E6F5             	dc.b	$E6,$F5
                        	;!@ dc.b	$03
000876 B303             	dc.b	nD4, $03
000878                  	smpsAlterVol		$0B
000878 E60B             	dc.b	$E6,$0B
00087A                  	smpsLoop		$00, $18, HDN1R_Splash_Loop64, Target
00087A F7               	dc.b	$F7
00087B 0018             	dc.b	$00,$18
                        	if (HDN1R_Splash_Loop64<*)
00087D                  		rom_ptr_z80(HDN1R_Splash_Loop64+Target)
                        	;dc.w z80_ptr(ptr,addr)
00087D 7288             	dc.w  (((((HDN1R_Splash_Loop64+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop64+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nE4
00087F B503             	dc.b	nE4, $03
000881                  	smpsAlterVol		$F5
000881 E6F5             	dc.b	$E6,$F5
                        	;!@ dc.b	$03
000883 B503             	dc.b	nE4, $03
000885                  	smpsAlterVol		$0A
000885 E60A             	dc.b	$E6,$0A
                        	;!@ dc.b	$03
000887 B503             	dc.b	nE4, $03
000889                  	smpsAlterVol		$F6
000889 E6F6             	dc.b	$E6,$F6
                        	;!@ dc.b	$03
00088B B503             	dc.b	nE4, $03
00088D                  	smpsAlterVol		$0B
00088D E60B             	dc.b	$E6,$0B
                        	;!@ dc.b	$03
00088F B503             	dc.b	nE4, $03
000891                  	smpsAlterVol		$F5
000891 E6F5             	dc.b	$E6,$F5
                        	;!@ dc.b	$03
000893 B503             	dc.b	nE4, $03
000895                  	smpsAlterVol		$0A
000895 E60A             	dc.b	$E6,$0A
                        	;!@ dc.b	$03
000897 B503             	dc.b	nE4, $03
000899                  	smpsAlterVol		$F6
000899 E6F6             	dc.b	$E6,$F6
                        	;!@ dc.b	$03
00089B B503             	dc.b	nE4, $03
00089D                  	smpsAlterVol		$FE
00089D E6FE             	dc.b	$E6,$FE
                        	;!@ dc.b	$03, nRst, $02, nE4, $03, nRst, $01, nE4
00089F B5038002B5038001 	dc.b	nE4, $03, nRst, $02, nE4, $03, nRst, $01, nE4
0008A7 B5
0008A8 03               	dc.b	$03

0008A9                  HDN1R_Splash_Jump3:
0008A9 8006             	dc.b	nRst, $06
0008AB                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
0008AB EF05             		dc.b $EF,$05
                        	endif
0008AD 8006             	dc.b	nRst, $06
0008AF                  	smpsAlterVol		$09
0008AF E609             	dc.b	$E6,$09

0008B1                  HDN1R_Splash_Loop65:
                        	;!@ dc.b	nA3, $03, $02, nRst, $01, nA3, $02, nRst
0008B1 AE03AE028001AE02 	dc.b	nA3, $03, nA3, $02, nRst, $01, nA3, $02, nRst
0008B9 80
0008BA 01               	dc.b	$01
0008BB                  	smpsLoop		$00, $02, HDN1R_Splash_Loop65, Target
0008BB F7               	dc.b	$F7
0008BC 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop65<*)
0008BE                  		rom_ptr_z80(HDN1R_Splash_Loop65+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008BE B188             	dc.w  (((((HDN1R_Splash_Loop65+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop65+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008C0 AE03028001AE0302 	dc.b	nA3, $03, $02, nRst, $01, nA3, $03, $02
0008C8 8001AE028001B103 	dc.b	nRst, $01, nA3, $02, nRst, $01, nC4, $03
0008D0 028001B1028001B4 	dc.b	$02, nRst, $01, nC4, $02, nRst, $01, nEb4
0008D8 03028001B3030280 	dc.b	$03, $02, nRst, $01, nD4, $03, $02, nRst
0008E0 01B303028001B302 	dc.b	$01, nD4, $03, $02, nRst, $01, nD4, $02
0008E8 01028001B3030280 	dc.b	$01, $02, nRst, $01, nD4, $03, $02, nRst
0008F0 01B503028001B503 	dc.b	$01, nE4, $03, $02, nRst, $01, nE4, $03
0008F8 028001B5028001B5 	dc.b	$02, nRst, $01, nE4, $02, nRst, $01, nE4
000900 028001B50302     	dc.b	$02, nRst, $01, nE4, $03, $02

000906                  HDN1R_Splash_Loop66:
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01, nD4
000906 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01, nD4
00090E B3
00090F 02               	dc.b	$02
000910                  	smpsLoop		$00, $02, HDN1R_Splash_Loop66, Target
000910 F7               	dc.b	$F7
000911 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop66<*)
000913                  		rom_ptr_z80(HDN1R_Splash_Loop66+Target)
                        	;dc.w z80_ptr(ptr,addr)
000913 0689             	dc.w  (((((HDN1R_Splash_Loop66+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop66+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD4, $03, $02
000915 8001B303B302     	dc.b	nRst, $01, nD4, $03, nD4, $02

00091B                  HDN1R_Splash_Loop67:
                        	;!@ dc.b	nRst, $01, nC4, $03, $02, nRst, $01, nC4
00091B 8001B103B1028001 	dc.b	nRst, $01, nC4, $03, nC4, $02, nRst, $01, nC4
000923 B1
000924 02               	dc.b	$02
000925                  	smpsLoop		$00, $02, HDN1R_Splash_Loop67, Target
000925 F7               	dc.b	$F7
000926 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop67<*)
000928                  		rom_ptr_z80(HDN1R_Splash_Loop67+Target)
                        	;dc.w z80_ptr(ptr,addr)
000928 1B89             	dc.w  (((((HDN1R_Splash_Loop67+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop67+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nC4, $03, $02
00092A 8001B103B102     	dc.b	nRst, $01, nC4, $03, nC4, $02

000930                  HDN1R_Splash_Loop68:
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02, nRst, $01, nBb3
000930 8001AF03AF028001 	dc.b	nRst, $01, nBb3, $03, nBb3, $02, nRst, $01, nBb3
000938 AF
000939 02               	dc.b	$02
00093A                  	smpsLoop		$00, $02, HDN1R_Splash_Loop68, Target
00093A F7               	dc.b	$F7
00093B 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop68<*)
00093D                  		rom_ptr_z80(HDN1R_Splash_Loop68+Target)
                        	;dc.w z80_ptr(ptr,addr)
00093D 3089             	dc.w  (((((HDN1R_Splash_Loop68+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop68+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02
00093F 8001AF03AF02     	dc.b	nRst, $01, nBb3, $03, nBb3, $02

000945                  HDN1R_Splash_Loop69:
                        	;!@ dc.b	nRst, $01, nE4, $03, $02, nRst, $01, nE4
000945 8001B503B5028001 	dc.b	nRst, $01, nE4, $03, nE4, $02, nRst, $01, nE4
00094D B5
00094E 02               	dc.b	$02
00094F                  	smpsLoop		$00, $02, HDN1R_Splash_Loop69, Target
00094F F7               	dc.b	$F7
000950 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop69<*)
000952                  		rom_ptr_z80(HDN1R_Splash_Loop69+Target)
                        	;dc.w z80_ptr(ptr,addr)
000952 4589             	dc.w  (((((HDN1R_Splash_Loop69+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop69+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nE4, $03, $02, nRst, $01
000954 8001B503B5028001 	dc.b	nRst, $01, nE4, $03, nE4, $02, nRst, $01
00095C                  	smpsAlterVol		$01
00095C E601             	dc.b	$E6,$01

00095E                  HDN1R_Splash_Loop70:
                        	;!@ dc.b	nA3, $03, $02, nRst, $01, nA3, $02, nRst
00095E AE03AE028001AE02 	dc.b	nA3, $03, nA3, $02, nRst, $01, nA3, $02, nRst
000966 80
000967 01               	dc.b	$01
000968                  	smpsLoop		$00, $02, HDN1R_Splash_Loop70, Target
000968 F7               	dc.b	$F7
000969 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop70<*)
00096B                  		rom_ptr_z80(HDN1R_Splash_Loop70+Target)
                        	;dc.w z80_ptr(ptr,addr)
00096B 5E89             	dc.w  (((((HDN1R_Splash_Loop70+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop70+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nA3, $03, $02, nRst, $01, nA3, $03, $02
00096D AE03AE028001AE03 	dc.b	nA3, $03, nA3, $02, nRst, $01, nA3, $03, nA3, $02
000975 AE02
000977 8001AE028001B103 	dc.b	nRst, $01, nA3, $02, nRst, $01, nC4, $03
00097F 028001B1028001B4 	dc.b	$02, nRst, $01, nC4, $02, nRst, $01, nEb4
000987 03028001B3030280 	dc.b	$03, $02, nRst, $01, nD4, $03, $02, nRst
00098F 01B303028001B302 	dc.b	$01, nD4, $03, $02, nRst, $01, nD4, $02
000997 01028001B3030280 	dc.b	$01, $02, nRst, $01, nD4, $03, $02, nRst
00099F 01B503028001B503 	dc.b	$01, nE4, $03, $02, nRst, $01, nE4, $03
0009A7 028001B5028001B5 	dc.b	$02, nRst, $01, nE4, $02, nRst, $01, nE4
0009AF 028001B50302     	dc.b	$02, nRst, $01, nE4, $03, $02

0009B5                  HDN1R_Splash_Loop71:
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01, nD4
0009B5 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01, nD4
0009BD B3
0009BE 02               	dc.b	$02
0009BF                  	smpsLoop		$00, $02, HDN1R_Splash_Loop71, Target
0009BF F7               	dc.b	$F7
0009C0 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop71<*)
0009C2                  		rom_ptr_z80(HDN1R_Splash_Loop71+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009C2 B589             	dc.w  (((((HDN1R_Splash_Loop71+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop71+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD4, $03, $02
0009C4 8001B303B302     	dc.b	nRst, $01, nD4, $03, nD4, $02

0009CA                  HDN1R_Splash_Loop72:
                        	;!@ dc.b	nRst, $01, nC4, $03, $02, nRst, $01, nC4
0009CA 8001B103B1028001 	dc.b	nRst, $01, nC4, $03, nC4, $02, nRst, $01, nC4
0009D2 B1
0009D3 02               	dc.b	$02
0009D4                  	smpsLoop		$00, $02, HDN1R_Splash_Loop72, Target
0009D4 F7               	dc.b	$F7
0009D5 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop72<*)
0009D7                  		rom_ptr_z80(HDN1R_Splash_Loop72+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009D7 CA89             	dc.w  (((((HDN1R_Splash_Loop72+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop72+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nC4, $03, $02
0009D9 8001B103B102     	dc.b	nRst, $01, nC4, $03, nC4, $02

0009DF                  HDN1R_Splash_Loop73:
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02, nRst, $01, nBb3
0009DF 8001AF03AF028001 	dc.b	nRst, $01, nBb3, $03, nBb3, $02, nRst, $01, nBb3
0009E7 AF
0009E8 02               	dc.b	$02
0009E9                  	smpsLoop		$00, $02, HDN1R_Splash_Loop73, Target
0009E9 F7               	dc.b	$F7
0009EA 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop73<*)
0009EC                  		rom_ptr_z80(HDN1R_Splash_Loop73+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009EC DF89             	dc.w  (((((HDN1R_Splash_Loop73+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop73+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02
0009EE 8001AF03AF02     	dc.b	nRst, $01, nBb3, $03, nBb3, $02

0009F4                  HDN1R_Splash_Loop74:
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01, nD4
0009F4 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01, nD4
0009FC B3
0009FD 02               	dc.b	$02
0009FE                  	smpsLoop		$00, $02, HDN1R_Splash_Loop74, Target
0009FE F7               	dc.b	$F7
0009FF 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop74<*)
000A01                  		rom_ptr_z80(HDN1R_Splash_Loop74+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A01 F489             	dc.w  (((((HDN1R_Splash_Loop74+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop74+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01
000A03 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01
000A0B                  	smpsAlterVol		$FC
000A0B E6FC             	dc.b	$E6,$FC
                        	;!@ dc.b	nD4, $02, $01, $02, nRst, $04
000A0D B302B301B3028004 	dc.b	nD4, $02, nD4, $01, nD4, $02, nRst, $04
000A15                  	smpsAlterVol		$06
000A15 E606             	dc.b	$E6,$06
000A17 B30380B380       	dc.b	nD4, $03, nRst, nD4, nRst
000A1C                  	smpsAlterVol		$FA
000A1C E6FA             	dc.b	$E6,$FA
                        	;!@ dc.b	nD4, $02, nRst, $04, nD4
000A1E B3028004         	dc.b	nD4, $02, nRst, $04

000A22                  HDN1R_Splash_Loop75:
                        	;!@ dc.b	$02, nRst, $07, nD4, $02, $01
000A22 B3028007B302B301 	dc.b	nD4, $02, nRst, $07, nD4, $02, nD4, $01	
000A2A                  	smpsLoop		$00, $02, HDN1R_Splash_Loop75, Target
000A2A F7               	dc.b	$F7
000A2B 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop75<*)
000A2D                  		rom_ptr_z80(HDN1R_Splash_Loop75+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A2D 228A             	dc.w  (((((HDN1R_Splash_Loop75+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop75+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $01	
000A2F B3028001         	dc.b	nD4, $02, nRst, $01
000A33                  	smpsAlterVol		$06
000A33 E606             	dc.b	$E6,$06
000A35 B30380B38006     	dc.b	nD4, $03, nRst, nD4, nRst, $06
000A3B                  	smpsAlterVol		$FA
000A3B E6FA             	dc.b	$E6,$FA
000A3D B3028004B3028007 	dc.b	nD4, $02, nRst, $04, nD4, $02, nRst, $07

000A45                  HDN1R_Splash_Loop76:
                        	;!@ dc.b	nD4, $02, $01, $02, nRst, $01
000A45 B302B301B3028001 	dc.b	nD4, $02, nD4, $01, nD4, $02, nRst, $01
000A4D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop76, Target
000A4D F7               	dc.b	$F7
000A4E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop76<*)
000A50                  		rom_ptr_z80(HDN1R_Splash_Loop76+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A50 458A             	dc.w  (((((HDN1R_Splash_Loop76+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop76+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC4, $02, $01, $02, nRst, $01
000A52 B102B101B1028001 	dc.b	nC4, $02, nC4, $01, nC4, $02, nRst, $01
000A5A                  	smpsAlterVol		$06
000A5A E606             	dc.b	$E6,$06
000A5C B10380B18006     	dc.b	nC4, $03, nRst, nC4, nRst, $06
000A62                  	smpsAlterVol		$FA
000A62 E6FA             	dc.b	$E6,$FA
000A64 B1028004B1028007 	dc.b	nC4, $02, nRst, $04, nC4, $02, nRst, $07

000A6C                  HDN1R_Splash_Loop77:
                        	;!@ dc.b	nC4, $02, $01, $02, nRst, $01
000A6C B102B101B1028001 	dc.b	nC4, $02, nC4, $01, nC4, $02, nRst, $01
000A74                  	smpsLoop		$00, $02, HDN1R_Splash_Loop77, Target
000A74 F7               	dc.b	$F7
000A75 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop77<*)
000A77                  		rom_ptr_z80(HDN1R_Splash_Loop77+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A77 6C8A             	dc.w  (((((HDN1R_Splash_Loop77+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop77+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nCs4, $02, $01, $02, nRst, $01
000A79 B202B201B2028001 	dc.b	nCs4, $02, nCs4, $01, nCs4, $02, nRst, $01
000A81                  	smpsAlterVol		$06
000A81 E606             	dc.b	$E6,$06
                        	;!@ dc.b	nCs4, $03, nRst, nCs4, nRst
000A83 B2038003B2038003 	dc.b	nCs4, $03, nRst, $03, nCs4, $03, nRst, $03
000A8B                  	smpsAlterVol		$FA
000A8B E6FA             	dc.b	$E6,$FA
000A8D B2028001B2028001 	dc.b	nCs4, $02, nRst, $01, nCs4, $02, nRst, $01
000A95 B3028003B3018003 	dc.b	nD4, $02, nRst, $03, nD4, $01, nRst, $03
000A9D B3068009         	dc.b	nD4, $06, nRst, $09
000AA1                  	smpsAlterVol		$FD
000AA1 E6FD             	dc.b	$E6,$FD

000AA3                  HDN1R_Splash_Loop78:
000AA3 960302800196     	dc.b	nA1, $03, $02, nRst, $01, nA1

000AA9                  HDN1R_Splash_Loop79:
000AA9 028001           	dc.b	$02, nRst, $01
000AAC                  	smpsLoop		$00, $02, HDN1R_Splash_Loop78, Target
000AAC F7               	dc.b	$F7
000AAD 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop78<*)
000AAF                  		rom_ptr_z80(HDN1R_Splash_Loop78+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AAF A38A             	dc.w  (((((HDN1R_Splash_Loop78+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop78+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000AB1                  HDN1R_Splash_Loop80:
000AB1 9603             	dc.b	nA1, $03
000AB3                  	smpsLoop		$01, $02, HDN1R_Splash_Loop79, Target
000AB3 F7               	dc.b	$F7
000AB4 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop79<*)
000AB6                  		rom_ptr_z80(HDN1R_Splash_Loop79+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AB6 A98A             	dc.w  (((((HDN1R_Splash_Loop79+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop79+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000AB8 02800196028001   	dc.b	$02, nRst, $01, nA1, $02, nRst, $01
000ABF                  	smpsLoop		$02, $07, HDN1R_Splash_Loop80, Target
000ABF F7               	dc.b	$F7
000AC0 0207             	dc.b	$02,$07
                        	if (HDN1R_Splash_Loop80<*)
000AC2                  		rom_ptr_z80(HDN1R_Splash_Loop80+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AC2 B18A             	dc.w  (((((HDN1R_Splash_Loop80+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop80+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000AC4 9603             	dc.b	nA1, $03

000AC6                  HDN1R_Splash_Loop82:
000AC6 02               	dc.b	$02

000AC7                  HDN1R_Splash_Loop81:
000AC7 8001A503028001A5 	dc.b	nRst, $01, nC3, $03, $02, nRst, $01, nC3
000ACF 02               	dc.b	$02
000AD0                  	smpsLoop		$00, $02, HDN1R_Splash_Loop81, Target
000AD0 F7               	dc.b	$F7
000AD1 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop81<*)
000AD3                  		rom_ptr_z80(HDN1R_Splash_Loop81+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AD3 C78A             	dc.w  (((((HDN1R_Splash_Loop81+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop81+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000AD5 8001A503         	dc.b	nRst, $01, nC3, $03
000AD9                  	smpsLoop		$01, $08, HDN1R_Splash_Loop82, Target
000AD9 F7               	dc.b	$F7
000ADA 0108             	dc.b	$01,$08
                        	if (HDN1R_Splash_Loop82<*)
000ADC                  		rom_ptr_z80(HDN1R_Splash_Loop82+Target)
                        	;dc.w z80_ptr(ptr,addr)
000ADC C68A             	dc.w  (((((HDN1R_Splash_Loop82+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop82+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000ADE 028001           	dc.b	$02, nRst, $01
000AE1                  	smpsAlterVol		$03
000AE1 E603             	dc.b	$E6,$03
000AE3 B30201028004     	dc.b	nD4, $02, $01, $02, nRst, $04
000AE9                  	smpsAlterVol		$06
000AE9 E606             	dc.b	$E6,$06
000AEB B30380B380       	dc.b	nD4, $03, nRst, nD4, nRst
000AF0                  	smpsAlterVol		$FA
000AF0 E6FA             	dc.b	$E6,$FA
000AF2 B3028004B3       	dc.b	nD4, $02, nRst, $04, nD4

000AF7                  HDN1R_Splash_Loop83:
000AF7 028007B30201     	dc.b	$02, nRst, $07, nD4, $02, $01
000AFD                  	smpsLoop		$00, $02, HDN1R_Splash_Loop83, Target
000AFD F7               	dc.b	$F7
000AFE 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop83<*)
000B00                  		rom_ptr_z80(HDN1R_Splash_Loop83+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B00 F78A             	dc.w  (((((HDN1R_Splash_Loop83+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop83+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B02 028001           	dc.b	$02, nRst, $01
000B05                  	smpsAlterVol		$06
000B05 E606             	dc.b	$E6,$06
000B07 B30380B38006     	dc.b	nD4, $03, nRst, nD4, nRst, $06
000B0D                  	smpsAlterVol		$FA
000B0D E6FA             	dc.b	$E6,$FA
000B0F B3028004B3028007 	dc.b	nD4, $02, nRst, $04, nD4, $02, nRst, $07

000B17                  HDN1R_Splash_Loop84:
000B17 B30201028001     	dc.b	nD4, $02, $01, $02, nRst, $01
000B1D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop84, Target
000B1D F7               	dc.b	$F7
000B1E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop84<*)
000B20                  		rom_ptr_z80(HDN1R_Splash_Loop84+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B20 178B             	dc.w  (((((HDN1R_Splash_Loop84+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop84+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B22 B10201028001     	dc.b	nC4, $02, $01, $02, nRst, $01
000B28                  	smpsAlterVol		$06
000B28 E606             	dc.b	$E6,$06
000B2A B10380B18006     	dc.b	nC4, $03, nRst, nC4, nRst, $06
000B30                  	smpsAlterVol		$FA
000B30 E6FA             	dc.b	$E6,$FA
000B32 B1028004B1028007 	dc.b	nC4, $02, nRst, $04, nC4, $02, nRst, $07

000B3A                  HDN1R_Splash_Loop85:
000B3A B10201028001     	dc.b	nC4, $02, $01, $02, nRst, $01
000B40                  	smpsLoop		$00, $02, HDN1R_Splash_Loop85, Target
000B40 F7               	dc.b	$F7
000B41 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop85<*)
000B43                  		rom_ptr_z80(HDN1R_Splash_Loop85+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B43 3A8B             	dc.w  (((((HDN1R_Splash_Loop85+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop85+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B45 B20201028001     	dc.b	nCs4, $02, $01, $02, nRst, $01
000B4B                  	smpsAlterVol		$06
000B4B E606             	dc.b	$E6,$06
000B4D B20380B280       	dc.b	nCs4, $03, nRst, nCs4, nRst
000B52                  	smpsAlterVol		$FA
000B52 E6FA             	dc.b	$E6,$FA
000B54 B2028001B2028001 	dc.b	nCs4, $02, nRst, $01, nCs4, $02, nRst, $01
000B5C B3028003B3018003 	dc.b	nD4, $02, nRst, $03, nD4, $01, nRst, $03
                        	;!@ dc.b	nD4, $06, nRst
000B64 B306             	dc.b	nD4, $06

000B66                  HDN1R_Splash_Loop86:
000B66 804F             	dc.b	nRst, $4F
000B68                  	smpsLoop		$00, $07, HDN1R_Splash_Loop86, Target
000B68 F7               	dc.b	$F7
000B69 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_Loop86<*)
000B6B                  		rom_ptr_z80(HDN1R_Splash_Loop86+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B6B 668B             	dc.w  (((((HDN1R_Splash_Loop86+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop86+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B6D 8002             	dc.b	nRst, $02
000B6F                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000B6F EF02             		dc.b $EF,$02
                        	endif
000B71 8006             	dc.b	nRst, $06
000B73                  	smpsAlterVol		$FD
000B73 E6FD             	dc.b	$E6,$FD
000B75 A40504098006A505 	dc.b	nB2, $05, $04, $09, nRst, $06, nC3, $05
000B7D 04098006A6050403 	dc.b	$04, $09, nRst, $06, nCs3, $05, $04, $03
000B85                  	smpsAlterVol		$FD
000B85 E6FD             	dc.b	$E6,$FD
000B87                  	smpsJump		HDN1R_Splash_Jump3, Target
000B87 F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump3<*)
000B88                  		rom_ptr_z80(HDN1R_Splash_Jump3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B88 A988             	dc.w  (((((HDN1R_Splash_Jump3+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000B8A                  HDN1R_Splash_FM5:
000B8A                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000B8A E0C0             		dc.b $E0,panCenter
                        	endif
000B8C                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000B8C EF02             		dc.b $EF,$02
                        	endif
000B8E 8006             	dc.b	nRst, $06

000B90                  HDN1R_Splash_Loop87:
000B90 C7098003C1098003 	dc.b	nBb5, $09, nRst, $03, nE5, $09, nRst, $03
000B98 BE098003BB098003 	dc.b	nCs5, $09, nRst, $03, nBb4, $09, nRst, $03
000BA0                  	smpsLoop		$00, $02, HDN1R_Splash_Loop87, Target
000BA0 F7               	dc.b	$F7
000BA1 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop87<*)
000BA3                  		rom_ptr_z80(HDN1R_Splash_Loop87+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BA3 908B             	dc.w  (((((HDN1R_Splash_Loop87+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop87+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000BA5 CA098003C7098003 	dc.b	nCs6, $09, nRst, $03, nBb5, $09, nRst, $03
000BAD C4098003C1098003 	dc.b	nG5, $09, nRst, $03, nE5, $09, nRst, $03
000BB5 BB06BEB4BE078011 	dc.b	nBb4, $06, nCs5, nEb4, nCs5, $07, nRst, $11
000BBD                  	smpsFMvoice		$04
                        	;if song<>""
                        	if 1==2
                        	else
000BBD EF04             		dc.b $EF,$04
                        	endif
000BBF 8006             	dc.b	nRst, $06
000BC1                  	smpsAlterVol		$0C
000BC1 E60C             	dc.b	$E6,$0C
                        	;!@ dc.b	nD3

000BC3                  HDN1R_Splash_Loop88:
                        	;!@ dc.b	$03
000BC3 A703             	dc.b	nD3, $03
000BC5                  	smpsAlterVol		$F5
000BC5 E6F5             	dc.b	$E6,$F5
000BC7 03               	dc.b	$03
000BC8                  	smpsAlterVol		$0B
000BC8 E60B             	dc.b	$E6,$0B
000BCA                  	smpsLoop		$00, $18, HDN1R_Splash_Loop88, Target
000BCA F7               	dc.b	$F7
000BCB 0018             	dc.b	$00,$18
                        	if (HDN1R_Splash_Loop88<*)
000BCD                  		rom_ptr_z80(HDN1R_Splash_Loop88+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BCD C38B             	dc.w  (((((HDN1R_Splash_Loop88+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop88+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000BCF A9               	dc.b	nE3
000BD0                  	smpsAlterVol		$F5
000BD0 E6F5             	dc.b	$E6,$F5
000BD2 03               	dc.b	$03
000BD3                  	smpsAlterVol		$0A
000BD3 E60A             	dc.b	$E6,$0A
000BD5 03               	dc.b	$03
000BD6                  	smpsAlterVol		$F6
000BD6 E6F6             	dc.b	$E6,$F6
000BD8 03               	dc.b	$03
000BD9                  	smpsAlterVol		$0B
000BD9 E60B             	dc.b	$E6,$0B
000BDB 03               	dc.b	$03
000BDC                  	smpsAlterVol		$F5
000BDC E6F5             	dc.b	$E6,$F5
000BDE 03               	dc.b	$03
000BDF                  	smpsAlterVol		$0A
000BDF E60A             	dc.b	$E6,$0A
000BE1 03               	dc.b	$03
000BE2                  	smpsAlterVol		$F6
000BE2 E6F6             	dc.b	$E6,$F6
000BE4 03               	dc.b	$03
000BE5                  	smpsAlterVol		$FE
000BE5 E6FE             	dc.b	$E6,$FE
000BE7 038002A9038001A9 	dc.b	$03, nRst, $02, nE3, $03, nRst, $01, nE3
000BEF 03               	dc.b	$03

000BF0                  HDN1R_Splash_Jump4:
000BF0 8006             	dc.b	nRst, $06
000BF2                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
000BF2 EF05             		dc.b $EF,$05
                        	endif
000BF4 8006             	dc.b	nRst, $06
000BF6                  	smpsAlterVol		$09
000BF6 E609             	dc.b	$E6,$09

000BF8                  HDN1R_Splash_Loop89:
000BF8 A203028001A20280 	dc.b	nA2, $03, $02, nRst, $01, nA2, $02, nRst
000C00 01               	dc.b	$01
000C01                  	smpsLoop		$00, $02, HDN1R_Splash_Loop89, Target
000C01 F7               	dc.b	$F7
000C02 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop89<*)
000C04                  		rom_ptr_z80(HDN1R_Splash_Loop89+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C04 F88B             	dc.w  (((((HDN1R_Splash_Loop89+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop89+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000C06 A203028001A20302 	dc.b	nA2, $03, $02, nRst, $01, nA2, $03, $02
000C0E 8001A2028001A503 	dc.b	nRst, $01, nA2, $02, nRst, $01, nC3, $03
000C16 028001A5028001A8 	dc.b	$02, nRst, $01, nC3, $02, nRst, $01, nEb3
000C1E 03028001A7030280 	dc.b	$03, $02, nRst, $01, nD3, $03, $02, nRst
000C26 01A703028001A702 	dc.b	$01, nD3, $03, $02, nRst, $01, nD3, $02
000C2E 01028001A7030280 	dc.b	$01, $02, nRst, $01, nD3, $03, $02, nRst
000C36 01A903028001A903 	dc.b	$01, nE3, $03, $02, nRst, $01, nE3, $03
000C3E 028001A9028001A9 	dc.b	$02, nRst, $01, nE3, $02, nRst, $01, nE3
000C46 028001A90302     	dc.b	$02, nRst, $01, nE3, $03, $02

000C4C                  HDN1R_Splash_Loop90:
000C4C 8001A703028001A7 	dc.b	nRst, $01, nD3, $03, $02, nRst, $01, nD3
000C54 02               	dc.b	$02
000C55                  	smpsLoop		$00, $02, HDN1R_Splash_Loop90, Target
000C55 F7               	dc.b	$F7
000C56 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop90<*)
000C58                  		rom_ptr_z80(HDN1R_Splash_Loop90+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C58 4C8C             	dc.w  (((((HDN1R_Splash_Loop90+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop90+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000C5A 8001A70302       	dc.b	nRst, $01, nD3, $03, $02

000C5F                  HDN1R_Splash_Loop91:
000C5F 8001A503028001A5 	dc.b	nRst, $01, nC3, $03, $02, nRst, $01, nC3
000C67 02               	dc.b	$02
000C68                  	smpsLoop		$00, $02, HDN1R_Splash_Loop91, Target
000C68 F7               	dc.b	$F7
000C69 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop91<*)
000C6B                  		rom_ptr_z80(HDN1R_Splash_Loop91+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C6B 5F8C             	dc.w  (((((HDN1R_Splash_Loop91+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop91+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000C6D 8001A50302       	dc.b	nRst, $01, nC3, $03, $02

000C72                  HDN1R_Splash_Loop92:
000C72 8001A303028001A3 	dc.b	nRst, $01, nBb2, $03, $02, nRst, $01, nBb2
000C7A 02               	dc.b	$02
000C7B                  	smpsLoop		$00, $02, HDN1R_Splash_Loop92, Target
000C7B F7               	dc.b	$F7
000C7C 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop92<*)
000C7E                  		rom_ptr_z80(HDN1R_Splash_Loop92+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C7E 728C             	dc.w  (((((HDN1R_Splash_Loop92+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop92+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000C80 8001A30302       	dc.b	nRst, $01, nBb2, $03, $02

000C85                  HDN1R_Splash_Loop93:
000C85 8001A903028001A9 	dc.b	nRst, $01, nE3, $03, $02, nRst, $01, nE3
000C8D 02               	dc.b	$02
000C8E                  	smpsLoop		$00, $02, HDN1R_Splash_Loop93, Target
000C8E F7               	dc.b	$F7
000C8F 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop93<*)
000C91                  		rom_ptr_z80(HDN1R_Splash_Loop93+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C91 858C             	dc.w  (((((HDN1R_Splash_Loop93+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop93+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000C93 8001A903028001   	dc.b	nRst, $01, nE3, $03, $02, nRst, $01
000C9A                  	smpsAlterVol		$01
000C9A E601             	dc.b	$E6,$01

000C9C                  HDN1R_Splash_Loop94:
000C9C A203028001A20280 	dc.b	nA2, $03, $02, nRst, $01, nA2, $02, nRst
000CA4 01               	dc.b	$01
000CA5                  	smpsLoop		$00, $02, HDN1R_Splash_Loop94, Target
000CA5 F7               	dc.b	$F7
000CA6 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop94<*)
000CA8                  		rom_ptr_z80(HDN1R_Splash_Loop94+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CA8 9C8C             	dc.w  (((((HDN1R_Splash_Loop94+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop94+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000CAA A203028001A20302 	dc.b	nA2, $03, $02, nRst, $01, nA2, $03, $02
000CB2 8001A2028001A503 	dc.b	nRst, $01, nA2, $02, nRst, $01, nC3, $03
000CBA 028001A5028001A8 	dc.b	$02, nRst, $01, nC3, $02, nRst, $01, nEb3
000CC2 03028001A7030280 	dc.b	$03, $02, nRst, $01, nD3, $03, $02, nRst
000CCA 01A703028001A702 	dc.b	$01, nD3, $03, $02, nRst, $01, nD3, $02
000CD2 01028001A7030280 	dc.b	$01, $02, nRst, $01, nD3, $03, $02, nRst
000CDA 01A903028001A903 	dc.b	$01, nE3, $03, $02, nRst, $01, nE3, $03
000CE2 028001A9028001A9 	dc.b	$02, nRst, $01, nE3, $02, nRst, $01, nE3
000CEA 028001A90302     	dc.b	$02, nRst, $01, nE3, $03, $02

000CF0                  HDN1R_Splash_Loop95:
000CF0 8001A703028001A7 	dc.b	nRst, $01, nD3, $03, $02, nRst, $01, nD3
000CF8 02               	dc.b	$02
000CF9                  	smpsLoop		$00, $02, HDN1R_Splash_Loop95, Target
000CF9 F7               	dc.b	$F7
000CFA 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop95<*)
000CFC                  		rom_ptr_z80(HDN1R_Splash_Loop95+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CFC F08C             	dc.w  (((((HDN1R_Splash_Loop95+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop95+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000CFE 8001A70302       	dc.b	nRst, $01, nD3, $03, $02

000D03                  HDN1R_Splash_Loop96:
000D03 8001A503028001A5 	dc.b	nRst, $01, nC3, $03, $02, nRst, $01, nC3
000D0B 02               	dc.b	$02
000D0C                  	smpsLoop		$00, $02, HDN1R_Splash_Loop96, Target
000D0C F7               	dc.b	$F7
000D0D 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop96<*)
000D0F                  		rom_ptr_z80(HDN1R_Splash_Loop96+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D0F 038D             	dc.w  (((((HDN1R_Splash_Loop96+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop96+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000D11 8001A50302       	dc.b	nRst, $01, nC3, $03, $02

000D16                  HDN1R_Splash_Loop97:
000D16 8001A303028001A3 	dc.b	nRst, $01, nBb2, $03, $02, nRst, $01, nBb2
000D1E 02               	dc.b	$02
000D1F                  	smpsLoop		$00, $02, HDN1R_Splash_Loop97, Target
000D1F F7               	dc.b	$F7
000D20 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop97<*)
000D22                  		rom_ptr_z80(HDN1R_Splash_Loop97+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D22 168D             	dc.w  (((((HDN1R_Splash_Loop97+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop97+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000D24 8001A30302       	dc.b	nRst, $01, nBb2, $03, $02

000D29                  HDN1R_Splash_Loop98:
000D29 8001A703028001A7 	dc.b	nRst, $01, nD3, $03, $02, nRst, $01, nD3
000D31 02               	dc.b	$02
000D32                  	smpsLoop		$00, $02, HDN1R_Splash_Loop98, Target
000D32 F7               	dc.b	$F7
000D33 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop98<*)
000D35                  		rom_ptr_z80(HDN1R_Splash_Loop98+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D35 298D             	dc.w  (((((HDN1R_Splash_Loop98+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop98+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000D37 8001A703028001   	dc.b	nRst, $01, nD3, $03, $02, nRst, $01
000D3E                  	smpsAlterVol		$FC
000D3E E6FC             	dc.b	$E6,$FC
000D40 A70201028004     	dc.b	nD3, $02, $01, $02, nRst, $04
000D46                  	smpsAlterVol		$06
000D46 E606             	dc.b	$E6,$06
000D48 A70380A780       	dc.b	nD3, $03, nRst, nD3, nRst
000D4D                  	smpsAlterVol		$FA
000D4D E6FA             	dc.b	$E6,$FA
000D4F A7028004A7       	dc.b	nD3, $02, nRst, $04, nD3

000D54                  HDN1R_Splash_Loop99:
000D54 028007A70201     	dc.b	$02, nRst, $07, nD3, $02, $01
000D5A                  	smpsLoop		$00, $02, HDN1R_Splash_Loop99, Target
000D5A F7               	dc.b	$F7
000D5B 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop99<*)
000D5D                  		rom_ptr_z80(HDN1R_Splash_Loop99+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D5D 548D             	dc.w  (((((HDN1R_Splash_Loop99+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop99+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000D5F 028001           	dc.b	$02, nRst, $01
000D62                  	smpsAlterVol		$06
000D62 E606             	dc.b	$E6,$06
000D64 A70380A78006     	dc.b	nD3, $03, nRst, nD3, nRst, $06
000D6A                  	smpsAlterVol		$FA
000D6A E6FA             	dc.b	$E6,$FA
000D6C A7028004A7028007 	dc.b	nD3, $02, nRst, $04, nD3, $02, nRst, $07

000D74                  HDN1R_Splash_Loop100:
000D74 A70201028001     	dc.b	nD3, $02, $01, $02, nRst, $01
000D7A                  	smpsLoop		$00, $02, HDN1R_Splash_Loop100, Target
000D7A F7               	dc.b	$F7
000D7B 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop100<*)
000D7D                  		rom_ptr_z80(HDN1R_Splash_Loop100+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D7D 748D             	dc.w  (((((HDN1R_Splash_Loop100+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop100+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000D7F A50201028001     	dc.b	nC3, $02, $01, $02, nRst, $01
000D85                  	smpsAlterVol		$06
000D85 E606             	dc.b	$E6,$06
000D87 A50380A58006     	dc.b	nC3, $03, nRst, nC3, nRst, $06
000D8D                  	smpsAlterVol		$FA
000D8D E6FA             	dc.b	$E6,$FA
000D8F A5028004A5028007 	dc.b	nC3, $02, nRst, $04, nC3, $02, nRst, $07

000D97                  HDN1R_Splash_Loop101:
000D97 A50201028001     	dc.b	nC3, $02, $01, $02, nRst, $01
000D9D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop101, Target
000D9D F7               	dc.b	$F7
000D9E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop101<*)
000DA0                  		rom_ptr_z80(HDN1R_Splash_Loop101+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DA0 978D             	dc.w  (((((HDN1R_Splash_Loop101+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop101+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000DA2 A60201028001     	dc.b	nCs3, $02, $01, $02, nRst, $01
000DA8                  	smpsAlterVol		$06
000DA8 E606             	dc.b	$E6,$06
000DAA A60380A680       	dc.b	nCs3, $03, nRst, nCs3, nRst
000DAF                  	smpsAlterVol		$FA
000DAF E6FA             	dc.b	$E6,$FA
000DB1 A6028001A6028001 	dc.b	nCs3, $02, nRst, $01, nCs3, $02, nRst, $01
000DB9 A7028003A7018003 	dc.b	nD3, $02, nRst, $03, nD3, $01, nRst, $03
000DC1 A7068009         	dc.b	nD3, $06, nRst, $09
000DC5                  	smpsAlterVol		$FD
000DC5 E6FD             	dc.b	$E6,$FD

000DC7                  HDN1R_Splash_Loop102:
000DC7 A203028001A2     	dc.b	nA2, $03, $02, nRst, $01, nA2

000DCD                  HDN1R_Splash_Loop103:
000DCD 028001           	dc.b	$02, nRst, $01
000DD0                  	smpsLoop		$00, $02, HDN1R_Splash_Loop102, Target
000DD0 F7               	dc.b	$F7
000DD1 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop102<*)
000DD3                  		rom_ptr_z80(HDN1R_Splash_Loop102+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DD3 C78D             	dc.w  (((((HDN1R_Splash_Loop102+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop102+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000DD5                  HDN1R_Splash_Loop104:
000DD5 A203             	dc.b	nA2, $03
000DD7                  	smpsLoop		$01, $02, HDN1R_Splash_Loop103, Target
000DD7 F7               	dc.b	$F7
000DD8 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop103<*)
000DDA                  		rom_ptr_z80(HDN1R_Splash_Loop103+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DDA CD8D             	dc.w  (((((HDN1R_Splash_Loop103+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop103+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000DDC 028001A2028001   	dc.b	$02, nRst, $01, nA2, $02, nRst, $01
000DE3                  	smpsLoop		$02, $07, HDN1R_Splash_Loop104, Target
000DE3 F7               	dc.b	$F7
000DE4 0207             	dc.b	$02,$07
                        	if (HDN1R_Splash_Loop104<*)
000DE6                  		rom_ptr_z80(HDN1R_Splash_Loop104+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DE6 D58D             	dc.w  (((((HDN1R_Splash_Loop104+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop104+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000DE8 A203             	dc.b	nA2, $03

000DEA                  HDN1R_Splash_Loop106:
000DEA 02               	dc.b	$02

000DEB                  HDN1R_Splash_Loop105:
000DEB 8001990302800199 	dc.b	nRst, $01, nC2, $03, $02, nRst, $01, nC2
000DF3 02               	dc.b	$02
000DF4                  	smpsLoop		$00, $02, HDN1R_Splash_Loop105, Target
000DF4 F7               	dc.b	$F7
000DF5 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop105<*)
000DF7                  		rom_ptr_z80(HDN1R_Splash_Loop105+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DF7 EB8D             	dc.w  (((((HDN1R_Splash_Loop105+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop105+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000DF9 80019903         	dc.b	nRst, $01, nC2, $03
000DFD                  	smpsLoop		$01, $08, HDN1R_Splash_Loop106, Target
000DFD F7               	dc.b	$F7
000DFE 0108             	dc.b	$01,$08
                        	if (HDN1R_Splash_Loop106<*)
000E00                  		rom_ptr_z80(HDN1R_Splash_Loop106+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E00 EA8D             	dc.w  (((((HDN1R_Splash_Loop106+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop106+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000E02 028001           	dc.b	$02, nRst, $01
000E05                  	smpsAlterVol		$03
000E05 E603             	dc.b	$E6,$03
000E07 A70201028004     	dc.b	nD3, $02, $01, $02, nRst, $04
000E0D                  	smpsAlterVol		$06
000E0D E606             	dc.b	$E6,$06
000E0F A70380A780       	dc.b	nD3, $03, nRst, nD3, nRst
000E14                  	smpsAlterVol		$FA
000E14 E6FA             	dc.b	$E6,$FA
000E16 A7028004A7       	dc.b	nD3, $02, nRst, $04, nD3

000E1B                  HDN1R_Splash_Loop107:
000E1B 028007A70201     	dc.b	$02, nRst, $07, nD3, $02, $01
000E21                  	smpsLoop		$00, $02, HDN1R_Splash_Loop107, Target
000E21 F7               	dc.b	$F7
000E22 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop107<*)
000E24                  		rom_ptr_z80(HDN1R_Splash_Loop107+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E24 1B8E             	dc.w  (((((HDN1R_Splash_Loop107+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop107+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000E26 028001           	dc.b	$02, nRst, $01
000E29                  	smpsAlterVol		$06
000E29 E606             	dc.b	$E6,$06
000E2B A70380A78006     	dc.b	nD3, $03, nRst, nD3, nRst, $06
000E31                  	smpsAlterVol		$FA
000E31 E6FA             	dc.b	$E6,$FA
000E33 A7028004A7028007 	dc.b	nD3, $02, nRst, $04, nD3, $02, nRst, $07

000E3B                  HDN1R_Splash_Loop108:
000E3B A70201028001     	dc.b	nD3, $02, $01, $02, nRst, $01
000E41                  	smpsLoop		$00, $02, HDN1R_Splash_Loop108, Target
000E41 F7               	dc.b	$F7
000E42 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop108<*)
000E44                  		rom_ptr_z80(HDN1R_Splash_Loop108+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E44 3B8E             	dc.w  (((((HDN1R_Splash_Loop108+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop108+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000E46 A50201028001     	dc.b	nC3, $02, $01, $02, nRst, $01
000E4C                  	smpsAlterVol		$06
000E4C E606             	dc.b	$E6,$06
000E4E A50380A58006     	dc.b	nC3, $03, nRst, nC3, nRst, $06
000E54                  	smpsAlterVol		$FA
000E54 E6FA             	dc.b	$E6,$FA
000E56 A5028004A5028007 	dc.b	nC3, $02, nRst, $04, nC3, $02, nRst, $07

000E5E                  HDN1R_Splash_Loop109:
000E5E A50201028001     	dc.b	nC3, $02, $01, $02, nRst, $01
000E64                  	smpsLoop		$00, $02, HDN1R_Splash_Loop109, Target
000E64 F7               	dc.b	$F7
000E65 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop109<*)
000E67                  		rom_ptr_z80(HDN1R_Splash_Loop109+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E67 5E8E             	dc.w  (((((HDN1R_Splash_Loop109+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop109+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000E69 A60201028001     	dc.b	nCs3, $02, $01, $02, nRst, $01
000E6F                  	smpsAlterVol		$06
000E6F E606             	dc.b	$E6,$06
000E71 A60380A680       	dc.b	nCs3, $03, nRst, nCs3, nRst
000E76                  	smpsAlterVol		$FA
000E76 E6FA             	dc.b	$E6,$FA
000E78 A6028001A6028001 	dc.b	nCs3, $02, nRst, $01, nCs3, $02, nRst, $01
000E80 A7028003A7018003 	dc.b	nD3, $02, nRst, $03, nD3, $01, nRst, $03
000E88 A70680           	dc.b	nD3, $06, nRst

000E8B                  HDN1R_Splash_Loop110:
                        	;!@ dc.b	$4F
000E8B 804F             	dc.b	nRst, $4F
000E8D                  	smpsLoop		$00, $07, HDN1R_Splash_Loop110, Target
000E8D F7               	dc.b	$F7
000E8E 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_Loop110<*)
000E90                  		rom_ptr_z80(HDN1R_Splash_Loop110+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E90 8B8E             	dc.w  (((((HDN1R_Splash_Loop110+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop110+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000E92 8002             	dc.b	nRst, $02
000E94                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000E94 EF02             		dc.b $EF,$02
                        	endif
000E96 8006             	dc.b	nRst, $06
000E98                  	smpsAlterVol		$FD
000E98 E6FD             	dc.b	$E6,$FD
000E9A B00504098006B105 	dc.b	nB3, $05, $04, $09, nRst, $06, nC4, $05
000EA2 04098006B2050403 	dc.b	$04, $09, nRst, $06, nCs4, $05, $04, $03
000EAA                  	smpsAlterVol		$FD
000EAA E6FD             	dc.b	$E6,$FD
000EAC                  	smpsJump		HDN1R_Splash_Jump4, Target
000EAC F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump4<*)
000EAD                  		rom_ptr_z80(HDN1R_Splash_Jump4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000EAD F08B             	dc.w  (((((HDN1R_Splash_Jump4+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000EAF                  HDN1R_Splash_FM6:
000EAF                  	smpsFMvoice		$03
                        	;if song<>""
                        	if 1==2
                        	else
000EAF EF03             		dc.b $EF,$03
                        	endif
000EB1                  	smpsModSet	$01, $01, $01, $05
000EB1 F001010105       	dc.b	$F0,$01,$01,$01,$05
000EB6                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000EB6 E0C0             		dc.b $E0,panCenter
                        	endif
000EB8 F480             	dc.w	sModOn
000EBA 803F803F803F803F 	dc.b	nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F
000EC2 803F803F         	dc.b	nRst, $3F, nRst, $3F

000EC6                  HDN1R_Splash_Jump5:
000EC6                  	smpsAlterNote	$00
000EC6 E100             	dc.b	$E1,$00
000EC8 8040804080408040 	dc.b	nRst, $40, nRst, $40, nRst, $40, nRst, $40
000ED0 80408040         	dc.b	nRst, $40, nRst, $40
000ED4                  	smpsAlterNote	$E5
000ED4 E1E5             	dc.b	$E1,$E5
000ED6 8001             	dc.b	nRst, $01
000ED8                  	smpsAlterNote	$E8
000ED8 E1E8             	dc.b	$E1,$E8
000EDA 8001             	dc.b	nRst, $01
000EDC                  	smpsAlterNote	$E9
000EDC E1E9             	dc.b	$E1,$E9
000EDE 8001             	dc.b	nRst, $01
000EE0                  	smpsAlterNote	$EA
000EE0 E1EA             	dc.b	$E1,$EA
000EE2 8001             	dc.b	nRst, $01
000EE4                  	smpsAlterNote	$EB
000EE4 E1EB             	dc.b	$E1,$EB
000EE6 8001             	dc.b	nRst, $01
000EE8                  	smpsAlterNote	$ED
000EE8 E1ED             	dc.b	$E1,$ED
000EEA 8001             	dc.b	nRst, $01
000EEC                  	smpsAlterNote	$EE
000EEC E1EE             	dc.b	$E1,$EE
000EEE 8001             	dc.b	nRst, $01
000EF0                  	smpsAlterNote	$F0
000EF0 E1F0             	dc.b	$E1,$F0
000EF2 8001             	dc.b	nRst, $01
000EF4                  	smpsAlterNote	$F1
000EF4 E1F1             	dc.b	$E1,$F1
000EF6 8001             	dc.b	nRst, $01
000EF8                  	smpsAlterNote	$E4
000EF8 E1E4             	dc.b	$E1,$E4
000EFA 8001             	dc.b	nRst, $01
000EFC                  	smpsAlterNote	$E6
000EFC E1E6             	dc.b	$E1,$E6
000EFE 8001             	dc.b	nRst, $01
000F00                  	smpsAlterNote	$E7
000F00 E1E7             	dc.b	$E1,$E7
000F02 8001             	dc.b	nRst, $01
000F04                  	smpsAlterNote	$00
000F04 E100             	dc.b	$E1,$00
000F06 803080308055800B 	dc.b	nRst, $30, nRst, $30, nRst, $55, nRst, $0B
000F0E 80558008         	dc.b	nRst, $55, nRst, $08
000F12                  	smpsAlterNote	$12
000F12 E112             	dc.b	$E1,$12
000F14 8001             	dc.b	nRst, $01
000F16                  	smpsAlterNote	$06
000F16 E106             	dc.b	$E1,$06
000F18 8001             	dc.b	nRst, $01
000F1A                  	smpsAlterNote	$FC
000F1A E1FC             	dc.b	$E1,$FC
000F1C 8001             	dc.b	nRst, $01
000F1E                  	smpsAlterNote	$FF
000F1E E1FF             	dc.b	$E1,$FF
000F20 802D             	dc.b	nRst, $2D
000F22                  	smpsAlterNote	$18
000F22 E118             	dc.b	$E1,$18
000F24 8001             	dc.b	nRst, $01
000F26                  	smpsAlterNote	$0D
000F26 E10D             	dc.b	$E1,$0D
000F28 8001             	dc.b	nRst, $01
000F2A                  	smpsAlterNote	$0A
000F2A E10A             	dc.b	$E1,$0A
000F2C 8001             	dc.b	nRst, $01
000F2E                  	smpsAlterNote	$00
000F2E E100             	dc.b	$E1,$00
000F30 802D             	dc.b	nRst, $2D
000F32                  	smpsAlterNote	$0C
000F32 E10C             	dc.b	$E1,$0C
000F34 8001             	dc.b	nRst, $01
000F36                  	smpsAlterNote	$07
000F36 E107             	dc.b	$E1,$07
000F38 8001             	dc.b	nRst, $01
000F3A                  	smpsAlterNote	$05
000F3A E105             	dc.b	$E1,$05
000F3C 8001             	dc.b	nRst, $01
000F3E                  	smpsAlterNote	$FF
000F3E E1FF             	dc.b	$E1,$FF
000F40 80558008         	dc.b	nRst, $55, nRst, $08
000F44                  	smpsAlterNote	$06
000F44 E106             	dc.b	$E1,$06
000F46 8001             	dc.b	nRst, $01
000F48                  	smpsAlterNote	$FF
000F48 E1FF             	dc.b	$E1,$FF
000F4A 8001             	dc.b	nRst, $01
000F4C                  	smpsAlterNote	$F4
000F4C E1F4             	dc.b	$E1,$F4
000F4E 8001             	dc.b	nRst, $01
000F50                  	smpsAlterNote	$00
000F50 E100             	dc.b	$E1,$00
000F52 802D             	dc.b	nRst, $2D
000F54                  	smpsAlterNote	$EF
000F54 E1EF             	dc.b	$E1,$EF
000F56 8001             	dc.b	nRst, $01
000F58                  	smpsAlterNote	$0C
000F58 E10C             	dc.b	$E1,$0C
000F5A 8001             	dc.b	nRst, $01
000F5C                  	smpsAlterNote	$FD
000F5C E1FD             	dc.b	$E1,$FD
000F5E 8001             	dc.b	nRst, $01
000F60                  	smpsAlterNote	$FF
000F60 E1FF             	dc.b	$E1,$FF
000F62 802D             	dc.b	nRst, $2D
000F64                  	smpsAlterNote	$07
000F64 E107             	dc.b	$E1,$07
000F66 8001             	dc.b	nRst, $01
000F68                  	smpsAlterNote	$FD
000F68 E1FD             	dc.b	$E1,$FD
000F6A 8001             	dc.b	nRst, $01
000F6C                  	smpsAlterNote	$EC
000F6C E1EC             	dc.b	$E1,$EC
000F6E 8001             	dc.b	nRst, $01
000F70                  	smpsAlterNote	$FF
000F70 E1FF             	dc.b	$E1,$FF
000F72 80558055801CAC02 	dc.b	nRst, $55, nRst, $55, nRst, $1C, nG3, $02
000F7A 800AAC0380AD8006 	dc.b	nRst, $0A, nG3, $03, nRst, nAb3, nRst, $06
000F82 AD038006AD038009 	dc.b	nAb3, $03, nRst, $06, nAb3, $03, nRst, $09
000F8A AF02800AAF0380B1 	dc.b	nBb3, $02, nRst, $0A, nBb3, $03, nRst, nC4
000F92 8006AF0380AF0280 	dc.b	nRst, $06, nBb3, $03, nRst, nBb3, $02, nRst
000F9A 01AF03028007B102 	dc.b	$01, nBb3, $03, $02, nRst, $07, nC4, $02
000FA2 800AB10380B480B4 	dc.b	nRst, $0A, nC4, $03, nRst, nEb4, nRst, nEb4
000FAA 02800AB40380B680 	dc.b	$02, nRst, $0A, nEb4, $03, nRst, nF4, nRst
000FB2 0FB60380B6800FB6 	dc.b	$0F, nF4, $03, nRst, nF4, nRst, $0F, nF4
000FBA 02800AAC02800AAC 	dc.b	$02, nRst, $0A, nG3, $02, nRst, $0A, nG3
000FC2 0380AD8006AD0380 	dc.b	$03, nRst, nAb3, nRst, $06, nAb3, $03, nRst
000FCA 06AD038009AF0280 	dc.b	$06, nAb3, $03, nRst, $09, nBb3, $02, nRst
000FD2 0AAF0380B1800FAF 	dc.b	$0A, nBb3, $03, nRst, nC4, nRst, $0F, nBb3
000FDA 03028007B102800A 	dc.b	$03, $02, nRst, $07, nC4, $02, nRst, $0A
000FE2 B10380AF8006AF03 	dc.b	nC4, $03, nRst, nBb3, nRst, $06, nBb3, $03
000FEA 8006AF028004B203 	dc.b	nRst, $06, nBb3, $02, nRst, $04, nCs4, $03
000FF2 80B2028004AF0380 	dc.b	nRst, nCs4, $02, nRst, $04, nBb3, $03, nRst
000FFA AF028004B1038055 	dc.b	nBb3, $02, nRst, $04, nC4, $03, nRst, $55
001002 8055804F         	dc.b	nRst, $55, nRst, $4F
001006                  	smpsJump		HDN1R_Splash_Jump5, Target
001006 F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump5<*)
001007                  		rom_ptr_z80(HDN1R_Splash_Jump5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001007 C68E             	dc.w  (((((HDN1R_Splash_Jump5+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001009                  HDN1R_Splash_PSG1:
001009                  	smpsModSet	$01, $02, $00, $06
001009 F001020006       	dc.b	$F0,$01,$02,$00,$06
00100E F480             	dc.w	sModOn
001010                  	smpsAlterNote	$01
001010 E101             	dc.b	$E1,$01
001012 80558055801C9218 	dc.b	nRst, $55, nRst, $55, nRst, $1C, nF1, $18
00101A 910C8D8F969B9D9E 	dc.b	nE1, $0C, nC1, nD1, nA1, nD2, nE2, nF2
001022 18A09D           	dc.b	$18, nG2, nE2
001025                  	smpsSetVol	$02
001025 EC02             	dc.b	$EC,$02
001027 0380029D0180039D 	dc.b	$03, nRst, $02, nE2, $01, nRst, $03, nE2
00102F 028001           	dc.b	$02, nRst, $01

001032                  HDN1R_Splash_Jump6:
001032                  	smpsAlterNote	$00
001032 E100             	dc.b	$E1,$00
001034                  	smpsSetVol	$FE
001034 ECFE             	dc.b	$EC,$FE
001036 920396999E9D189E 	dc.b	nF1, $03, nA1, nC2, nF2, nE2, $18, nF2
00103E 0C990396999B0CA2 	dc.b	$0C, nC2, $03, nA1, nC2, nD2, $0C, nA2
001046 06A00380A00F9D03 	dc.b	$06, nG2, $03, nRst, nG2, $0F, nE2, $03
00104E 80029B0380019903 	dc.b	nRst, $02, nD2, $03, nRst, $01, nC2, $03
001056 970C9B0380029E03 	dc.b	nBb1, $0C, nD2, $03, nRst, $02, nF2, $03
00105E 8001A00399129B03 	dc.b	nRst, $01, nG2, $03, nC2, $12, nD2, $03
                        	;!@ dc.b	nE2
001066 9D03             	dc.b	nE2, $03

001068                  HDN1R_Splash_Loop111:
001068 A080029D0380019B 	dc.b	nG2, nRst, $02, nE2, $03, nRst, $01, nD2
001070 03               	dc.b	$03
001071                  	smpsLoop		$00, $02, HDN1R_Splash_Loop111, Target
001071 F7               	dc.b	$F7
001072 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop111<*)
001074                  		rom_ptr_z80(HDN1R_Splash_Loop111+Target)
                        	;dc.w z80_ptr(ptr,addr)
001074 6890             	dc.w  (((((HDN1R_Splash_Loop111+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop111+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001076 9D0C8D039194999D 	dc.b	nE2, $0C, nC1, $03, nE1, nG1, nC2, nE2
00107E 189E0C990396999B 	dc.b	$18, nF2, $0C, nC2, $03, nA1, nC2, nD2
001086 0CA206A00380A00F 	dc.b	$0C, nA2, $06, nG2, $03, nRst, nG2, $0F
00108E 9A0380029B038001 	dc.b	nCs2, $03, nRst, $02, nD2, $03, nRst, $01
001096 9D039E0F9B039D9E 	dc.b	nE2, $03, nF2, $0F, nD2, $03, nE2, nF2
00109E A00C038002A00380 	dc.b	nG2, $0C, $03, nRst, $02, nG2, $03, nRst
0010A6 01A203A306A09D09 	dc.b	$01, nA2, $03, nBb2, $06, nG2, nE2, $09
0010AE 9A039B0C         	dc.b	nCs2, $03, nD2, $0C
0010B2                  	smpsAlterNote	$06
0010B2 E106             	dc.b	$E1,$06
0010B4 E701             	dc.b	smpsNoAttack, $01
0010B6                  	smpsAlterNote	$05
0010B6 E105             	dc.b	$E1,$05
0010B8 E79A             	dc.b	smpsNoAttack, nCs2
0010BA                  	smpsAlterNote	$06
0010BA E106             	dc.b	$E1,$06
0010BC E799             	dc.b	smpsNoAttack, nC2
0010BE                  	smpsAlterNote	$07
0010BE E107             	dc.b	$E1,$07
0010C0 E798             	dc.b	smpsNoAttack, nB1
0010C2                  	smpsAlterNote	$06
0010C2 E106             	dc.b	$E1,$06
0010C4 E797             	dc.b	smpsNoAttack, nBb1
0010C6                  	smpsAlterNote	$07
0010C6 E107             	dc.b	$E1,$07
0010C8 E796E795         	dc.b	smpsNoAttack, nA1, smpsNoAttack, nAb1
0010CC                  	smpsAlterNote	$08
0010CC E108             	dc.b	$E1,$08
0010CE E794E793E792     	dc.b	smpsNoAttack, nG1, smpsNoAttack, nFs1, smpsNoAttack, nF1
0010D4                  	smpsAlterNote	$09
0010D4 E109             	dc.b	$E1,$09
0010D6 E791             	dc.b	smpsNoAttack, nE1
0010D8                  	smpsAlterNote	$08
0010D8 E108             	dc.b	$E1,$08
0010DA E790             	dc.b	smpsNoAttack, nEb1
0010DC                  	smpsAlterNote	$00
0010DC E100             	dc.b	$E1,$00
0010DE                  	smpsSetVol	$01
0010DE EC01             	dc.b	$EC,$01

0010E0                  HDN1R_Splash_Loop112:
0010E0 9B02800196028001 	dc.b	nD2, $02, nRst, $01, nA1, $02, nRst, $01
0010E8 9B0280019D069E02 	dc.b	nD2, $02, nRst, $01, nE2, $06, nF2, $02
0010F0 80019D0280019B02 	dc.b	nRst, $01, nE2, $02, nRst, $01, nD2, $02
0010F8 8019             	dc.b	nRst, $19
0010FA                  	smpsLoop		$00, $03, HDN1R_Splash_Loop112, Target
0010FA F7               	dc.b	$F7
0010FB 0003             	dc.b	$00,$03
                        	if (HDN1R_Splash_Loop112<*)
0010FD                  		rom_ptr_z80(HDN1R_Splash_Loop112+Target)
                        	;dc.w z80_ptr(ptr,addr)
0010FD E090             	dc.w  (((((HDN1R_Splash_Loop112+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop112+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0010FF 9A02800196028001 	dc.b	nCs2, $02, nRst, $01, nA1, $02, nRst, $01
001107 9A0280019D06A002 	dc.b	nCs2, $02, nRst, $01, nE2, $06, nG2, $02
00110F 80019D0280019A02 	dc.b	nRst, $01, nE2, $02, nRst, $01, nCs2, $02
001117 80019B0280039B01 	dc.b	nRst, $01, nD2, $02, nRst, $03, nD2, $01
00111F 80039B9B06809D02 	dc.b	nRst, $03, nD2, nD2, $06, nRst, nE2, $02
001127 80079F0280079B02 	dc.b	nRst, $07, nFs2, $02, nRst, $07, nD2, $02
00112F 80049503A196A298 	dc.b	nRst, $04, nAb1, $03, nAb2, nA1, nA2, nB1
001137 A49D919E0280079F 	dc.b	nB2, nE2, nE1, nF2, $02, nRst, $07, nFs2
00113F 0280079B0280049D 	dc.b	$02, nRst, $07, nD2, $02, nRst, $04, nE2
001147 029F01A102A2019F 	dc.b	$02, nFs2, $01, nAb2, $02, nA2, $01, nFs2
00114F 02A101A202A401A1 	dc.b	$02, nAb2, $01, nA2, $02, nB2, $01, nAb2
001157 02A201A402A701A9 	dc.b	$02, nA2, $01, nB2, $02, nD3, $01, nE3
00115F 03               	dc.b	$03
001160                  	smpsAlterNote	$FE
001160 E1FE             	dc.b	$E1,$FE
001162 E7A701           	dc.b	smpsNoAttack, nD3, $01
001165                  	smpsAlterNote	$FF
001165 E1FF             	dc.b	$E1,$FF
                        	;!@ dc.b	smpsNoAttack, nBb2
001167 E7A301           	dc.b	smpsNoAttack, nBb2, $01
00116A                  	smpsAlterNote	$01
00116A E101             	dc.b	$E1,$01
                        	;!@ dc.b	smpsNoAttack, nFs2
00116C E79F01           	dc.b	smpsNoAttack, nFs2, $01
00116F                  	smpsAlterNote	$00
00116F E100             	dc.b	$E1,$00
001171 9D0280079F028007 	dc.b	nE2, $02, nRst, $07, nFs2, $02, nRst, $07
001179 9B0280019503A1A2 	dc.b	nD2, $02, nRst, $01, nAb1, $03, nAb2, nA2
001181 96A4A2969D       	dc.b	nA1, nB2, nA2, nA1, nE2
001186                  	smpsAlterNote	$FB
001186 E1FB             	dc.b	$E1,$FB
001188 E79B01           	dc.b	smpsNoAttack, nD2, $01
00118B                  	smpsAlterNote	$FC
00118B E1FC             	dc.b	$E1,$FC
                        	;!@ dc.b	smpsNoAttack, nBb1
00118D E79701           	dc.b	smpsNoAttack, nBb1, $01
001190                  	smpsAlterNote	$FD
001190 E1FD             	dc.b	$E1,$FD
                        	;!@ dc.b	smpsNoAttack, nFs1
001192 E79301           	dc.b	smpsNoAttack, nFs1, $01
001195                  	smpsAlterNote	$00
001195 E100             	dc.b	$E1,$00
001197 9E0280079F028007 	dc.b	nF2, $02, nRst, $07, nFs2, $02, nRst, $07
00119F 9B028004AA02A701 	dc.b	nD2, $02, nRst, $04, nF3, $02, nD3, $01
0011A7 A402A201A702A401 	dc.b	nB2, $02, nA2, $01, nD3, $02, nB2, $01
0011AF A202A101A202A101 	dc.b	nA2, $02, nAb2, $01, nA2, $02, nAb2, $01
0011B7 9F029E019B03     	dc.b	nFs2, $02, nF2, $01, nD2, $03
0011BD                  	smpsAlterNote	$FD
0011BD E1FD             	dc.b	$E1,$FD
0011BF E79901           	dc.b	smpsNoAttack, nC2, $01
0011C2                  	smpsAlterNote	$FE
0011C2 E1FE             	dc.b	$E1,$FE
                        	;!@ dc.b	smpsNoAttack, nAb1
0011C4 E79501           	dc.b	smpsNoAttack, nAb1, $01
0011C7                  	smpsAlterNote	$FF
0011C7 E1FF             	dc.b	$E1,$FF
                        	;!@ dc.b	smpsNoAttack, nE1
0011C9 E79101           	dc.b	smpsNoAttack, nE1, $01
0011CC                  	smpsAlterNote	$01
0011CC E101             	dc.b	$E1,$01
0011CE A1028007A2028007 	dc.b	nAb2, $02, nRst, $07, nA2, $02, nRst, $07
0011D6 9F0280049803A499 	dc.b	nFs2, $02, nRst, $04, nB1, $03, nB2, nC2
0011DE A59BA7A094A10280 	dc.b	nC3, nD2, nD3, nG2, nG1, nAb2, $02, nRst
0011E6 07A20280079F0280 	dc.b	$07, nA2, $02, nRst, $07, nFs2, $02, nRst
0011EE 04A002A101A402A5 	dc.b	$04, nG2, $02, nAb2, $01, nB2, $02, nC3
0011F6 01A102A401A502A7 	dc.b	$01, nAb2, $02, nB2, $01, nC3, $02, nD3
0011FE 01A402A501A702AA 	dc.b	$01, nB2, $02, nC3, $01, nD3, $02, nF3
001206 01AC03           	dc.b	$01, nG3, $03
001209                  	smpsAlterNote	$00
001209 E100             	dc.b	$E1,$00
                        	;!@ dc.b	smpsNoAttack, nF3, $01, smpsNoAttack, nCs3
00120B E7AA01E7A601     	dc.b	smpsNoAttack, nF3, $01, smpsNoAttack, nCs3, $01
001211                  	smpsAlterNote	$01
001211 E101             	dc.b	$E1,$01
                        	;!@ dc.b	smpsNoAttack, nA2
001213 E7A201           	dc.b	smpsNoAttack, nA2, $01
001216                  	smpsAlterNote	$00
001216 E100             	dc.b	$E1,$00
001218 A1028007A2028007 	dc.b	nAb2, $02, nRst, $07, nA2, $02, nRst, $07
001220 9F0280019803A4A5 	dc.b	nFs2, $02, nRst, $01, nB1, $03, nB2, nC3
001228 99A7A599A0       	dc.b	nC2, nD3, nC3, nC2, nG2
00122D                  	smpsAlterNote	$03
00122D E103             	dc.b	$E1,$03
00122F E79F01           	dc.b	smpsNoAttack, nFs2, $01
001232                  	smpsAlterNote	$FC
001232 E1FC             	dc.b	$E1,$FC
                        	;!@ dc.b	smpsNoAttack, nCs2
001234 E79A01           	dc.b	smpsNoAttack, nCs2, $01
001237                  	smpsAlterNote	$01
001237 E101             	dc.b	$E1,$01
                        	;!@ dc.b	smpsNoAttack, nA1
001239 E79601           	dc.b	smpsNoAttack, nA1, $01
00123C                  	smpsAlterNote	$00
00123C E100             	dc.b	$E1,$00
00123E A1028007A2028007 	dc.b	nAb2, $02, nRst, $07, nA2, $02, nRst, $07
001246 9F028004AD02AB01 	dc.b	nFs2, $02, nRst, $04, nAb3, $02, nFs3, $01
00124E AA02A701AA02A701 	dc.b	nF3, $02, nD3, $01, nF3, $02, nD3, $01
001256 A502A401A502A401 	dc.b	nC3, $02, nB2, $01, nC3, $02, nB2, $01
00125E A1029F019D03     	dc.b	nAb2, $02, nFs2, $01, nE2, $03
001264                  	smpsAlterNote	$FF
001264 E1FF             	dc.b	$E1,$FF
001266 E79B01           	dc.b	smpsNoAttack, nD2, $01
001269                  	smpsAlterNote	$01
001269 E101             	dc.b	$E1,$01
                        	;!@ dc.b	smpsNoAttack, nBb1
00126B E79701           	dc.b	smpsNoAttack, nBb1, $01
00126E                  	smpsAlterNote	$06
00126E E106             	dc.b	$E1,$06
                        	;!@ dc.b	smpsNoAttack, nFs1
001270 E79301           	dc.b	smpsNoAttack, nFs1, $01
001273                  	smpsAlterNote	$00
001273 E100             	dc.b	$E1,$00
001275                  	smpsSetVol	$01
001275 EC01             	dc.b	$EC,$01
001277 8F0C91929406968F 	dc.b	nD1, $0C, nE1, nF1, nG1, $06, nA1, nD1
00127F 0C91929706968F0C 	dc.b	$0C, nE1, nF1, nBb1, $06, nA1, nD1, $0C
001287 9192940696940C91 	dc.b	nE1, nF1, nG1, $06, nA1, nG1, $0C, nE1
                        	;!@ dc.b	nD1, nRst
00128F 8F               	dc.b	nD1

001290                  HDN1R_Splash_Loop113:
                        	;!@ dc.b	$4E
001290 804E             	dc.b	nRst, $4E
001292                  	smpsLoop		$00, $08, HDN1R_Splash_Loop113, Target
001292 F7               	dc.b	$F7
001293 0008             	dc.b	$00,$08
                        	if (HDN1R_Splash_Loop113<*)
001295                  		rom_ptr_z80(HDN1R_Splash_Loop113+Target)
                        	;dc.w z80_ptr(ptr,addr)
001295 9092             	dc.w  (((((HDN1R_Splash_Loop113+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop113+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001297                  	smpsJump		HDN1R_Splash_Jump6, Target
001297 F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump6<*)
001298                  		rom_ptr_z80(HDN1R_Splash_Jump6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001298 3290             	dc.w  (((((HDN1R_Splash_Jump6+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00129A                  HDN1R_Splash_PSG2:
00129A                  	smpsModSet	$01, $02, $00, $06
00129A F001020006       	dc.b	$F0,$01,$02,$00,$06
00129F F480             	dc.w	sModOn
0012A1 80558055801C8F02 	dc.b	nRst, $55, nRst, $55, nRst, $1C, nD1, $02
0012A9 01               	dc.b	$01

0012AA                  HDN1R_Splash_Loop115:
0012AA 0280108F0280048F 	dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1

0012B2                  HDN1R_Splash_Loop114:
0012B2 0280078F0201     	dc.b	$02, nRst, $07, nD1, $02, $01
0012B8                  	smpsLoop		$00, $02, HDN1R_Splash_Loop114, Target
0012B8 F7               	dc.b	$F7
0012B9 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop114<*)
0012BB                  		rom_ptr_z80(HDN1R_Splash_Loop114+Target)
                        	;dc.w z80_ptr(ptr,addr)
0012BB B292             	dc.w  (((((HDN1R_Splash_Loop114+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop114+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0012BD                  	smpsLoop		$01, $02, HDN1R_Splash_Loop115, Target
0012BD F7               	dc.b	$F7
0012BE 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop115<*)
0012C0                  		rom_ptr_z80(HDN1R_Splash_Loop115+Target)
                        	;dc.w z80_ptr(ptr,addr)
0012C0 AA92             	dc.w  (((((HDN1R_Splash_Loop115+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop115+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0012C2 0280108F0280048F 	dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1
0012CA 0280078F02010280 	dc.b	$02, nRst, $07, nD1, $02, $01, $02, nRst
0012D2 1F               	dc.b	$1F
0012D3                  	smpsSetVol	$FC
0012D3 ECFC             	dc.b	$EC,$FC
0012D5 A0038002A0018003 	dc.b	nG2, $03, nRst, $02, nG2, $01, nRst, $03
0012DD A0028001         	dc.b	nG2, $02, nRst, $01

0012E1                  HDN1R_Splash_Jump7:
0012E1                  	smpsAlterNote	$00
0012E1 E100             	dc.b	$E1,$00
0012E3 800F             	dc.b	nRst, $0F
0012E5                  	smpsSetVol	$03
0012E5 EC03             	dc.b	$EC,$03

0012E7                  HDN1R_Splash_Loop116:
0012E7 81018080818005   	dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
0012EE                  	smpsLoop		$00, $02, HDN1R_Splash_Loop116, Target
0012EE F7               	dc.b	$F7
0012EF 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop116<*)
0012F1                  		rom_ptr_z80(HDN1R_Splash_Loop116+Target)
                        	;dc.w z80_ptr(ptr,addr)
0012F1 E792             	dc.w  (((((HDN1R_Splash_Loop116+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop116+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0012F3 81028004         	dc.b	nC0, $02, nRst, $04
0012F7                  	smpsLoop		$01, $02, HDN1R_Splash_Loop116, Target
0012F7 F7               	dc.b	$F7
0012F8 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop116<*)
0012FA                  		rom_ptr_z80(HDN1R_Splash_Loop116+Target)
                        	;dc.w z80_ptr(ptr,addr)
0012FA E792             	dc.w  (((((HDN1R_Splash_Loop116+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop116+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0012FC                  HDN1R_Splash_Loop117:
0012FC 83018080838005   	dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
001303                  	smpsLoop		$00, $02, HDN1R_Splash_Loop117, Target
001303 F7               	dc.b	$F7
001304 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop117<*)
001306                  		rom_ptr_z80(HDN1R_Splash_Loop117+Target)
                        	;dc.w z80_ptr(ptr,addr)
001306 FC92             	dc.w  (((((HDN1R_Splash_Loop117+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop117+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001308 83028004         	dc.b	nD0, $02, nRst, $04

00130C                  HDN1R_Splash_Loop118:
00130C 85018080858005   	dc.b	nE0, $01, nRst, nRst, nE0, nRst, $05
001313                  	smpsLoop		$00, $02, HDN1R_Splash_Loop118, Target
001313 F7               	dc.b	$F7
001314 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop118<*)
001316                  		rom_ptr_z80(HDN1R_Splash_Loop118+Target)
                        	;dc.w z80_ptr(ptr,addr)
001316 0C93             	dc.w  (((((HDN1R_Splash_Loop118+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop118+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001318 85028004         	dc.b	nE0, $02, nRst, $04

00131C                  HDN1R_Splash_Loop119:
00131C 83018080838005   	dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
001323                  	smpsLoop		$00, $02, HDN1R_Splash_Loop119, Target
001323 F7               	dc.b	$F7
001324 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop119<*)
001326                  		rom_ptr_z80(HDN1R_Splash_Loop119+Target)
                        	;dc.w z80_ptr(ptr,addr)
001326 1C93             	dc.w  (((((HDN1R_Splash_Loop119+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop119+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001328 8302             	dc.b	nD0, $02

00132A                  HDN1R_Splash_Loop121:
00132A 8004             	dc.b	nRst, $04

00132C                  HDN1R_Splash_Loop120:
00132C 81018080818005   	dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
001333                  	smpsLoop		$00, $02, HDN1R_Splash_Loop120, Target
001333 F7               	dc.b	$F7
001334 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop120<*)
001336                  		rom_ptr_z80(HDN1R_Splash_Loop120+Target)
                        	;dc.w z80_ptr(ptr,addr)
001336 2C93             	dc.w  (((((HDN1R_Splash_Loop120+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop120+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001338 8102             	dc.b	nC0, $02
00133A                  	smpsLoop		$01, $02, HDN1R_Splash_Loop121, Target
00133A F7               	dc.b	$F7
00133B 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop121<*)
00133D                  		rom_ptr_z80(HDN1R_Splash_Loop121+Target)
                        	;dc.w z80_ptr(ptr,addr)
00133D 2A93             	dc.w  (((((HDN1R_Splash_Loop121+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop121+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00133F 8004             	dc.b	nRst, $04

001341                  HDN1R_Splash_Loop122:
001341 85018080858005   	dc.b	nE0, $01, nRst, nRst, nE0, nRst, $05
001348                  	smpsLoop		$00, $02, HDN1R_Splash_Loop122, Target
001348 F7               	dc.b	$F7
001349 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop122<*)
00134B                  		rom_ptr_z80(HDN1R_Splash_Loop122+Target)
                        	;dc.w z80_ptr(ptr,addr)
00134B 4193             	dc.w  (((((HDN1R_Splash_Loop122+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop122+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00134D 8502             	dc.b	nE0, $02

00134F                  HDN1R_Splash_Loop124:
00134F 8004             	dc.b	nRst, $04

001351                  HDN1R_Splash_Loop123:
001351 81018080818005   	dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
001358                  	smpsLoop		$00, $02, HDN1R_Splash_Loop123, Target
001358 F7               	dc.b	$F7
001359 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop123<*)
00135B                  		rom_ptr_z80(HDN1R_Splash_Loop123+Target)
                        	;dc.w z80_ptr(ptr,addr)
00135B 5193             	dc.w  (((((HDN1R_Splash_Loop123+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop123+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00135D 8102             	dc.b	nC0, $02
00135F                  	smpsLoop		$01, $02, HDN1R_Splash_Loop124, Target
00135F F7               	dc.b	$F7
001360 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop124<*)
001362                  		rom_ptr_z80(HDN1R_Splash_Loop124+Target)
                        	;dc.w z80_ptr(ptr,addr)
001362 4F93             	dc.w  (((((HDN1R_Splash_Loop124+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop124+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001364 8004             	dc.b	nRst, $04

001366                  HDN1R_Splash_Loop125:
001366 83018080838005   	dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
00136D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop125, Target
00136D F7               	dc.b	$F7
00136E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop125<*)
001370                  		rom_ptr_z80(HDN1R_Splash_Loop125+Target)
                        	;dc.w z80_ptr(ptr,addr)
001370 6693             	dc.w  (((((HDN1R_Splash_Loop125+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop125+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001372 83028004         	dc.b	nD0, $02, nRst, $04

001376                  HDN1R_Splash_Loop126:
001376 85018080858005   	dc.b	nE0, $01, nRst, nRst, nE0, nRst, $05
00137D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop126, Target
00137D F7               	dc.b	$F7
00137E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop126<*)
001380                  		rom_ptr_z80(HDN1R_Splash_Loop126+Target)
                        	;dc.w z80_ptr(ptr,addr)
001380 7693             	dc.w  (((((HDN1R_Splash_Loop126+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop126+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001382 85028004         	dc.b	nE0, $02, nRst, $04

001386                  HDN1R_Splash_Loop127:
001386 83018080838005   	dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
00138D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop127, Target
00138D F7               	dc.b	$F7
00138E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop127<*)
001390                  		rom_ptr_z80(HDN1R_Splash_Loop127+Target)
                        	;dc.w z80_ptr(ptr,addr)
001390 8693             	dc.w  (((((HDN1R_Splash_Loop127+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop127+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001392 8302             	dc.b	nD0, $02

001394                  HDN1R_Splash_Loop129:
001394 8004             	dc.b	nRst, $04

001396                  HDN1R_Splash_Loop128:
001396 81018080818005   	dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
00139D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop128, Target
00139D F7               	dc.b	$F7
00139E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop128<*)
0013A0                  		rom_ptr_z80(HDN1R_Splash_Loop128+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013A0 9693             	dc.w  (((((HDN1R_Splash_Loop128+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop128+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013A2 8102             	dc.b	nC0, $02
0013A4                  	smpsLoop		$01, $02, HDN1R_Splash_Loop129, Target
0013A4 F7               	dc.b	$F7
0013A5 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_Loop129<*)
0013A7                  		rom_ptr_z80(HDN1R_Splash_Loop129+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013A7 9493             	dc.w  (((((HDN1R_Splash_Loop129+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop129+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013A9 8004810180808180 	dc.b	nRst, $04, nC0, $01, nRst, nRst, nC0, nRst
0013B1 05               	dc.b	$05
0013B2                  	smpsAlterNote	$7F
0013B2 E17F             	dc.b	$E1,$7F
0013B4 8101808081800180 	dc.b	nC0, $01, nRst, nRst, nC0, nRst, $01, nRst
0013BC 0180018001800181 	dc.b	$01, nRst, $01, nRst, $01, nRst, $01, nC0
0013C4 E701             	dc.b	smpsNoAttack, $01
0013C6                  	smpsAlterNote	$12
0013C6 E112             	dc.b	$E1,$12
0013C8 80               	dc.b	nRst
0013C9                  	smpsAlterNote	$00
0013C9 E100             	dc.b	$E1,$00
0013CB                  	smpsSetVol	$FE
0013CB ECFE             	dc.b	$EC,$FE
0013CD 8F02010280108F02 	dc.b	nD1, $02, $01, $02, nRst, $10, nD1, $02
0013D5 80048F           	dc.b	nRst, $04, nD1

0013D8                  HDN1R_Splash_Loop130:
0013D8 0280078F0201     	dc.b	$02, nRst, $07, nD1, $02, $01
0013DE                  	smpsLoop		$00, $02, HDN1R_Splash_Loop130, Target
0013DE F7               	dc.b	$F7
0013DF 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop130<*)
0013E1                  		rom_ptr_z80(HDN1R_Splash_Loop130+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013E1 D893             	dc.w  (((((HDN1R_Splash_Loop130+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop130+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013E3 0280108F0280048F 	dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1
0013EB 028007           	dc.b	$02, nRst, $07

0013EE                  HDN1R_Splash_Loop131:
0013EE 8F0201028001     	dc.b	nD1, $02, $01, $02, nRst, $01
0013F4                  	smpsLoop		$00, $02, HDN1R_Splash_Loop131, Target
0013F4 F7               	dc.b	$F7
0013F5 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop131<*)
0013F7                  		rom_ptr_z80(HDN1R_Splash_Loop131+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013F7 EE93             	dc.w  (((((HDN1R_Splash_Loop131+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop131+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013F9 8D02010280108D02 	dc.b	nC1, $02, $01, $02, nRst, $10, nC1, $02
001401 80048D028007     	dc.b	nRst, $04, nC1, $02, nRst, $07

001407                  HDN1R_Splash_Loop132:
001407 8D0201028001     	dc.b	nC1, $02, $01, $02, nRst, $01
00140D                  	smpsLoop		$00, $02, HDN1R_Splash_Loop132, Target
00140D F7               	dc.b	$F7
00140E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop132<*)
001410                  		rom_ptr_z80(HDN1R_Splash_Loop132+Target)
                        	;dc.w z80_ptr(ptr,addr)
001410 0794             	dc.w  (((((HDN1R_Splash_Loop132+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop132+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001412 8E020102800D8E02 	dc.b	nCs1, $02, $01, $02, nRst, $0D, nCs1, $02
00141A 80018E0280018F02 	dc.b	nRst, $01, nCs1, $02, nRst, $01, nD1, $02
001422 80038F0180038F06 	dc.b	nRst, $03, nD1, $01, nRst, $03, nD1, $06
00142A 800980558008     	dc.b	nRst, $09, nRst, $55, nRst, $08
001430                  	smpsAlterNote	$F7
001430 E1F7             	dc.b	$E1,$F7
001432 8001             	dc.b	nRst, $01
001434                  	smpsAlterNote	$FB
001434 E1FB             	dc.b	$E1,$FB
001436 8001             	dc.b	nRst, $01
001438                  	smpsAlterNote	$02
001438 E102             	dc.b	$E1,$02
00143A 8001             	dc.b	nRst, $01
00143C                  	smpsAlterNote	$00
00143C E100             	dc.b	$E1,$00
00143E 802D             	dc.b	nRst, $2D
001440                  	smpsAlterNote	$F4
001440 E1F4             	dc.b	$E1,$F4
001442 8001             	dc.b	nRst, $01
001444                  	smpsAlterNote	$F6
001444 E1F6             	dc.b	$E1,$F6
001446 8001             	dc.b	nRst, $01
001448                  	smpsAlterNote	$F9
001448 E1F9             	dc.b	$E1,$F9
00144A 8001             	dc.b	nRst, $01
00144C                  	smpsAlterNote	$00
00144C E100             	dc.b	$E1,$00
00144E 802D             	dc.b	nRst, $2D
001450                  	smpsAlterNote	$FA
001450 E1FA             	dc.b	$E1,$FA
001452 8001             	dc.b	nRst, $01
001454                  	smpsAlterNote	$FB
001454 E1FB             	dc.b	$E1,$FB
001456 8001             	dc.b	nRst, $01
001458                  	smpsAlterNote	$FD
001458 E1FD             	dc.b	$E1,$FD
00145A 8001             	dc.b	nRst, $01
00145C                  	smpsAlterNote	$00
00145C E100             	dc.b	$E1,$00
00145E 80558008         	dc.b	nRst, $55, nRst, $08
001462                  	smpsAlterNote	$FD
001462 E1FD             	dc.b	$E1,$FD
001464 8001             	dc.b	nRst, $01
001466                  	smpsAlterNote	$01
001466 E101             	dc.b	$E1,$01
001468 8001             	dc.b	nRst, $01
00146A                  	smpsAlterNote	$07
00146A E107             	dc.b	$E1,$07
00146C 8001             	dc.b	nRst, $01
00146E                  	smpsAlterNote	$00
00146E E100             	dc.b	$E1,$00
001470 802D             	dc.b	nRst, $2D
001472                  	smpsAlterNote	$07
001472 E107             	dc.b	$E1,$07
001474 8001             	dc.b	nRst, $01
001476                  	smpsAlterNote	$F6
001476 E1F6             	dc.b	$E1,$F6
001478 8001             	dc.b	nRst, $01
00147A                  	smpsAlterNote	$02
00147A E102             	dc.b	$E1,$02
00147C 8001             	dc.b	nRst, $01
00147E                  	smpsAlterNote	$00
00147E E100             	dc.b	$E1,$00
001480 802D             	dc.b	nRst, $2D
001482                  	smpsAlterNote	$FC
001482 E1FC             	dc.b	$E1,$FC
001484 8001             	dc.b	nRst, $01
001486                  	smpsAlterNote	$02
001486 E102             	dc.b	$E1,$02
001488 8001             	dc.b	nRst, $01
00148A                  	smpsAlterNote	$0C
00148A E10C             	dc.b	$E1,$0C
00148C 8001             	dc.b	nRst, $01
00148E                  	smpsAlterNote	$00
00148E E100             	dc.b	$E1,$00
001490 8F02010280108F02 	dc.b	nD1, $02, $01, $02, nRst, $10, nD1, $02
001498 80048F           	dc.b	nRst, $04, nD1

00149B                  HDN1R_Splash_Loop133:
00149B 0280078F0201     	dc.b	$02, nRst, $07, nD1, $02, $01
0014A1                  	smpsLoop		$00, $02, HDN1R_Splash_Loop133, Target
0014A1 F7               	dc.b	$F7
0014A2 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop133<*)
0014A4                  		rom_ptr_z80(HDN1R_Splash_Loop133+Target)
                        	;dc.w z80_ptr(ptr,addr)
0014A4 9B94             	dc.w  (((((HDN1R_Splash_Loop133+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop133+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0014A6 0280108F0280048F 	dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1
0014AE 028007           	dc.b	$02, nRst, $07

0014B1                  HDN1R_Splash_Loop134:
0014B1 8F0201028001     	dc.b	nD1, $02, $01, $02, nRst, $01
0014B7                  	smpsLoop		$00, $02, HDN1R_Splash_Loop134, Target
0014B7 F7               	dc.b	$F7
0014B8 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop134<*)
0014BA                  		rom_ptr_z80(HDN1R_Splash_Loop134+Target)
                        	;dc.w z80_ptr(ptr,addr)
0014BA B194             	dc.w  (((((HDN1R_Splash_Loop134+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop134+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0014BC 8D02010280108D02 	dc.b	nC1, $02, $01, $02, nRst, $10, nC1, $02
0014C4 80048D028007     	dc.b	nRst, $04, nC1, $02, nRst, $07

0014CA                  HDN1R_Splash_Loop135:
0014CA 8D0201028001     	dc.b	nC1, $02, $01, $02, nRst, $01
0014D0                  	smpsLoop		$00, $02, HDN1R_Splash_Loop135, Target
0014D0 F7               	dc.b	$F7
0014D1 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop135<*)
0014D3                  		rom_ptr_z80(HDN1R_Splash_Loop135+Target)
                        	;dc.w z80_ptr(ptr,addr)
0014D3 CA94             	dc.w  (((((HDN1R_Splash_Loop135+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop135+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0014D5 8E020102800D8E02 	dc.b	nCs1, $02, $01, $02, nRst, $0D, nCs1, $02
0014DD 80018E0280018F02 	dc.b	nRst, $01, nCs1, $02, nRst, $01, nD1, $02
0014E5 80038F0180038F06 	dc.b	nRst, $03, nD1, $01, nRst, $03, nD1, $06
0014ED 8009             	dc.b	nRst, $09
0014EF                  	smpsSetVol	$02
0014EF EC02             	dc.b	$EC,$02
0014F1 8F0380           	dc.b	nD1, $03, nRst
0014F4                  	smpsSetVol	$FD
0014F4 ECFD             	dc.b	$EC,$FD
0014F6 9406959799       	dc.b	nG1, $06, nAb1, nBb1, nC2
0014FB                  	smpsSetVol	$03
0014FB EC03             	dc.b	$EC,$03
0014FD 90028001         	dc.b	nEb1, $02, nRst, $01
001501                  	smpsSetVol	$FD
001501 ECFD             	dc.b	$EC,$FD
001503 990F             	dc.b	nC2, $0F
001505                  	smpsSetVol	$03
001505 EC03             	dc.b	$EC,$03
001507 920380           	dc.b	nF1, $03, nRst
00150A                  	smpsSetVol	$FD
00150A ECFD             	dc.b	$EC,$FD
00150C 9B0699979918     	dc.b	nD2, $06, nC2, nBb1, nC2, $18
001512                  	smpsSetVol	$03
001512 EC03             	dc.b	$EC,$03
001514 940380           	dc.b	nG1, $03, nRst
001517                  	smpsSetVol	$FD
001517 ECFD             	dc.b	$EC,$FD
001519 9C069B97990F     	dc.b	nEb2, $06, nD2, nBb1, nC2, $0F
00151F                  	smpsSetVol	$03
00151F EC03             	dc.b	$EC,$03
001521 95028001         	dc.b	nAb1, $02, nRst, $01
001525                  	smpsSetVol	$FD
001525 ECFD             	dc.b	$EC,$FD
001527 99039B9C189B     	dc.b	nC2, $03, nD2, nEb2, $18, nD2
00152D                  	smpsSetVol	$03
00152D EC03             	dc.b	$EC,$03
00152F 8F0380           	dc.b	nD1, $03, nRst
001532                  	smpsSetVol	$FD
001532 ECFD             	dc.b	$EC,$FD
001534 9B069C9B99       	dc.b	nD2, $06, nEb2, nD2, nC2
001539                  	smpsSetVol	$03
001539 EC03             	dc.b	$EC,$03
00153B 90028001         	dc.b	nEb1, $02, nRst, $01
00153F                  	smpsSetVol	$FD
00153F ECFD             	dc.b	$EC,$FD
001541 950F             	dc.b	nAb1, $0F
001543                  	smpsSetVol	$03
001543 EC03             	dc.b	$EC,$03
001545 920380           	dc.b	nF1, $03, nRst
001548                  	smpsSetVol	$FD
001548 ECFD             	dc.b	$EC,$FD
00154A 9706999B9918     	dc.b	nBb1, $06, nC2, nD2, nC2, $18
001550                  	smpsSetVol	$03
001550 EC03             	dc.b	$EC,$03
001552 940380           	dc.b	nG1, $03, nRst
001555                  	smpsSetVol	$FD
001555 ECFD             	dc.b	$EC,$FD
001557 9C069B9799       	dc.b	nEb2, $06, nD2, nBb1, nC2
00155C                  	smpsSetVol	$03
00155C EC03             	dc.b	$EC,$03
00155E 92028001         	dc.b	nF1, $02, nRst, $01
001562                  	smpsSetVol	$FD
001562 ECFD             	dc.b	$EC,$FD
001564 9E0906A19C9B9E99 	dc.b	nF2, $09, $06, nAb2, nEb2, nD2, nF2, nC2
00156C 0C8003           	dc.b	$0C, nRst, $03
00156F                  	smpsSetVol	$03
00156F EC03             	dc.b	$EC,$03
001571 9402800194028004 	dc.b	nG1, $02, nRst, $01, nG1, $02, nRst, $04

001579                  HDN1R_Splash_Loop136:
001579 9903028010990280 	dc.b	nC2, $03, $02, nRst, $10, nC2, $02, nRst
001581 0499028007990201 	dc.b	$04, nC2, $02, nRst, $07, nC2, $02, $01
001589 028007           	dc.b	$02, nRst, $07
00158C                  	smpsLoop		$00, $02, HDN1R_Splash_Loop136, Target
00158C F7               	dc.b	$F7
00158D 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop136<*)
00158F                  		rom_ptr_z80(HDN1R_Splash_Loop136+Target)
                        	;dc.w z80_ptr(ptr,addr)
00158F 7995             	dc.w  (((((HDN1R_Splash_Loop136+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop136+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001591 9903028010990280 	dc.b	nC2, $03, $02, nRst, $10, nC2, $02, nRst
001599 0499028007990201 	dc.b	$04, nC2, $02, nRst, $07, nC2, $02, $01
0015A1 0280558006       	dc.b	$02, nRst, $55, nRst, $06
0015A6                  	smpsSetVol	$FD
0015A6 ECFD             	dc.b	$EC,$FD
0015A8                  	smpsJump		HDN1R_Splash_Jump7, Target
0015A8 F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump7<*)
0015A9                  		rom_ptr_z80(HDN1R_Splash_Jump7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0015A9 E192             	dc.w  (((((HDN1R_Splash_Jump7+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0015AB                  HDN1R_Splash_PSG3:
0015AB                  	smpsModSet	$01, $02, $00, $06
0015AB F001020006       	dc.b	$F0,$01,$02,$00,$06
0015B0 F480             	dc.w	sModOn
0015B2 803F803F803F803F 	dc.b	nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F
0015BA 803F803F         	dc.b	nRst, $3F, nRst, $3F

0015BE                  HDN1R_Splash_Jump8:
0015BE                  	smpsAlterNote	$00
0015BE E100             	dc.b	$E1,$00
0015C0 8040804080408040 	dc.b	nRst, $40, nRst, $40, nRst, $40, nRst, $40
0015C8 80408040         	dc.b	nRst, $40, nRst, $40
0015CC                  	smpsAlterNote	$10
0015CC E110             	dc.b	$E1,$10
0015CE 8001             	dc.b	nRst, $01
0015D0                  	smpsAlterNote	$11
0015D0 E111             	dc.b	$E1,$11
0015D2 80018001         	dc.b	nRst, $01, nRst, $01
0015D6                  	smpsAlterNote	$12
0015D6 E112             	dc.b	$E1,$12
0015D8 8001             	dc.b	nRst, $01
0015DA                  	smpsAlterNote	$13
0015DA E113             	dc.b	$E1,$13
0015DC 8001             	dc.b	nRst, $01
0015DE                  	smpsAlterNote	$14
0015DE E114             	dc.b	$E1,$14
0015E0 8001             	dc.b	nRst, $01
0015E2                  	smpsAlterNote	$16
0015E2 E116             	dc.b	$E1,$16
0015E4 80018001         	dc.b	nRst, $01, nRst, $01
0015E8                  	smpsAlterNote	$4A
0015E8 E14A             	dc.b	$E1,$4A
0015EA 8001             	dc.b	nRst, $01
0015EC                  	smpsAlterNote	$7F
0015EC E17F             	dc.b	$E1,$7F
0015EE 800180018001     	dc.b	nRst, $01, nRst, $01, nRst, $01
0015F4                  	smpsAlterNote	$00
0015F4 E100             	dc.b	$E1,$00
0015F6 803080308055800B 	dc.b	nRst, $30, nRst, $30, nRst, $55, nRst, $0B
0015FE 80558008         	dc.b	nRst, $55, nRst, $08
001602                  	smpsAlterNote	$F2
001602 E1F2             	dc.b	$E1,$F2
001604 8001             	dc.b	nRst, $01
001606                  	smpsAlterNote	$F9
001606 E1F9             	dc.b	$E1,$F9
001608 8001             	dc.b	nRst, $01
00160A                  	smpsAlterNote	$7F
00160A E17F             	dc.b	$E1,$7F
00160C 8001             	dc.b	nRst, $01
00160E                  	smpsAlterNote	$00
00160E E100             	dc.b	$E1,$00
001610 802D             	dc.b	nRst, $2D
001612                  	smpsAlterNote	$EF
001612 E1EF             	dc.b	$E1,$EF
001614 8001             	dc.b	nRst, $01
001616                  	smpsAlterNote	$F1
001616 E1F1             	dc.b	$E1,$F1
001618 8001             	dc.b	nRst, $01
00161A                  	smpsAlterNote	$7F
00161A E17F             	dc.b	$E1,$7F
00161C 8001             	dc.b	nRst, $01
00161E                  	smpsAlterNote	$FF
00161E E1FF             	dc.b	$E1,$FF
001620 802D             	dc.b	nRst, $2D
001622                  	smpsAlterNote	$F7
001622 E1F7             	dc.b	$E1,$F7
001624 8001             	dc.b	nRst, $01
001626                  	smpsAlterNote	$F9
001626 E1F9             	dc.b	$E1,$F9
001628 8001             	dc.b	nRst, $01
00162A                  	smpsAlterNote	$7F
00162A E17F             	dc.b	$E1,$7F
00162C 8001             	dc.b	nRst, $01
00162E                  	smpsAlterNote	$00
00162E E100             	dc.b	$E1,$00
001630 80558008         	dc.b	nRst, $55, nRst, $08
001634                  	smpsAlterNote	$FB
001634 E1FB             	dc.b	$E1,$FB
001636 8001             	dc.b	nRst, $01
001638                  	smpsAlterNote	$02
001638 E102             	dc.b	$E1,$02
00163A 8001             	dc.b	nRst, $01
00163C                  	smpsAlterNote	$7F
00163C E17F             	dc.b	$E1,$7F
00163E 8001             	dc.b	nRst, $01
001640                  	smpsAlterNote	$FF
001640 E1FF             	dc.b	$E1,$FF
001642 802D             	dc.b	nRst, $2D
001644                  	smpsAlterNote	$0C
001644 E10C             	dc.b	$E1,$0C
001646 8001             	dc.b	nRst, $01
001648                  	smpsAlterNote	$F2
001648 E1F2             	dc.b	$E1,$F2
00164A 8001             	dc.b	nRst, $01
00164C                  	smpsAlterNote	$7F
00164C E17F             	dc.b	$E1,$7F
00164E 8001             	dc.b	nRst, $01
001650                  	smpsAlterNote	$00
001650 E100             	dc.b	$E1,$00
001652 802D             	dc.b	nRst, $2D
001654                  	smpsAlterNote	$FA
001654 E1FA             	dc.b	$E1,$FA
001656 8001             	dc.b	nRst, $01
001658                  	smpsAlterNote	$04
001658 E104             	dc.b	$E1,$04
00165A 8001             	dc.b	nRst, $01
00165C                  	smpsAlterNote	$7F
00165C E17F             	dc.b	$E1,$7F
00165E 8001             	dc.b	nRst, $01
001660                  	smpsAlterNote	$00
001660 E100             	dc.b	$E1,$00
001662 8055805580168803 	dc.b	nRst, $55, nRst, $55, nRst, $16, nG0, $03
00166A 808F028001880380 	dc.b	nRst, nD1, $02, nRst, $01, nG0, $03, nRst
001672 880280018F038090 	dc.b	nG0, $02, nRst, $01, nD1, $03, nRst, nEb1

00167A                  HDN1R_Splash_Loop137:
00167A 80890280019003   	dc.b	nRst, nAb0, $02, nRst, $01, nEb1, $03
001681                  	smpsLoop		$00, $02, HDN1R_Splash_Loop137, Target
001681 F7               	dc.b	$F7
001682 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop137<*)
001684                  		rom_ptr_z80(HDN1R_Splash_Loop137+Target)
                        	;dc.w z80_ptr(ptr,addr)
001684 7A96             	dc.w  (((((HDN1R_Splash_Loop137+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop137+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001686 808B80920280018B 	dc.b	nRst, nBb0, nRst, nF1, $02, nRst, $01, nBb0
00168E 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
001696 8094808D0280018B 	dc.b	nRst, nG1, nRst, nC1, $02, nRst, $01, nBb0
00169E 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
0016A6 0280018D03809402 	dc.b	$02, nRst, $01, nC1, $03, nRst, nG1, $02
0016AE 80018D03808D0280 	dc.b	nRst, $01, nC1, $03, nRst, nC1, $02, nRst
0016B6 0194038095809502 	dc.b	$01, nG1, $03, nRst, nAb1, nRst, nAb1, $02
0016BE 8001900380900280 	dc.b	nRst, $01, nEb1, $03, nRst, nEb1, $02, nRst
0016C6 0195038097809202 	dc.b	$01, nAb1, $03, nRst, nBb1, nRst, nF1, $02
0016CE 8001920380920280 	dc.b	nRst, $01, nF1, $03, nRst, nF1, $02, nRst
0016D6 0197038097809202 	dc.b	$01, nBb1, $03, nRst, nBb1, nRst, nF1, $02
0016DE 8001920380920280 	dc.b	nRst, $01, nF1, $03, nRst, nF1, $02, nRst
0016E6 0197028001920280 	dc.b	$01, nBb1, $02, nRst, $01, nF1, $02, nRst
0016EE 018803808F028001 	dc.b	$01, nG0, $03, nRst, nD1, $02, nRst, $01
0016F6 880380880280018F 	dc.b	nG0, $03, nRst, nG0, $02, nRst, $01, nD1
0016FE 038090           	dc.b	$03, nRst, nEb1

001701                  HDN1R_Splash_Loop138:
001701 80890280019003   	dc.b	nRst, nAb0, $02, nRst, $01, nEb1, $03
001708                  	smpsLoop		$00, $02, HDN1R_Splash_Loop138, Target
001708 F7               	dc.b	$F7
001709 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop138<*)
00170B                  		rom_ptr_z80(HDN1R_Splash_Loop138+Target)
                        	;dc.w z80_ptr(ptr,addr)
00170B 0197             	dc.w  (((((HDN1R_Splash_Loop138+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop138+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00170D 808B80920280018B 	dc.b	nRst, nBb0, nRst, nF1, $02, nRst, $01, nBb0
001715 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
00171D 8094808D0280018B 	dc.b	nRst, nG1, nRst, nC1, $02, nRst, $01, nBb0
001725 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
00172D 0280018D03809402 	dc.b	$02, nRst, $01, nC1, $03, nRst, nG1, $02
001735 80018D03808D0280 	dc.b	nRst, $01, nC1, $03, nRst, nC1, $02, nRst
00173D 0194038092808B02 	dc.b	$01, nG1, $03, nRst, nF1, nRst, nBb0, $02
001745 80019203808B0280 	dc.b	nRst, $01, nF1, $03, nRst, nBb0, $02, nRst
00174D 01920280018B0280 	dc.b	$01, nF1, $02, nRst, $01, nBb0, $02, nRst
001755 0195038095028001 	dc.b	$01, nAb1, $03, nRst, nAb1, $02, nRst, $01
00175D 8E02800192038092 	dc.b	nCs1, $02, nRst, $01, nF1, $03, nRst, nF1
001765 0280018B02800194 	dc.b	$02, nRst, $01, nBb0, $02, nRst, $01, nG1
00176D 0380             	dc.b	$03, nRst

00176F                  HDN1R_Splash_Loop139:
00176F 8D0280018D028004 	dc.b	nC1, $02, nRst, $01, nC1, $02, nRst, $04
001777                  	smpsLoop		$00, $02, HDN1R_Splash_Loop139, Target
001777 F7               	dc.b	$F7
001778 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop139<*)
00177A                  		rom_ptr_z80(HDN1R_Splash_Loop139+Target)
                        	;dc.w z80_ptr(ptr,addr)
00177A 6F97             	dc.w  (((((HDN1R_Splash_Loop139+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop139+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00177C                  HDN1R_Splash_Loop140:
00177C 9403028010940280 	dc.b	nG1, $03, $02, nRst, $10, nG1, $02, nRst
001784 0494028007940201 	dc.b	$04, nG1, $02, nRst, $07, nG1, $02, $01
00178C 028007           	dc.b	$02, nRst, $07
00178F                  	smpsLoop		$00, $02, HDN1R_Splash_Loop140, Target
00178F F7               	dc.b	$F7
001790 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_Loop140<*)
001792                  		rom_ptr_z80(HDN1R_Splash_Loop140+Target)
                        	;dc.w z80_ptr(ptr,addr)
001792 7C97             	dc.w  (((((HDN1R_Splash_Loop140+Target))<<8)&$FF00)|((((HDN1R_Splash_Loop140+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001794 9403028010940280 	dc.b	nG1, $03, $02, nRst, $10, nG1, $02, nRst
00179C 0494028007940201 	dc.b	$04, nG1, $02, nRst, $07, nG1, $02, $01
0017A4 0280558006       	dc.b	$02, nRst, $55, nRst, $06
0017A9                  	smpsJump		HDN1R_Splash_Jump8, Target
0017A9 F6               	dc.b	$F6
                        	if (HDN1R_Splash_Jump8<*)
0017AA                  		rom_ptr_z80(HDN1R_Splash_Jump8+Target)
                        	;dc.w z80_ptr(ptr,addr)
0017AA BE95             	dc.w  (((((HDN1R_Splash_Jump8+Target))<<8)&$FF00)|((((HDN1R_Splash_Jump8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0017AC                  HDN1R_Splash_PWM1:
0017AC                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
0017AC E0C0             		dc.b $E0,panCenter
                        	endif
0017AE 8902             	dc.b	pCrashCymb, $02
0017B0                  	smpsAlterVol		$FA
0017B0 E6FA             	dc.b	$E6,$FA
0017B2 01               	dc.b	$01
0017B3                  	smpsAlterVol		$EF
0017B3 E6EF             	dc.b	$E6,$EF
0017B5 828080           	dc.b	pESnare, nRst, nRst
0017B8                  	smpsAlterVol		$0D
0017B8 E60D             	dc.b	$E6,$0D
0017BA 98               	dc.b	pClosedHH

0017BB                  HDN1R_Splash_PWM1_Loop1:
0017BB 80029801         	dc.b	nRst, $02, pClosedHH, $01
0017BF                  	smpsLoop		$00, $07, HDN1R_Splash_PWM1_Loop1, Target
0017BF F7               	dc.b	$F7
0017C0 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_PWM1_Loop1<*)
0017C2                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0017C2 BB97             	dc.w  (((((HDN1R_Splash_PWM1_Loop1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0017C4 8002             	dc.b	nRst, $02
0017C6                  	smpsAlterVol		$F0
0017C6 E6F0             	dc.b	$E6,$F0
0017C8 8B0C             	dc.b	pAKick, $0C
0017CA                  	smpsAlterVol		$10
0017CA E610             	dc.b	$E6,$10
0017CC 9801800298018002 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $02
0017D4                  	smpsAlterVol		$F0
0017D4 E6F0             	dc.b	$E6,$F0
0017D6 8B06             	dc.b	pAKick, $06
0017D8                  	smpsAlterVol		$10
0017D8 E610             	dc.b	$E6,$10

0017DA                  HDN1R_Splash_PWM1_Loop2:
0017DA 98018002         	dc.b	pClosedHH, $01, nRst, $02
0017DE                  	smpsLoop		$00, $04, HDN1R_Splash_PWM1_Loop2, Target
0017DE F7               	dc.b	$F7
0017DF 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_PWM1_Loop2<*)
0017E1                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
0017E1 DA97             	dc.w  (((((HDN1R_Splash_PWM1_Loop2+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0017E3                  	smpsAlterVol		$F0
0017E3 E6F0             	dc.b	$E6,$F0
0017E5 8B0C0C06060C0C0C 	dc.b	pAKick, $0C, $0C, $06, $06, $0C, $0C, $0C
0017ED 0C               	dc.b	$0C
0017EE                  	smpsAlterVol		$07
0017EE E607             	dc.b	$E6,$07
0017F0 8912             	dc.b	pCrashCymb, $12
0017F2                  	smpsAlterVol		$F9
0017F2 E6F9             	dc.b	$E6,$F9
0017F4 8B0606           	dc.b	pAKick, $06, $06
0017F7                  	smpsAlterVol		$1A
0017F7 E61A             	dc.b	$E6,$1A
0017F9 8902             	dc.b	pCrashCymb, $02
0017FB                  	smpsAlterVol		$FA
0017FB E6FA             	dc.b	$E6,$FA
0017FD 01               	dc.b	$01
0017FE                  	smpsAlterVol		$FA
0017FE E6FA             	dc.b	$E6,$FA
001800 02               	dc.b	$02
001801                  	smpsAlterVol		$FC
001801 E6FC             	dc.b	$E6,$FC
001803 01               	dc.b	$01
001804                  	smpsAlterVol		$F6
001804 E6F6             	dc.b	$E6,$F6
001806 8B0680           	dc.b	pAKick, $06, nRst
001809                  	smpsAlterVol		$07
001809 E607             	dc.b	$E6,$07
00180B 830C             	dc.b	pSplashCymb, $0C
00180D                  	smpsAlterVol		$F9
00180D E6F9             	dc.b	$E6,$F9

00180F                  HDN1R_Splash_PWM1_Loop3:
00180F 8B06             	dc.b	pAKick, $06
001811                  	smpsAlterVol		$05
001811 E605             	dc.b	$E6,$05
001813 8C               	dc.b	pASnare
001814                  	smpsAlterVol		$FB
001814 E6FB             	dc.b	$E6,$FB
001816 8B               	dc.b	pAKick
001817                  	smpsAlterVol		$06
001817 E606             	dc.b	$E6,$06
001819 8C               	dc.b	pASnare
00181A                  	smpsAlterVol		$FA
00181A E6FA             	dc.b	$E6,$FA
00181C                  	smpsLoop		$00, $05, HDN1R_Splash_PWM1_Loop3, Target
00181C F7               	dc.b	$F7
00181D 0005             	dc.b	$00,$05
                        	if (HDN1R_Splash_PWM1_Loop3<*)
00181F                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00181F 0F98             	dc.w  (((((HDN1R_Splash_PWM1_Loop3+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001821 8B               	dc.b	pAKick
001822                  	smpsAlterVol		$05
001822 E605             	dc.b	$E6,$05
001824 8C               	dc.b	pASnare
001825                  	smpsAlterVol		$0B
001825 E60B             	dc.b	$E6,$0B
001827 8201808004820180 	dc.b	pESnare, $01, nRst, nRst, $04, pESnare, $01, nRst
00182F 0282018080       	dc.b	$02, pESnare, $01, nRst, nRst
001834                  	smpsAlterVol		$F7
001834 E6F7             	dc.b	$E6,$F7
001836 8B06             	dc.b	pAKick, $06
001838                  	smpsAlterVol		$09
001838 E609             	dc.b	$E6,$09
00183A 8201808082808082 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pESnare
001842 800882018002     	dc.b	nRst, $08, pESnare, $01, nRst, $02

001848                  HDN1R_Splash_PWM1_Jump1:
001848 800C             	dc.b	nRst, $0C
00184A                  	smpsAlterVol		$F0
00184A E6F0             	dc.b	$E6,$F0

00184C                  HDN1R_Splash_PWM1_Loop4:
00184C 8B06             	dc.b	pAKick, $06
00184E                  	smpsAlterVol		$06
00184E E606             	dc.b	$E6,$06
001850 82               	dc.b	pESnare
001851                  	smpsAlterVol		$FA
001851 E6FA             	dc.b	$E6,$FA
001853                  	smpsLoop		$00, $0D, HDN1R_Splash_PWM1_Loop4, Target
001853 F7               	dc.b	$F7
001854 000D             	dc.b	$00,$0D
                        	if (HDN1R_Splash_PWM1_Loop4<*)
001856                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
001856 4C98             	dc.w  (((((HDN1R_Splash_PWM1_Loop4+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001858 8B               	dc.b	pAKick
001859                  	smpsAlterVol		$06
001859 E606             	dc.b	$E6,$06
00185B 82               	dc.b	pESnare
00185C                  	smpsAlterVol		$01
00185C E601             	dc.b	$E6,$01
00185E 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
001866 82018080         	dc.b	pESnare, $01, nRst, nRst
00186A                  	smpsAlterVol		$FB
00186A E6FB             	dc.b	$E6,$FB
00186C 8B06             	dc.b	pAKick, $06
00186E                  	smpsAlterVol		$05
00186E E605             	dc.b	$E6,$05
001870 82018080828080   	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst
001877                  	smpsAlterVol		$F9
001877 E6F9             	dc.b	$E6,$F9

001879                  HDN1R_Splash_PWM1_Loop5:
001879 8B06             	dc.b	pAKick, $06
00187B                  	smpsAlterVol		$06
00187B E606             	dc.b	$E6,$06
00187D 82               	dc.b	pESnare
00187E                  	smpsAlterVol		$FA
00187E E6FA             	dc.b	$E6,$FA
001880                  	smpsLoop		$00, $0D, HDN1R_Splash_PWM1_Loop5, Target
001880 F7               	dc.b	$F7
001881 000D             	dc.b	$00,$0D
                        	if (HDN1R_Splash_PWM1_Loop5<*)
001883                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001883 7998             	dc.w  (((((HDN1R_Splash_PWM1_Loop5+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001885 8B               	dc.b	pAKick
001886                  	smpsAlterVol		$06
001886 E606             	dc.b	$E6,$06
001888 82               	dc.b	pESnare
001889                  	smpsAlterVol		$01
001889 E601             	dc.b	$E6,$01
00188B 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
001893 82018080         	dc.b	pESnare, $01, nRst, nRst
001897                  	smpsAlterVol		$FB
001897 E6FB             	dc.b	$E6,$FB
001899 8B06             	dc.b	pAKick, $06
00189B                  	smpsAlterVol		$05
00189B E605             	dc.b	$E6,$05
00189D 8201808082808083 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pSplashCymb
0018A5 0C               	dc.b	$0C
0018A6                  	smpsAlterVol		$F9
0018A6 E6F9             	dc.b	$E6,$F9

0018A8                  HDN1R_Splash_PWM1_Loop6:
0018A8 8B06             	dc.b	pAKick, $06
0018AA                  	smpsAlterVol		$06
0018AA E606             	dc.b	$E6,$06
0018AC 82               	dc.b	pESnare
0018AD                  	smpsAlterVol		$FA
0018AD E6FA             	dc.b	$E6,$FA
0018AF                  	smpsLoop		$00, $0A, HDN1R_Splash_PWM1_Loop6, Target
0018AF F7               	dc.b	$F7
0018B0 000A             	dc.b	$00,$0A
                        	if (HDN1R_Splash_PWM1_Loop6<*)
0018B2                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
0018B2 A898             	dc.w  (((((HDN1R_Splash_PWM1_Loop6+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0018B4 8B               	dc.b	pAKick
0018B5                  	smpsAlterVol		$06
0018B5 E606             	dc.b	$E6,$06
0018B7 82               	dc.b	pESnare
0018B8                  	smpsAlterVol		$01
0018B8 E601             	dc.b	$E6,$01
0018BA 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
0018C2 82018080         	dc.b	pESnare, $01, nRst, nRst
0018C6                  	smpsAlterVol		$FB
0018C6 E6FB             	dc.b	$E6,$FB
0018C8 8B06             	dc.b	pAKick, $06
0018CA                  	smpsAlterVol		$05
0018CA E605             	dc.b	$E6,$05
0018CC 8201808082808082 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pESnare
0018D4 80088909         	dc.b	nRst, $08, pCrashCymb, $09
0018D8                  	smpsAlterVol		$13
0018D8 E613             	dc.b	$E6,$13
0018DA 02               	dc.b	$02
0018DB                  	smpsAlterVol		$FA
0018DB E6FA             	dc.b	$E6,$FA
0018DD 01               	dc.b	$01
0018DE                  	smpsAlterVol		$FA
0018DE E6FA             	dc.b	$E6,$FA
0018E0 02               	dc.b	$02
0018E1                  	smpsAlterVol		$FC
0018E1 E6FC             	dc.b	$E6,$FC
0018E3 01               	dc.b	$01
0018E4                  	smpsAlterVol		$FD
0018E4 E6FD             	dc.b	$E6,$FD
0018E6 0C               	dc.b	$0C
0018E7                  	smpsAlterVol		$F9
0018E7 E6F9             	dc.b	$E6,$F9

0018E9                  HDN1R_Splash_PWM1_Loop7:
0018E9 8B06             	dc.b	pAKick, $06
0018EB                  	smpsAlterVol		$06
0018EB E606             	dc.b	$E6,$06
0018ED 82               	dc.b	pESnare
0018EE                  	smpsAlterVol		$FA
0018EE E6FA             	dc.b	$E6,$FA
0018F0                  	smpsLoop		$00, $1C, HDN1R_Splash_PWM1_Loop7, Target
0018F0 F7               	dc.b	$F7
0018F1 001C             	dc.b	$00,$1C
                        	if (HDN1R_Splash_PWM1_Loop7<*)
0018F3                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0018F3 E998             	dc.w  (((((HDN1R_Splash_PWM1_Loop7+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0018F5 8B               	dc.b	pAKick
0018F6                  	smpsAlterVol		$06
0018F6 E606             	dc.b	$E6,$06
0018F8 82               	dc.b	pESnare
0018F9                  	smpsAlterVol		$01
0018F9 E601             	dc.b	$E6,$01
0018FB 01               	dc.b	$01

0018FC                  HDN1R_Splash_PWM1_Loop8:
0018FC 808082           	dc.b	nRst, nRst, pESnare
0018FF                  	smpsLoop		$00, $07, HDN1R_Splash_PWM1_Loop8, Target
0018FF F7               	dc.b	$F7
001900 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_PWM1_Loop8<*)
001902                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001902 FC98             	dc.w  (((((HDN1R_Splash_PWM1_Loop8+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001904 8080             	dc.b	nRst, nRst
001906                  	smpsAlterVol		$F9
001906 E6F9             	dc.b	$E6,$F9

001908                  HDN1R_Splash_PWM1_Loop9:
001908 8B06             	dc.b	pAKick, $06
00190A                  	smpsAlterVol		$06
00190A E606             	dc.b	$E6,$06
00190C 82               	dc.b	pESnare
00190D                  	smpsAlterVol		$FA
00190D E6FA             	dc.b	$E6,$FA
00190F                  	smpsLoop		$00, $0D, HDN1R_Splash_PWM1_Loop9, Target
00190F F7               	dc.b	$F7
001910 000D             	dc.b	$00,$0D
                        	if (HDN1R_Splash_PWM1_Loop9<*)
001912                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001912 0899             	dc.w  (((((HDN1R_Splash_PWM1_Loop9+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001914 8B               	dc.b	pAKick
001915                  	smpsAlterVol		$06
001915 E606             	dc.b	$E6,$06
001917 82               	dc.b	pESnare
001918                  	smpsAlterVol		$01
001918 E601             	dc.b	$E6,$01
00191A 01800882018008   	dc.b	$01, nRst, $08, pESnare, $01, nRst, $08
001921                  	smpsAlterVol		$13
001921 E613             	dc.b	$E6,$13
001923 8902             	dc.b	pCrashCymb, $02
001925                  	smpsAlterVol		$FA
001925 E6FA             	dc.b	$E6,$FA
001927 01               	dc.b	$01
001928                  	smpsAlterVol		$FA
001928 E6FA             	dc.b	$E6,$FA
00192A 02               	dc.b	$02
00192B                  	smpsAlterVol		$FC
00192B E6FC             	dc.b	$E6,$FC
00192D 01               	dc.b	$01
00192E                  	smpsAlterVol		$FD
00192E E6FD             	dc.b	$E6,$FD
001930 0C               	dc.b	$0C
001931                  	smpsAlterVol		$F9
001931 E6F9             	dc.b	$E6,$F9

001933                  HDN1R_Splash_PWM1_Loop10:
001933 8B06             	dc.b	pAKick, $06
001935                  	smpsAlterVol		$06
001935 E606             	dc.b	$E6,$06
001937 82               	dc.b	pESnare
001938                  	smpsAlterVol		$FA
001938 E6FA             	dc.b	$E6,$FA
00193A                  	smpsLoop		$00, $2A, HDN1R_Splash_PWM1_Loop10, Target
00193A F7               	dc.b	$F7
00193B 002A             	dc.b	$00,$2A
                        	if (HDN1R_Splash_PWM1_Loop10<*)
00193D                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
00193D 3399             	dc.w  (((((HDN1R_Splash_PWM1_Loop10+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00193F 8B               	dc.b	pAKick
001940                  	smpsAlterVol		$06
001940 E606             	dc.b	$E6,$06
001942 82               	dc.b	pESnare
001943                  	smpsAlterVol		$01
001943 E601             	dc.b	$E6,$01
001945 01               	dc.b	$01

001946                  HDN1R_Splash_PWM1_Loop11:
001946 808082           	dc.b	nRst, nRst, pESnare
001949                  	smpsLoop		$00, $07, HDN1R_Splash_PWM1_Loop11, Target
001949 F7               	dc.b	$F7
00194A 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_PWM1_Loop11<*)
00194C                  		rom_ptr_z80(HDN1R_Splash_PWM1_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
00194C 4699             	dc.w  (((((HDN1R_Splash_PWM1_Loop11+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00194E 8080830C80838082 	dc.b	nRst, nRst, pSplashCymb, $0C, nRst, pSplashCymb, nRst, pESnare
001956 01800882018002   	dc.b	$01, nRst, $08, pESnare, $01, nRst, $02
00195D                  	smpsAlterVol		$09
00195D E609             	dc.b	$E6,$09
00195F                  	smpsJump		HDN1R_Splash_PWM1_Jump1, Target
00195F F6               	dc.b	$F6
                        	if (HDN1R_Splash_PWM1_Jump1<*)
001960                  		rom_ptr_z80(HDN1R_Splash_PWM1_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001960 4898             	dc.w  (((((HDN1R_Splash_PWM1_Jump1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM1_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001962                  HDN1R_Splash_PWM2:
001962 8B0201           	dc.b	pAKick, $02, $01
001965                  	smpsAlterVol		$0F
001965 E60F             	dc.b	$E6,$0F
001967 8902             	dc.b	pCrashCymb, $02
001969                  	smpsAlterVol		$F1
001969 E6F1             	dc.b	$E6,$F1
00196B 8B01             	dc.b	pAKick, $01
00196D                  	smpsAlterVol		$03
00196D E603             	dc.b	$E6,$03
00196F 82800B           	dc.b	pESnare, nRst, $0B
001972                  	smpsAlterVol		$FD
001972 E6FD             	dc.b	$E6,$FD
001974 8B0C             	dc.b	pAKick, $0C
001976                  	smpsAlterVol		$11
001976 E611             	dc.b	$E6,$11

001978                  HDN1R_Splash_PWM2_Loop1:
001978 98018002         	dc.b	pClosedHH, $01, nRst, $02
00197C                  	smpsLoop		$00, $04, HDN1R_Splash_PWM2_Loop1, Target
00197C F7               	dc.b	$F7
00197D 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_PWM2_Loop1<*)
00197F                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00197F 7899             	dc.w  (((((HDN1R_Splash_PWM2_Loop1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001981                  	smpsAlterVol		$EF
001981 E6EF             	dc.b	$E6,$EF
001983 8B06             	dc.b	pAKick, $06
001985                  	smpsAlterVol		$1B
001985 E61B             	dc.b	$E6,$1B
001987 8902             	dc.b	pCrashCymb, $02
001989                  	smpsAlterVol		$F9
001989 E6F9             	dc.b	$E6,$F9
00198B 01               	dc.b	$01
00198C                  	smpsAlterVol		$FD
00198C E6FD             	dc.b	$E6,$FD
00198E 9880             	dc.b	pClosedHH, nRst
001990                  	smpsAlterVol		$F9
001990 E6F9             	dc.b	$E6,$F9
001992 89               	dc.b	pCrashCymb
001993                  	smpsAlterVol		$FD
001993 E6FD             	dc.b	$E6,$FD
001995 12               	dc.b	$12
001996                  	smpsAlterVol		$0A
001996 E60A             	dc.b	$E6,$0A

001998                  HDN1R_Splash_PWM2_Loop2:
001998 98018002         	dc.b	pClosedHH, $01, nRst, $02
00199C                  	smpsLoop		$00, $08, HDN1R_Splash_PWM2_Loop2, Target
00199C F7               	dc.b	$F7
00199D 0008             	dc.b	$00,$08
                        	if (HDN1R_Splash_PWM2_Loop2<*)
00199F                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00199F 9899             	dc.w  (((((HDN1R_Splash_PWM2_Loop2+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019A1                  	smpsAlterVol		$0A
0019A1 E60A             	dc.b	$E6,$0A
0019A3 89               	dc.b	pCrashCymb
0019A4                  	smpsAlterVol		$F9
0019A4 E6F9             	dc.b	$E6,$F9
0019A6 01               	dc.b	$01
0019A7                  	smpsAlterVol		$FB
0019A7 E6FB             	dc.b	$E6,$FB
0019A9 02               	dc.b	$02
0019AA                  	smpsAlterVol		$FB
0019AA E6FB             	dc.b	$E6,$FB
0019AC 01               	dc.b	$01
0019AD                  	smpsAlterVol		$FD
0019AD E6FD             	dc.b	$E6,$FD
0019AF 12               	dc.b	$12
0019B0                  	smpsAlterVol		$0A
0019B0 E60A             	dc.b	$E6,$0A

0019B2                  HDN1R_Splash_PWM2_Loop3:
0019B2 98018002         	dc.b	pClosedHH, $01, nRst, $02
0019B6                  	smpsLoop		$00, $08, HDN1R_Splash_PWM2_Loop3, Target
0019B6 F7               	dc.b	$F7
0019B7 0008             	dc.b	$00,$08
                        	if (HDN1R_Splash_PWM2_Loop3<*)
0019B9                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019B9 B299             	dc.w  (((((HDN1R_Splash_PWM2_Loop3+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019BB                  	smpsAlterVol		$0A
0019BB E60A             	dc.b	$E6,$0A
0019BD 89               	dc.b	pCrashCymb
0019BE                  	smpsAlterVol		$F9
0019BE E6F9             	dc.b	$E6,$F9
0019C0 01               	dc.b	$01
0019C1                  	smpsAlterVol		$FD
0019C1 E6FD             	dc.b	$E6,$FD
0019C3 9880             	dc.b	pClosedHH, nRst
0019C5                  	smpsAlterVol		$F9
0019C5 E6F9             	dc.b	$E6,$F9
0019C7 89               	dc.b	pCrashCymb
0019C8                  	smpsAlterVol		$F6
0019C8 E6F6             	dc.b	$E6,$F6
0019CA 8B060606         	dc.b	pAKick, $06, $06, $06
0019CE                  	smpsAlterVol		$11
0019CE E611             	dc.b	$E6,$11

0019D0                  HDN1R_Splash_PWM2_Loop4:
0019D0 98018002         	dc.b	pClosedHH, $01, nRst, $02
0019D4                  	smpsLoop		$00, $04, HDN1R_Splash_PWM2_Loop4, Target
0019D4 F7               	dc.b	$F7
0019D5 0004             	dc.b	$00,$04
                        	if (HDN1R_Splash_PWM2_Loop4<*)
0019D7                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019D7 D099             	dc.w  (((((HDN1R_Splash_PWM2_Loop4+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019D9                  	smpsAlterVol		$EF
0019D9 E6EF             	dc.b	$E6,$EF
0019DB 8B06             	dc.b	pAKick, $06
0019DD                  	smpsAlterVol		$07
0019DD E607             	dc.b	$E6,$07
0019DF 890C0C8003       	dc.b	pCrashCymb, $0C, $0C, nRst, $03

0019E4                  HDN1R_Splash_PWM2_Loop5:
0019E4 98018002         	dc.b	pClosedHH, $01, nRst, $02
0019E8                  	smpsAlterVol		$04
0019E8 E604             	dc.b	$E6,$04
0019EA 8E068003         	dc.b	pFingSnap, $06, nRst, $03
0019EE                  	smpsAlterVol		$FC
0019EE E6FC             	dc.b	$E6,$FC
0019F0 98018002         	dc.b	pClosedHH, $01, nRst, $02
0019F4                  	smpsAlterVol		$06
0019F4 E606             	dc.b	$E6,$06
0019F6 8E068003         	dc.b	pFingSnap, $06, nRst, $03
0019FA                  	smpsAlterVol		$FA
0019FA E6FA             	dc.b	$E6,$FA
0019FC                  	smpsLoop		$00, $05, HDN1R_Splash_PWM2_Loop5, Target
0019FC F7               	dc.b	$F7
0019FD 0005             	dc.b	$00,$05
                        	if (HDN1R_Splash_PWM2_Loop5<*)
0019FF                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019FF E499             	dc.w  (((((HDN1R_Splash_PWM2_Loop5+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A01 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A05                  	smpsAlterVol		$04
001A05 E604             	dc.b	$E6,$04
001A07 8E06             	dc.b	pFingSnap, $06
001A09                  	smpsAlterVol		$FC
001A09 E6FC             	dc.b	$E6,$FC
001A0B 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001A0F                  	smpsAlterVol		$09
001A0F E609             	dc.b	$E6,$09
001A11 01828002         	dc.b	$01, pESnare, nRst, $02
001A15                  	smpsAlterVol		$F7
001A15 E6F7             	dc.b	$E6,$F7
001A17 8B060380028B0380 	dc.b	pAKick, $06, $03, nRst, $02, pAKick, $03, nRst
001A1F 018B03           	dc.b	$01, pAKick, $03

001A22                  HDN1R_Splash_PWM2_Jump1:
001A22 800C838003       	dc.b	nRst, $0C, pSplashCymb, nRst, $03

001A27                  HDN1R_Splash_PWM2_Loop6:
001A27 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A2B                  	smpsAlterVol		$09
001A2B E609             	dc.b	$E6,$09
001A2D 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001A31                  	smpsAlterVol		$F7
001A31 E6F7             	dc.b	$E6,$F7
001A33                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM2_Loop6, Target
001A33 F7               	dc.b	$F7
001A34 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM2_Loop6<*)
001A36                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A36 279A             	dc.w  (((((HDN1R_Splash_PWM2_Loop6+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A38 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A3C                  	smpsAlterVol		$09
001A3C E609             	dc.b	$E6,$09
001A3E 8E06             	dc.b	pFingSnap, $06
001A40                  	smpsAlterVol		$F3
001A40 E6F3             	dc.b	$E6,$F3
001A42 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001A46                  	smpsAlterVol		$04
001A46 E604             	dc.b	$E6,$04
001A48 01828002         	dc.b	$01, pESnare, nRst, $02
001A4C                  	smpsAlterVol		$FC
001A4C E6FC             	dc.b	$E6,$FC
001A4E 8B06             	dc.b	pAKick, $06
001A50                  	smpsAlterVol		$04
001A50 E604             	dc.b	$E6,$04
001A52 830C8003         	dc.b	pSplashCymb, $0C, nRst, $03

001A56                  HDN1R_Splash_PWM2_Loop7:
001A56 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A5A                  	smpsAlterVol		$09
001A5A E609             	dc.b	$E6,$09
001A5C 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001A60                  	smpsAlterVol		$F7
001A60 E6F7             	dc.b	$E6,$F7
001A62                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM2_Loop7, Target
001A62 F7               	dc.b	$F7
001A63 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM2_Loop7<*)
001A65                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A65 569A             	dc.w  (((((HDN1R_Splash_PWM2_Loop7+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A67 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A6B                  	smpsAlterVol		$09
001A6B E609             	dc.b	$E6,$09
001A6D 8E06             	dc.b	pFingSnap, $06
001A6F                  	smpsAlterVol		$F3
001A6F E6F3             	dc.b	$E6,$F3
001A71 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001A75                  	smpsAlterVol		$04
001A75 E604             	dc.b	$E6,$04
001A77 01828002         	dc.b	$01, pESnare, nRst, $02
001A7B                  	smpsAlterVol		$FC
001A7B E6FC             	dc.b	$E6,$FC
001A7D 8B06             	dc.b	pAKick, $06
001A7F                  	smpsAlterVol		$04
001A7F E604             	dc.b	$E6,$04
001A81 890C8003         	dc.b	pCrashCymb, $0C, nRst, $03

001A85                  HDN1R_Splash_PWM2_Loop8:
001A85 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A89                  	smpsAlterVol		$09
001A89 E609             	dc.b	$E6,$09
001A8B 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001A8F                  	smpsAlterVol		$F7
001A8F E6F7             	dc.b	$E6,$F7
001A91                  	smpsLoop		$00, $0A, HDN1R_Splash_PWM2_Loop8, Target
001A91 F7               	dc.b	$F7
001A92 000A             	dc.b	$00,$0A
                        	if (HDN1R_Splash_PWM2_Loop8<*)
001A94                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A94 859A             	dc.w  (((((HDN1R_Splash_PWM2_Loop8+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A96 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A9A                  	smpsAlterVol		$09
001A9A E609             	dc.b	$E6,$09
001A9C 8E06             	dc.b	pFingSnap, $06
001A9E                  	smpsAlterVol		$F3
001A9E E6F3             	dc.b	$E6,$F3
001AA0 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001AA4                  	smpsAlterVol		$04
001AA4 E604             	dc.b	$E6,$04
001AA6 01828002         	dc.b	$01, pESnare, nRst, $02
001AAA                  	smpsAlterVol		$FC
001AAA E6FC             	dc.b	$E6,$FC
001AAC 8B06             	dc.b	pAKick, $06
001AAE                  	smpsAlterVol		$FD
001AAE E6FD             	dc.b	$E6,$FD
001AB0 038002           	dc.b	$03, nRst, $02
001AB3                  	smpsAlterVol		$03
001AB3 E603             	dc.b	$E6,$03
001AB5 8B018003         	dc.b	pAKick, $01, nRst, $03
001AB9                  	smpsAlterVol		$04
001AB9 E604             	dc.b	$E6,$04
001ABB 82018008         	dc.b	pESnare, $01, nRst, $08
001ABF                  	smpsAlterVol		$F9
001ABF E6F9             	dc.b	$E6,$F9
001AC1 8B0606           	dc.b	pAKick, $06, $06
001AC4                  	smpsAlterVol		$06
001AC4 E606             	dc.b	$E6,$06
001AC6 828003           	dc.b	pESnare, nRst, $03
001AC9                  	smpsAlterVol		$01
001AC9 E601             	dc.b	$E6,$01

001ACB                  HDN1R_Splash_PWM2_Loop9:
001ACB 98018002         	dc.b	pClosedHH, $01, nRst, $02
001ACF                  	smpsAlterVol		$09
001ACF E609             	dc.b	$E6,$09
001AD1 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001AD5                  	smpsAlterVol		$F7
001AD5 E6F7             	dc.b	$E6,$F7
001AD7                  	smpsLoop		$00, $1C, HDN1R_Splash_PWM2_Loop9, Target
001AD7 F7               	dc.b	$F7
001AD8 001C             	dc.b	$00,$1C
                        	if (HDN1R_Splash_PWM2_Loop9<*)
001ADA                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001ADA CB9A             	dc.w  (((((HDN1R_Splash_PWM2_Loop9+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001ADC 98018002         	dc.b	pClosedHH, $01, nRst, $02
001AE0                  	smpsAlterVol		$09
001AE0 E609             	dc.b	$E6,$09
001AE2 8E06             	dc.b	pFingSnap, $06
001AE4                  	smpsAlterVol		$F7
001AE4 E6F7             	dc.b	$E6,$F7
001AE6 8B8B8B8B830C8003 	dc.b	pAKick, pAKick, pAKick, pAKick, pSplashCymb, $0C, nRst, $03

001AEE                  HDN1R_Splash_PWM2_Loop10:
001AEE 98018002         	dc.b	pClosedHH, $01, nRst, $02
001AF2                  	smpsAlterVol		$09
001AF2 E609             	dc.b	$E6,$09
001AF4 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001AF8                  	smpsAlterVol		$F7
001AF8 E6F7             	dc.b	$E6,$F7
001AFA                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM2_Loop10, Target
001AFA F7               	dc.b	$F7
001AFB 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM2_Loop10<*)
001AFD                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
001AFD EE9A             	dc.w  (((((HDN1R_Splash_PWM2_Loop10+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001AFF 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B03                  	smpsAlterVol		$09
001B03 E609             	dc.b	$E6,$09
001B05 8E06             	dc.b	pFingSnap, $06
001B07                  	smpsAlterVol		$F3
001B07 E6F3             	dc.b	$E6,$F3
001B09 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
001B11 8B038006         	dc.b	pAKick, $03, nRst, $06
001B15                  	smpsAlterVol		$FD
001B15 E6FD             	dc.b	$E6,$FD
001B17 8B8B             	dc.b	pAKick, pAKick
001B19                  	smpsAlterVol		$06
001B19 E606             	dc.b	$E6,$06
001B1B 828003           	dc.b	pESnare, nRst, $03
001B1E                  	smpsAlterVol		$01
001B1E E601             	dc.b	$E6,$01

001B20                  HDN1R_Splash_PWM2_Loop11:
001B20 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B24                  	smpsAlterVol		$09
001B24 E609             	dc.b	$E6,$09
001B26 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001B2A                  	smpsAlterVol		$F7
001B2A E6F7             	dc.b	$E6,$F7
001B2C                  	smpsLoop		$00, $2A, HDN1R_Splash_PWM2_Loop11, Target
001B2C F7               	dc.b	$F7
001B2D 002A             	dc.b	$00,$2A
                        	if (HDN1R_Splash_PWM2_Loop11<*)
001B2F                  		rom_ptr_z80(HDN1R_Splash_PWM2_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B2F 209B             	dc.w  (((((HDN1R_Splash_PWM2_Loop11+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001B31 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B35                  	smpsAlterVol		$09
001B35 E609             	dc.b	$E6,$09
001B37 8E06             	dc.b	pFingSnap, $06
001B39                  	smpsAlterVol		$F7
001B39 E6F7             	dc.b	$E6,$F7
001B3B 8B8B8B8B890C8089 	dc.b	pAKick, pAKick, pAKick, pAKick, pCrashCymb, $0C, nRst, pCrashCymb
001B43 80               	dc.b	nRst
001B44                  	smpsAlterVol		$FC
001B44 E6FC             	dc.b	$E6,$FC
001B46 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
001B4E 8B03             	dc.b	pAKick, $03
001B50                  	smpsAlterVol		$04
001B50 E604             	dc.b	$E6,$04
001B52                  	smpsJump		HDN1R_Splash_PWM2_Jump1, Target
001B52 F6               	dc.b	$F6
                        	if (HDN1R_Splash_PWM2_Jump1<*)
001B53                  		rom_ptr_z80(HDN1R_Splash_PWM2_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B53 229A             	dc.w  (((((HDN1R_Splash_PWM2_Jump1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM2_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
001B55                  HDN1R_Splash_PWM3:
001B55 80038B02         	dc.b	nRst, $03, pAKick, $02
001B59                  	smpsAlterVol		$0A
001B59 E60A             	dc.b	$E6,$0A
001B5B 8901             	dc.b	pCrashCymb, $01
001B5D                  	smpsAlterVol		$F6
001B5D E6F6             	dc.b	$E6,$F6
001B5F 8B0C801E         	dc.b	pAKick, $0C, nRst, $1E
001B63                  	smpsAlterVol		$11
001B63 E611             	dc.b	$E6,$11
001B65 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B69                  	smpsAlterVol		$FE
001B69 E6FE             	dc.b	$E6,$FE
001B6B 898001           	dc.b	pCrashCymb, nRst, $01
001B6E                  	smpsAlterVol		$F1
001B6E E6F1             	dc.b	$E6,$F1
001B70 8B0C             	dc.b	pAKick, $0C
001B72                  	smpsAlterVol		$11
001B72 E611             	dc.b	$E6,$11
001B74 980180029801801A 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $1A

001B7C                  HDN1R_Splash_PWM3_Loop1:
001B7C 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B80                  	smpsLoop		$00, $07, HDN1R_Splash_PWM3_Loop1, Target
001B80 F7               	dc.b	$F7
001B81 0007             	dc.b	$00,$07
                        	if (HDN1R_Splash_PWM3_Loop1<*)
001B83                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B83 7C9B             	dc.w  (((((HDN1R_Splash_PWM3_Loop1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001B85 9801801A98018002 	dc.b	pClosedHH, $01, nRst, $1A, pClosedHH, $01, nRst, $02
001B8D                  	smpsAlterVol		$FE
001B8D E6FE             	dc.b	$E6,$FE
001B8F 898001           	dc.b	pCrashCymb, nRst, $01
001B92                  	smpsAlterVol		$02
001B92 E602             	dc.b	$E6,$02
001B94 98               	dc.b	pClosedHH

001B95                  HDN1R_Splash_PWM3_Loop2:
001B95 80029801         	dc.b	nRst, $02, pClosedHH, $01
001B99                  	smpsLoop		$00, $05, HDN1R_Splash_PWM3_Loop2, Target
001B99 F7               	dc.b	$F7
001B9A 0005             	dc.b	$00,$05
                        	if (HDN1R_Splash_PWM3_Loop2<*)
001B9C                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B9C 959B             	dc.w  (((((HDN1R_Splash_PWM3_Loop2+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001B9E 800E980180029801 	dc.b	nRst, $0E, pClosedHH, $01, nRst, $02, pClosedHH, $01
001BA6 800E             	dc.b	nRst, $0E
001BA8                  	smpsAlterVol		$EF
001BA8 E6EF             	dc.b	$E6,$EF
001BAA 8B06             	dc.b	pAKick, $06
001BAC                  	smpsAlterVol		$06
001BAC E606             	dc.b	$E6,$06
001BAE 8C80             	dc.b	pASnare, nRst
001BB0                  	smpsAlterVol		$FA
001BB0 E6FA             	dc.b	$E6,$FA

001BB2                  HDN1R_Splash_PWM3_Loop3:
001BB2 8B80             	dc.b	pAKick, nRst
001BB4                  	smpsLoop		$00, $0A, HDN1R_Splash_PWM3_Loop3, Target
001BB4 F7               	dc.b	$F7
001BB5 000A             	dc.b	$00,$0A
                        	if (HDN1R_Splash_PWM3_Loop3<*)
001BB7                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001BB7 B29B             	dc.w  (((((HDN1R_Splash_PWM3_Loop3+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001BB9 8B               	dc.b	pAKick
001BBA                  	smpsAlterVol		$07
001BBA E607             	dc.b	$E6,$07

001BBC                  HDN1R_Splash_PWM3_Loop4:
001BBC 8C018080048C0180 	dc.b	pASnare, $01, nRst, nRst, $04, pASnare, $01, nRst
001BC4 02               	dc.b	$02
001BC5                  	smpsLoop		$00, $02, HDN1R_Splash_PWM3_Loop4, Target
001BC5 F7               	dc.b	$F7
001BC6 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_PWM3_Loop4<*)
001BC8                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
001BC8 BC9B             	dc.w  (((((HDN1R_Splash_PWM3_Loop4+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001BCA 8C0180808C80808C 	dc.b	pASnare, $01, nRst, nRst, pASnare, nRst, nRst, pASnare
001BD2 80088C018002     	dc.b	nRst, $08, pASnare, $01, nRst, $02

001BD8                  HDN1R_Splash_PWM3_Jump1:
001BD8 800C898006       	dc.b	nRst, $0C, pCrashCymb, nRst, $06
001BDD                  	smpsAlterVol		$F9
001BDD E6F9             	dc.b	$E6,$F9

001BDF                  HDN1R_Splash_PWM3_Loop5:
001BDF 8B80             	dc.b	pAKick, nRst
001BE1                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM3_Loop5, Target
001BE1 F7               	dc.b	$F7
001BE2 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM3_Loop5<*)
001BE4                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001BE4 DF9B             	dc.w  (((((HDN1R_Splash_PWM3_Loop5+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001BE6 8B8018           	dc.b	pAKick, nRst, $18
001BE9                  	smpsAlterVol		$07
001BE9 E607             	dc.b	$E6,$07
001BEB 890C8006         	dc.b	pCrashCymb, $0C, nRst, $06
001BEF                  	smpsAlterVol		$F9
001BEF E6F9             	dc.b	$E6,$F9

001BF1                  HDN1R_Splash_PWM3_Loop6:
001BF1 8B80             	dc.b	pAKick, nRst
001BF3                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM3_Loop6, Target
001BF3 F7               	dc.b	$F7
001BF4 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM3_Loop6<*)
001BF6                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001BF6 F19B             	dc.w  (((((HDN1R_Splash_PWM3_Loop6+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001BF8 8B80188B06       	dc.b	pAKick, nRst, $18, pAKick, $06
001BFD                  	smpsAlterVol		$06
001BFD E606             	dc.b	$E6,$06
001BFF 8280             	dc.b	pESnare, nRst
001C01                  	smpsAlterVol		$FA
001C01 E6FA             	dc.b	$E6,$FA

001C03                  HDN1R_Splash_PWM3_Loop7:
001C03 8B80             	dc.b	pAKick, nRst
001C05                  	smpsLoop		$00, $0A, HDN1R_Splash_PWM3_Loop7, Target
001C05 F7               	dc.b	$F7
001C06 000A             	dc.b	$00,$0A
                        	if (HDN1R_Splash_PWM3_Loop7<*)
001C08                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C08 039C             	dc.w  (((((HDN1R_Splash_PWM3_Loop7+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C0A 8B8018           	dc.b	pAKick, nRst, $18
001C0D                  	smpsAlterVol		$07
001C0D E607             	dc.b	$E6,$07
001C0F 8909             	dc.b	pCrashCymb, $09
001C11                  	smpsAlterVol		$FC
001C11 E6FC             	dc.b	$E6,$FC
001C13 8B038006         	dc.b	pAKick, $03, nRst, $06
001C17                  	smpsAlterVol		$0E
001C17 E60E             	dc.b	$E6,$0E
001C19 9801800298018005 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $05
001C21                  	smpsAlterVol		$F6
001C21 E6F6             	dc.b	$E6,$F6
001C23 98018002         	dc.b	pClosedHH, $01, nRst, $02
001C27                  	smpsAlterVol		$09
001C27 E609             	dc.b	$E6,$09
001C29 8E0680           	dc.b	pFingSnap, $06, nRst
001C2C                  	smpsAlterVol		$F0
001C2C E6F0             	dc.b	$E6,$F0

001C2E                  HDN1R_Splash_PWM3_Loop8:
001C2E 8B80             	dc.b	pAKick, nRst
001C30                  	smpsLoop		$00, $1C, HDN1R_Splash_PWM3_Loop8, Target
001C30 F7               	dc.b	$F7
001C31 001C             	dc.b	$00,$1C
                        	if (HDN1R_Splash_PWM3_Loop8<*)
001C33                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C33 2E9C             	dc.w  (((((HDN1R_Splash_PWM3_Loop8+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C35 8B8018           	dc.b	pAKick, nRst, $18
001C38                  	smpsAlterVol		$07
001C38 E607             	dc.b	$E6,$07
001C3A 890C8006         	dc.b	pCrashCymb, $0C, nRst, $06
001C3E                  	smpsAlterVol		$F9
001C3E E6F9             	dc.b	$E6,$F9

001C40                  HDN1R_Splash_PWM3_Loop9:
001C40 8B80             	dc.b	pAKick, nRst
001C42                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM3_Loop9, Target
001C42 F7               	dc.b	$F7
001C43 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM3_Loop9<*)
001C45                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C45 409C             	dc.w  (((((HDN1R_Splash_PWM3_Loop9+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C47 8B8012           	dc.b	pAKick, nRst, $12
001C4A                  	smpsAlterVol		$11
001C4A E611             	dc.b	$E6,$11
001C4C 9801800298018005 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $05
001C54                  	smpsAlterVol		$F6
001C54 E6F6             	dc.b	$E6,$F6
001C56 98018002         	dc.b	pClosedHH, $01, nRst, $02
001C5A                  	smpsAlterVol		$09
001C5A E609             	dc.b	$E6,$09
001C5C 8E0680           	dc.b	pFingSnap, $06, nRst
001C5F                  	smpsAlterVol		$F0
001C5F E6F0             	dc.b	$E6,$F0

001C61                  HDN1R_Splash_PWM3_Loop10:
001C61 8B80             	dc.b	pAKick, nRst
001C63                  	smpsLoop		$00, $2A, HDN1R_Splash_PWM3_Loop10, Target
001C63 F7               	dc.b	$F7
001C64 002A             	dc.b	$00,$2A
                        	if (HDN1R_Splash_PWM3_Loop10<*)
001C66                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C66 619C             	dc.w  (((((HDN1R_Splash_PWM3_Loop10+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C68 8B8018           	dc.b	pAKick, nRst, $18
001C6B                  	smpsAlterVol		$07
001C6B E607             	dc.b	$E6,$07

001C6D                  HDN1R_Splash_PWM3_Loop11:
001C6D 820180088201800E 	dc.b	pESnare, $01, nRst, $08, pESnare, $01, nRst, $0E
001C75                  	smpsLoop		$00, $02, HDN1R_Splash_PWM3_Loop11, Target
001C75 F7               	dc.b	$F7
001C76 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_PWM3_Loop11<*)
001C78                  		rom_ptr_z80(HDN1R_Splash_PWM3_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C78 6D9C             	dc.w  (((((HDN1R_Splash_PWM3_Loop11+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C7A 830C             	dc.b	pSplashCymb, $0C
001C7C                  	smpsJump		HDN1R_Splash_PWM3_Jump1, Target
001C7C F6               	dc.b	$F6
                        	if (HDN1R_Splash_PWM3_Jump1<*)
001C7D                  		rom_ptr_z80(HDN1R_Splash_PWM3_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C7D D89B             	dc.w  (((((HDN1R_Splash_PWM3_Jump1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM3_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001C7F                  HDN1R_Splash_PWM4:
001C7F 8006891280555507 	dc.b	nRst, $06, pCrashCymb, $12, nRst, $55, $55, $07
001C87 98018002         	dc.b	pClosedHH, $01, nRst, $02
001C8B                  	smpsAlterVol		$06
001C8B E606             	dc.b	$E6,$06
001C8D 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001C91                  	smpsAlterVol		$FA
001C91 E6FA             	dc.b	$E6,$FA

001C93                  HDN1R_Splash_PWM4_Loop1:
001C93 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001C97                  	smpsLoop		$00, $0A, HDN1R_Splash_PWM4_Loop1, Target
001C97 F7               	dc.b	$F7
001C98 000A             	dc.b	$00,$0A
                        	if (HDN1R_Splash_PWM4_Loop1<*)
001C9A                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C9A 939C             	dc.w  (((((HDN1R_Splash_PWM4_Loop1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C9C 9801801A830903   	dc.b	pClosedHH, $01, nRst, $1A, pSplashCymb, $09, $03

001CA3                  HDN1R_Splash_PWM4_Jump1:
001CA3 800F             	dc.b	nRst, $0F

001CA5                  HDN1R_Splash_PWM4_Loop3:
001CA5 98018002         	dc.b	pClosedHH, $01, nRst, $02
001CA9                  	smpsAlterVol		$09
001CA9 E609             	dc.b	$E6,$09
001CAB 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001CAF                  	smpsAlterVol		$F7
001CAF E6F7             	dc.b	$E6,$F7

001CB1                  HDN1R_Splash_PWM4_Loop2:
001CB1 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001CB5                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM4_Loop2, Target
001CB5 F7               	dc.b	$F7
001CB6 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM4_Loop2<*)
001CB8                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CB8 B19C             	dc.w  (((((HDN1R_Splash_PWM4_Loop2+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CBA 9801801D         	dc.b	pClosedHH, $01, nRst, $1D
001CBE                  	smpsLoop		$01, $02, HDN1R_Splash_PWM4_Loop3, Target
001CBE F7               	dc.b	$F7
001CBF 0102             	dc.b	$01,$02
                        	if (HDN1R_Splash_PWM4_Loop3<*)
001CC1                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CC1 A59C             	dc.w  (((((HDN1R_Splash_PWM4_Loop3+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CC3 98018002         	dc.b	pClosedHH, $01, nRst, $02
001CC7                  	smpsAlterVol		$09
001CC7 E609             	dc.b	$E6,$09
001CC9 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001CCD                  	smpsAlterVol		$F7
001CCD E6F7             	dc.b	$E6,$F7

001CCF                  HDN1R_Splash_PWM4_Loop4:
001CCF 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001CD3                  	smpsLoop		$00, $0A, HDN1R_Splash_PWM4_Loop4, Target
001CD3 F7               	dc.b	$F7
001CD4 000A             	dc.b	$00,$0A
                        	if (HDN1R_Splash_PWM4_Loop4<*)
001CD6                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CD6 CF9C             	dc.w  (((((HDN1R_Splash_PWM4_Loop4+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CD8 98018038         	dc.b	pClosedHH, $01, nRst, $38
001CDC                  	smpsAlterVol		$F9
001CDC E6F9             	dc.b	$E6,$F9
001CDE 8B068009         	dc.b	pAKick, $06, nRst, $09
001CE2                  	smpsAlterVol		$07
001CE2 E607             	dc.b	$E6,$07

001CE4                  HDN1R_Splash_PWM4_Loop5:
001CE4 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001CE8                  	smpsLoop		$00, $1C, HDN1R_Splash_PWM4_Loop5, Target
001CE8 F7               	dc.b	$F7
001CE9 001C             	dc.b	$00,$1C
                        	if (HDN1R_Splash_PWM4_Loop5<*)
001CEB                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CEB E49C             	dc.w  (((((HDN1R_Splash_PWM4_Loop5+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CED 9801801D98018002 	dc.b	pClosedHH, $01, nRst, $1D, pClosedHH, $01, nRst, $02
001CF5                  	smpsAlterVol		$09
001CF5 E609             	dc.b	$E6,$09
001CF7 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001CFB                  	smpsAlterVol		$F7
001CFB E6F7             	dc.b	$E6,$F7

001CFD                  HDN1R_Splash_PWM4_Loop6:
001CFD 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D01                  	smpsLoop		$00, $0C, HDN1R_Splash_PWM4_Loop6, Target
001D01 F7               	dc.b	$F7
001D02 000C             	dc.b	$00,$0C
                        	if (HDN1R_Splash_PWM4_Loop6<*)
001D04                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D04 FD9C             	dc.w  (((((HDN1R_Splash_PWM4_Loop6+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D06 98018020         	dc.b	pClosedHH, $01, nRst, $20
001D0A                  	smpsAlterVol		$F9
001D0A E6F9             	dc.b	$E6,$F9
001D0C 8B068009         	dc.b	pAKick, $06, nRst, $09
001D10                  	smpsAlterVol		$07
001D10 E607             	dc.b	$E6,$07

001D12                  HDN1R_Splash_PWM4_Loop7:
001D12 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D16                  	smpsLoop		$00, $2A, HDN1R_Splash_PWM4_Loop7, Target
001D16 F7               	dc.b	$F7
001D17 002A             	dc.b	$00,$2A
                        	if (HDN1R_Splash_PWM4_Loop7<*)
001D19                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D19 129D             	dc.w  (((((HDN1R_Splash_PWM4_Loop7+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D1B 9801801A         	dc.b	pClosedHH, $01, nRst, $1A
001D1F                  	smpsAlterVol		$FC
001D1F E6FC             	dc.b	$E6,$FC

001D21                  HDN1R_Splash_PWM4_Loop8:
001D21 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
001D29 8B03800C         	dc.b	pAKick, $03, nRst, $0C
001D2D                  	smpsLoop		$00, $02, HDN1R_Splash_PWM4_Loop8, Target
001D2D F7               	dc.b	$F7
001D2E 0002             	dc.b	$00,$02
                        	if (HDN1R_Splash_PWM4_Loop8<*)
001D30                  		rom_ptr_z80(HDN1R_Splash_PWM4_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D30 219D             	dc.w  (((((HDN1R_Splash_PWM4_Loop8+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D32                  	smpsAlterVol		$04
001D32 E604             	dc.b	$E6,$04
001D34 89               	dc.b	pCrashCymb
001D35                  	smpsJump		HDN1R_Splash_PWM4_Jump1, Target
001D35 F6               	dc.b	$F6
                        	if (HDN1R_Splash_PWM4_Jump1<*)
001D36                  		rom_ptr_z80(HDN1R_Splash_PWM4_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D36 A39C             	dc.w  (((((HDN1R_Splash_PWM4_Jump1+Target))<<8)&$FF00)|((((HDN1R_Splash_PWM4_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001D38                  HDN1R_Splash_Patches:	
001D38 3F               	dc.b	$3F
001D39 003200761F1F1F1F 	dc.b	$00, $32, $00, $76,	$1F, $1F, $1F, $1F
001D41 0E0E0E1003030303 	dc.b	$0E, $0E, $0E, $10,	$03, $03, $03, $03
001D49 08583838998B8A8A 	dc.b	$08, $58, $38, $38,	$99, $8B, $8A, $8A

001D51 39               	dc.b	$39
001D52 060101019F1F1F5F 	dc.b	$06, $01, $01, $01,	$9F, $1F, $1F, $5F
001D5A 0A09090408070707 	dc.b	$0A, $09, $09, $04,	$08, $07, $07, $07
001D62 242424282224268A 	dc.b	$24, $24, $24, $28,	$22, $24, $26, $8A

001D6A 3A               	dc.b	$3A
001D6B 646060309D9D504C 	dc.b	$64, $60, $60, $30,	$9D, $9D, $50, $4C
001D73 040604051F050101 	dc.b	$04, $06, $04, $05,	$1F, $05, $01, $01
001D7B A82525557F06148E 	dc.b	$A8, $25, $25, $55,	$7F, $06, $14, $8E

001D83 3D               	dc.b	$3D
001D84 723131711A1C1A1C 	dc.b	$72, $31, $31, $71,	$1A, $1C, $1A, $1C
001D8C 0E0A0E0C00000001 	dc.b	$0E, $0A, $0E, $0C,	$00, $00, $00, $01
001D94 380828381C888E88 	dc.b	$38, $08, $28, $38,	$1C, $88, $8E, $88

001D9C 39               	dc.b	$39
001D9D 032261211F121F1F 	dc.b	$03, $22, $61, $21,	$1F, $12, $1F, $1F
001DA5 0505050B00000000 	dc.b	$05, $05, $05, $0B,	$00, $00, $00, $00
001DAD 101810181C121A8C 	dc.b	$10, $18, $10, $18,	$1C, $12, $1A, $8C

001DB5 39               	dc.b	$39
001DB6 330151015F5F5F5F 	dc.b	$33, $01, $51, $01,	$5F, $5F, $5F, $5F
001DBE 0F00000D01010101 	dc.b	$0F, $00, $00, $0D,	$01, $01, $01, $01
001DC6 331A1A171E191684 	dc.b	$33, $1A, $1A, $17,	$1E, $19, $16, $84

00000 Total Error(s)

DFLOORTIMPANI      0000008B E  DHITIMPANI         00000088 E  DKICK              00000081 E
DLOWTIMPANI        0000008A E  DMIDTIMPANI        00000089 E  DSNARE             00000082 E
DTIMPANI           00000083 E  DVLOWTIMPANI       0000008B E  HDN1R_SPLASH_FM1   00000040
HDN1R_SPLASH_FM2   00000401    HDN1R_SPLASH_FM3   0000047C    HDN1R_SPLASH_FM4   00000839
HDN1R_SPLASH_FM5   00000B8A    HDN1R_SPLASH_FM6   00000EAF    HDN1R_SPLASH_JUMP1 0000014B
HDN1R_SPLASH_JUMP2 00000539    HDN1R_SPLASH_JUMP3 000008A9    HDN1R_SPLASH_JUMP4 00000BF0
HDN1R_SPLASH_JUMP5 00000EC6    HDN1R_SPLASH_JUMP6 00001032    HDN1R_SPLASH_JUMP7 000012E1
HDN1R_SPLASH_JUMP8 000015BE    HDN1R_SPLASH_LOOP1 00000046    
HDN1R_SPLASH_LOOP10                           0000046A    
HDN1R_SPLASH_LOOP100                          00000D74    
HDN1R_SPLASH_LOOP101                          00000D97    
HDN1R_SPLASH_LOOP102                          00000DC7    
HDN1R_SPLASH_LOOP103                          00000DCD    
HDN1R_SPLASH_LOOP104                          00000DD5    
HDN1R_SPLASH_LOOP105                          00000DEB    
HDN1R_SPLASH_LOOP106                          00000DEA    
HDN1R_SPLASH_LOOP107                          00000E1B    
HDN1R_SPLASH_LOOP108                          00000E3B    
HDN1R_SPLASH_LOOP109                          00000E5E    
HDN1R_SPLASH_LOOP11                           00000482    
HDN1R_SPLASH_LOOP110                          00000E8B    
HDN1R_SPLASH_LOOP111                          00001068    
HDN1R_SPLASH_LOOP112                          000010E0    
HDN1R_SPLASH_LOOP113                          00001290    
HDN1R_SPLASH_LOOP114                          000012B2    
HDN1R_SPLASH_LOOP115                          000012AA    
HDN1R_SPLASH_LOOP116                          000012E7    
HDN1R_SPLASH_LOOP117                          000012FC    
HDN1R_SPLASH_LOOP118                          0000130C    
HDN1R_SPLASH_LOOP119                          0000131C    
HDN1R_SPLASH_LOOP12                           00000517    
HDN1R_SPLASH_LOOP120                          0000132C    
HDN1R_SPLASH_LOOP121                          0000132A    
HDN1R_SPLASH_LOOP122                          00001341    
HDN1R_SPLASH_LOOP123                          00001351    
HDN1R_SPLASH_LOOP124                          0000134F    
HDN1R_SPLASH_LOOP125                          00001366    
HDN1R_SPLASH_LOOP126                          00001376    
HDN1R_SPLASH_LOOP127                          00001386    
HDN1R_SPLASH_LOOP128                          00001396    
HDN1R_SPLASH_LOOP129                          00001394    
HDN1R_SPLASH_LOOP13                           00000524    
HDN1R_SPLASH_LOOP130                          000013D8    
HDN1R_SPLASH_LOOP131                          000013EE    
HDN1R_SPLASH_LOOP132                          00001407    
HDN1R_SPLASH_LOOP133                          0000149B    
HDN1R_SPLASH_LOOP134                          000014B1    
HDN1R_SPLASH_LOOP135                          000014CA    
HDN1R_SPLASH_LOOP136                          00001579    
HDN1R_SPLASH_LOOP137                          0000167A    
HDN1R_SPLASH_LOOP138                          00001701    
HDN1R_SPLASH_LOOP139                          0000176F    
HDN1R_SPLASH_LOOP14                           0000053D    
HDN1R_SPLASH_LOOP140                          0000177C    
HDN1R_SPLASH_LOOP15                           0000054A    
HDN1R_SPLASH_LOOP16                           00000557    
HDN1R_SPLASH_LOOP17                           00000564    
HDN1R_SPLASH_LOOP18                           00000571    
HDN1R_SPLASH_LOOP19                           0000057E    HDN1R_SPLASH_LOOP2 00000344
HDN1R_SPLASH_LOOP20                           0000058B    
HDN1R_SPLASH_LOOP21                           00000598    
HDN1R_SPLASH_LOOP22                           000005A5    
HDN1R_SPLASH_LOOP23                           000005B2    
HDN1R_SPLASH_LOOP24                           000005BF    
HDN1R_SPLASH_LOOP25                           000005CC    
HDN1R_SPLASH_LOOP26                           000005D9    
HDN1R_SPLASH_LOOP27                           000005E6    
HDN1R_SPLASH_LOOP28                           000005F3    
HDN1R_SPLASH_LOOP29                           000005F7    HDN1R_SPLASH_LOOP3 00000355
HDN1R_SPLASH_LOOP30                           00000607    
HDN1R_SPLASH_LOOP31                           0000061A    
HDN1R_SPLASH_LOOP32                           00000616    
HDN1R_SPLASH_LOOP33                           00000632    
HDN1R_SPLASH_LOOP34                           0000062E    
HDN1R_SPLASH_LOOP35                           0000064A    
HDN1R_SPLASH_LOOP36                           0000066B    
HDN1R_SPLASH_LOOP37                           00000669    
HDN1R_SPLASH_LOOP38                           00000683    
HDN1R_SPLASH_LOOP39                           00000681    HDN1R_SPLASH_LOOP4 00000370
HDN1R_SPLASH_LOOP40                           0000069D    
HDN1R_SPLASH_LOOP41                           0000069B    
HDN1R_SPLASH_LOOP42                           000006B5    
HDN1R_SPLASH_LOOP43                           000006B3    
HDN1R_SPLASH_LOOP44                           000006CD    
HDN1R_SPLASH_LOOP45                           000006CB    
HDN1R_SPLASH_LOOP46                           000006E5    
HDN1R_SPLASH_LOOP47                           00000704    
HDN1R_SPLASH_LOOP48                           00000717    
HDN1R_SPLASH_LOOP49                           0000072A    HDN1R_SPLASH_LOOP5 0000039E
HDN1R_SPLASH_LOOP50                           0000073D    
HDN1R_SPLASH_LOOP51                           00000750    
HDN1R_SPLASH_LOOP52                           00000763    
HDN1R_SPLASH_LOOP53                           00000776    
HDN1R_SPLASH_LOOP54                           00000772    
HDN1R_SPLASH_LOOP55                           0000078E    
HDN1R_SPLASH_LOOP56                           000007A1    
HDN1R_SPLASH_LOOP57                           000007B4    
HDN1R_SPLASH_LOOP58                           000007C7    
HDN1R_SPLASH_LOOP59                           000007DA    HDN1R_SPLASH_LOOP6 000003A9
HDN1R_SPLASH_LOOP60                           000007ED    
HDN1R_SPLASH_LOOP61                           0000081C    
HDN1R_SPLASH_LOOP62                           00000818    
HDN1R_SPLASH_LOOP63                           0000083F    
HDN1R_SPLASH_LOOP64                           00000872    
HDN1R_SPLASH_LOOP65                           000008B1    
HDN1R_SPLASH_LOOP66                           00000906    
HDN1R_SPLASH_LOOP67                           0000091B    
HDN1R_SPLASH_LOOP68                           00000930    
HDN1R_SPLASH_LOOP69                           00000945    HDN1R_SPLASH_LOOP7 000003CA
HDN1R_SPLASH_LOOP70                           0000095E    
HDN1R_SPLASH_LOOP71                           000009B5    
HDN1R_SPLASH_LOOP72                           000009CA    
HDN1R_SPLASH_LOOP73                           000009DF    
HDN1R_SPLASH_LOOP74                           000009F4    
HDN1R_SPLASH_LOOP75                           00000A22    
HDN1R_SPLASH_LOOP76                           00000A45    
HDN1R_SPLASH_LOOP77                           00000A6C    
HDN1R_SPLASH_LOOP78                           00000AA3    
HDN1R_SPLASH_LOOP79                           00000AA9    HDN1R_SPLASH_LOOP8 0000044E
HDN1R_SPLASH_LOOP80                           00000AB1    
HDN1R_SPLASH_LOOP81                           00000AC7    
HDN1R_SPLASH_LOOP82                           00000AC6    
HDN1R_SPLASH_LOOP83                           00000AF7    
HDN1R_SPLASH_LOOP84                           00000B17    
HDN1R_SPLASH_LOOP85                           00000B3A    
HDN1R_SPLASH_LOOP86                           00000B66    
HDN1R_SPLASH_LOOP87                           00000B90    
HDN1R_SPLASH_LOOP88                           00000BC3    
HDN1R_SPLASH_LOOP89                           00000BF8    HDN1R_SPLASH_LOOP9 00000457
HDN1R_SPLASH_LOOP90                           00000C4C    
HDN1R_SPLASH_LOOP91                           00000C5F    
HDN1R_SPLASH_LOOP92                           00000C72    
HDN1R_SPLASH_LOOP93                           00000C85    
HDN1R_SPLASH_LOOP94                           00000C9C    
HDN1R_SPLASH_LOOP95                           00000CF0    
HDN1R_SPLASH_LOOP96                           00000D03    
HDN1R_SPLASH_LOOP97                           00000D16    
HDN1R_SPLASH_LOOP98                           00000D29    
HDN1R_SPLASH_LOOP99                           00000D54    
HDN1R_SPLASH_PATCHES                          00001D38    HDN1R_SPLASH_PSG1  00001009
HDN1R_SPLASH_PSG2  0000129A    HDN1R_SPLASH_PSG3  000015AB    HDN1R_SPLASH_PWM1  000017AC
HDN1R_SPLASH_PWM1_JUMP1                       00001848    
HDN1R_SPLASH_PWM1_LOOP1                       000017BB    
HDN1R_SPLASH_PWM1_LOOP10                      00001933    
HDN1R_SPLASH_PWM1_LOOP11                      00001946    
HDN1R_SPLASH_PWM1_LOOP2                       000017DA    
HDN1R_SPLASH_PWM1_LOOP3                       0000180F    
HDN1R_SPLASH_PWM1_LOOP4                       0000184C    
HDN1R_SPLASH_PWM1_LOOP5                       00001879    
HDN1R_SPLASH_PWM1_LOOP6                       000018A8    
HDN1R_SPLASH_PWM1_LOOP7                       000018E9    
HDN1R_SPLASH_PWM1_LOOP8                       000018FC    
HDN1R_SPLASH_PWM1_LOOP9                       00001908    HDN1R_SPLASH_PWM2  00001962
HDN1R_SPLASH_PWM2_JUMP1                       00001A22    
HDN1R_SPLASH_PWM2_LOOP1                       00001978    
HDN1R_SPLASH_PWM2_LOOP10                      00001AEE    
HDN1R_SPLASH_PWM2_LOOP11                      00001B20    
HDN1R_SPLASH_PWM2_LOOP2                       00001998    
HDN1R_SPLASH_PWM2_LOOP3                       000019B2    
HDN1R_SPLASH_PWM2_LOOP4                       000019D0    
HDN1R_SPLASH_PWM2_LOOP5                       000019E4    
HDN1R_SPLASH_PWM2_LOOP6                       00001A27    
HDN1R_SPLASH_PWM2_LOOP7                       00001A56    
HDN1R_SPLASH_PWM2_LOOP8                       00001A85    
HDN1R_SPLASH_PWM2_LOOP9                       00001ACB    HDN1R_SPLASH_PWM3  00001B55
HDN1R_SPLASH_PWM3_JUMP1                       00001BD8    
HDN1R_SPLASH_PWM3_LOOP1                       00001B7C    
HDN1R_SPLASH_PWM3_LOOP10                      00001C61    
HDN1R_SPLASH_PWM3_LOOP11                      00001C6D    
HDN1R_SPLASH_PWM3_LOOP2                       00001B95    
HDN1R_SPLASH_PWM3_LOOP3                       00001BB2    
HDN1R_SPLASH_PWM3_LOOP4                       00001BBC    
HDN1R_SPLASH_PWM3_LOOP5                       00001BDF    
HDN1R_SPLASH_PWM3_LOOP6                       00001BF1    
HDN1R_SPLASH_PWM3_LOOP7                       00001C03    
HDN1R_SPLASH_PWM3_LOOP8                       00001C2E    
HDN1R_SPLASH_PWM3_LOOP9                       00001C40    HDN1R_SPLASH_PWM4  00001C7F
HDN1R_SPLASH_PWM4_JUMP1                       00001CA3    
HDN1R_SPLASH_PWM4_LOOP1                       00001C93    
HDN1R_SPLASH_PWM4_LOOP2                       00001CB1    
HDN1R_SPLASH_PWM4_LOOP3                       00001CA5    
HDN1R_SPLASH_PWM4_LOOP4                       00001CCF    
HDN1R_SPLASH_PWM4_LOOP5                       00001CE4    
HDN1R_SPLASH_PWM4_LOOP6                       00001CFD    
HDN1R_SPLASH_PWM4_LOOP7                       00001D12    
HDN1R_SPLASH_PWM4_LOOP8                       00001D21    NA0                0000008A E
NA1                00000096 E  NA2                000000A2 E  NA3                000000AE E
NA4                000000BA E  NA5                000000C6 E  NA6                000000D2 E
NA7                000000DE E  NAB0               00000089 E  NAB1               00000095 E
NAB2               000000A1 E  NAB3               000000AD E  NAB4               000000B9 E
NAB5               000000C5 E  NAB6               000000D1 E  NAB7               000000DD E
NB0                0000008C E  NB1                00000098 E  NB2                000000A4 E
NB3                000000B0 E  NB4                000000BC E  NB5                000000C8 E
NB6                000000D4 E  NBB0               0000008B E  NBB1               00000097 E
NBB2               000000A3 E  NBB3               000000AF E  NBB4               000000BB E
NBB5               000000C7 E  NBB6               000000D3 E  NBB7               000000DF E
NC0                00000081 E  NC1                0000008D E  NC2                00000099 E
NC3                000000A5 E  NC4                000000B1 E  NC5                000000BD E
NC6                000000C9 E  NC7                000000D5 E  NCS0               00000082 E
NCS1               0000008E E  NCS2               0000009A E  NCS3               000000A6 E
NCS4               000000B2 E  NCS5               000000BE E  NCS6               000000CA E
NCS7               000000D6 E  ND0                00000083 E  ND1                0000008F E
ND2                0000009B E  ND3                000000A7 E  ND4                000000B3 E
ND5                000000BF E  ND6                000000CB E  ND7                000000D7 E
NE0                00000085 E  NE1                00000091 E  NE2                0000009D E
NE3                000000A9 E  NE4                000000B5 E  NE5                000000C1 E
NE6                000000CD E  NE7                000000D9 E  NEB0               00000084 E
NEB1               00000090 E  NEB2               0000009C E  NEB3               000000A8 E
NEB4               000000B4 E  NEB5               000000C0 E  NEB6               000000CC E
NEB7               000000D8 E  NF0                00000086 E  NF1                00000092 E
NF2                0000009E E  NF3                000000AA E  NF4                000000B6 E
NF5                000000C2 E  NF6                000000CE E  NF7                000000DA E
NFS0               00000087 E  NFS1               00000093 E  NFS2               0000009F E
NFS3               000000AB E  NFS4               000000B7 E  NFS5               000000C3 E
NFS6               000000CF E  NFS7               000000DB E  NG0                00000088 E
NG1                00000094 E  NG2                000000A0 E  NG3                000000AC E
NG4                000000B8 E  NG5                000000C4 E  NG6                000000D0 E
NG7                000000DC E  NRST               00000080 E  PAKICK             0000008B E
PANCENTER          000000C0 S  PANCENTRE          000000C0 S  PANLEFT            00000080 S
PANNONE            00000000 S  PANRIGHT           00000040 S  PASNARE            0000008C E
PBELL              0000008D E  PBONGOHI           00000092 E  PBONGOLO           00000093 E
PCLAP              0000008A E  PCLICKHI           00000090 E  PCLICKLO           00000091 E
PCLOSEDHH          00000098 E  PCOWBELL           0000008F E  PCRASHCYMB         00000089 E
PCRA_D81           00000081 E  PCRA_D82           0000008C E  PCRA_D83           00000085 E
PCRA_D84           00000086 E  PCRA_D85           00000087 E  PEHIHAT            00000088 E
PEKICK             00000081 E  PESNARE            00000082 E  PFINGSNAP          0000008E E
PFINGSNAPHI        0000008E E  PFINGSNAPLO        0000009E E  PNEPDADA           0000009D E
POPENHH            00000099 E  PRIDEBELL          00000084 E  PSEGA              00000097 E
PSGDELTA           0000000C E  PSGVOI             00000000 E  PSGVOL1            00000001 E
PSGVOL2            00000003 E  PSGVOL3            00000002 E  PSILENCE           00000096 E
PSPLASHCYMB        00000083 E  PTIMPANIHI         00000094 E  PTIMPANILO         00000095 E
PTOMHI             00000085 E  PTOMLOW            00000087 E  PTOMLOWER          0000009A E
PTOMLOWERER        0000009B E  PTOMLOWEREST       0000009C E  PTOMMID            00000086 E
PWMPITCH           00000000 E  PWMVOL1            00000077 E  SMODON             0000F480 E
SMPSED             000000ED E  SMPSEE             000000EE E  SMPSF9             000000F9 E
SMPSMODOFF         000000F4 E  SMPSMODON          000000F1 E  SMPSNOATTACK       000000E7 E
SMPSPITCH00        00000000 E  SMPSPITCH01HI      0000000C E  SMPSPITCH01LO      000000F4 E
SMPSPITCH02HI      00000018 E  SMPSPITCH02LO      000000E8 E  SMPSPITCH03HI      00000024 E
SMPSPITCH03LO      000000DC E  SMPSPITCH04HI      00000030 E  SMPSPITCH04LO      000000D0 E
SMPSPITCH05HI      0000003C E  SMPSPITCH05LO      000000C4 E  SMPSPITCH06HI      00000048 E
SMPSPITCH06LO      000000B8 E  SMPSPITCH07HI      00000054 E  SMPSPITCH07LO      000000AC E
SMPSPITCH08HI      00000060 E  SMPSPITCH08LO      000000A0 E  SMPSPITCH09HI      0000006C E
SMPSPITCH09LO      00000094 E  SMPSPITCH10HI      00000078 E  SMPSPITCH10LO      00000088 E
TARGET             00040000 E
