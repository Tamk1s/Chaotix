                        	LIST MACRO
                        	LIST EXPAND
000000                  	include _s1smps2asm_S1KC.asm
                        ; Standard Octave Pitch Equates
       = 000088         smpsPitch10lo		EQU	$88
       = 000094         smpsPitch09lo		EQU	$94
       = 0000A0         smpsPitch08lo		EQU	$A0
       = 0000AC         smpsPitch07lo		EQU	$AC
       = 0000B8         smpsPitch06lo		EQU	$B8
       = 0000C4         smpsPitch05lo		EQU	$C4
       = 0000D0         smpsPitch04lo		EQU	$D0
       = 0000DC         smpsPitch03lo		EQU	$DC
       = 0000E8         smpsPitch02lo		EQU	$E8
       = 0000F4         smpsPitch01lo		EQU	$F4
       = 000000         smpsPitch00			EQU	$00
       = 00000C         smpsPitch01hi		EQU	$0C
       = 000018         smpsPitch02hi		EQU	$18
       = 000024         smpsPitch03hi		EQU	$24
       = 000030         smpsPitch04hi		EQU	$30
       = 00003C         smpsPitch05hi		EQU	$3C
       = 000048         smpsPitch06hi		EQU	$48
       = 000054         smpsPitch07hi		EQU	$54
       = 000060         smpsPitch08hi		EQU	$60
       = 00006C         smpsPitch09hi		EQU	$6C
       = 000078         smpsPitch10hi		EQU	$78

                        ; Note Equates
       = 000080         nRst			EQU	$80
       = 000081         nC0			EQU	$81
       = 000082         nCs0			EQU	$82
       = 000083         nD0			EQU	$83
       = 000084         nEb0			EQU	$84
       = 000085         nE0			EQU	$85
       = 000086         nF0			EQU	$86
       = 000087         nFs0			EQU	$87
       = 000088         nG0			EQU	$88
       = 000089         nAb0			EQU	$89
       = 00008A         nA0			EQU	$8A
       = 00008B         nBb0			EQU	$8B
       = 00008C         nB0			EQU	$8C
       = 00008D         nC1			EQU	$8D
       = 00008E         nCs1			EQU	$8E
       = 00008F         nD1			EQU	$8F
       = 000090         nEb1			EQU	$90
       = 000091         nE1			EQU	$91
       = 000092         nF1			EQU	$92
       = 000093         nFs1			EQU	$93
       = 000094         nG1			EQU	$94
       = 000095         nAb1			EQU	$95
       = 000096         nA1			EQU	$96
       = 000097         nBb1			EQU	$97
       = 000098         nB1			EQU	$98
       = 000099         nC2			EQU	$99
       = 00009A         nCs2			EQU	$9A
       = 00009B         nD2			EQU	$9B
       = 00009C         nEb2			EQU	$9C
       = 00009D         nE2			EQU	$9D
       = 00009E         nF2			EQU	$9E
       = 00009F         nFs2			EQU	$9F
       = 0000A0         nG2			EQU	$A0
       = 0000A1         nAb2			EQU	$A1
       = 0000A2         nA2			EQU	$A2
       = 0000A3         nBb2			EQU	$A3
       = 0000A4         nB2			EQU	$A4
       = 0000A5         nC3			EQU	$A5
       = 0000A6         nCs3			EQU	$A6
       = 0000A7         nD3			EQU	$A7
       = 0000A8         nEb3			EQU	$A8
       = 0000A9         nE3			EQU	$A9
       = 0000AA         nF3			EQU	$AA
       = 0000AB         nFs3			EQU	$AB
       = 0000AC         nG3			EQU	$AC
       = 0000AD         nAb3			EQU	$AD
       = 0000AE         nA3			EQU	$AE
       = 0000AF         nBb3			EQU	$AF
       = 0000B0         nB3			EQU	$B0
       = 0000B1         nC4			EQU	$B1
       = 0000B2         nCs4			EQU	$B2
       = 0000B3         nD4			EQU	$B3
       = 0000B4         nEb4			EQU	$B4
       = 0000B5         nE4			EQU	$B5
       = 0000B6         nF4			EQU	$B6
       = 0000B7         nFs4			EQU	$B7
       = 0000B8         nG4			EQU	$B8
       = 0000B9         nAb4			EQU	$B9
       = 0000BA         nA4			EQU	$BA
       = 0000BB         nBb4			EQU	$BB
       = 0000BC         nB4			EQU	$BC
       = 0000BD         nC5			EQU	$BD
       = 0000BE         nCs5			EQU	$BE
       = 0000BF         nD5			EQU	$BF
       = 0000C0         nEb5			EQU	$C0
       = 0000C1         nE5			EQU	$C1
       = 0000C2         nF5			EQU	$C2
       = 0000C3         nFs5			EQU	$C3
       = 0000C4         nG5			EQU	$C4
       = 0000C5         nAb5			EQU	$C5
       = 0000C6         nA5			EQU	$C6
       = 0000C7         nBb5			EQU	$C7
       = 0000C8         nB5			EQU	$C8
       = 0000C9         nC6			EQU	$C9
       = 0000CA         nCs6			EQU	$CA
       = 0000CB         nD6			EQU	$CB
       = 0000CC         nEb6			EQU	$CC
       = 0000CD         nE6			EQU	$CD
       = 0000CE         nF6			EQU	$CE
       = 0000CF         nFs6			EQU	$CF
       = 0000D0         nG6			EQU	$D0
       = 0000D1         nAb6			EQU	$D1
       = 0000D2         nA6			EQU	$D2
       = 0000D3         nBb6			EQU	$D3
       = 0000D4         nB6			EQU	$D4
       = 0000D5         nC7			EQU	$D5
       = 0000D6         nCs7			EQU	$D6
       = 0000D7         nD7			EQU	$D7
       = 0000D8         nEb7			EQU	$D8
       = 0000D9         nE7			EQU	$D9
       = 0000DA         nF7			EQU	$DA
       = 0000DB         nFs7			EQU	$DB
       = 0000DC         nG7			EQU	$DC
       = 0000DD         nAb7			EQU	$DD
       = 0000DE         nA7			EQU	$DE
       = 0000DF         nBb7			EQU	$DF

                        ; Channel IDs for SFX
       = 000080         cPSG1				EQU $80
       = 0000A0         cPSG2				EQU $A0
       = 0000C0         cPSG3				EQU $C0
       = 0000E0         cNoise				EQU $E0	; Not for use in S3/S&K/S3D
       = 000002         cFM3				EQU $02
       = 000004         cFM4				EQU $04
       = 000005         cFM5				EQU $05
       = 000006         cFM6				EQU $06	; Only in S3/S&K/S3D, overrides DAC
       = 000018         cPWM1				EQU	$18
       = 00001A         cPWM2				EQU	$1A
       = 00001C         cPWM3				EQU	$1C
       = 00001E         cPWM4				EQU	$1E

                        ; DAC Equates (S1)
       = 000081         dKick			EQU	$81
       = 000082         dSnare			EQU	$82
       = 000083         dTimpani		EQU	$83
       = 000088         dHiTimpani		EQU	$88
       = 000089         dMidTimpani		EQU	$89
       = 00008A         dLowTimpani		EQU	$8A
       = 00008B         dVLowTimpani	EQU	$8B
       = 00008B         dFloorTimpani	EQU $8B

                        ; !@ PSGDelta (S1->KC has 12 semitone increase between PSG)
       = 00000C         PSGDelta	EQU	$0C

                        ; PWM Equates (KC)
       = 000081         pEKick		EQU	$81
       = 000082         pESnare		EQU	$82
       = 000083         pSplashCymb	EQU	$83
       = 000084         pRideBell	EQU $84
       = 000085         pTomHi		EQU	$85
       = 000086         pTomMid		EQU	$86
       = 000087         pTomLow		EQU	$87
       = 000088         pEHiHat		EQU	$88
       = 000089         pCrashCymb	EQU $89
       = 00008A         pClap		EQU $8A
       = 00008B         pAKick		EQU $8B
       = 00008C         pASnare		EQU	$8C
       = 00008D         pBell		EQU $8D
                        ;!@ Enum due to late PWM driver revision
       = 00008E         pFingSnap	EQU	$8E
       = 00008E         pFingSnapHi	EQU	$8E
       = 00008F         pCowbell	EQU	$8F
       = 000090         pClickHi	EQU	$90
       = 000091         pClickLo	EQU	$91
       = 000092         pBongoHi	EQU	$92
       = 000093         pBongoLo	EQU	$93
       = 000094         pTimpaniHi	EQU	$94
       = 000095         pTimpaniLo	EQU	$95
       = 000096         pSilence	EQU $96
                        ;!@ NEW DATA
       = 000097         pSega		EQU $97
       = 000098         pClosedHH	EQU $98
       = 000099         pOpenHH		EQU $99
       = 00009A         pTomLower		EQU	$9A
       = 00009B         pTomLowerer		EQU	$9B
       = 00009C         pTomLowerest	EQU	$9C
       = 00009D         pNepDada		EQU	$9D
       = 00009E         pFingSnapLo		EQU	$9E
       = 00009F         pOrchHitHi		EQU	$9F
       = 0000A0         pOrchHitMed		EQU	$A0
       = 0000A1         pOrchHitLo		EQU	$A1
       = 0000A2         pOrchHitLower	EQU	$A2

                        ;!@ Crackers conversion enums. Knuckles Clackers equiv
       = 000081         pCra_d81	EQU	pEKick
       = 00008C         pCra_d82	EQU	pASnare
       = 000085         pCra_d83	EQU	pTomHi
       = 000086         pCra_d84	EQU	pTomMid
       = 000087         pCra_d85	EQU	pTomLow

                        ;!@ Convert ptrs to z80Ptr
                        ; function to make a little-endian 16-bit pointer for the Z80 sound driver
                        ;z80_ptr function x,y,((((x)|(y))<<8)&$FF00)|((((x)|(y))>>8)&$7F)|$80
                        ;z80_ptr_neg function x,y,((((y)-(x))<<8)&$FF00)|((((y)-(x))>>8)&$7F)|$80

                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        rom_ptr_z80 macro addr
                        	;dc.w z80_ptr(ptr,addr)
                        	dc.w  ((((addr)<<8)&$FF00)|(((addr)>>8)&$7F)|$80)
                            endm
                        	
                        ;Funciton to convert S1 tempo to S2 and then S3+
                        ;The conversion works for all values of main tempo other than 0 â€” this value cannot be converted exactly between the two drivers. The conversion of main tempos from Sonic 1 to Sonic 2 can be done (approximately) with the following formul
                        ;S2 main tempo = floor{ [ (S1 main tempo-1) * 256 + floor(S1 main tempo/2) ] / S1 main tempo }			
                        ;It is easy to convert between Sonic 2 and Sonic 3+ main tempo values:
                        ;S2 main tempo = (256 - S3 main tempo) mod 256
                        ;S3 main tempo = (256 - S2 main tempo) mod 256
                        tempo_conv macro tempo
                        		if tempo==0
                        			dc.b	((256 - (((256-1)*256 + (256/2)) / 256)) % 256)
                        		else
                        			dc.b	((256 - ((((tempo)-1)*256 + ((tempo)/2)) / (tempo))) % 256)
                        		endif
                        	endm
                        	
                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        ;rom_ptr_z80_neg macro ptr,addr
                        	;dc.w z80_ptr_neg(ptr,addr)
                        	;dc.w	(((((addr)-(ptr))<<8)&$FF00)|((((addr)-(ptr))>>8)&$7F)|$80)
                            ;endm

                        ; Header Macros

                        ;!@
                        ; Header - Set up Voice Location
                        ;smpsHeaderVoice macro loc
                        smpsHeaderVoice macro loc,songstart
                        ;songStart set *
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	endm
                        ; Header - Set up Channel Usage	
                        smpsHeaderChan macro fm,psg
                        	if \0==2
                        		dc.b	fm,psg
                        	else
                        		dc.b	fm
                        	endif	
                        	endm	
                        	

                        	
                        smpsHeaderTempo macro div,mod
                        	dc.b	div,mod
                        	endm

                        ;!@
                        ; Header - Set up Tempo. Mod is converted from S1 to S3 tempo
                        smpsHeaderTempoC macro div,mod
                        TempDiv set div
                        	dc.b	div
                        	tempo_conv(mod)
000000                  	endm
                        	
                        ; Header - Set up DAC Channel
                        smpsHeaderDAC macro loc
                        	dc.w	loc-songStart
                        	dc.w	$00
                        	endm
                        	
                        ;!@
                        ; Header - Set up FM Channel	
                        ;smpsHeaderFM macro loc,pitch,vol
                        smpsHeaderFM macro loc,songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	endm

                        ;!@	
                        ; Header - Set up PSG Channel
                        ;smpsHeaderPSG macro loc,pitch,vol,voice
                        smpsHeaderPSG macro loc,songstart,pitch,vol,null,voice
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	;dc.w	voice
                        	dc.b	null,voice
                        	endm

                        ;!@
                        ; Header - Set up SFX Channel
                        ;sHeaderSFX	macro play,patch,loc,pitch,vol
                        smpsHeaderSFX	macro play,patch,loc,pitch,vol,songstart
                        	dc.b play,patch
                        	;dc.w loc-sPointZero
                        	rom_ptr_z80(loc+songstart)
                        	dc.b pitch,vol
                            endm

                        ; Co-ord Flag Macros and Equates
                        ; E0xx - Panning, AMS, FMS
                        smpsPan macro direction,amsfms
                        panNone set $00
                        panRight set $40
                        panLeft set $80
                        panCentre set $C0
                        panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if \0==2
                        		dc.b $E0,direction|amsfms
                        	else
                        		dc.b $E0,direction
                        	endif
000000                  	endm
                        	
                        ; E1xx - Alter note values by xx
                        smpsAlterNote macro val
                        	dc.b	$E1,val
                        	endm
                        	
                        ; E2xx - Unknown
                        smpsE2 macro val
                        	dc.b	$E2,val
                        	endm

                        ; E3 - Return (generally used after F8)
                        ; F9 - Return (generally used after F8)
                        smpsReturn macro val
                        	;!@
                        	;dc.b	$E3
                        	dc.b	$F9
                        	endm
                        	
                        ; E4 - Fade in previous song (ie. 1-Up)
                        smpsFade macro val
                        	dc.b	$E4
                        	endm

                        ;!@ Invalid for S3+!
                        ; E5xx - Set channel tempo divider to xx
                        smpsChanTempoDiv macro val
                        	;Error No S3 equivalent for CF!
                        	dc.b	$E5,val	
                        	endm
                        	
                        ; E6xx - Alter Volume by xx
                        smpsAlterVol macro val
                        	dc.b	$E6,val
                        	endm
                        	
                        ; E7 - Prevent attack of next note
       = 0000E7         smpsNoAttack	EQU $E7

                        ;!@ This may have problems, needs some convesion factor due to usage of mult by tempo div in S3+
                        ; E8xx - Set note fill to xx
                        smpsNoteFill macro val		
                        	dc.b	$E8,(val/TempDiv)
                        	endm
                        	
                        ;!@
                        ; E9xx - Add xx to channel pitch
                        ; FBxx - Add xx to channel pitch
                        smpsAlterPitch macro val
                        	;!@
                        	;dc.b	$E9,val
                        	dc.b	$FB,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3
                        smpsSetTempoMod macro val
                        	;dc.b	$EA,val
                        	dc.b	$FF,$00,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3 (TEMPO - TEMPO_SET)
                        smpsSetTempoModC macro val
                        	;dc.b	$EA,val
                        	dc.b $FF,$00
                        	tempo_conv(val)
                        	endm
                        	
                        ;!@
                        ; EBxx - Set music tempo divider to xx
                        ; FF04xx - Set global tick multiplier to xx (TICK_MULT - TMULT_ALL)
                        smpsSetTempoDiv macro val
                        	;dc.b	$EB,val
                        TempDiv set val
                        	dc.b $FF,$04,val
000000                  	endm

                        ;!@	
                        ; ECxx - Add xx to PSG channel volume (VOLUME - VOL_NN_PSG)
                        ;
                        ; May need interpolation/conversion factor:
                        ; Change volume attenuation of PSG track.
                        ;The single parameter byte is added to track's current volume attenuation;
                        ;anything greater than $0F (unsigned comparison) is set to $0F (silence). Also, the flutter index is reduced by 1.
                        smpsSetVol macro val
                        	dc.b	$EC,val
                        	endm
                        	
                        ; ED - Unknown
       = 0000ED         smpsED		EQU $ED
                        	
                        ;!@ S3K= send cmd to YM2612 port; unused in S1
                        ; EE - Stops special SFX ($D0-$D4, S1 only) and restarts overridden music track
       = 0000EE         smpsEE 		EQU $EE
                        	
                        ;!@
                        ; EFxx - Set Voice of FM channel to xx
                        ; EFxx[yy] - Set patch id of FM channel to xx. If xx bit7 set, read from another song instead
                        ; (INSTRUMENT - INS_C_FMP)
                        ;smpsFMvoice macro voice
                        	;dc.b	$EF,voice
                        smpsFMvoice macro pat, song		
                        	;if song<>""
                        	if \0==2
                        		dc.b $EF,pat|$80,song+$81
                        	else
                        		dc.b $EF,pat
                        	endif
                            endm

                        ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
                        smpsModSet macro wait,speed,change,step
                        	dc.b	$F0,wait,speed,change,step
                        	endm
                        	
                        smpsModSet2	macro bytes
                        	smpsModSet	((bytes&$FF000000)>>24),((bytes&$00FF0000)>>16),((bytes&$0000FF00)>>8),(bytes&$000000FF)
                        	endm
                        	
                        ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
                        ;!@
                        smpsModSetC macro wait,speed,change,step
                        	dc.b	$F0
                        	;if (SonicDriverVer>=3)&&(SourceDriver<3)
                        		dc.b	wait+1,speed,change,(step*speed+1)&$FF
                        	;elseif (SonicDriverVer<3)&&(SourceDriver>=3)
                        		;dc.b	wait-1,speed,change,(((step==0)<<8)|step)/(((step==0)<<8)|step)-1		
                        	;else
                        		;dc.b	wait,speed,change,step
                        	;endif
                        	;dc.b	speed,change,step
                        	endm

                        ;!@	
                        smpsModSetC2 macro bytes
                        	smpsModSetC	((bytes&$FF000000)>>24),((bytes&$00FF0000)>>16),((bytes&$0000FF00)>>8),(bytes&$000000FF)
                        	endm
                        	

                        ;!@ Used very differently in S3; don't use
                        ; F1 - Turn on Modulation
       = 0000F1         smpsModOn 	EQU $F1
                        ; F4 - Turn off Modulation
       = 0000F4         smpsModOff 	EQU $F4

                        ; F2 - End of channel
                        smpsStop macro
                        	dc.b	$F2
                        	endm
                        	
                        ;!@
                        ; F3xx - PSG waveform to xx
                        ; S3+ only: If parameter byte is zero, the channel is converted
                        ; back into a normal PSG channel and the noise channel is silenced.
                        ; Otherwise, sets the PSG track to noise and sets PSG noise to parameter byte, which should be from $E0 to $E7 (inclusive).
                        smpsPSGform macro form
                        	dc.b	$F3,form
                        	endm
                        	
                        ; F5xx - PSG voice to xx
                        smpsPSGvoice macro voice
                        	dc.b	$F5,voice
                        	endm
                        	
                        ;BAD Cmpr
                        ;if (loc<*)
                        	;rom_ptr_z80_neg(*-loc,songstart)
                        ;else
                        	;rom_ptr_z80(loc-*-1,songstart)
                        ;endif

                        ;!@
                        ; F6xxxx - Jump to xxxx
                        ;smpsJump macro loc
                        smpsJump macro loc,songstart
                        	dc.b	$F6
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F7xxyyzzzz - Loop back to zzzz yy times, xx being the loop index for loop recursion fixing
                        ;smpsLoop macro index,loops,loc
                        smpsLoop macro index,loops,loc,songstart
                        	dc.b	$F7
                        	dc.b	index,loops
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F8xxxx - Call pattern at xxxx, saving return point
                        ;smpsCall macro loc
                        smpsCall macro loc,songstart
                        	dc.b	$F8
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm
                        	
                        ; F9 - Unknown
       = 0000F9         smpsF9		EQU $F9

                        ; Voices - Feedback
                        smpsVcFeedback macro val
                        vcFeedback set val
000000                  	endm

                        ; Voices - Algorithm
                        smpsVcAlgorithm macro val
                        vcAlgorithm set val
000000                  	endm

                        ; Voices - Detune
                        smpsVcDetune macro op1,op2,op3,op4
                        vcDT1 set op1
                        vcDT2 set op2
                        vcDT3 set op3
                        vcDT4 set op4
000000                  	endm

                        ; Voices - Coarse-Frequency
                        smpsVcCoarseFreq macro op1,op2,op3,op4
                        vcCF1 set op1
                        vcCF2 set op2
                        vcCF3 set op3
                        vcCF4 set op4
000000                  	endm

                        ; Voices - Rate Scale
                        smpsVcRateScale macro op1,op2,op3,op4
                        vcRS1 set op1
                        vcRS2 set op2
                        vcRS3 set op3
                        vcRS4 set op4
000000                  	endm

                        ; Voices - Attack Rate
                        smpsVcAttackRate macro op1,op2,op3,op4
                        vcAR1 set op1
                        vcAR2 set op2
                        vcAR3 set op3
                        vcAR4 set op4
000000                  	endm

                        ; Voices - Amplitude Modulation
                        smpsVcAmpMod macro op1,op2,op3,op4
                        vcAM1 set op1
                        vcAM2 set op2
                        vcAM3 set op3
                        vcAM4 set op4
000000                  	endm

                        ; Voices - First Decay Rate
                        smpsVcDecayRate1 macro op1,op2,op3,op4
                        vcD1R1 set op1
                        vcD1R2 set op2
                        vcD1R3 set op3
                        vcD1R4 set op4
000000                  	endm

                        ; Voices - Second Decay Rate
                        smpsVcDecayRate2 macro op1,op2,op3,op4
                        vcD2R1 set op1
                        vcD2R2 set op2
                        vcD2R3 set op3
                        vcD2R4 set op4
000000                  	endm

                        ; Voices - Decay Level	
                        smpsVcDecayLevel macro op1,op2,op3,op4
                        vcDL1 set op1
                        vcDL2 set op2
                        vcDL3 set op3
                        vcDL4 set op4
000000                  	endm

                        ; Voices - Release Rate
                        smpsVcReleaseRate macro op1,op2,op3,op4
                        vcRR1 set op1
                        vcRR2 set op2
                        vcRR3 set op3
                        vcRR4 set op4
000000                  	endm

                        ; Voices - Total Level
                        smpsVcTotalLevel macro op1,op2,op3,op4
                        vcTL1 set op1
                        vcTL2 set op2
                        vcTL3 set op3
                        vcTL4 set op4
                        	dc.b	(vcFeedback<<3)+vcAlgorithm
                        	dc.b	(vcDT4<<4)+vcCF4,(vcDT3<<4)+vcCF3,(vcDT2<<4)+vcCF2,(vcDT1<<4)+vcCF1
                        	dc.b	(vcRS4<<6)+vcAR4,(vcRS3<<6)+vcAR3,(vcRS2<<6)+vcAR2,(vcRS1<<6)+vcAR1
                        	dc.b	(vcAM4<<5)+vcD1R4,(vcAM3<<5)+vcD1R3,(vcAM2<<5)+vcD1R2,(vcAM1<<5)+vcD1R1
                        	dc.b	vcD2R4,vcD2R3,vcD2R2,vcD2R1
                        	dc.b	(vcDL4<<4)+vcRR4,(vcDL3<<4)+vcRR3,(vcDL2<<4)+vcRR2,(vcDL1<<4)+vcRR1
                        	dc.b	vcTL4,vcTL3,vcTL2,vcTL1	
000000                  	endm	
                        	
                        ;==============================================
                        ;!@ The following CF flags/macros are KC-drive specific!
                        ;Rest here mostly used  to compile KC/Nat ASM files for BC purposes...

                        ;!@
                        ; Header - Set up a secondary PWM Channel
                        ;smpsHeaderPWM macro loc
                        smpsHeaderPWM macro loc, songstart,pitch,volL,volR
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)	
                        	;!@
                        	dc.b	pitch
                        	if \0==4
                        		dc.b	volL
                        	else
                        		dc.b	(volL<<4)+volR
                        	endif	
                        	endm
                        	
                        ;!@ Unused and unneeded; leftover Sonic 32x header stuff
                        ; Header - Set up first PWM Channel
                        ;smpsHeaderPWM1 macro loc,num
                        	;dc.w	loc-songStart
                        	;dc.b	num,0
                        	;endm

                        ;!@
                        ; Header - Set up Tick Multiplier (for Sfx)
                        ;sHeaderSFX
                        smpsHeaderTick	macro tmul
                        	dc.b tmul
                            endm

                        ;!@ KC Exclusives!
                        ;# PAN_ANIM
                        ;# pan animation has 2 modes; if first arg is 0, it will end it. Otherwise, more args will be used
                        ;!0xE4, 0 > sPanAni:;								
                        ;!0xE4, 1-0xFF > sPanAni: .lb, .db, .db, .db, .db;	
                        KC_smpsPanAni macro val1,val2,val3,val4,val5
                        	if val1==0
                        		dc.b	$E4,$00
                        	else
                        		dc.b	$E4,val1,val2,val3,val4,val5
                        	endif
                        	endm


                        ; Alter Volume
                        ;!0xE5 > saVolFMP: .db, .db;								
                        KC_smpsFMAlterVol macro val1,val2
                        	dc.b	$E5,val1,val2
                        	endm

                        ;!@ KC Exclusive!	
                        ;!0xE9 > ssLFO: .db, .db;									
                        KC_smpsSetLFO macro enable,amsfms
                        	dc.b	$E9,enable,amsfms
                        	endm

                        ;!0xEA > sPlayDAC: .db | 0x80;								
                        KC_smpsPlayDACSample macro sample
                        	dc.b	$EA,(sample&$7F)
                        	endm

                        ;!@ Songstart param added
                        ;!0xEB > sLoopExit: .db, .dw {						
                        ;smpsConditionalJump macro index,loc
                        KC_smpsConditionalJump macro index,loc,songstart
                        	dc.b	$EB
                        	dc.b	index
                        	;dc.w	z80_ptr(loc)
                        	rom_ptr_z80(loc+songstart)
                        	endm

                        ;!@ Usage/naming is speculative. Called ssTransposeS3K in S3k/Nat driver...	
                        ;!0xED > sYMcmd: .db, .db;							
                        ; Set note values to xx-$40
                        KC_smpsSetNote macro val
                        	dc.b	$ED,val
                        	endm

                        ;!0xEE > sYM1cmd: .db, .db;							
                        KC_smpsFMICommand macro reg,val
                        	dc.b	$EE,reg,val
                        	endm

                        ;!0xF1 > sModEnv: .db, .db {							
                        ; Set Modulation
                        KC_smpsModChange2 macro fmmod,psgmod
                        	dc.b	$F1,fmmod,psgmod
                        	endm
                        	
                        ;!0xF4 > sModEnv: .db {
                        ; Set Modulation
                        KC_smpsModChange macro val
                        	dc.b	$F4,val
                        	endm

                        ;!@ KC exclusive!
                        ;!0xFC > sPitchSlide: .db;						
                        KC_smpsPitchSlide macro enable
                        	dc.b	$FC,enable
                        	endm
                        	
                        ;!0xFD > sRawFreq: .db;							
                        KC_smpsAlternateSMPS macro flag
                        	dc.b	$FD,flag
                        	endm

                        ;!0xFE > sSpecFM3: .db, .db, .db, .db {			
                        	;%; Broken?
                        ;}
                        KC_smpsFM3SpecialMode macro ind1,ind2,ind3,ind4
                        	dc.b	$FE,ind1,ind2,ind3,ind4
                        	Error Broken?
                        	endm

                        ;!0xFF, 1 > sPlaySound: .db;						
                        KC_smpsPlaySound macro index
                        	dc.b	$FF,$01,index
                        	endm

                        ;!0xFF, 2 > sMusPause: .db;						
                        KC_smpsHaltMusic macro flag
                        	dc.b	$FF,$02,flag
                        	endm

                        ;!@ Modified with SongStart	param
                        ;!0xFF, 3 > sCopyMem: .dw, .db {					
                        	;%; No song should ever use this command. It may good idea to remove it.
                        ;}
                        ;KC_smpsCopyData macro data,len
                        KC_smpsCopyData macro data,len,songstart
                        	Error Coord. Flag to copy data should not be used. Complain to GenesisDoes if any music uses it.
                        	;Error No song should ever use this command. It may be a good idea to remove it.
                        	dc.b	$FF,$03
                        	;dc.w	little_endian(data)
                        	rom_ptr_z80(data+songstart)
                        	dc.b	len
                        	endm

                        ;!0xFF, 5 > sSSGEG: .db, .db, .db, .db {			
                        	;=op2 .a2
                        	;:=2 .a1
                        	;:=1 \op2\
                        ;}
                        KC_smpsSSGEG macro op1,op2,op3,op4
                        	dc.b	$FF,$05,op1,op3,op2,op4
                        	endm
                        	
                        	
                        ;!0xFF, 6 > sVolEnvFM: .db, .db {
                        	;:?0 {
                        		;?volenv;
                        	;}
                        ;}	
                        KC_smpsFMVolEnv macro tone,mask
                        	dc.b	$FF,$06,tone,mask
                        	endm
                        ;==============================================

000000                  	include "KC.asm"
       = 040000         Target	EQU	$40000
       = 00F480         sModOn	EQU	$F480

       = 000000         FMPitch	EQU	$00
       = 000010         FMVol1	EQU	$10	;$17
       = 00000C         FMVol2  EQU	FMVol1-$04
       = 00000A         FMVol3  EQU	$0E-$04
       = 000012         FMVol4  EQU	$19-$07		;Now $25
       = 00000F         FMVol5  EQU	FMVol4-$03	;Now $22
       = 00000B         FMVol6  EQU	$0B			;$1B

       = 00000C         PSGPitch	EQU	PSGDelta
       = 000000         PSGVoi	EQU $00
       = 000000         PSGVol1	EQU	$00				;$05
       = 000001         PSGVol2	EQU	PSGVol1+$01		;$0B
       = 000000         PSGVol3	EQU	PSGVol2-$01		;$0A
       = 000000         PSGMod	EQU	$00

       = 000000         PWMPitch	EQU	$00
       = 000099         PWMVol1		EQU	$99

000000                  	smpsHeaderVoice	HDNR1S_Patches, Target
                        ;songStart set *
                        	;dc.w	loc-songStart
000000                  	rom_ptr_z80(HDNR1S_Patches+Target)
                        	;dc.w z80_ptr(ptr,addr)
000000 279B             	dc.w  (((((HDNR1S_Patches+Target))<<8)&$FF00)|((((HDNR1S_Patches+Target))>>8)&$7F)|$80)
000002                  	smpsHeaderChan	$06, $03
                        	if 2==2
000002 0603             		dc.b	$06,$03
                        	else
                        	endif	
000004                  	smpsHeaderTempo	$03, $20
000004 0320             	dc.b	$03,$20
000006                  	smpsHeaderFM	HDNR1S_FM1, Target, FMPitch, FMVol1
                        	;dc.w	loc-songStart
000006                  	rom_ptr_z80(HDNR1S_FM1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000006 4080             	dc.w  (((((HDNR1S_FM1+Target))<<8)&$FF00)|((((HDNR1S_FM1+Target))>>8)&$7F)|$80)
000008 0010             	dc.b	FMPitch,FMVol1
00000A                  	smpsHeaderFM	HDNR1S_FM2, Target, FMPitch, FMVol2
                        	;dc.w	loc-songStart
00000A                  	rom_ptr_z80(HDNR1S_FM2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000A DC83             	dc.w  (((((HDNR1S_FM2+Target))<<8)&$FF00)|((((HDNR1S_FM2+Target))>>8)&$7F)|$80)
00000C 000C             	dc.b	FMPitch,FMVol2
00000E                  	smpsHeaderFM	HDNR1S_FM3, Target, FMPitch, FMVol3
                        	;dc.w	loc-songStart
00000E                  	rom_ptr_z80(HDNR1S_FM3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000E 5A84             	dc.w  (((((HDNR1S_FM3+Target))<<8)&$FF00)|((((HDNR1S_FM3+Target))>>8)&$7F)|$80)
000010 000A             	dc.b	FMPitch,FMVol3
000012                  	smpsHeaderFM	HDNR1S_FM4, Target, FMPitch, FMVol4
                        	;dc.w	loc-songStart
000012                  	rom_ptr_z80(HDNR1S_FM4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000012 1088             	dc.w  (((((HDNR1S_FM4+Target))<<8)&$FF00)|((((HDNR1S_FM4+Target))>>8)&$7F)|$80)
000014 0012             	dc.b	FMPitch,FMVol4
000016                  	smpsHeaderFM	HDNR1S_FM5, Target, FMPitch, FMVol5
                        	;dc.w	loc-songStart
000016                  	rom_ptr_z80(HDNR1S_FM5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000016 C48A             	dc.w  (((((HDNR1S_FM5+Target))<<8)&$FF00)|((((HDNR1S_FM5+Target))>>8)&$7F)|$80)
000018 000F             	dc.b	FMPitch,FMVol5
00001A                  	smpsHeaderFM	HDNR1S_FM6, Target, FMPitch, FMVol6
                        	;dc.w	loc-songStart
00001A                  	rom_ptr_z80(HDNR1S_FM6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001A 788D             	dc.w  (((((HDNR1S_FM6+Target))<<8)&$FF00)|((((HDNR1S_FM6+Target))>>8)&$7F)|$80)
00001C 000B             	dc.b	FMPitch,FMVol6
00001E                  	smpsHeaderPSG	HDNR1S_PSG1, Target, PSGPitch, PSGVol1, PSGMod, PSGVoi
                        	;dc.w	loc-songStart
00001E                  	rom_ptr_z80(HDNR1S_PSG1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001E 9E8E             	dc.w  (((((HDNR1S_PSG1+Target))<<8)&$FF00)|((((HDNR1S_PSG1+Target))>>8)&$7F)|$80)
000020 0C00             	dc.b	PSGPitch,PSGVol1
                        	;dc.w	voice
000022 0000             	dc.b	PSGMod,PSGVoi
000024                  	smpsHeaderPSG	HDNR1S_PSG2, Target, PSGPitch, PSGVol2, PSGMod, PSGVoi
                        	;dc.w	loc-songStart
000024                  	rom_ptr_z80(HDNR1S_PSG2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000024 1C91             	dc.w  (((((HDNR1S_PSG2+Target))<<8)&$FF00)|((((HDNR1S_PSG2+Target))>>8)&$7F)|$80)
000026 0C01             	dc.b	PSGPitch,PSGVol2
                        	;dc.w	voice
000028 0000             	dc.b	PSGMod,PSGVoi
00002A                  	smpsHeaderPSG	HDNR1S_PSG3, Target, PSGPitch, PSGVol3, PSGMod, PSGVoi
                        	;dc.w	loc-songStart
00002A                  	rom_ptr_z80(HDNR1S_PSG3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00002A B093             	dc.w  (((((HDNR1S_PSG3+Target))<<8)&$FF00)|((((HDNR1S_PSG3+Target))>>8)&$7F)|$80)
00002C 0C00             	dc.b	PSGPitch,PSGVol3
                        	;dc.w	voice
00002E 0000             	dc.b	PSGMod,PSGVoi
000030                  	smpsHeaderPWM	HDNR1S_PWM1, Target, PWMPitch, PWMVol1
                        	;dc.w	loc-songStart
000030                  	rom_ptr_z80(HDNR1S_PWM1+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000030 8495             	dc.w  (((((HDNR1S_PWM1+Target))<<8)&$FF00)|((((HDNR1S_PWM1+Target))>>8)&$7F)|$80)
                        	;!@
000032 00               	dc.b	PWMPitch
                        	if 4==4
000033 99               		dc.b	PWMVol1
                        	else
                        	endif	
000034                  	smpsHeaderPWM	HDNR1S_PWM2, Target, PWMPitch, PWMVol1
                        	;dc.w	loc-songStart
000034                  	rom_ptr_z80(HDNR1S_PWM2+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000034 3A97             	dc.w  (((((HDNR1S_PWM2+Target))<<8)&$FF00)|((((HDNR1S_PWM2+Target))>>8)&$7F)|$80)
                        	;!@
000036 00               	dc.b	PWMPitch
                        	if 4==4
000037 99               		dc.b	PWMVol1
                        	else
                        	endif	
000038                  	smpsHeaderPWM	HDNR1S_PWM3, Target, PWMPitch, PWMVol1
                        	;dc.w	loc-songStart
000038                  	rom_ptr_z80(HDNR1S_PWM3+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000038 2D99             	dc.w  (((((HDNR1S_PWM3+Target))<<8)&$FF00)|((((HDNR1S_PWM3+Target))>>8)&$7F)|$80)
                        	;!@
00003A 00               	dc.b	PWMPitch
                        	if 4==4
00003B 99               		dc.b	PWMVol1
                        	else
                        	endif	
00003C                  	smpsHeaderPWM	HDNR1S_PWM4, Target, PWMPitch, PWMVol1
                        	;dc.w	loc-songStart
00003C                  	rom_ptr_z80(HDNR1S_PWM4+Target)	
                        	;dc.w z80_ptr(ptr,addr)
00003C 579A             	dc.w  (((((HDNR1S_PWM4+Target))<<8)&$FF00)|((((HDNR1S_PWM4+Target))>>8)&$7F)|$80)
                        	;!@
00003E 00               	dc.b	PWMPitch
                        	if 4==4
00003F 99               		dc.b	PWMVol1
                        	else
                        	endif	

000040                  HDNR1S_FM1:
000040                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000040 E0C0             		dc.b $E0,panCenter
                        	endif
000042                  	smpsFMvoice		$00	
                        	;if song<>""
                        	if 1==2
                        	else
000042 EF00             		dc.b $EF,$00
                        	endif
000044 8006             	dc.b nRst, $06

000046                  HDNR1S_Loop1:
000046 C702C401C102BE01 	dc.b nBb5, $02, nG5, $01, nE5, $02, nCs5, $01
00004E BB02B801BB02BE01 	dc.b nBb4, $02, nG4, $01, nBb4, $02, nCs5, $01
000056 C102BE01BB02B801 	dc.b nE5, $02, nCs5, $01, nBb4, $02, nG4, $01
00005E B502B201B502B801 	dc.b nE4, $02, nCs4, $01, nE4, $02, nG4, $01
000066 BE02BB01B802B501 	dc.b nCs5, $02, nBb4, $01, nG4, $02, nE4, $01
00006E B202AF01B202B501 	dc.b nCs4, $02, nBb3, $01, nCs4, $02, nE4, $01
000076 BB02B801B502B201 	dc.b nBb4, $02, nG4, $01, nE4, $02, nCs4, $01
00007E AF02AC01AF02B201 	dc.b nBb3, $02, nG3, $01, nBb3, $02, nCs4, $01
000086                  	smpsLoop		$00, $02, HDNR1S_Loop1, Target
000086 F7               	dc.b	$F7
000087 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop1<*)
000089                  		rom_ptr_z80(HDNR1S_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000089 4680             	dc.w  (((((HDNR1S_Loop1+Target))<<8)&$FF00)|((((HDNR1S_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00008B CA02C701C402C101 	dc.b nCs6, $02, nBb5, $01, nG5, $02, nE5, $01
000093 BE02BB01BE02C101 	dc.b nCs5, $02, nBb4, $01, nCs5, $02, nE5, $01
00009B C702C401C102BE01 	dc.b nBb5, $02, nG5, $01, nE5, $02, nCs5, $01
0000A3 BB02B801BB02BE01 	dc.b nBb4, $02, nG4, $01, nBb4, $02, nCs5, $01
0000AB C402C101BE02BB01 	dc.b nG5, $02, nE5, $01, nCs5, $02, nBb4, $01
0000B3 B802B501B802BB01 	dc.b nG4, $02, nE4, $01, nG4, $02, nBb4, $01
0000BB C102BE01BB02B801 	dc.b nE5, $02, nCs5, $01, nBb4, $02, nG4, $01
0000C3 B502B201B502B801 	dc.b nE4, $02, nCs4, $01, nE4, $02, nG4, $01
0000CB AF02B201B502B801 	dc.b nBb3, $02, nCs4, $01, nE4, $02, nG4, $01
0000D3 BB02BE01C102C401 	dc.b nBb4, $02, nCs5, $01, nE5, $02, nG5, $01
0000DB B202B501B802BB01 	dc.b nCs4, $02, nE4, $01, nG4, $02, nBb4, $01
0000E3 BE02C101C402C701 	dc.b nCs5, $02, nE5, $01, nG5, $02, nBb5, $01
0000EB BE80C78002D30180 	dc.b nCs5, nRst, nBb5, nRst, $02, nBb6, $01, nRst
0000F3 02C70180C1BB8003 	dc.b $02, nBb5, $01, nRst, nE5, nBb4, nRst, $03
0000FB 800180           	dc.b nRst, $01, nRst
0000FE                  	smpsAlterNote	$03
0000FE E103             	dc.b	$E1,$03
000100 80               	dc.b nRst
000101                  	smpsAlterNote	$05
000101 E105             	dc.b	$E1,$05
000103 80               	dc.b nRst
000104                  	smpsAlterNote	$07
000104 E107             	dc.b	$E1,$07
000106 80               	dc.b nRst
000107                  	smpsAlterNote	$08
000107 E108             	dc.b	$E1,$08
000109 80               	dc.b nRst
00010A                  	smpsAlterNote	$13
00010A E113             	dc.b	$E1,$13
00010C 80               	dc.b nRst
00010D                  	smpsAlterNote	$14
00010D E114             	dc.b	$E1,$14
00010F 80               	dc.b nRst
000110                  	smpsAlterNote	$00
000110 E100             	dc.b	$E1,$00
000112 808055803B       	dc.b nRst, nRst, $55, nRst, $3B
000117                  	smpsAlterVol		$02
000117 E602             	dc.b	$E6,$02
000119 AC02AF01B202B501 	dc.b nG3, $02, nBb3, $01, nCs4, $02, nE4, $01
000121 B802BB01BE02C101 	dc.b nG4, $02, nBb4, $01, nCs5, $02, nE5, $01
000129 BE02BB01B802B501 	dc.b nCs5, $02, nBb4, $01, nG4, $02, nE4, $01
000131 B802BB01BE02C101 	dc.b nG4, $02, nBb4, $01, nCs5, $02, nE5, $01
000139 8005             	dc.b nRst, $05
00013B                  	smpsAlterVol		$01
00013B E601             	dc.b	$E6,$01
00013D CA018002C7018002 	dc.b nCs6, $01, nRst, $02, nBb5, $01, nRst, $02
000145 D301             	dc.b nBb6, $01

000147                  HDNR1S_Jump1:
000147 805480808080     	dc.b nRst, $54, nRst, nRst, nRst, nRst
00014D                  	smpsAlterVol		$FA
00014D E6FA             	dc.b	$E6,$FA
00014F B302B601BA02BF01 	dc.b nD4, $02, nF4, $01, nA4, $02, nD5, $01
000157 C202C601CB02CE01 	dc.b nF5, $02, nA5, $01, nD6, $02, nF6, $01
00015F D202CE01CB02C601 	dc.b nA6, $02, nF6, $01, nD6, $02, nA5, $01
000167 C202BF01BA02B301 	dc.b nF5, $02, nD5, $01, nA4, $02, nD4, $01
00016F 8018             	dc.b nRst, $18
000171                  	smpsAlterVol		$FF
000171 E6FF             	dc.b	$E6,$FF
000173 B602BA01BF02C201 	dc.b nF4, $02, nA4, $01, nD5, $02, nF5, $01
00017B C602CB01CE02D201 	dc.b nA5, $02, nD6, $01, nF6, $02, nA6, $01
000183 D702D201CE02CB01 	dc.b nD7, $02, nA6, $01, nF6, $02, nD6, $01
00018B C602C201BA02B601 	dc.b nA5, $02, nF5, $01, nA4, $02, nF4, $01
000193 8018             	dc.b nRst, $18
000195                  	smpsAlterVol		$FF
000195 E6FF             	dc.b	$E6,$FF
000197 B102B501B802BD01 	dc.b nC4, $02, nE4, $01, nG4, $02, nC5, $01
00019F C102C401C902     	dc.b nE5, $02, nG5, $01, nC6, $02
0001A5                  	smpsAlterVol		$01
0001A5 E601             	dc.b	$E6,$01
0001A7 CD01D002CD01C902 	dc.b nE6, $01, nG6, $02, nE6, $01, nC6, $02
0001AF C401C102BD01B802 	dc.b nG5, $01, nE5, $02, nC5, $01, nG4, $02
0001B7 B1018030         	dc.b nC4, $01, nRst, $30
0001BB                  	smpsAlterNote	$00
0001BB E100             	dc.b	$E1,$00
0001BD                  	smpsAlterVol		$FE
0001BD E6FE             	dc.b	$E6,$FE
0001BF C1028007C3028007 	dc.b nE5, $02, nRst, $07, nFs5, $02, nRst, $07
0001C7 BF028004B903C5BA 	dc.b nD5, $02, nRst, $04, nAb4, $03, nAb5, nA4
0001CF C6BCC8C1B5C20280 	dc.b nA5, nB4, nB5, nE5, nE4, nF5, $02, nRst
0001D7 07C3028007BF0280 	dc.b $07, nFs5, $02, nRst, $07, nD5, $02, nRst
0001DF 04C102C301C502C6 	dc.b $04, nE5, $02, nFs5, $01, nAb5, $02, nA5
0001E7 01C302C501C602C8 	dc.b $01, nFs5, $02, nAb5, $01, nA5, $02, nB5
0001EF 01C502C601C802CB 	dc.b $01, nAb5, $02, nA5, $01, nB5, $02, nD6
0001F7 01CD03           	dc.b $01, nE6, $03
0001FA                  	smpsAlterNote	$0F
0001FA E10F             	dc.b	$E1,$0F
0001FC E7CB01           	dc.b smpsNoAttack, nD6, $01
0001FF                  	smpsAlterNote	$0A
0001FF E10A             	dc.b	$E1,$0A
000201 E7C7             	dc.b smpsNoAttack, nBb5
000203                  	smpsAlterNote	$FD
000203 E1FD             	dc.b	$E1,$FD
000205 E7C3             	dc.b smpsNoAttack, nFs5
000207                  	smpsAlterNote	$FF
000207 E1FF             	dc.b	$E1,$FF
000209 C1028007C3028007 	dc.b nE5, $02, nRst, $07, nFs5, $02, nRst, $07
000211 BF028001B903C5C6 	dc.b nD5, $02, nRst, $01, nAb4, $03, nAb5, nA5
000219 BAC8C6BAC1       	dc.b nA4, nB5, nA5, nA4, nE5
00021E                  	smpsAlterNote	$13
00021E E113             	dc.b	$E1,$13
000220 E7BF01           	dc.b smpsNoAttack, nD5, $01
000223                  	smpsAlterNote	$15
000223 E115             	dc.b	$E1,$15
000225 E7BB             	dc.b smpsNoAttack, nBb4
000227                  	smpsAlterNote	$0A
000227 E10A             	dc.b	$E1,$0A
000229 E7B7             	dc.b smpsNoAttack, nFs4
00022B                  	smpsAlterNote	$01
00022B E101             	dc.b	$E1,$01
00022D C2028007C3028007 	dc.b nF5, $02, nRst, $07, nFs5, $02, nRst, $07
000235 BF028004CE02CB01 	dc.b nD5, $02, nRst, $04, nF6, $02, nD6, $01
00023D C802C601CB02C801 	dc.b nB5, $02, nA5, $01, nD6, $02, nB5, $01
000245 C602C501C602C501 	dc.b nA5, $02, nAb5, $01, nA5, $02, nAb5, $01
00024D C302C201BF03     	dc.b nFs5, $02, nF5, $01, nD5, $03
000253                  	smpsAlterNote	$09
000253 E109             	dc.b	$E1,$09
000255 E7BD01           	dc.b smpsNoAttack, nC5, $01
000258                  	smpsAlterNote	$0A
000258 E10A             	dc.b	$E1,$0A
00025A E7B9             	dc.b smpsNoAttack, nAb4
00025C                  	smpsAlterNote	$04
00025C E104             	dc.b	$E1,$04
00025E E7B5             	dc.b smpsNoAttack, nE4
000260                  	smpsAlterNote	$FF
000260 E1FF             	dc.b	$E1,$FF
000262 C5028007C6028007 	dc.b nAb5, $02, nRst, $07, nA5, $02, nRst, $07
00026A C3028004BC03C8BD 	dc.b nFs5, $02, nRst, $04, nB4, $03, nB5, nC5
000272 C9BFCBC4B8C50280 	dc.b nC6, nD5, nD6, nG5, nG4, nAb5, $02, nRst
00027A 07C6028007C30280 	dc.b $07, nA5, $02, nRst, $07, nFs5, $02, nRst
000282 04C402C501C802C9 	dc.b $04, nG5, $02, nAb5, $01, nB5, $02, nC6
00028A 01C502C801C902CB 	dc.b $01, nAb5, $02, nB5, $01, nC6, $02, nD6
000292 01C802C901CB02CE 	dc.b $01, nB5, $02, nC6, $01, nD6, $02, nF6
00029A 01D003           	dc.b $01, nG6, $03
00029D                  	smpsAlterNote	$06
00029D E106             	dc.b	$E1,$06
00029F E7CE01           	dc.b smpsNoAttack, nF6, $01
0002A2                  	smpsAlterNote	$FF
0002A2 E1FF             	dc.b	$E1,$FF
0002A4 E7CA             	dc.b smpsNoAttack, nCs6
0002A6                  	smpsAlterNote	$F4
0002A6 E1F4             	dc.b	$E1,$F4
0002A8 E7C6             	dc.b smpsNoAttack, nA5
0002AA                  	smpsAlterNote	$01
0002AA E101             	dc.b	$E1,$01
0002AC C5028007C6028007 	dc.b nAb5, $02, nRst, $07, nA5, $02, nRst, $07
0002B4 C3028001BC03C8C9 	dc.b nFs5, $02, nRst, $01, nB4, $03, nB5, nC6
0002BC BDCBC9BDC4       	dc.b nC5, nD6, nC6, nC5, nG5
0002C1                  	smpsAlterNote	$EF
0002C1 E1EF             	dc.b	$E1,$EF
0002C3 E7C301           	dc.b smpsNoAttack, nFs5, $01
0002C6                  	smpsAlterNote	$0C
0002C6 E10C             	dc.b	$E1,$0C
0002C8 E7BE             	dc.b smpsNoAttack, nCs5
0002CA                  	smpsAlterNote	$FD
0002CA E1FD             	dc.b	$E1,$FD
0002CC E7BA             	dc.b smpsNoAttack, nA4
0002CE                  	smpsAlterNote	$FF
0002CE E1FF             	dc.b	$E1,$FF
0002D0 C5028007C6028007 	dc.b nAb5, $02, nRst, $07, nA5, $02, nRst, $07
0002D8 C3028004D102CF01 	dc.b nFs5, $02, nRst, $04, nAb6, $02, nFs6, $01
0002E0 CE02CB01CE02CB01 	dc.b nF6, $02, nD6, $01, nF6, $02, nD6, $01
0002E8 C902C801C902C801 	dc.b nC6, $02, nB5, $01, nC6, $02, nB5, $01
0002F0 C502C301C103     	dc.b nAb5, $02, nFs5, $01, nE5, $03
0002F6                  	smpsAlterNote	$06
0002F6 E106             	dc.b	$E1,$06
0002F8 E7BF01           	dc.b smpsNoAttack, nD5, $01
0002FB                  	smpsAlterNote	$FA
0002FB E1FA             	dc.b	$E1,$FA
0002FD E7BB             	dc.b smpsNoAttack, nBb4
0002FF                  	smpsAlterNote	$F0
0002FF E1F0             	dc.b	$E1,$F0
000301 E7B7             	dc.b smpsNoAttack, nFs4
000303                  	smpsAlterNote	$FF
000303 E1FF             	dc.b	$E1,$FF
000305 8055808016803E80 	dc.b nRst, $55, nRst, nRst, $16, nRst, $3E, nRst
00030D 80808080         	dc.b nRst, nRst, nRst, nRst
000311                  	smpsAlterVol		$07
000311 E607             	dc.b	$E6,$07
000313 B102B301B402B601 	dc.b nC4, $02, nD4, $01, nEb4, $02, nF4, $01
00031B B802BB01BD02BF01 	dc.b nG4, $02, nBb4, $01, nC5, $02, nD5, $01
000323 C018BF0CBBBDC4   	dc.b nEb5, $18, nD5, $0C, nBb4, nC5, nG5

00032A                  HDNR1S_Loop2:
00032A                  	smpsAlterVol		$01
00032A E601             	dc.b	$E6,$01
00032C E701             	dc.b smpsNoAttack, $01
00032E                  	smpsLoop		$00, $03, HDNR1S_Loop2, Target
00032E F7               	dc.b	$F7
00032F 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop2<*)
000331                  		rom_ptr_z80(HDNR1S_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000331 2A83             	dc.w  (((((HDNR1S_Loop2+Target))<<8)&$FF00)|((((HDNR1S_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000333                  	smpsAlterVol		$02
000333 E602             	dc.b	$E6,$02
000335 E701             	dc.b smpsNoAttack, $01
000337                  	smpsAlterVol		$01
000337 E601             	dc.b	$E6,$01

000339                  HDNR1S_Loop3:
000339 E701             	dc.b smpsNoAttack, $01
00033B                  	smpsAlterVol		$01
00033B E601             	dc.b	$E6,$01
00033D E701             	dc.b smpsNoAttack, $01
00033F                  	smpsAlterVol		$02
00033F E602             	dc.b	$E6,$02
000341                  	smpsLoop		$00, $02, HDNR1S_Loop3, Target
000341 F7               	dc.b	$F7
000342 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop3<*)
000344                  		rom_ptr_z80(HDNR1S_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000344 3983             	dc.w  (((((HDNR1S_Loop3+Target))<<8)&$FF00)|((((HDNR1S_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000346 E701             	dc.b smpsNoAttack, $01
000348                  	smpsAlterVol		$02
000348 E602             	dc.b	$E6,$02
00034A E701             	dc.b smpsNoAttack, $01
00034C                  	smpsAlterVol		$01
00034C E601             	dc.b	$E6,$01
00034E E701             	dc.b smpsNoAttack, $01
000350                  	smpsAlterVol		$02
000350 E602             	dc.b	$E6,$02

000352                  HDNR1S_Loop4:
000352 E701             	dc.b smpsNoAttack, $01
000354                  	smpsAlterVol		$02
000354 E602             	dc.b	$E6,$02
000356 E701             	dc.b smpsNoAttack, $01
000358                  	smpsAlterVol		$03
000358 E603             	dc.b	$E6,$03
00035A                  	smpsLoop		$00, $02, HDNR1S_Loop4, Target
00035A F7               	dc.b	$F7
00035B 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop4<*)
00035D                  		rom_ptr_z80(HDNR1S_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
00035D 5283             	dc.w  (((((HDNR1S_Loop4+Target))<<8)&$FF00)|((((HDNR1S_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00035F E701             	dc.b smpsNoAttack, $01
000361                  	smpsAlterVol		$04
000361 E604             	dc.b	$E6,$04
000363 E701             	dc.b smpsNoAttack, $01
000365                  	smpsAlterVol		$03
000365 E603             	dc.b	$E6,$03
000367 E701             	dc.b smpsNoAttack, $01
000369                  	smpsAlterVol		$06
000369 E606             	dc.b	$E6,$06
00036B E701             	dc.b smpsNoAttack, $01
00036D                  	smpsAlterVol		$05
00036D E605             	dc.b	$E6,$05
00036F E701             	dc.b smpsNoAttack, $01
000371                  	smpsAlterVol		$0A
000371 E60A             	dc.b	$E6,$0A
000373 E701             	dc.b smpsNoAttack, $01
000375                  	smpsAlterVol		$10
000375 E610             	dc.b	$E6,$10
000377 E701             	dc.b smpsNoAttack, $01
000379                  	smpsAlterVol		$20
000379 E620             	dc.b	$E6,$20
00037B E702             	dc.b smpsNoAttack, $02

00037D                  HDNR1S_Loop5:
00037D 8001             	dc.b nRst, $01
00037F                  	smpsLoop		$00, $18, HDNR1S_Loop5, Target
00037F F7               	dc.b	$F7
000380 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop5<*)
000382                  		rom_ptr_z80(HDNR1S_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000382 7D83             	dc.w  (((((HDNR1S_Loop5+Target))<<8)&$FF00)|((((HDNR1S_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000384                  	smpsAlterVol		$BA
000384 E6BA             	dc.b	$E6,$BA
000386 BD               	dc.b nC5

000387                  HDNR1S_Loop6:
000387 E701             	dc.b smpsNoAttack, $01
000389                  	smpsAlterVol		$FF
000389 E6FF             	dc.b	$E6,$FF
00038B                  	smpsLoop		$00, $04, HDNR1S_Loop6, Target
00038B F7               	dc.b	$F7
00038C 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop6<*)
00038E                  		rom_ptr_z80(HDNR1S_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00038E 8783             	dc.w  (((((HDNR1S_Loop6+Target))<<8)&$FF00)|((((HDNR1S_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000390 E702             	dc.b smpsNoAttack, $02
000392                  	smpsAlterVol		$FF
000392 E6FF             	dc.b	$E6,$FF
000394 E701             	dc.b smpsNoAttack, $01
000396                  	smpsAlterVol		$FF
000396 E6FF             	dc.b	$E6,$FF
000398 E701             	dc.b smpsNoAttack, $01
00039A                  	smpsAlterVol		$FF
00039A E6FF             	dc.b	$E6,$FF
00039C E703             	dc.b smpsNoAttack, $03
00039E                  	smpsAlterVol		$FF
00039E E6FF             	dc.b	$E6,$FF
0003A0 E701             	dc.b smpsNoAttack, $01
0003A2                  	smpsAlterVol		$FF
0003A2 E6FF             	dc.b	$E6,$FF
0003A4 E701             	dc.b smpsNoAttack, $01

0003A6                  HDNR1S_Loop7:
0003A6                  	smpsAlterVol		$FF
0003A6 E6FF             	dc.b	$E6,$FF
0003A8 E702             	dc.b smpsNoAttack, $02
0003AA                  	smpsLoop		$00, $05, HDNR1S_Loop7, Target
0003AA F7               	dc.b	$F7
0003AB 0005             	dc.b	$00,$05
                        	if (HDNR1S_Loop7<*)
0003AD                  		rom_ptr_z80(HDNR1S_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003AD A683             	dc.w  (((((HDNR1S_Loop7+Target))<<8)&$FF00)|((((HDNR1S_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0003AF                  	smpsAlterVol		$F1
0003AF E6F1             	dc.b	$E6,$F1
0003B1 BC01             	dc.b nB4, $01
0003B3                  	smpsAlterVol		$FF
0003B3 E6FF             	dc.b	$E6,$FF
0003B5 E705             	dc.b smpsNoAttack, $05
0003B7                  	smpsAlterVol		$FF
0003B7 E6FF             	dc.b	$E6,$FF
0003B9 E705             	dc.b smpsNoAttack, $05
0003BB                  	smpsAlterVol		$FF
0003BB E6FF             	dc.b	$E6,$FF
0003BD E706             	dc.b smpsNoAttack, $06
0003BF                  	smpsAlterVol		$FF
0003BF E6FF             	dc.b	$E6,$FF
0003C1 E706             	dc.b smpsNoAttack, $06
0003C3                  	smpsAlterVol		$FF
0003C3 E6FF             	dc.b	$E6,$FF
0003C5 E705             	dc.b smpsNoAttack, $05
0003C7                  	smpsAlterVol		$FF
0003C7 E6FF             	dc.b	$E6,$FF
0003C9 E706             	dc.b smpsNoAttack, $06
0003CB                  	smpsAlterVol		$FF
0003CB E6FF             	dc.b	$E6,$FF
0003CD E707             	dc.b smpsNoAttack, $07
0003CF                  	smpsAlterVol		$FF
0003CF E6FF             	dc.b	$E6,$FF
0003D1 E707BD18BE0C     	dc.b smpsNoAttack, $07, nC5, $18, nCs5, $0C
0003D7                  	smpsAlterVol		$06
0003D7 E606             	dc.b	$E6,$06
0003D9                  	smpsJump		HDNR1S_Jump1, Target
0003D9 F6               	dc.b	$F6
                        	if (HDNR1S_Jump1<*)
0003DA                  		rom_ptr_z80(HDNR1S_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003DA 4781             	dc.w  (((((HDNR1S_Jump1+Target))<<8)&$FF00)|((((HDNR1S_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0003DC                  HDNR1S_FM2:
0003DC                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
0003DC EF00             		dc.b $EF,$00
                        	endif
                        	
0003DE                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
0003DE E0C0             		dc.b $E0,panCenter
                        	endif
                        	
0003E0                  	smpsAlterNote	$FF
0003E0 E1FF             	dc.b	$E1,$FF
0003E2 8006             	dc.b nRst, $06
0003E4                  	smpsAlterNote	$00
0003E4 E100             	dc.b	$E1,$00
0003E6 803080558024C101 	dc.b nRst, $30, nRst, $55, nRst, $24, nE5, $01
0003EE C780CD80D0CD80C4 	dc.b nBb5, nRst, nE6, nRst, nG6, nE6, nRst, nG5
0003F6 8080B805         	dc.b nRst, nRst, nG4, $05
0003FA                  	smpsAlterNote	$03
0003FA E103             	dc.b	$E1,$03
0003FC E7B601           	dc.b smpsNoAttack, nF4, $01
0003FF                  	smpsAlterNote	$05
0003FF E105             	dc.b	$E1,$05
000401 E7B4             	dc.b smpsNoAttack, nEb4
000403                  	smpsAlterNote	$07
000403 E107             	dc.b	$E1,$07
000405 E7B2             	dc.b smpsNoAttack, nCs4
000407                  	smpsAlterNote	$08
000407 E108             	dc.b	$E1,$08
000409 E7B0             	dc.b smpsNoAttack, nB3
00040B                  	smpsAlterNote	$13
00040B E113             	dc.b	$E1,$13
00040D E7AE             	dc.b smpsNoAttack, nA3
00040F                  	smpsAlterNote	$14
00040F E114             	dc.b	$E1,$14
000411 E7AC             	dc.b smpsNoAttack, nG3
000413                  	smpsAlterNote	$00
000413 E100             	dc.b	$E1,$00
000415 E70180558053     	dc.b smpsNoAttack, $01, nRst, $55, nRst, $53
00041B                  	smpsAlterVol		$07
00041B E607             	dc.b	$E6,$07
00041D B501B88004BE0180 	dc.b nE4, $01, nG4, nRst, $04, nCs5, $01, nRst
000425 C780CD80         	dc.b nBb5, nRst, nE6, nRst

000429                  HDNR1S_Loop8:
000429 8054             	dc.b nRst, $54
00042B                  	smpsLoop		$00, $07, HDNR1S_Loop8, Target
00042B F7               	dc.b	$F7
00042C 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop8<*)
00042E                  		rom_ptr_z80(HDNR1S_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
00042E 2984             	dc.w  (((((HDNR1S_Loop8+Target))<<8)&$FF00)|((((HDNR1S_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000430                  	smpsAlterNote	$00
000430 E100             	dc.b	$E1,$00

000432                  HDNR1S_Loop10:
000432 80558008         	dc.b nRst, $55, nRst, $08

000436                  HDNR1S_Loop9:
000436 80018080802D     	dc.b nRst, $01, nRst, nRst, nRst, $2D
00043C                  	smpsLoop		$00, $02, HDNR1S_Loop9, Target
00043C F7               	dc.b	$F7
00043D 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop9<*)
00043F                  		rom_ptr_z80(HDNR1S_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
00043F 3684             	dc.w  (((((HDNR1S_Loop9+Target))<<8)&$FF00)|((((HDNR1S_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000441 80018080         	dc.b nRst, $01, nRst, nRst
000445                  	smpsLoop		$01, $02, HDNR1S_Loop10, Target
000445 F7               	dc.b	$F7
000446 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop10<*)
000448                  		rom_ptr_z80(HDNR1S_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
000448 3284             	dc.w  (((((HDNR1S_Loop10+Target))<<8)&$FF00)|((((HDNR1S_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00044A                  HDNR1S_Loop11:
00044A 804E             	dc.b nRst, $4E
00044C                  	smpsLoop		$00, $07, HDNR1S_Loop11, Target
00044C F7               	dc.b	$F7
00044D 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop11<*)
00044F                  		rom_ptr_z80(HDNR1S_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
00044F 4A84             	dc.w  (((((HDNR1S_Loop11+Target))<<8)&$FF00)|((((HDNR1S_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000451 805580808003     	dc.b nRst, $55, nRst, nRst, nRst, $03
000457                  	smpsJump		HDNR1S_Loop8, Target
000457 F6               	dc.b	$F6
                        	if (HDNR1S_Loop8<*)
000458                  		rom_ptr_z80(HDNR1S_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
000458 2984             	dc.w  (((((HDNR1S_Loop8+Target))<<8)&$FF00)|((((HDNR1S_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00045A                  HDNR1S_FM3:
00045A                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
00045A E0C0             		dc.b $E0,panCenter
                        	endif
00045C                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
00045C EF01             		dc.b $EF,$01
                        	endif
00045E 8009             	dc.b nRst, $09

000460                  HDNR1S_Loop12:
000460 AF028001A3028001 	dc.b nBb3, $02, nRst, $01, nBb2, $02, nRst, $01
000468 A90280040280019D 	dc.b nE3, $02, nRst, $04, $02, nRst, $01, nE2
000470 028001A302800402 	dc.b $02, nRst, $01, nBb2, $02, nRst, $04, $02
000478 8001970280019D02 	dc.b nRst, $01, nBb1, $02, nRst, $01, nE2, $02
000480 8004028001910280 	dc.b nRst, $04, $02, nRst, $01, nE1, $02, nRst
000488 0197028004       	dc.b $01, nBb1, $02, nRst, $04
00048D                  	smpsLoop		$00, $02, HDNR1S_Loop12, Target
00048D F7               	dc.b	$F7
00048E 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop12<*)
000490                  		rom_ptr_z80(HDNR1S_Loop12+Target)
                        	;dc.w z80_ptr(ptr,addr)
000490 6084             	dc.w  (((((HDNR1S_Loop12+Target))<<8)&$FF00)|((((HDNR1S_Loop12+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000492 B2028001A6028001 	dc.b nCs4, $02, nRst, $01, nCs3, $02, nRst, $01
00049A B2028004AC028001 	dc.b nCs4, $02, nRst, $04, nG3, $02, nRst, $01
0004A2 A0028001AC028004 	dc.b nG2, $02, nRst, $01, nG3, $02, nRst, $04
0004AA A60280019A028001 	dc.b nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
0004B2 A6028004A3028001 	dc.b nCs3, $02, nRst, $04, nBb2, $02, nRst, $01
0004BA 97028001A3028001 	dc.b nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
0004C2 9703             	dc.b nBb1, $03
0004C4                  	smpsAlterVol		$0A
0004C4 E60A             	dc.b	$E6,$0A
0004C6 A3028001         	dc.b nBb2, $02, nRst, $01
0004CA                  	smpsAlterVol		$F6
0004CA E6F6             	dc.b	$E6,$F6
0004CC 9A03             	dc.b nCs2, $03
0004CE                  	smpsAlterVol		$0A
0004CE E60A             	dc.b	$E6,$0A
0004D0 A6028001         	dc.b nCs3, $02, nRst, $01
0004D4                  	smpsAlterVol		$F6
0004D4 E6F6             	dc.b	$E6,$F6
0004D6 A003             	dc.b nG2, $03
0004D8                  	smpsAlterVol		$0A
0004D8 E60A             	dc.b	$E6,$0A
0004DA AC028001         	dc.b nG3, $02, nRst, $01
0004DE                  	smpsAlterVol		$F6
0004DE E6F6             	dc.b	$E6,$F6
0004E0 A603             	dc.b nCs3, $03
0004E2                  	smpsAlterVol		$0A
0004E2 E60A             	dc.b	$E6,$0A
0004E4 B2028001         	dc.b nCs4, $02, nRst, $01
0004E8                  	smpsAlterVol		$F6
0004E8 E6F6             	dc.b	$E6,$F6
0004EA A90380A680A30680 	dc.b nE3, $03, nRst, nCs3, nRst, nBb2, $06, nRst

0004F2                  HDNR1S_Loop13:
0004F2 9B028001A7028001 	dc.b nD2, $02, nRst, $01, nD3, $02, nRst, $01
0004FA                  	smpsLoop		$00, $18, HDNR1S_Loop13, Target
0004FA F7               	dc.b	$F7
0004FB 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop13<*)
0004FD                  		rom_ptr_z80(HDNR1S_Loop13+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004FD F284             	dc.w  (((((HDNR1S_Loop13+Target))<<8)&$FF00)|((((HDNR1S_Loop13+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0004FF                  HDNR1S_Loop14:
0004FF 9A028001A6028001 	dc.b nCs2, $02, nRst, $01, nCs3, $02, nRst, $01
000507                  	smpsLoop		$00, $03, HDNR1S_Loop14, Target
000507 F7               	dc.b	$F7
000508 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop14<*)
00050A                  		rom_ptr_z80(HDNR1S_Loop14+Target)
                        	;dc.w z80_ptr(ptr,addr)
00050A FF84             	dc.w  (((((HDNR1S_Loop14+Target))<<8)&$FF00)|((((HDNR1S_Loop14+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00050C 9A028001A602800D 	dc.b nCs2, $02, nRst, $01, nCs3, $02, nRst, $0D

000514                  HDNR1S_Jump2:
000514 800C             	dc.b nRst, $0C
000516                  	smpsAlterVol		$01
000516 E601             	dc.b	$E6,$01

000518                  HDNR1S_Loop15:
000518 9B028001A7028001 	dc.b nD2, $02, nRst, $01, nD3, $02, nRst, $01
000520                  	smpsLoop		$00, $06, HDNR1S_Loop15, Target
000520 F7               	dc.b	$F7
000521 0006             	dc.b	$00,$06
                        	if (HDNR1S_Loop15<*)
000523                  		rom_ptr_z80(HDNR1S_Loop15+Target)
                        	;dc.w z80_ptr(ptr,addr)
000523 1885             	dc.w  (((((HDNR1S_Loop15+Target))<<8)&$FF00)|((((HDNR1S_Loop15+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000525                  HDNR1S_Loop16:
000525 9E028001AA028001 	dc.b nF2, $02, nRst, $01, nF3, $02, nRst, $01
00052D                  	smpsLoop		$00, $02, HDNR1S_Loop16, Target
00052D F7               	dc.b	$F7
00052E 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop16<*)
000530                  		rom_ptr_z80(HDNR1S_Loop16+Target)
                        	;dc.w z80_ptr(ptr,addr)
000530 2585             	dc.w  (((((HDNR1S_Loop16+Target))<<8)&$FF00)|((((HDNR1S_Loop16+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000532                  HDNR1S_Loop17:
000532 97028001A3028001 	dc.b nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
00053A                  	smpsLoop		$00, $04, HDNR1S_Loop17, Target
00053A F7               	dc.b	$F7
00053B 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop17<*)
00053D                  		rom_ptr_z80(HDNR1S_Loop17+Target)
                        	;dc.w z80_ptr(ptr,addr)
00053D 3285             	dc.w  (((((HDNR1S_Loop17+Target))<<8)&$FF00)|((((HDNR1S_Loop17+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00053F                  HDNR1S_Loop18:
00053F 99028001A5028001 	dc.b nC2, $02, nRst, $01, nC3, $02, nRst, $01
000547                  	smpsLoop		$00, $04, HDNR1S_Loop18, Target
000547 F7               	dc.b	$F7
000548 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop18<*)
00054A                  		rom_ptr_z80(HDNR1S_Loop18+Target)
                        	;dc.w z80_ptr(ptr,addr)
00054A 3F85             	dc.w  (((((HDNR1S_Loop18+Target))<<8)&$FF00)|((((HDNR1S_Loop18+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00054C                  HDNR1S_Loop19:
00054C 94028001A0028001 	dc.b nG1, $02, nRst, $01, nG2, $02, nRst, $01
000554                  	smpsLoop		$00, $04, HDNR1S_Loop19, Target
000554 F7               	dc.b	$F7
000555 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop19<*)
000557                  		rom_ptr_z80(HDNR1S_Loop19+Target)
                        	;dc.w z80_ptr(ptr,addr)
000557 4C85             	dc.w  (((((HDNR1S_Loop19+Target))<<8)&$FF00)|((((HDNR1S_Loop19+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000559                  HDNR1S_Loop20:
000559 9E028001AA028001 	dc.b nF2, $02, nRst, $01, nF3, $02, nRst, $01
000561                  	smpsLoop		$00, $04, HDNR1S_Loop20, Target
000561 F7               	dc.b	$F7
000562 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop20<*)
000564                  		rom_ptr_z80(HDNR1S_Loop20+Target)
                        	;dc.w z80_ptr(ptr,addr)
000564 5985             	dc.w  (((((HDNR1S_Loop20+Target))<<8)&$FF00)|((((HDNR1S_Loop20+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000566                  HDNR1S_Loop21:
000566 9D028001A9028001 	dc.b nE2, $02, nRst, $01, nE3, $02, nRst, $01
00056E                  	smpsLoop		$00, $08, HDNR1S_Loop21, Target
00056E F7               	dc.b	$F7
00056F 0008             	dc.b	$00,$08
                        	if (HDNR1S_Loop21<*)
000571                  		rom_ptr_z80(HDNR1S_Loop21+Target)
                        	;dc.w z80_ptr(ptr,addr)
000571 6685             	dc.w  (((((HDNR1S_Loop21+Target))<<8)&$FF00)|((((HDNR1S_Loop21+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000573                  HDNR1S_Loop22:
000573 9B028001A7028001 	dc.b nD2, $02, nRst, $01, nD3, $02, nRst, $01
00057B                  	smpsLoop		$00, $06, HDNR1S_Loop22, Target
00057B F7               	dc.b	$F7
00057C 0006             	dc.b	$00,$06
                        	if (HDNR1S_Loop22<*)
00057E                  		rom_ptr_z80(HDNR1S_Loop22+Target)
                        	;dc.w z80_ptr(ptr,addr)
00057E 7385             	dc.w  (((((HDNR1S_Loop22+Target))<<8)&$FF00)|((((HDNR1S_Loop22+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000580                  HDNR1S_Loop23:
000580 9E028001AA028001 	dc.b nF2, $02, nRst, $01, nF3, $02, nRst, $01
000588                  	smpsLoop		$00, $02, HDNR1S_Loop23, Target
000588 F7               	dc.b	$F7
000589 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop23<*)
00058B                  		rom_ptr_z80(HDNR1S_Loop23+Target)
                        	;dc.w z80_ptr(ptr,addr)
00058B 8085             	dc.w  (((((HDNR1S_Loop23+Target))<<8)&$FF00)|((((HDNR1S_Loop23+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00058D                  HDNR1S_Loop24:
00058D 97028001A3028001 	dc.b nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
000595                  	smpsLoop		$00, $04, HDNR1S_Loop24, Target
000595 F7               	dc.b	$F7
000596 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop24<*)
000598                  		rom_ptr_z80(HDNR1S_Loop24+Target)
                        	;dc.w z80_ptr(ptr,addr)
000598 8D85             	dc.w  (((((HDNR1S_Loop24+Target))<<8)&$FF00)|((((HDNR1S_Loop24+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00059A                  HDNR1S_Loop25:
00059A 99028001A5028001 	dc.b nC2, $02, nRst, $01, nC3, $02, nRst, $01
0005A2                  	smpsLoop		$00, $04, HDNR1S_Loop25, Target
0005A2 F7               	dc.b	$F7
0005A3 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop25<*)
0005A5                  		rom_ptr_z80(HDNR1S_Loop25+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005A5 9A85             	dc.w  (((((HDNR1S_Loop25+Target))<<8)&$FF00)|((((HDNR1S_Loop25+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005A7                  HDNR1S_Loop26:
0005A7 94028001A0028001 	dc.b nG1, $02, nRst, $01, nG2, $02, nRst, $01
0005AF                  	smpsLoop		$00, $04, HDNR1S_Loop26, Target
0005AF F7               	dc.b	$F7
0005B0 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop26<*)
0005B2                  		rom_ptr_z80(HDNR1S_Loop26+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005B2 A785             	dc.w  (((((HDNR1S_Loop26+Target))<<8)&$FF00)|((((HDNR1S_Loop26+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005B4                  HDNR1S_Loop27:
0005B4 9E028001AA028001 	dc.b nF2, $02, nRst, $01, nF3, $02, nRst, $01
0005BC                  	smpsLoop		$00, $04, HDNR1S_Loop27, Target
0005BC F7               	dc.b	$F7
0005BD 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop27<*)
0005BF                  		rom_ptr_z80(HDNR1S_Loop27+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005BF B485             	dc.w  (((((HDNR1S_Loop27+Target))<<8)&$FF00)|((((HDNR1S_Loop27+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005C1                  HDNR1S_Loop28:
0005C1 9D028001A9028001 	dc.b nE2, $02, nRst, $01, nE3, $02, nRst, $01
0005C9                  	smpsLoop		$00, $04, HDNR1S_Loop28, Target
0005C9 F7               	dc.b	$F7
0005CA 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop28<*)
0005CC                  		rom_ptr_z80(HDNR1S_Loop28+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005CC C185             	dc.w  (((((HDNR1S_Loop28+Target))<<8)&$FF00)|((((HDNR1S_Loop28+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005CE                  HDNR1S_Loop29:
0005CE 9B028001         	dc.b nD2, $02, nRst, $01

0005D2                  HDNR1S_Loop30:
0005D2 A7028001         	dc.b nD3, $02, nRst, $01
0005D6                  	smpsLoop		$00, $04, HDNR1S_Loop29, Target
0005D6 F7               	dc.b	$F7
0005D7 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop29<*)
0005D9                  		rom_ptr_z80(HDNR1S_Loop29+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005D9 CE85             	dc.w  (((((HDNR1S_Loop29+Target))<<8)&$FF00)|((((HDNR1S_Loop29+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0005DB 9B03             	dc.b nD2, $03
0005DD                  	smpsLoop		$01, $02, HDNR1S_Loop30, Target
0005DD F7               	dc.b	$F7
0005DE 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop30<*)
0005E0                  		rom_ptr_z80(HDNR1S_Loop30+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005E0 D285             	dc.w  (((((HDNR1S_Loop30+Target))<<8)&$FF00)|((((HDNR1S_Loop30+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005E2                  HDNR1S_Loop31:
0005E2 A70280019B028001 	dc.b nD3, $02, nRst, $01, nD2, $02, nRst, $01
0005EA                  	smpsLoop		$00, $03, HDNR1S_Loop31, Target
0005EA F7               	dc.b	$F7
0005EB 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop31<*)
0005ED                  		rom_ptr_z80(HDNR1S_Loop31+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005ED E285             	dc.w  (((((HDNR1S_Loop31+Target))<<8)&$FF00)|((((HDNR1S_Loop31+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0005EF A702             	dc.b nD3, $02

0005F1                  HDNR1S_Loop33:
0005F1 80019703         	dc.b nRst, $01, nBb1, $03

0005F5                  HDNR1S_Loop32:
0005F5 A302800197028001 	dc.b nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
0005FD                  	smpsLoop		$00, $03, HDNR1S_Loop32, Target
0005FD F7               	dc.b	$F7
0005FE 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop32<*)
000600                  		rom_ptr_z80(HDNR1S_Loop32+Target)
                        	;dc.w z80_ptr(ptr,addr)
000600 F585             	dc.w  (((((HDNR1S_Loop32+Target))<<8)&$FF00)|((((HDNR1S_Loop32+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000602 A302             	dc.b nBb2, $02
000604                  	smpsLoop		$01, $02, HDNR1S_Loop33, Target
000604 F7               	dc.b	$F7
000605 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop33<*)
000607                  		rom_ptr_z80(HDNR1S_Loop33+Target)
                        	;dc.w z80_ptr(ptr,addr)
000607 F185             	dc.w  (((((HDNR1S_Loop33+Target))<<8)&$FF00)|((((HDNR1S_Loop33+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000609                  HDNR1S_Loop35:
000609 80019903         	dc.b nRst, $01, nC2, $03

00060D                  HDNR1S_Loop34:
00060D A502800199028001 	dc.b nC3, $02, nRst, $01, nC2, $02, nRst, $01
000615                  	smpsLoop		$00, $03, HDNR1S_Loop34, Target
000615 F7               	dc.b	$F7
000616 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop34<*)
000618                  		rom_ptr_z80(HDNR1S_Loop34+Target)
                        	;dc.w z80_ptr(ptr,addr)
000618 0D86             	dc.w  (((((HDNR1S_Loop34+Target))<<8)&$FF00)|((((HDNR1S_Loop34+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00061A A502             	dc.b nC3, $02
00061C                  	smpsLoop		$01, $02, HDNR1S_Loop35, Target
00061C F7               	dc.b	$F7
00061D 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop35<*)
00061F                  		rom_ptr_z80(HDNR1S_Loop35+Target)
                        	;dc.w z80_ptr(ptr,addr)
00061F 0986             	dc.w  (((((HDNR1S_Loop35+Target))<<8)&$FF00)|((((HDNR1S_Loop35+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000621 80019A03         	dc.b nRst, $01, nCs2, $03

000625                  HDNR1S_Loop36:
000625 A60280019A028001 	dc.b nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
00062D                  	smpsLoop		$00, $03, HDNR1S_Loop36, Target
00062D F7               	dc.b	$F7
00062E 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop36<*)
000630                  		rom_ptr_z80(HDNR1S_Loop36+Target)
                        	;dc.w z80_ptr(ptr,addr)
000630 2586             	dc.w  (((((HDNR1S_Loop36+Target))<<8)&$FF00)|((((HDNR1S_Loop36+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000632 A60280019B038002 	dc.b nCs3, $02, nRst, $01, nD2, $03, nRst, $02
00063A 038001098006     	dc.b $03, nRst, $01, $09, nRst, $06
000640                  	smpsAlterVol		$FF
000640 E6FF             	dc.b	$E6,$FF

000642                  HDNR1S_Loop38:
000642 9603             	dc.b nA1, $03

000644                  HDNR1S_Loop37:
000644 A202800196028001 	dc.b nA2, $02, nRst, $01, nA1, $02, nRst, $01
00064C                  	smpsLoop		$00, $03, HDNR1S_Loop37, Target
00064C F7               	dc.b	$F7
00064D 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop37<*)
00064F                  		rom_ptr_z80(HDNR1S_Loop37+Target)
                        	;dc.w z80_ptr(ptr,addr)
00064F 4486             	dc.w  (((((HDNR1S_Loop37+Target))<<8)&$FF00)|((((HDNR1S_Loop37+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000651 A2028001         	dc.b nA2, $02, nRst, $01
000655                  	smpsLoop		$01, $08, HDNR1S_Loop38, Target
000655 F7               	dc.b	$F7
000656 0108             	dc.b	$01,$08
                        	if (HDNR1S_Loop38<*)
000658                  		rom_ptr_z80(HDNR1S_Loop38+Target)
                        	;dc.w z80_ptr(ptr,addr)
000658 4286             	dc.w  (((((HDNR1S_Loop38+Target))<<8)&$FF00)|((((HDNR1S_Loop38+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00065A                  HDNR1S_Loop40:
00065A 9903             	dc.b nC2, $03

00065C                  HDNR1S_Loop39:
00065C A502800199028001 	dc.b nC3, $02, nRst, $01, nC2, $02, nRst, $01
000664                  	smpsLoop		$00, $03, HDNR1S_Loop39, Target
000664 F7               	dc.b	$F7
000665 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop39<*)
000667                  		rom_ptr_z80(HDNR1S_Loop39+Target)
                        	;dc.w z80_ptr(ptr,addr)
000667 5C86             	dc.w  (((((HDNR1S_Loop39+Target))<<8)&$FF00)|((((HDNR1S_Loop39+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000669 A5028001         	dc.b nC3, $02, nRst, $01
00066D                  	smpsLoop		$01, $08, HDNR1S_Loop40, Target
00066D F7               	dc.b	$F7
00066E 0108             	dc.b	$01,$08
                        	if (HDNR1S_Loop40<*)
000670                  		rom_ptr_z80(HDNR1S_Loop40+Target)
                        	;dc.w z80_ptr(ptr,addr)
000670 5A86             	dc.w  (((((HDNR1S_Loop40+Target))<<8)&$FF00)|((((HDNR1S_Loop40+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000672                  	smpsAlterVol		$01
000672 E601             	dc.b	$E6,$01

000674                  HDNR1S_Loop42:
000674 9B03             	dc.b nD2, $03

000676                  HDNR1S_Loop41:
000676 A70280019B028001 	dc.b nD3, $02, nRst, $01, nD2, $02, nRst, $01
00067E                  	smpsLoop		$00, $03, HDNR1S_Loop41, Target
00067E F7               	dc.b	$F7
00067F 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop41<*)
000681                  		rom_ptr_z80(HDNR1S_Loop41+Target)
                        	;dc.w z80_ptr(ptr,addr)
000681 7686             	dc.w  (((((HDNR1S_Loop41+Target))<<8)&$FF00)|((((HDNR1S_Loop41+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000683 A7028001         	dc.b nD3, $02, nRst, $01
000687                  	smpsLoop		$01, $02, HDNR1S_Loop42, Target
000687 F7               	dc.b	$F7
000688 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop42<*)
00068A                  		rom_ptr_z80(HDNR1S_Loop42+Target)
                        	;dc.w z80_ptr(ptr,addr)
00068A 7486             	dc.w  (((((HDNR1S_Loop42+Target))<<8)&$FF00)|((((HDNR1S_Loop42+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00068C                  HDNR1S_Loop44:
00068C 9703             	dc.b nBb1, $03

00068E                  HDNR1S_Loop43:
00068E A302800197028001 	dc.b nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000696                  	smpsLoop		$00, $03, HDNR1S_Loop43, Target
000696 F7               	dc.b	$F7
000697 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop43<*)
000699                  		rom_ptr_z80(HDNR1S_Loop43+Target)
                        	;dc.w z80_ptr(ptr,addr)
000699 8E86             	dc.w  (((((HDNR1S_Loop43+Target))<<8)&$FF00)|((((HDNR1S_Loop43+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00069B A3028001         	dc.b nBb2, $02, nRst, $01
00069F                  	smpsLoop		$01, $02, HDNR1S_Loop44, Target
00069F F7               	dc.b	$F7
0006A0 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop44<*)
0006A2                  		rom_ptr_z80(HDNR1S_Loop44+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006A2 8C86             	dc.w  (((((HDNR1S_Loop44+Target))<<8)&$FF00)|((((HDNR1S_Loop44+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0006A4                  HDNR1S_Loop46:
0006A4 9903             	dc.b nC2, $03

0006A6                  HDNR1S_Loop45:
0006A6 A502800199028001 	dc.b nC3, $02, nRst, $01, nC2, $02, nRst, $01
0006AE                  	smpsLoop		$00, $03, HDNR1S_Loop45, Target
0006AE F7               	dc.b	$F7
0006AF 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop45<*)
0006B1                  		rom_ptr_z80(HDNR1S_Loop45+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006B1 A686             	dc.w  (((((HDNR1S_Loop45+Target))<<8)&$FF00)|((((HDNR1S_Loop45+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006B3 A5028001         	dc.b nC3, $02, nRst, $01
0006B7                  	smpsLoop		$01, $02, HDNR1S_Loop46, Target
0006B7 F7               	dc.b	$F7
0006B8 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop46<*)
0006BA                  		rom_ptr_z80(HDNR1S_Loop46+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006BA A486             	dc.w  (((((HDNR1S_Loop46+Target))<<8)&$FF00)|((((HDNR1S_Loop46+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006BC 9A03             	dc.b nCs2, $03

0006BE                  HDNR1S_Loop47:
0006BE A60280019A028001 	dc.b nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
0006C6                  	smpsLoop		$00, $03, HDNR1S_Loop47, Target
0006C6 F7               	dc.b	$F7
0006C7 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop47<*)
0006C9                  		rom_ptr_z80(HDNR1S_Loop47+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006C9 BE86             	dc.w  (((((HDNR1S_Loop47+Target))<<8)&$FF00)|((((HDNR1S_Loop47+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006CB A60280019B038002 	dc.b nCs3, $02, nRst, $01, nD2, $03, nRst, $02
0006D3 0380010980069403 	dc.b $03, nRst, $01, $09, nRst, $06, nG1, $03

0006DB                  HDNR1S_Loop48:
0006DB A002800194028001 	dc.b nG2, $02, nRst, $01, nG1, $02, nRst, $01
0006E3                  	smpsLoop		$00, $03, HDNR1S_Loop48, Target
0006E3 F7               	dc.b	$F7
0006E4 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop48<*)
0006E6                  		rom_ptr_z80(HDNR1S_Loop48+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006E6 DB86             	dc.w  (((((HDNR1S_Loop48+Target))<<8)&$FF00)|((((HDNR1S_Loop48+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006E8 A00280019503     	dc.b nG2, $02, nRst, $01, nAb1, $03

0006EE                  HDNR1S_Loop49:
0006EE A102800195028001 	dc.b nAb2, $02, nRst, $01, nAb1, $02, nRst, $01
0006F6                  	smpsLoop		$00, $03, HDNR1S_Loop49, Target
0006F6 F7               	dc.b	$F7
0006F7 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop49<*)
0006F9                  		rom_ptr_z80(HDNR1S_Loop49+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006F9 EE86             	dc.w  (((((HDNR1S_Loop49+Target))<<8)&$FF00)|((((HDNR1S_Loop49+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006FB A10280019703     	dc.b nAb2, $02, nRst, $01, nBb1, $03

000701                  HDNR1S_Loop50:
000701 A302800197028001 	dc.b nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000709                  	smpsLoop		$00, $03, HDNR1S_Loop50, Target
000709 F7               	dc.b	$F7
00070A 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop50<*)
00070C                  		rom_ptr_z80(HDNR1S_Loop50+Target)
                        	;dc.w z80_ptr(ptr,addr)
00070C 0187             	dc.w  (((((HDNR1S_Loop50+Target))<<8)&$FF00)|((((HDNR1S_Loop50+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00070E A30280019903     	dc.b nBb2, $02, nRst, $01, nC2, $03

000714                  HDNR1S_Loop51:
000714 A502800199028001 	dc.b nC3, $02, nRst, $01, nC2, $02, nRst, $01
00071C                  	smpsLoop		$00, $03, HDNR1S_Loop51, Target
00071C F7               	dc.b	$F7
00071D 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop51<*)
00071F                  		rom_ptr_z80(HDNR1S_Loop51+Target)
                        	;dc.w z80_ptr(ptr,addr)
00071F 1487             	dc.w  (((((HDNR1S_Loop51+Target))<<8)&$FF00)|((((HDNR1S_Loop51+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000721 A50280019C03     	dc.b nC3, $02, nRst, $01, nEb2, $03

000727                  HDNR1S_Loop52:
000727 A80280019C028001 	dc.b nEb3, $02, nRst, $01, nEb2, $02, nRst, $01
00072F                  	smpsLoop		$00, $03, HDNR1S_Loop52, Target
00072F F7               	dc.b	$F7
000730 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop52<*)
000732                  		rom_ptr_z80(HDNR1S_Loop52+Target)
                        	;dc.w z80_ptr(ptr,addr)
000732 2787             	dc.w  (((((HDNR1S_Loop52+Target))<<8)&$FF00)|((((HDNR1S_Loop52+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000734 A80280019E03     	dc.b nEb3, $02, nRst, $01, nF2, $03

00073A                  HDNR1S_Loop53:
00073A AA0280019E028001 	dc.b nF3, $02, nRst, $01, nF2, $02, nRst, $01
000742                  	smpsLoop		$00, $03, HDNR1S_Loop53, Target
000742 F7               	dc.b	$F7
000743 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop53<*)
000745                  		rom_ptr_z80(HDNR1S_Loop53+Target)
                        	;dc.w z80_ptr(ptr,addr)
000745 3A87             	dc.w  (((((HDNR1S_Loop53+Target))<<8)&$FF00)|((((HDNR1S_Loop53+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000747 AA02             	dc.b nF3, $02

000749                  HDNR1S_Loop55:
000749 80019703         	dc.b nRst, $01, nBb1, $03

00074D                  HDNR1S_Loop54:
00074D A302800197028001 	dc.b nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000755                  	smpsLoop		$00, $03, HDNR1S_Loop54, Target
000755 F7               	dc.b	$F7
000756 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop54<*)
000758                  		rom_ptr_z80(HDNR1S_Loop54+Target)
                        	;dc.w z80_ptr(ptr,addr)
000758 4D87             	dc.w  (((((HDNR1S_Loop54+Target))<<8)&$FF00)|((((HDNR1S_Loop54+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00075A A302             	dc.b nBb2, $02
00075C                  	smpsLoop		$01, $02, HDNR1S_Loop55, Target
00075C F7               	dc.b	$F7
00075D 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop55<*)
00075F                  		rom_ptr_z80(HDNR1S_Loop55+Target)
                        	;dc.w z80_ptr(ptr,addr)
00075F 4987             	dc.w  (((((HDNR1S_Loop55+Target))<<8)&$FF00)|((((HDNR1S_Loop55+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000761 80019403         	dc.b nRst, $01, nG1, $03

000765                  HDNR1S_Loop56:
000765 A002800194028001 	dc.b nG2, $02, nRst, $01, nG1, $02, nRst, $01
00076D                  	smpsLoop		$00, $03, HDNR1S_Loop56, Target
00076D F7               	dc.b	$F7
00076E 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop56<*)
000770                  		rom_ptr_z80(HDNR1S_Loop56+Target)
                        	;dc.w z80_ptr(ptr,addr)
000770 6587             	dc.w  (((((HDNR1S_Loop56+Target))<<8)&$FF00)|((((HDNR1S_Loop56+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000772 A00280019503     	dc.b nG2, $02, nRst, $01, nAb1, $03

000778                  HDNR1S_Loop57:
000778 A102800195028001 	dc.b nAb2, $02, nRst, $01, nAb1, $02, nRst, $01
000780                  	smpsLoop		$00, $03, HDNR1S_Loop57, Target
000780 F7               	dc.b	$F7
000781 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop57<*)
000783                  		rom_ptr_z80(HDNR1S_Loop57+Target)
                        	;dc.w z80_ptr(ptr,addr)
000783 7887             	dc.w  (((((HDNR1S_Loop57+Target))<<8)&$FF00)|((((HDNR1S_Loop57+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000785 A10280019703     	dc.b nAb2, $02, nRst, $01, nBb1, $03

00078B                  HDNR1S_Loop58:
00078B A302800197028001 	dc.b nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000793                  	smpsLoop		$00, $03, HDNR1S_Loop58, Target
000793 F7               	dc.b	$F7
000794 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop58<*)
000796                  		rom_ptr_z80(HDNR1S_Loop58+Target)
                        	;dc.w z80_ptr(ptr,addr)
000796 8B87             	dc.w  (((((HDNR1S_Loop58+Target))<<8)&$FF00)|((((HDNR1S_Loop58+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000798 A30280019903     	dc.b nBb2, $02, nRst, $01, nC2, $03

00079E                  HDNR1S_Loop59:
00079E A502800199028001 	dc.b nC3, $02, nRst, $01, nC2, $02, nRst, $01
0007A6                  	smpsLoop		$00, $03, HDNR1S_Loop59, Target
0007A6 F7               	dc.b	$F7
0007A7 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop59<*)
0007A9                  		rom_ptr_z80(HDNR1S_Loop59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007A9 9E87             	dc.w  (((((HDNR1S_Loop59+Target))<<8)&$FF00)|((((HDNR1S_Loop59+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007AB A50280019C03     	dc.b nC3, $02, nRst, $01, nEb2, $03

0007B1                  HDNR1S_Loop60:
0007B1 A80280019C028001 	dc.b nEb3, $02, nRst, $01, nEb2, $02, nRst, $01
0007B9                  	smpsLoop		$00, $03, HDNR1S_Loop60, Target
0007B9 F7               	dc.b	$F7
0007BA 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop60<*)
0007BC                  		rom_ptr_z80(HDNR1S_Loop60+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007BC B187             	dc.w  (((((HDNR1S_Loop60+Target))<<8)&$FF00)|((((HDNR1S_Loop60+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007BE A80280019203     	dc.b nEb3, $02, nRst, $01, nF1, $03

0007C4                  HDNR1S_Loop61:
0007C4 9E02800192028001 	dc.b nF2, $02, nRst, $01, nF1, $02, nRst, $01
0007CC                  	smpsLoop		$00, $03, HDNR1S_Loop61, Target
0007CC F7               	dc.b	$F7
0007CD 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop61<*)
0007CF                  		rom_ptr_z80(HDNR1S_Loop61+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007CF C487             	dc.w  (((((HDNR1S_Loop61+Target))<<8)&$FF00)|((((HDNR1S_Loop61+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007D1 9E0280019503A102 	dc.b nF2, $02, nRst, $01, nAb1, $03, nAb2, $02
0007D9 800195028001A102 	dc.b nRst, $01, nAb1, $02, nRst, $01, nAb2, $02
0007E1 80019703A3028001 	dc.b nRst, $01, nBb1, $03, nBb2, $02, nRst, $01
0007E9 97028001A302     	dc.b nBb1, $02, nRst, $01, nBb2, $02

0007EF                  HDNR1S_Loop63:
0007EF 80019903         	dc.b nRst, $01, nC2, $03

0007F3                  HDNR1S_Loop62:
0007F3 A502800199028001 	dc.b nC3, $02, nRst, $01, nC2, $02, nRst, $01
0007FB                  	smpsLoop		$00, $03, HDNR1S_Loop62, Target
0007FB F7               	dc.b	$F7
0007FC 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop62<*)
0007FE                  		rom_ptr_z80(HDNR1S_Loop62+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007FE F387             	dc.w  (((((HDNR1S_Loop62+Target))<<8)&$FF00)|((((HDNR1S_Loop62+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000800 A502             	dc.b nC3, $02
000802                  	smpsLoop		$01, $07, HDNR1S_Loop63, Target
000802 F7               	dc.b	$F7
000803 0107             	dc.b	$01,$07
                        	if (HDNR1S_Loop63<*)
000805                  		rom_ptr_z80(HDNR1S_Loop63+Target)
                        	;dc.w z80_ptr(ptr,addr)
000805 EF87             	dc.w  (((((HDNR1S_Loop63+Target))<<8)&$FF00)|((((HDNR1S_Loop63+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000807                  	smpsAlterNote	$00
000807 E100             	dc.b	$E1,$00
000809 8055             	dc.b nRst, $55
00080B                  	smpsAlterVol		$FF
00080B E6FF             	dc.b	$E6,$FF
00080D                  	smpsJump		HDNR1S_Jump2, Target
00080D F6               	dc.b	$F6
                        	if (HDNR1S_Jump2<*)
00080E                  		rom_ptr_z80(HDNR1S_Jump2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00080E 1485             	dc.w  (((((HDNR1S_Jump2+Target))<<8)&$FF00)|((((HDNR1S_Jump2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000810                  HDNR1S_FM4:	
000810                  	smpsPan		panCenter	
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000810 E0C0             		dc.b $E0,panCenter
                        	endif
000812                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000812 EF02             		dc.b $EF,$02
                        	endif
000814 8055808016       	dc.b nRst, $55, nRst, nRst, $16
000819                  	smpsFMvoice		$04
                        	;if song<>""
                        	if 1==2
                        	else
000819 EF04             		dc.b $EF,$04
                        	endif
00081B 8006B3           	dc.b nRst, $06, nD4

00081E                  HDNR1S_Loop64:
00081E 03               	dc.b $03
00081F                  	smpsAlterVol		$F5
00081F E6F5             	dc.b	$E6,$F5
000821 03               	dc.b $03
000822                  	smpsAlterVol		$0B
000822 E60B             	dc.b	$E6,$0B
000824                  	smpsLoop		$00, $18, HDNR1S_Loop64, Target
000824 F7               	dc.b	$F7
000825 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop64<*)
000827                  		rom_ptr_z80(HDNR1S_Loop64+Target)
                        	;dc.w z80_ptr(ptr,addr)
000827 1E88             	dc.w  (((((HDNR1S_Loop64+Target))<<8)&$FF00)|((((HDNR1S_Loop64+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000829 B5               	dc.b nE4
00082A                  	smpsAlterVol		$F5
00082A E6F5             	dc.b	$E6,$F5
00082C 03               	dc.b $03
00082D                  	smpsAlterVol		$0A
00082D E60A             	dc.b	$E6,$0A
00082F 03               	dc.b $03
000830                  	smpsAlterVol		$F6
000830 E6F6             	dc.b	$E6,$F6
000832 03               	dc.b $03
000833                  	smpsAlterVol		$0B
000833 E60B             	dc.b	$E6,$0B
000835 03               	dc.b $03
000836                  	smpsAlterVol		$F5
000836 E6F5             	dc.b	$E6,$F5
000838 03               	dc.b $03
000839                  	smpsAlterVol		$0A
000839 E60A             	dc.b	$E6,$0A
00083B 03               	dc.b $03
00083C                  	smpsAlterVol		$F6
00083C E6F6             	dc.b	$E6,$F6
00083E 03               	dc.b $03
00083F                  	smpsAlterVol		$FE
00083F E6FE             	dc.b	$E6,$FE
000841 03800203800103   	dc.b $03, nRst, $02, $03, nRst, $01, $03

000848                  HDNR1S_Jump3:
000848 8006             	dc.b nRst, $06
00084A                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
00084A EF05             		dc.b $EF,$05
                        	endif
00084C 80               	dc.b nRst
00084D                  	smpsAlterVol		$09
00084D E609             	dc.b	$E6,$09
00084F AE               	dc.b nA3

000850                  HDNR1S_Loop65:
000850 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000857                  	smpsLoop		$00, $02, HDNR1S_Loop65, Target
000857 F7               	dc.b	$F7
000858 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop65<*)
00085A                  		rom_ptr_z80(HDNR1S_Loop65+Target)
                        	;dc.w z80_ptr(ptr,addr)
00085A 5088             	dc.w  (((((HDNR1S_Loop65+Target))<<8)&$FF00)|((((HDNR1S_Loop65+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00085C 0302800103028001 	dc.b $03, $02, nRst, $01, $03, $02, nRst, $01
000864 028001B103028001 	dc.b $02, nRst, $01, nC4, $03, $02, nRst, $01
00086C 028001B403028001 	dc.b $02, nRst, $01, nEb4, $03, $02, nRst, $01
000874 B303028001030280 	dc.b nD4, $03, $02, nRst, $01, $03, $02, nRst
00087C 0102010280010302 	dc.b $01, $02, $01, $02, nRst, $01, $03, $02
000884 8001B50302800103 	dc.b nRst, $01, nE4, $03, $02, nRst, $01, $03

00088C                  HDNR1S_Loop66:
00088C 028001           	dc.b $02, nRst, $01
00088F                  	smpsLoop		$00, $03, HDNR1S_Loop66, Target
00088F F7               	dc.b	$F7
000890 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop66<*)
000892                  		rom_ptr_z80(HDNR1S_Loop66+Target)
                        	;dc.w z80_ptr(ptr,addr)
000892 8C88             	dc.w  (((((HDNR1S_Loop66+Target))<<8)&$FF00)|((((HDNR1S_Loop66+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000894 03028001B3       	dc.b $03, $02, nRst, $01, nD4

000899                  HDNR1S_Loop67:
000899 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
0008A0                  	smpsLoop		$00, $02, HDNR1S_Loop67, Target
0008A0 F7               	dc.b	$F7
0008A1 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop67<*)
0008A3                  		rom_ptr_z80(HDNR1S_Loop67+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008A3 9988             	dc.w  (((((HDNR1S_Loop67+Target))<<8)&$FF00)|((((HDNR1S_Loop67+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008A5 03028001B1       	dc.b $03, $02, nRst, $01, nC4

0008AA                  HDNR1S_Loop68:
0008AA 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
0008B1                  	smpsLoop		$00, $02, HDNR1S_Loop68, Target
0008B1 F7               	dc.b	$F7
0008B2 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop68<*)
0008B4                  		rom_ptr_z80(HDNR1S_Loop68+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008B4 AA88             	dc.w  (((((HDNR1S_Loop68+Target))<<8)&$FF00)|((((HDNR1S_Loop68+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008B6 03028001AF       	dc.b $03, $02, nRst, $01, nBb3

0008BB                  HDNR1S_Loop69:
0008BB 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
0008C2                  	smpsLoop		$00, $02, HDNR1S_Loop69, Target
0008C2 F7               	dc.b	$F7
0008C3 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop69<*)
0008C5                  		rom_ptr_z80(HDNR1S_Loop69+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008C5 BB88             	dc.w  (((((HDNR1S_Loop69+Target))<<8)&$FF00)|((((HDNR1S_Loop69+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008C7 03028001B5       	dc.b $03, $02, nRst, $01, nE4

0008CC                  HDNR1S_Loop70:
0008CC 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
0008D3                  	smpsLoop		$00, $02, HDNR1S_Loop70, Target
0008D3 F7               	dc.b	$F7
0008D4 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop70<*)
0008D6                  		rom_ptr_z80(HDNR1S_Loop70+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008D6 CC88             	dc.w  (((((HDNR1S_Loop70+Target))<<8)&$FF00)|((((HDNR1S_Loop70+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008D8 03028001         	dc.b $03, $02, nRst, $01
0008DC                  	smpsAlterVol		$01
0008DC E601             	dc.b	$E6,$01
0008DE AE               	dc.b nA3

0008DF                  HDNR1S_Loop71:
0008DF 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
0008E6                  	smpsLoop		$00, $02, HDNR1S_Loop71, Target
0008E6 F7               	dc.b	$F7
0008E7 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop71<*)
0008E9                  		rom_ptr_z80(HDNR1S_Loop71+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008E9 DF88             	dc.w  (((((HDNR1S_Loop71+Target))<<8)&$FF00)|((((HDNR1S_Loop71+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008EB 0302800103028001 	dc.b $03, $02, nRst, $01, $03, $02, nRst, $01
0008F3 028001B103028001 	dc.b $02, nRst, $01, nC4, $03, $02, nRst, $01
0008FB 028001B403028001 	dc.b $02, nRst, $01, nEb4, $03, $02, nRst, $01
000903 B303028001030280 	dc.b nD4, $03, $02, nRst, $01, $03, $02, nRst
00090B 0102010280010302 	dc.b $01, $02, $01, $02, nRst, $01, $03, $02
000913 8001B50302800103 	dc.b nRst, $01, nE4, $03, $02, nRst, $01, $03

00091B                  HDNR1S_Loop72:
00091B 028001           	dc.b $02, nRst, $01
00091E                  	smpsLoop		$00, $03, HDNR1S_Loop72, Target
00091E F7               	dc.b	$F7
00091F 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop72<*)
000921                  		rom_ptr_z80(HDNR1S_Loop72+Target)
                        	;dc.w z80_ptr(ptr,addr)
000921 1B89             	dc.w  (((((HDNR1S_Loop72+Target))<<8)&$FF00)|((((HDNR1S_Loop72+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000923 03028001B3       	dc.b $03, $02, nRst, $01, nD4

000928                  HDNR1S_Loop73:
000928 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
00092F                  	smpsLoop		$00, $02, HDNR1S_Loop73, Target
00092F F7               	dc.b	$F7
000930 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop73<*)
000932                  		rom_ptr_z80(HDNR1S_Loop73+Target)
                        	;dc.w z80_ptr(ptr,addr)
000932 2889             	dc.w  (((((HDNR1S_Loop73+Target))<<8)&$FF00)|((((HDNR1S_Loop73+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000934 03028001B1       	dc.b $03, $02, nRst, $01, nC4

000939                  HDNR1S_Loop74:
000939 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000940                  	smpsLoop		$00, $02, HDNR1S_Loop74, Target
000940 F7               	dc.b	$F7
000941 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop74<*)
000943                  		rom_ptr_z80(HDNR1S_Loop74+Target)
                        	;dc.w z80_ptr(ptr,addr)
000943 3989             	dc.w  (((((HDNR1S_Loop74+Target))<<8)&$FF00)|((((HDNR1S_Loop74+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000945 03028001AF       	dc.b $03, $02, nRst, $01, nBb3

00094A                  HDNR1S_Loop75:
00094A 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000951                  	smpsLoop		$00, $02, HDNR1S_Loop75, Target
000951 F7               	dc.b	$F7
000952 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop75<*)
000954                  		rom_ptr_z80(HDNR1S_Loop75+Target)
                        	;dc.w z80_ptr(ptr,addr)
000954 4A89             	dc.w  (((((HDNR1S_Loop75+Target))<<8)&$FF00)|((((HDNR1S_Loop75+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000956 03028001B3       	dc.b $03, $02, nRst, $01, nD4

00095B                  HDNR1S_Loop76:
00095B 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000962                  	smpsLoop		$00, $02, HDNR1S_Loop76, Target
000962 F7               	dc.b	$F7
000963 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop76<*)
000965                  		rom_ptr_z80(HDNR1S_Loop76+Target)
                        	;dc.w z80_ptr(ptr,addr)
000965 5B89             	dc.w  (((((HDNR1S_Loop76+Target))<<8)&$FF00)|((((HDNR1S_Loop76+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000967 03028001         	dc.b $03, $02, nRst, $01
00096B                  	smpsAlterVol		$FC
00096B E6FC             	dc.b	$E6,$FC
00096D 0201028004       	dc.b $02, $01, $02, nRst, $04
000972                  	smpsAlterVol		$06
000972 E606             	dc.b	$E6,$06
000974 0380B380         	dc.b $03, nRst, nD4, nRst
000978                  	smpsAlterVol		$FA
000978 E6FA             	dc.b	$E6,$FA
00097A 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000982 0280070201028001 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $01
00098A                  	smpsAlterVol		$06
00098A E606             	dc.b	$E6,$06
00098C 0380B38006       	dc.b $03, nRst, nD4, nRst, $06
000991                  	smpsAlterVol		$FA
000991 E6FA             	dc.b	$E6,$FA
000993 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
00099B 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
0009A3 B10201028001     	dc.b nC4, $02, $01, $02, nRst, $01
0009A9                  	smpsAlterVol		$06
0009A9 E606             	dc.b	$E6,$06
0009AB 0380B18006       	dc.b $03, nRst, nC4, nRst, $06
0009B0                  	smpsAlterVol		$FA
0009B0 E6FA             	dc.b	$E6,$FA
0009B2 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
0009BA 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
0009C2 B20201028001     	dc.b nCs4, $02, $01, $02, nRst, $01
0009C8                  	smpsAlterVol		$06
0009C8 E606             	dc.b	$E6,$06
0009CA 0380B280         	dc.b $03, nRst, nCs4, nRst
0009CE                  	smpsAlterVol		$FA
0009CE E6FA             	dc.b	$E6,$FA
0009D0 028001028001B302 	dc.b $02, nRst, $01, $02, nRst, $01, nD4, $02
0009D8 8003018003068009 	dc.b nRst, $03, $01, nRst, $03, $06, nRst, $09
0009E0                  	smpsAlterVol		$FD
0009E0 E6FD             	dc.b	$E6,$FD
0009E2 96               	dc.b nA1

0009E3                  HDNR1S_Loop77:
0009E3 03028001         	dc.b $03, $02, nRst, $01

0009E7                  HDNR1S_Loop78:
0009E7 028001           	dc.b $02, nRst, $01
0009EA                  	smpsLoop		$00, $02, HDNR1S_Loop77, Target
0009EA F7               	dc.b	$F7
0009EB 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop77<*)
0009ED                  		rom_ptr_z80(HDNR1S_Loop77+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009ED E389             	dc.w  (((((HDNR1S_Loop77+Target))<<8)&$FF00)|((((HDNR1S_Loop77+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0009EF                  HDNR1S_Loop79:
0009EF 03               	dc.b $03
0009F0                  	smpsLoop		$01, $02, HDNR1S_Loop78, Target
0009F0 F7               	dc.b	$F7
0009F1 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop78<*)
0009F3                  		rom_ptr_z80(HDNR1S_Loop78+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009F3 E789             	dc.w  (((((HDNR1S_Loop78+Target))<<8)&$FF00)|((((HDNR1S_Loop78+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0009F5 028001028001     	dc.b $02, nRst, $01, $02, nRst, $01
0009FB                  	smpsLoop		$02, $07, HDNR1S_Loop79, Target
0009FB F7               	dc.b	$F7
0009FC 0207             	dc.b	$02,$07
                        	if (HDNR1S_Loop79<*)
0009FE                  		rom_ptr_z80(HDNR1S_Loop79+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009FE EF89             	dc.w  (((((HDNR1S_Loop79+Target))<<8)&$FF00)|((((HDNR1S_Loop79+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000A00 03028001A5       	dc.b $03, $02, nRst, $01, nC3

000A05                  HDNR1S_Loop80:
000A05 03028001         	dc.b $03, $02, nRst, $01

000A09                  HDNR1S_Loop81:
000A09 028001           	dc.b $02, nRst, $01
000A0C                  	smpsLoop		$00, $02, HDNR1S_Loop80, Target
000A0C F7               	dc.b	$F7
000A0D 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop80<*)
000A0F                  		rom_ptr_z80(HDNR1S_Loop80+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A0F 058A             	dc.w  (((((HDNR1S_Loop80+Target))<<8)&$FF00)|((((HDNR1S_Loop80+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000A11                  HDNR1S_Loop82:
000A11 03               	dc.b $03
000A12                  	smpsLoop		$01, $02, HDNR1S_Loop81, Target
000A12 F7               	dc.b	$F7
000A13 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop81<*)
000A15                  		rom_ptr_z80(HDNR1S_Loop81+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A15 098A             	dc.w  (((((HDNR1S_Loop81+Target))<<8)&$FF00)|((((HDNR1S_Loop81+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000A17 028001028001     	dc.b $02, nRst, $01, $02, nRst, $01
000A1D                  	smpsLoop		$02, $07, HDNR1S_Loop82, Target
000A1D F7               	dc.b	$F7
000A1E 0207             	dc.b	$02,$07
                        	if (HDNR1S_Loop82<*)
000A20                  		rom_ptr_z80(HDNR1S_Loop82+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A20 118A             	dc.w  (((((HDNR1S_Loop82+Target))<<8)&$FF00)|((((HDNR1S_Loop82+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000A22 03028001         	dc.b $03, $02, nRst, $01
000A26                  	smpsAlterVol		$03
000A26 E603             	dc.b	$E6,$03
000A28 B30201028004     	dc.b nD4, $02, $01, $02, nRst, $04
000A2E                  	smpsAlterVol		$06
000A2E E606             	dc.b	$E6,$06
000A30 0380B380         	dc.b $03, nRst, nD4, nRst
000A34                  	smpsAlterVol		$FA
000A34 E6FA             	dc.b	$E6,$FA
000A36 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000A3E 0280070201028001 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $01
000A46                  	smpsAlterVol		$06
000A46 E606             	dc.b	$E6,$06
000A48 0380B38006       	dc.b $03, nRst, nD4, nRst, $06
000A4D                  	smpsAlterVol		$FA
000A4D E6FA             	dc.b	$E6,$FA
000A4F 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000A57 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
000A5F B10201028001     	dc.b nC4, $02, $01, $02, nRst, $01
000A65                  	smpsAlterVol		$06
000A65 E606             	dc.b	$E6,$06
000A67 0380B18006       	dc.b $03, nRst, nC4, nRst, $06
000A6C                  	smpsAlterVol		$FA
000A6C E6FA             	dc.b	$E6,$FA
000A6E 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000A76 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
000A7E B20201028001     	dc.b nCs4, $02, $01, $02, nRst, $01
000A84                  	smpsAlterVol		$06
000A84 E606             	dc.b	$E6,$06
000A86 0380B280         	dc.b $03, nRst, nCs4, nRst
000A8A                  	smpsAlterVol		$FA
000A8A E6FA             	dc.b	$E6,$FA
000A8C 028001028001B302 	dc.b $02, nRst, $01, $02, nRst, $01, nD4, $02
000A94 800301800306     	dc.b nRst, $03, $01, nRst, $03, $06

000A9A                  HDNR1S_Loop83:
000A9A 804F             	dc.b nRst, $4F
000A9C                  	smpsLoop		$00, $07, HDNR1S_Loop83, Target
000A9C F7               	dc.b	$F7
000A9D 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop83<*)
000A9F                  		rom_ptr_z80(HDNR1S_Loop83+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A9F 9A8A             	dc.w  (((((HDNR1S_Loop83+Target))<<8)&$FF00)|((((HDNR1S_Loop83+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000AA1 8002             	dc.b nRst, $02
000AA3                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000AA3 EF02             		dc.b $EF,$02
                        	endif
000AA5 8006             	dc.b nRst, $06
000AA7                  	smpsAlterVol		$FD
000AA7 E6FD             	dc.b	$E6,$FD
                        	;!@ dc.b nB2, $05, $04, $09, nRst, $06, nC3, $05
                        	;!@ dc.b $04, $09, nRst, $06, nCs3, $05, $04, $03
000AA9 8005800480098006 	dc.b	nRst, $05, nRst, $04, nRst, $09, nRst, $06, nRst, $05
000AB1 8005
000AB3 8004800980068005 	dc.b	nRst, $04, nRst, $09, nRst, $06, nRst, $05, nRst, $04, nRst, $03
000ABB 80048003
000ABF                  	smpsAlterVol		$FD
000ABF E6FD             	dc.b	$E6,$FD
000AC1                  	smpsJump		HDNR1S_Jump3, Target
000AC1 F6               	dc.b	$F6
                        	if (HDNR1S_Jump3<*)
000AC2                  		rom_ptr_z80(HDNR1S_Jump3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AC2 4888             	dc.w  (((((HDNR1S_Jump3+Target))<<8)&$FF00)|((((HDNR1S_Jump3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000AC4                  HDNR1S_FM5:	
000AC4                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000AC4 E0C0             		dc.b $E0,panCenter
                        	endif
000AC6                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000AC6 EF02             		dc.b $EF,$02
                        	endif
000AC8 8055808016       	dc.b nRst, $55, nRst, nRst, $16
000ACD                  	smpsFMvoice		$04
                        	;if song<>""
                        	if 1==2
                        	else
000ACD EF04             		dc.b $EF,$04
                        	endif
000ACF 8006A7           	dc.b nRst, $06, nD3

000AD2                  HDNR1S_Loop84:
000AD2 03               	dc.b $03
000AD3                  	smpsAlterVol		$F5
000AD3 E6F5             	dc.b	$E6,$F5
000AD5 03               	dc.b $03
000AD6                  	smpsAlterVol		$0B
000AD6 E60B             	dc.b	$E6,$0B
000AD8                  	smpsLoop		$00, $18, HDNR1S_Loop84, Target
000AD8 F7               	dc.b	$F7
000AD9 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop84<*)
000ADB                  		rom_ptr_z80(HDNR1S_Loop84+Target)
                        	;dc.w z80_ptr(ptr,addr)
000ADB D28A             	dc.w  (((((HDNR1S_Loop84+Target))<<8)&$FF00)|((((HDNR1S_Loop84+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000ADD A9               	dc.b nE3
000ADE                  	smpsAlterVol		$F5
000ADE E6F5             	dc.b	$E6,$F5
000AE0 03               	dc.b $03
000AE1                  	smpsAlterVol		$0A
000AE1 E60A             	dc.b	$E6,$0A
000AE3 03               	dc.b $03
000AE4                  	smpsAlterVol		$F6
000AE4 E6F6             	dc.b	$E6,$F6
000AE6 03               	dc.b $03
000AE7                  	smpsAlterVol		$0B
000AE7 E60B             	dc.b	$E6,$0B
000AE9 03               	dc.b $03
000AEA                  	smpsAlterVol		$F5
000AEA E6F5             	dc.b	$E6,$F5
000AEC 03               	dc.b $03
000AED                  	smpsAlterVol		$0A
000AED E60A             	dc.b	$E6,$0A
000AEF 03               	dc.b $03
000AF0                  	smpsAlterVol		$F6
000AF0 E6F6             	dc.b	$E6,$F6
000AF2 03               	dc.b $03
000AF3                  	smpsAlterVol		$FE
000AF3 E6FE             	dc.b	$E6,$FE
000AF5 03800203800103   	dc.b $03, nRst, $02, $03, nRst, $01, $03

000AFC                  HDNR1S_Jump4:
000AFC 8006             	dc.b nRst, $06
000AFE                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
000AFE EF05             		dc.b $EF,$05
                        	endif
000B00 80               	dc.b nRst
000B01                  	smpsAlterVol		$09
000B01 E609             	dc.b	$E6,$09
000B03 A2               	dc.b nA2

000B04                  HDNR1S_Loop85:
000B04 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000B0B                  	smpsLoop		$00, $02, HDNR1S_Loop85, Target
000B0B F7               	dc.b	$F7
000B0C 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop85<*)
000B0E                  		rom_ptr_z80(HDNR1S_Loop85+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B0E 048B             	dc.w  (((((HDNR1S_Loop85+Target))<<8)&$FF00)|((((HDNR1S_Loop85+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B10 0302800103028001 	dc.b $03, $02, nRst, $01, $03, $02, nRst, $01
000B18 028001A503028001 	dc.b $02, nRst, $01, nC3, $03, $02, nRst, $01
000B20 028001A803028001 	dc.b $02, nRst, $01, nEb3, $03, $02, nRst, $01
000B28 A703028001030280 	dc.b nD3, $03, $02, nRst, $01, $03, $02, nRst
000B30 0102010280010302 	dc.b $01, $02, $01, $02, nRst, $01, $03, $02
000B38 8001A90302800103 	dc.b nRst, $01, nE3, $03, $02, nRst, $01, $03

000B40                  HDNR1S_Loop86:
000B40 028001           	dc.b $02, nRst, $01
000B43                  	smpsLoop		$00, $03, HDNR1S_Loop86, Target
000B43 F7               	dc.b	$F7
000B44 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop86<*)
000B46                  		rom_ptr_z80(HDNR1S_Loop86+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B46 408B             	dc.w  (((((HDNR1S_Loop86+Target))<<8)&$FF00)|((((HDNR1S_Loop86+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B48 03028001A7       	dc.b $03, $02, nRst, $01, nD3

000B4D                  HDNR1S_Loop87:
000B4D 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000B54                  	smpsLoop		$00, $02, HDNR1S_Loop87, Target
000B54 F7               	dc.b	$F7
000B55 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop87<*)
000B57                  		rom_ptr_z80(HDNR1S_Loop87+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B57 4D8B             	dc.w  (((((HDNR1S_Loop87+Target))<<8)&$FF00)|((((HDNR1S_Loop87+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B59 03028001A5       	dc.b $03, $02, nRst, $01, nC3

000B5E                  HDNR1S_Loop88:
000B5E 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000B65                  	smpsLoop		$00, $02, HDNR1S_Loop88, Target
000B65 F7               	dc.b	$F7
000B66 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop88<*)
000B68                  		rom_ptr_z80(HDNR1S_Loop88+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B68 5E8B             	dc.w  (((((HDNR1S_Loop88+Target))<<8)&$FF00)|((((HDNR1S_Loop88+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B6A 03028001A3       	dc.b $03, $02, nRst, $01, nBb2

000B6F                  HDNR1S_Loop89:
000B6F 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000B76                  	smpsLoop		$00, $02, HDNR1S_Loop89, Target
000B76 F7               	dc.b	$F7
000B77 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop89<*)
000B79                  		rom_ptr_z80(HDNR1S_Loop89+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B79 6F8B             	dc.w  (((((HDNR1S_Loop89+Target))<<8)&$FF00)|((((HDNR1S_Loop89+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B7B 03028001A9       	dc.b $03, $02, nRst, $01, nE3

000B80                  HDNR1S_Loop90:
000B80 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000B87                  	smpsLoop		$00, $02, HDNR1S_Loop90, Target
000B87 F7               	dc.b	$F7
000B88 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop90<*)
000B8A                  		rom_ptr_z80(HDNR1S_Loop90+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B8A 808B             	dc.w  (((((HDNR1S_Loop90+Target))<<8)&$FF00)|((((HDNR1S_Loop90+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B8C 03028001         	dc.b $03, $02, nRst, $01
000B90                  	smpsAlterVol		$01
000B90 E601             	dc.b	$E6,$01
000B92 A2               	dc.b nA2

000B93                  HDNR1S_Loop91:
000B93 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000B9A                  	smpsLoop		$00, $02, HDNR1S_Loop91, Target
000B9A F7               	dc.b	$F7
000B9B 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop91<*)
000B9D                  		rom_ptr_z80(HDNR1S_Loop91+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B9D 938B             	dc.w  (((((HDNR1S_Loop91+Target))<<8)&$FF00)|((((HDNR1S_Loop91+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B9F 0302800103028001 	dc.b $03, $02, nRst, $01, $03, $02, nRst, $01
000BA7 028001A503028001 	dc.b $02, nRst, $01, nC3, $03, $02, nRst, $01
000BAF 028001A803028001 	dc.b $02, nRst, $01, nEb3, $03, $02, nRst, $01
000BB7 A703028001030280 	dc.b nD3, $03, $02, nRst, $01, $03, $02, nRst
000BBF 0102010280010302 	dc.b $01, $02, $01, $02, nRst, $01, $03, $02
000BC7 8001A90302800103 	dc.b nRst, $01, nE3, $03, $02, nRst, $01, $03

000BCF                  HDNR1S_Loop92:
000BCF 028001           	dc.b $02, nRst, $01
000BD2                  	smpsLoop		$00, $03, HDNR1S_Loop92, Target
000BD2 F7               	dc.b	$F7
000BD3 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop92<*)
000BD5                  		rom_ptr_z80(HDNR1S_Loop92+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BD5 CF8B             	dc.w  (((((HDNR1S_Loop92+Target))<<8)&$FF00)|((((HDNR1S_Loop92+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000BD7 03028001A7       	dc.b $03, $02, nRst, $01, nD3

000BDC                  HDNR1S_Loop93:
000BDC 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000BE3                  	smpsLoop		$00, $02, HDNR1S_Loop93, Target
000BE3 F7               	dc.b	$F7
000BE4 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop93<*)
000BE6                  		rom_ptr_z80(HDNR1S_Loop93+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BE6 DC8B             	dc.w  (((((HDNR1S_Loop93+Target))<<8)&$FF00)|((((HDNR1S_Loop93+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000BE8 03028001A5       	dc.b $03, $02, nRst, $01, nC3

000BED                  HDNR1S_Loop94:
000BED 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000BF4                  	smpsLoop		$00, $02, HDNR1S_Loop94, Target
000BF4 F7               	dc.b	$F7
000BF5 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop94<*)
000BF7                  		rom_ptr_z80(HDNR1S_Loop94+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BF7 ED8B             	dc.w  (((((HDNR1S_Loop94+Target))<<8)&$FF00)|((((HDNR1S_Loop94+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000BF9 03028001A3       	dc.b $03, $02, nRst, $01, nBb2

000BFE                  HDNR1S_Loop95:
000BFE 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000C05                  	smpsLoop		$00, $02, HDNR1S_Loop95, Target
000C05 F7               	dc.b	$F7
000C06 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop95<*)
000C08                  		rom_ptr_z80(HDNR1S_Loop95+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C08 FE8B             	dc.w  (((((HDNR1S_Loop95+Target))<<8)&$FF00)|((((HDNR1S_Loop95+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000C0A 03028001A7       	dc.b $03, $02, nRst, $01, nD3

000C0F                  HDNR1S_Loop96:
000C0F 03028001028001   	dc.b $03, $02, nRst, $01, $02, nRst, $01
000C16                  	smpsLoop		$00, $02, HDNR1S_Loop96, Target
000C16 F7               	dc.b	$F7
000C17 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop96<*)
000C19                  		rom_ptr_z80(HDNR1S_Loop96+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C19 0F8C             	dc.w  (((((HDNR1S_Loop96+Target))<<8)&$FF00)|((((HDNR1S_Loop96+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000C1B 03028001         	dc.b $03, $02, nRst, $01
000C1F                  	smpsAlterVol		$FC
000C1F E6FC             	dc.b	$E6,$FC
000C21 0201028004       	dc.b $02, $01, $02, nRst, $04
000C26                  	smpsAlterVol		$06
000C26 E606             	dc.b	$E6,$06
000C28 0380A780         	dc.b $03, nRst, nD3, nRst
000C2C                  	smpsAlterVol		$FA
000C2C E6FA             	dc.b	$E6,$FA
000C2E 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000C36 0280070201028001 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $01
000C3E                  	smpsAlterVol		$06
000C3E E606             	dc.b	$E6,$06
000C40 0380A78006       	dc.b $03, nRst, nD3, nRst, $06
000C45                  	smpsAlterVol		$FA
000C45 E6FA             	dc.b	$E6,$FA
000C47 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000C4F 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
000C57 A50201028001     	dc.b nC3, $02, $01, $02, nRst, $01
000C5D                  	smpsAlterVol		$06
000C5D E606             	dc.b	$E6,$06
000C5F 0380A58006       	dc.b $03, nRst, nC3, nRst, $06
000C64                  	smpsAlterVol		$FA
000C64 E6FA             	dc.b	$E6,$FA
000C66 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000C6E 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
000C76 A60201028001     	dc.b nCs3, $02, $01, $02, nRst, $01
000C7C                  	smpsAlterVol		$06
000C7C E606             	dc.b	$E6,$06
000C7E 0380A680         	dc.b $03, nRst, nCs3, nRst
000C82                  	smpsAlterVol		$FA
000C82 E6FA             	dc.b	$E6,$FA
000C84 028001028001A702 	dc.b $02, nRst, $01, $02, nRst, $01, nD3, $02
000C8C 8003018003068009 	dc.b nRst, $03, $01, nRst, $03, $06, nRst, $09
000C94                  	smpsAlterVol		$FD
000C94 E6FD             	dc.b	$E6,$FD
000C96 A2               	dc.b nA2

000C97                  HDNR1S_Loop97:
000C97 03028001         	dc.b $03, $02, nRst, $01

000C9B                  HDNR1S_Loop98:
000C9B 028001           	dc.b $02, nRst, $01
000C9E                  	smpsLoop		$00, $02, HDNR1S_Loop97, Target
000C9E F7               	dc.b	$F7
000C9F 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop97<*)
000CA1                  		rom_ptr_z80(HDNR1S_Loop97+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CA1 978C             	dc.w  (((((HDNR1S_Loop97+Target))<<8)&$FF00)|((((HDNR1S_Loop97+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000CA3                  HDNR1S_Loop99:
000CA3 03               	dc.b $03
000CA4                  	smpsLoop		$01, $02, HDNR1S_Loop98, Target
000CA4 F7               	dc.b	$F7
000CA5 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop98<*)
000CA7                  		rom_ptr_z80(HDNR1S_Loop98+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CA7 9B8C             	dc.w  (((((HDNR1S_Loop98+Target))<<8)&$FF00)|((((HDNR1S_Loop98+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000CA9 028001028001     	dc.b $02, nRst, $01, $02, nRst, $01
000CAF                  	smpsLoop		$02, $07, HDNR1S_Loop99, Target
000CAF F7               	dc.b	$F7
000CB0 0207             	dc.b	$02,$07
                        	if (HDNR1S_Loop99<*)
000CB2                  		rom_ptr_z80(HDNR1S_Loop99+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CB2 A38C             	dc.w  (((((HDNR1S_Loop99+Target))<<8)&$FF00)|((((HDNR1S_Loop99+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000CB4 0302800199       	dc.b $03, $02, nRst, $01, nC2

000CB9                  HDNR1S_Loop100:
000CB9 03028001         	dc.b $03, $02, nRst, $01

000CBD                  HDNR1S_Loop101:
000CBD 028001           	dc.b $02, nRst, $01
000CC0                  	smpsLoop		$00, $02, HDNR1S_Loop100, Target
000CC0 F7               	dc.b	$F7
000CC1 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop100<*)
000CC3                  		rom_ptr_z80(HDNR1S_Loop100+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CC3 B98C             	dc.w  (((((HDNR1S_Loop100+Target))<<8)&$FF00)|((((HDNR1S_Loop100+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000CC5                  HDNR1S_Loop102:
000CC5 03               	dc.b $03
000CC6                  	smpsLoop		$01, $02, HDNR1S_Loop101, Target
000CC6 F7               	dc.b	$F7
000CC7 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop101<*)
000CC9                  		rom_ptr_z80(HDNR1S_Loop101+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CC9 BD8C             	dc.w  (((((HDNR1S_Loop101+Target))<<8)&$FF00)|((((HDNR1S_Loop101+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000CCB 028001028001     	dc.b $02, nRst, $01, $02, nRst, $01
000CD1                  	smpsLoop		$02, $07, HDNR1S_Loop102, Target
000CD1 F7               	dc.b	$F7
000CD2 0207             	dc.b	$02,$07
                        	if (HDNR1S_Loop102<*)
000CD4                  		rom_ptr_z80(HDNR1S_Loop102+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CD4 C58C             	dc.w  (((((HDNR1S_Loop102+Target))<<8)&$FF00)|((((HDNR1S_Loop102+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000CD6 03028001         	dc.b $03, $02, nRst, $01
000CDA                  	smpsAlterVol		$03
000CDA E603             	dc.b	$E6,$03
000CDC A70201028004     	dc.b nD3, $02, $01, $02, nRst, $04
000CE2                  	smpsAlterVol		$06
000CE2 E606             	dc.b	$E6,$06
000CE4 0380A780         	dc.b $03, nRst, nD3, nRst
000CE8                  	smpsAlterVol		$FA
000CE8 E6FA             	dc.b	$E6,$FA
000CEA 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000CF2 0280070201028001 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $01
000CFA                  	smpsAlterVol		$06
000CFA E606             	dc.b	$E6,$06
000CFC 0380A78006       	dc.b $03, nRst, nD3, nRst, $06
000D01                  	smpsAlterVol		$FA
000D01 E6FA             	dc.b	$E6,$FA
000D03 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000D0B 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
000D13 A50201028001     	dc.b nC3, $02, $01, $02, nRst, $01
000D19                  	smpsAlterVol		$06
000D19 E606             	dc.b	$E6,$06
000D1B 0380A58006       	dc.b $03, nRst, nC3, nRst, $06
000D20                  	smpsAlterVol		$FA
000D20 E6FA             	dc.b	$E6,$FA
000D22 0280040280070201 	dc.b $02, nRst, $04, $02, nRst, $07, $02, $01
000D2A 0280010201028001 	dc.b $02, nRst, $01, $02, $01, $02, nRst, $01
000D32 A60201028001     	dc.b nCs3, $02, $01, $02, nRst, $01
000D38                  	smpsAlterVol		$06
000D38 E606             	dc.b	$E6,$06
000D3A 0380A680         	dc.b $03, nRst, nCs3, nRst
000D3E                  	smpsAlterVol		$FA
000D3E E6FA             	dc.b	$E6,$FA
000D40 028001028001A702 	dc.b $02, nRst, $01, $02, nRst, $01, nD3, $02
000D48 800301800306     	dc.b nRst, $03, $01, nRst, $03, $06

000D4E                  HDNR1S_Loop103:
000D4E 804F             	dc.b nRst, $4F
000D50                  	smpsLoop		$00, $07, HDNR1S_Loop103, Target
000D50 F7               	dc.b	$F7
000D51 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop103<*)
000D53                  		rom_ptr_z80(HDNR1S_Loop103+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D53 4E8D             	dc.w  (((((HDNR1S_Loop103+Target))<<8)&$FF00)|((((HDNR1S_Loop103+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000D55 8002             	dc.b nRst, $02
000D57                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000D57 EF02             		dc.b $EF,$02
                        	endif
000D59 8006             	dc.b nRst, $06
000D5B                  	smpsAlterVol		$FD
000D5B E6FD             	dc.b	$E6,$FD
                        	;!@ dc.b nB3, $05, $04, $09, nRst, $06, nC4, $05
                        	;!@ dc.b $04, $09, nRst, $06, nCs4, $05, $04, $03
000D5D 8005800480098006 	dc.b nRst, $05, nRst, $04, nRst, $09, nRst, $06, nRst, $05
000D65 8005
000D67 8004800980068005 	dc.b nRst, $04, nRst, $09, nRst, $06, nRst, $05, nRst, $04, nRst, $03
000D6F 80048003
000D73                  	smpsAlterVol		$FD
000D73 E6FD             	dc.b	$E6,$FD
000D75                  	smpsJump		HDNR1S_Jump4, Target
000D75 F6               	dc.b	$F6
                        	if (HDNR1S_Jump4<*)
000D76                  		rom_ptr_z80(HDNR1S_Jump4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D76 FC8A             	dc.w  (((((HDNR1S_Jump4+Target))<<8)&$FF00)|((((HDNR1S_Jump4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000D78                  HDNR1S_FM6:
000D78                  	smpsFMvoice		$03
                        	;if song<>""
                        	if 1==2
                        	else
000D78 EF03             		dc.b $EF,$03
                        	endif
000D7A                  	smpsModSet	$01, $01, $01, $05
000D7A F001010105       	dc.b	$F0,$01,$01,$01,$05
000D7F                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000D7F E0C0             		dc.b $E0,panCenter
                        	endif
000D81 F480             	dc.w	sModOn
000D83 803F8080808080   	dc.b nRst, $3F, nRst, nRst, nRst, nRst, nRst

000D8A                  HDNR1S_Jump5:
000D8A                  	smpsAlterNote	$00
000D8A E100             	dc.b	$E1,$00
000D8C 80408080808080   	dc.b nRst, $40, nRst, nRst, nRst, nRst, nRst
000D93                  	smpsAlterNote	$E5
000D93 E1E5             	dc.b	$E1,$E5
000D95 8001             	dc.b nRst, $01
000D97                  	smpsAlterNote	$E8
000D97 E1E8             	dc.b	$E1,$E8
000D99 80               	dc.b nRst
000D9A                  	smpsAlterNote	$E9
000D9A E1E9             	dc.b	$E1,$E9
000D9C 80               	dc.b nRst
000D9D                  	smpsAlterNote	$EA
000D9D E1EA             	dc.b	$E1,$EA
000D9F 80               	dc.b nRst
000DA0                  	smpsAlterNote	$EB
000DA0 E1EB             	dc.b	$E1,$EB
000DA2 80               	dc.b nRst
000DA3                  	smpsAlterNote	$ED
000DA3 E1ED             	dc.b	$E1,$ED
000DA5 80               	dc.b nRst
000DA6                  	smpsAlterNote	$EE
000DA6 E1EE             	dc.b	$E1,$EE
000DA8 80               	dc.b nRst
000DA9                  	smpsAlterNote	$F0
000DA9 E1F0             	dc.b	$E1,$F0
000DAB 80               	dc.b nRst
000DAC                  	smpsAlterNote	$F1
000DAC E1F1             	dc.b	$E1,$F1
000DAE 80               	dc.b nRst
000DAF                  	smpsAlterNote	$E4
000DAF E1E4             	dc.b	$E1,$E4
000DB1 80               	dc.b nRst
000DB2                  	smpsAlterNote	$E6
000DB2 E1E6             	dc.b	$E1,$E6
000DB4 80               	dc.b nRst
000DB5                  	smpsAlterNote	$E7
000DB5 E1E7             	dc.b	$E1,$E7
000DB7 80               	dc.b nRst
000DB8                  	smpsAlterNote	$00
000DB8 E100             	dc.b	$E1,$00
000DBA 8030808055800B80 	dc.b nRst, $30, nRst, nRst, $55, nRst, $0B, nRst
000DC2 558008           	dc.b $55, nRst, $08
000DC5                  	smpsAlterNote	$12
000DC5 E112             	dc.b	$E1,$12
000DC7 8001             	dc.b nRst, $01
000DC9                  	smpsAlterNote	$06
000DC9 E106             	dc.b	$E1,$06
000DCB 80               	dc.b nRst
000DCC                  	smpsAlterNote	$FC
000DCC E1FC             	dc.b	$E1,$FC
000DCE 80               	dc.b nRst
000DCF                  	smpsAlterNote	$FF
000DCF E1FF             	dc.b	$E1,$FF
000DD1 802D             	dc.b nRst, $2D
000DD3                  	smpsAlterNote	$18
000DD3 E118             	dc.b	$E1,$18
000DD5 8001             	dc.b nRst, $01
000DD7                  	smpsAlterNote	$0D
000DD7 E10D             	dc.b	$E1,$0D
000DD9 80               	dc.b nRst
000DDA                  	smpsAlterNote	$0A
000DDA E10A             	dc.b	$E1,$0A
000DDC 80               	dc.b nRst
000DDD                  	smpsAlterNote	$00
000DDD E100             	dc.b	$E1,$00
000DDF 802D             	dc.b nRst, $2D
000DE1                  	smpsAlterNote	$0C
000DE1 E10C             	dc.b	$E1,$0C
000DE3 8001             	dc.b nRst, $01
000DE5                  	smpsAlterNote	$07
000DE5 E107             	dc.b	$E1,$07
000DE7 80               	dc.b nRst
000DE8                  	smpsAlterNote	$05
000DE8 E105             	dc.b	$E1,$05
000DEA 80               	dc.b nRst
000DEB                  	smpsAlterNote	$FF
000DEB E1FF             	dc.b	$E1,$FF
000DED 80558008         	dc.b nRst, $55, nRst, $08
000DF1                  	smpsAlterNote	$06
000DF1 E106             	dc.b	$E1,$06
000DF3 8001             	dc.b nRst, $01
000DF5                  	smpsAlterNote	$FF
000DF5 E1FF             	dc.b	$E1,$FF
000DF7 80               	dc.b nRst
000DF8                  	smpsAlterNote	$F4
000DF8 E1F4             	dc.b	$E1,$F4
000DFA 80               	dc.b nRst
000DFB                  	smpsAlterNote	$00
000DFB E100             	dc.b	$E1,$00
000DFD 802D             	dc.b nRst, $2D
000DFF                  	smpsAlterNote	$EF
000DFF E1EF             	dc.b	$E1,$EF
000E01 8001             	dc.b nRst, $01
000E03                  	smpsAlterNote	$0C
000E03 E10C             	dc.b	$E1,$0C
000E05 80               	dc.b nRst
000E06                  	smpsAlterNote	$FD
000E06 E1FD             	dc.b	$E1,$FD
000E08 80               	dc.b nRst
000E09                  	smpsAlterNote	$FF
000E09 E1FF             	dc.b	$E1,$FF
000E0B 802D             	dc.b nRst, $2D
000E0D                  	smpsAlterNote	$07
000E0D E107             	dc.b	$E1,$07
000E0F 8001             	dc.b nRst, $01
000E11                  	smpsAlterNote	$FD
000E11 E1FD             	dc.b	$E1,$FD
000E13 80               	dc.b nRst
000E14                  	smpsAlterNote	$EC
000E14 E1EC             	dc.b	$E1,$EC
000E16 80               	dc.b nRst
000E17                  	smpsAlterNote	$FF
000E17 E1FF             	dc.b	$E1,$FF
000E19 805580801CAC0280 	dc.b nRst, $55, nRst, nRst, $1C, nG3, $02, nRst
000E21 0A0380AD80060380 	dc.b $0A, $03, nRst, nAb3, nRst, $06, $03, nRst
000E29 06038009AF02800A 	dc.b $06, $03, nRst, $09, nBb3, $02, nRst, $0A
000E31 0380B18006AF0380 	dc.b $03, nRst, nC4, nRst, $06, nBb3, $03, nRst
000E39 AF02800103028007 	dc.b nBb3, $02, nRst, $01, $03, $02, nRst, $07
000E41 B102800A0380B480 	dc.b nC4, $02, nRst, $0A, $03, nRst, nEb4, nRst
000E49 B402800A0380B680 	dc.b nEb4, $02, nRst, $0A, $03, nRst, nF4, nRst
000E51 0F0380B6800F0280 	dc.b $0F, $03, nRst, nF4, nRst, $0F, $02, nRst
000E59 0AAC02800A0380AD 	dc.b $0A, nG3, $02, nRst, $0A, $03, nRst, nAb3
000E61 8006038006038009 	dc.b nRst, $06, $03, nRst, $06, $03, nRst, $09
000E69 AF02800A0380B180 	dc.b nBb3, $02, nRst, $0A, $03, nRst, nC4, nRst
000E71 0FAF03028007B102 	dc.b $0F, nBb3, $03, $02, nRst, $07, nC4, $02
000E79 800A0380AF800603 	dc.b nRst, $0A, $03, nRst, nBb3, nRst, $06, $03
000E81 8006028004B20380 	dc.b nRst, $06, $02, nRst, $04, nCs4, $03, nRst
000E89 B2028004AF0380AF 	dc.b nCs4, $02, nRst, $04, nBb3, $03, nRst, nBb3
000E91 028004B103805580 	dc.b $02, nRst, $04, nC4, $03, nRst, $55, nRst
000E99 804F             	dc.b nRst, $4F
000E9B                  	smpsJump		HDNR1S_Jump5, Target
000E9B F6               	dc.b	$F6
                        	if (HDNR1S_Jump5<*)
000E9C                  		rom_ptr_z80(HDNR1S_Jump5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E9C 8A8D             	dc.w  (((((HDNR1S_Jump5+Target))<<8)&$FF00)|((((HDNR1S_Jump5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000E9E                  HDNR1S_PSG1:
000E9E                  	smpsModSet	$01, $02, $00, $06
000E9E F001020006       	dc.b	$F0,$01,$02,$00,$06
000EA3 F480             	dc.w	sModOn
000EA5                  	smpsAlterNote	$01
000EA5 E101             	dc.b	$E1,$01
000EA7 805580801C921891 	dc.b nRst, $55, nRst, nRst, $1C, nF1, $18, nE1
000EAF 0C8D8F969B9D9E18 	dc.b $0C, nC1, nD1, nA1, nD2, nE2, nF2, $18
000EB7 A09D             	dc.b nG2, nE2
000EB9                  	smpsSetVol	$02
000EB9 EC02             	dc.b	$EC,$02
000EBB 0380020180030280 	dc.b $03, nRst, $02, $01, nRst, $03, $02, nRst
000EC3 01               	dc.b $01

000EC4                  HDNR1S_Jump6:
000EC4                  	smpsAlterNote	$00
000EC4 E100             	dc.b	$E1,$00
000EC6                  	smpsSetVol	$FE
000EC6 ECFE             	dc.b	$EC,$FE
000EC8 920396999E9D189E 	dc.b nF1, $03, nA1, nC2, nF2, nE2, $18, nF2
000ED0 0C990396999B0CA2 	dc.b $0C, nC2, $03, nA1, nC2, nD2, $0C, nA2
000ED8 06A00380A00F9D03 	dc.b $06, nG2, $03, nRst, nG2, $0F, nE2, $03
000EE0 80029B0380019903 	dc.b nRst, $02, nD2, $03, nRst, $01, nC2, $03
000EE8 970C9B0380029E03 	dc.b nBb1, $0C, nD2, $03, nRst, $02, nF2, $03
000EF0 8001A00399129B03 	dc.b nRst, $01, nG2, $03, nC2, $12, nD2, $03
000EF8 9D               	dc.b nE2

000EF9                  HDNR1S_Loop104:
000EF9 A080029D0380019B 	dc.b nG2, nRst, $02, nE2, $03, nRst, $01, nD2
000F01 03               	dc.b $03
000F02                  	smpsLoop		$00, $02, HDNR1S_Loop104, Target
000F02 F7               	dc.b	$F7
000F03 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop104<*)
000F05                  		rom_ptr_z80(HDNR1S_Loop104+Target)
                        	;dc.w z80_ptr(ptr,addr)
000F05 F98E             	dc.w  (((((HDNR1S_Loop104+Target))<<8)&$FF00)|((((HDNR1S_Loop104+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000F07 9D0C8D039194999D 	dc.b nE2, $0C, nC1, $03, nE1, nG1, nC2, nE2
000F0F 189E0C990396999B 	dc.b $18, nF2, $0C, nC2, $03, nA1, nC2, nD2
000F17 0CA206A00380A00F 	dc.b $0C, nA2, $06, nG2, $03, nRst, nG2, $0F
000F1F 9A0380029B038001 	dc.b nCs2, $03, nRst, $02, nD2, $03, nRst, $01
000F27 9D039E0F9B039D9E 	dc.b nE2, $03, nF2, $0F, nD2, $03, nE2, nF2
000F2F A00C038002038001 	dc.b nG2, $0C, $03, nRst, $02, $03, nRst, $01
000F37 A203A306A09D099A 	dc.b nA2, $03, nBb2, $06, nG2, nE2, $09, nCs2
000F3F 039B0C           	dc.b $03, nD2, $0C
000F42                  	smpsAlterNote	$06
000F42 E106             	dc.b	$E1,$06
000F44 E701             	dc.b smpsNoAttack, $01
000F46                  	smpsAlterNote	$05
000F46 E105             	dc.b	$E1,$05
000F48 E79A             	dc.b smpsNoAttack, nCs2
000F4A                  	smpsAlterNote	$06
000F4A E106             	dc.b	$E1,$06
000F4C E799             	dc.b smpsNoAttack, nC2
000F4E                  	smpsAlterNote	$07
000F4E E107             	dc.b	$E1,$07
000F50 E798             	dc.b smpsNoAttack, nB1
000F52                  	smpsAlterNote	$06
000F52 E106             	dc.b	$E1,$06
000F54 E797             	dc.b smpsNoAttack, nBb1
000F56                  	smpsAlterNote	$07
000F56 E107             	dc.b	$E1,$07
000F58 E796E795         	dc.b smpsNoAttack, nA1, smpsNoAttack, nAb1
000F5C                  	smpsAlterNote	$08
000F5C E108             	dc.b	$E1,$08
000F5E E794E793E792     	dc.b smpsNoAttack, nG1, smpsNoAttack, nFs1, smpsNoAttack, nF1
000F64                  	smpsAlterNote	$09
000F64 E109             	dc.b	$E1,$09
000F66 E791             	dc.b smpsNoAttack, nE1
000F68                  	smpsAlterNote	$08
000F68 E108             	dc.b	$E1,$08
000F6A E790             	dc.b smpsNoAttack, nEb1
000F6C                  	smpsAlterNote	$00
000F6C E100             	dc.b	$E1,$00
000F6E                  	smpsSetVol	$01
000F6E EC01             	dc.b	$EC,$01
000F70 9B               	dc.b nD2

000F71                  HDNR1S_Loop105:
000F71 028001960280019B 	dc.b $02, nRst, $01, nA1, $02, nRst, $01, nD2
000F79 0280019D069E0280 	dc.b $02, nRst, $01, nE2, $06, nF2, $02, nRst
000F81 019D0280019B0280 	dc.b $01, nE2, $02, nRst, $01, nD2, $02, nRst
000F89 19               	dc.b $19
000F8A                  	smpsLoop		$00, $03, HDNR1S_Loop105, Target
000F8A F7               	dc.b	$F7
000F8B 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop105<*)
000F8D                  		rom_ptr_z80(HDNR1S_Loop105+Target)
                        	;dc.w z80_ptr(ptr,addr)
000F8D 718F             	dc.w  (((((HDNR1S_Loop105+Target))<<8)&$FF00)|((((HDNR1S_Loop105+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000F8F 9A02800196028001 	dc.b nCs2, $02, nRst, $01, nA1, $02, nRst, $01
000F97 9A0280019D06A002 	dc.b nCs2, $02, nRst, $01, nE2, $06, nG2, $02
000F9F 80019D0280019A02 	dc.b nRst, $01, nE2, $02, nRst, $01, nCs2, $02
000FA7 80019B0280030180 	dc.b nRst, $01, nD2, $02, nRst, $03, $01, nRst
000FAF 030306809D028007 	dc.b $03, $03, $06, nRst, nE2, $02, nRst, $07
000FB7 9F0280079B028004 	dc.b nFs2, $02, nRst, $07, nD2, $02, nRst, $04
000FBF 9503A196A298A49D 	dc.b nAb1, $03, nAb2, nA1, nA2, nB1, nB2, nE2
000FC7 919E0280079F0280 	dc.b nE1, nF2, $02, nRst, $07, nFs2, $02, nRst
000FCF 079B0280049D029F 	dc.b $07, nD2, $02, nRst, $04, nE2, $02, nFs2
000FD7 01A102A2019F02A1 	dc.b $01, nAb2, $02, nA2, $01, nFs2, $02, nAb2
000FDF 01A202A401A102A2 	dc.b $01, nA2, $02, nB2, $01, nAb2, $02, nA2
000FE7 01A402A701A903   	dc.b $01, nB2, $02, nD3, $01, nE3, $03
000FEE                  	smpsAlterNote	$FE
000FEE E1FE             	dc.b	$E1,$FE
000FF0 E7A701           	dc.b smpsNoAttack, nD3, $01
000FF3                  	smpsAlterNote	$FF
000FF3 E1FF             	dc.b	$E1,$FF
000FF5 E7A3             	dc.b smpsNoAttack, nBb2
000FF7                  	smpsAlterNote	$01
000FF7 E101             	dc.b	$E1,$01
000FF9 E79F             	dc.b smpsNoAttack, nFs2
000FFB                  	smpsAlterNote	$00
000FFB E100             	dc.b	$E1,$00
000FFD 9D0280079F028007 	dc.b nE2, $02, nRst, $07, nFs2, $02, nRst, $07
001005 9B0280019503A1A2 	dc.b nD2, $02, nRst, $01, nAb1, $03, nAb2, nA2
00100D 96A4A2969D       	dc.b nA1, nB2, nA2, nA1, nE2
001012                  	smpsAlterNote	$FB
001012 E1FB             	dc.b	$E1,$FB
001014 E79B01           	dc.b smpsNoAttack, nD2, $01
001017                  	smpsAlterNote	$FC
001017 E1FC             	dc.b	$E1,$FC
001019 E797             	dc.b smpsNoAttack, nBb1
00101B                  	smpsAlterNote	$FD
00101B E1FD             	dc.b	$E1,$FD
00101D E793             	dc.b smpsNoAttack, nFs1
00101F                  	smpsAlterNote	$00
00101F E100             	dc.b	$E1,$00
001021 9E0280079F028007 	dc.b nF2, $02, nRst, $07, nFs2, $02, nRst, $07
001029 9B028004AA02A701 	dc.b nD2, $02, nRst, $04, nF3, $02, nD3, $01
001031 A402A201A702A401 	dc.b nB2, $02, nA2, $01, nD3, $02, nB2, $01
001039 A202A101A202A101 	dc.b nA2, $02, nAb2, $01, nA2, $02, nAb2, $01
001041 9F029E019B03     	dc.b nFs2, $02, nF2, $01, nD2, $03
001047                  	smpsAlterNote	$FD
001047 E1FD             	dc.b	$E1,$FD
001049 E79901           	dc.b smpsNoAttack, nC2, $01
00104C                  	smpsAlterNote	$FE
00104C E1FE             	dc.b	$E1,$FE
00104E E795             	dc.b smpsNoAttack, nAb1
001050                  	smpsAlterNote	$FF
001050 E1FF             	dc.b	$E1,$FF
001052 E791             	dc.b smpsNoAttack, nE1
001054                  	smpsAlterNote	$01
001054 E101             	dc.b	$E1,$01
001056 A1028007A2028007 	dc.b nAb2, $02, nRst, $07, nA2, $02, nRst, $07
00105E 9F0280049803A499 	dc.b nFs2, $02, nRst, $04, nB1, $03, nB2, nC2
001066 A59BA7A094A10280 	dc.b nC3, nD2, nD3, nG2, nG1, nAb2, $02, nRst
00106E 07A20280079F0280 	dc.b $07, nA2, $02, nRst, $07, nFs2, $02, nRst
001076 04A002A101A402A5 	dc.b $04, nG2, $02, nAb2, $01, nB2, $02, nC3
00107E 01A102A401A502A7 	dc.b $01, nAb2, $02, nB2, $01, nC3, $02, nD3
001086 01A402A501A702AA 	dc.b $01, nB2, $02, nC3, $01, nD3, $02, nF3
00108E 01AC03           	dc.b $01, nG3, $03
001091                  	smpsAlterNote	$00
001091 E100             	dc.b	$E1,$00
001093 E7AA01E7A6       	dc.b smpsNoAttack, nF3, $01, smpsNoAttack, nCs3
001098                  	smpsAlterNote	$01
001098 E101             	dc.b	$E1,$01
00109A E7A2             	dc.b smpsNoAttack, nA2
00109C                  	smpsAlterNote	$00
00109C E100             	dc.b	$E1,$00
00109E A1028007A2028007 	dc.b nAb2, $02, nRst, $07, nA2, $02, nRst, $07
0010A6 9F0280019803A4A5 	dc.b nFs2, $02, nRst, $01, nB1, $03, nB2, nC3
0010AE 99A7A599A0       	dc.b nC2, nD3, nC3, nC2, nG2
0010B3                  	smpsAlterNote	$03
0010B3 E103             	dc.b	$E1,$03
0010B5 E79F01           	dc.b smpsNoAttack, nFs2, $01
0010B8                  	smpsAlterNote	$FC
0010B8 E1FC             	dc.b	$E1,$FC
0010BA E79A             	dc.b smpsNoAttack, nCs2
0010BC                  	smpsAlterNote	$01
0010BC E101             	dc.b	$E1,$01
0010BE E796             	dc.b smpsNoAttack, nA1
0010C0                  	smpsAlterNote	$00
0010C0 E100             	dc.b	$E1,$00
0010C2 A1028007A2028007 	dc.b nAb2, $02, nRst, $07, nA2, $02, nRst, $07
0010CA 9F028004AD02AB01 	dc.b nFs2, $02, nRst, $04, nAb3, $02, nFs3, $01
0010D2 AA02A701AA02A701 	dc.b nF3, $02, nD3, $01, nF3, $02, nD3, $01
0010DA A502A401A502A401 	dc.b nC3, $02, nB2, $01, nC3, $02, nB2, $01
0010E2 A1029F019D03     	dc.b nAb2, $02, nFs2, $01, nE2, $03
0010E8                  	smpsAlterNote	$FF
0010E8 E1FF             	dc.b	$E1,$FF
0010EA E79B01           	dc.b smpsNoAttack, nD2, $01
0010ED                  	smpsAlterNote	$01
0010ED E101             	dc.b	$E1,$01
0010EF E797             	dc.b smpsNoAttack, nBb1
0010F1                  	smpsAlterNote	$06
0010F1 E106             	dc.b	$E1,$06
0010F3 E793             	dc.b smpsNoAttack, nFs1
0010F5                  	smpsAlterNote	$00
0010F5 E100             	dc.b	$E1,$00
0010F7                  	smpsSetVol	$01
0010F7 EC01             	dc.b	$EC,$01
0010F9 8F0C91929406968F 	dc.b nD1, $0C, nE1, nF1, nG1, $06, nA1, nD1
001101 0C91929706968F0C 	dc.b $0C, nE1, nF1, nBb1, $06, nA1, nD1, $0C
001109 9192940696940C91 	dc.b nE1, nF1, nG1, $06, nA1, nG1, $0C, nE1
001111 8F               	dc.b nD1

001112                  HDNR1S_Loop106:
001112 804E             	dc.b nRst, $4E
001114                  	smpsLoop		$00, $08, HDNR1S_Loop106, Target
001114 F7               	dc.b	$F7
001115 0008             	dc.b	$00,$08
                        	if (HDNR1S_Loop106<*)
001117                  		rom_ptr_z80(HDNR1S_Loop106+Target)
                        	;dc.w z80_ptr(ptr,addr)
001117 1291             	dc.w  (((((HDNR1S_Loop106+Target))<<8)&$FF00)|((((HDNR1S_Loop106+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001119                  	smpsJump		HDNR1S_Jump6, Target
001119 F6               	dc.b	$F6
                        	if (HDNR1S_Jump6<*)
00111A                  		rom_ptr_z80(HDNR1S_Jump6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00111A C48E             	dc.w  (((((HDNR1S_Jump6+Target))<<8)&$FF00)|((((HDNR1S_Jump6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00111C                  HDNR1S_PSG2:
00111C                  	smpsModSet	$01, $02, $00, $06
00111C F001020006       	dc.b	$F0,$01,$02,$00,$06
001121 F480             	dc.w	sModOn
001123 805580801C8F     	dc.b nRst, $55, nRst, nRst, $1C, nD1

001129                  HDNR1S_Loop107:
001129 0201028010028004 	dc.b $02, $01, $02, nRst, $10, $02, nRst, $04
001131 0280070201028007 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $07
001139                  	smpsLoop		$00, $02, HDNR1S_Loop107, Target
001139 F7               	dc.b	$F7
00113A 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop107<*)
00113C                  		rom_ptr_z80(HDNR1S_Loop107+Target)
                        	;dc.w z80_ptr(ptr,addr)
00113C 2991             	dc.w  (((((HDNR1S_Loop107+Target))<<8)&$FF00)|((((HDNR1S_Loop107+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00113E 0201028010028004 	dc.b $02, $01, $02, nRst, $10, $02, nRst, $04
001146 028007020102801F 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $1F
                        	;smpsSetVol	$FC
00114E A003800201800302 	dc.b nG2, $03, nRst, $02, $01, nRst, $03, $02
001156 8001             	dc.b nRst, $01

001158                  HDNR1S_Jump7:
001158                  	smpsAlterNote	$00
001158 E100             	dc.b	$E1,$00
00115A 800F             	dc.b nRst, $0F
                        	;smpsSetVol	$03
00115C 81               	dc.b nC0

00115D                  HDNR1S_Loop108:
00115D 018080818005     	dc.b $01, nRst, nRst, nC0, nRst, $05
001163                  	smpsLoop		$00, $02, HDNR1S_Loop108, Target
001163 F7               	dc.b	$F7
001164 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop108<*)
001166                  		rom_ptr_z80(HDNR1S_Loop108+Target)
                        	;dc.w z80_ptr(ptr,addr)
001166 5D91             	dc.w  (((((HDNR1S_Loop108+Target))<<8)&$FF00)|((((HDNR1S_Loop108+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001168 028004           	dc.b $02, nRst, $04
00116B                  	smpsLoop		$01, $02, HDNR1S_Loop108, Target
00116B F7               	dc.b	$F7
00116C 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop108<*)
00116E                  		rom_ptr_z80(HDNR1S_Loop108+Target)
                        	;dc.w z80_ptr(ptr,addr)
00116E 5D91             	dc.w  (((((HDNR1S_Loop108+Target))<<8)&$FF00)|((((HDNR1S_Loop108+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001170 83               	dc.b nD0

001171                  HDNR1S_Loop109:
001171 018080838005     	dc.b $01, nRst, nRst, nD0, nRst, $05
001177                  	smpsLoop		$00, $02, HDNR1S_Loop109, Target
001177 F7               	dc.b	$F7
001178 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop109<*)
00117A                  		rom_ptr_z80(HDNR1S_Loop109+Target)
                        	;dc.w z80_ptr(ptr,addr)
00117A 7191             	dc.w  (((((HDNR1S_Loop109+Target))<<8)&$FF00)|((((HDNR1S_Loop109+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00117C 02800485         	dc.b $02, nRst, $04, nE0

001180                  HDNR1S_Loop110:
001180 018080858005     	dc.b $01, nRst, nRst, nE0, nRst, $05
001186                  	smpsLoop		$00, $02, HDNR1S_Loop110, Target
001186 F7               	dc.b	$F7
001187 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop110<*)
001189                  		rom_ptr_z80(HDNR1S_Loop110+Target)
                        	;dc.w z80_ptr(ptr,addr)
001189 8091             	dc.w  (((((HDNR1S_Loop110+Target))<<8)&$FF00)|((((HDNR1S_Loop110+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00118B 02800483         	dc.b $02, nRst, $04, nD0

00118F                  HDNR1S_Loop111:
00118F 018080838005     	dc.b $01, nRst, nRst, nD0, nRst, $05
001195                  	smpsLoop		$00, $02, HDNR1S_Loop111, Target
001195 F7               	dc.b	$F7
001196 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop111<*)
001198                  		rom_ptr_z80(HDNR1S_Loop111+Target)
                        	;dc.w z80_ptr(ptr,addr)
001198 8F91             	dc.w  (((((HDNR1S_Loop111+Target))<<8)&$FF00)|((((HDNR1S_Loop111+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00119A 02800481         	dc.b $02, nRst, $04, nC0

00119E                  HDNR1S_Loop112:
00119E 018080818005     	dc.b $01, nRst, nRst, nC0, nRst, $05
0011A4                  	smpsLoop		$00, $02, HDNR1S_Loop112, Target
0011A4 F7               	dc.b	$F7
0011A5 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop112<*)
0011A7                  		rom_ptr_z80(HDNR1S_Loop112+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011A7 9E91             	dc.w  (((((HDNR1S_Loop112+Target))<<8)&$FF00)|((((HDNR1S_Loop112+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011A9 028004           	dc.b $02, nRst, $04
0011AC                  	smpsLoop		$01, $02, HDNR1S_Loop112, Target
0011AC F7               	dc.b	$F7
0011AD 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop112<*)
0011AF                  		rom_ptr_z80(HDNR1S_Loop112+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011AF 9E91             	dc.w  (((((HDNR1S_Loop112+Target))<<8)&$FF00)|((((HDNR1S_Loop112+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011B1 85               	dc.b nE0

0011B2                  HDNR1S_Loop113:
0011B2 018080858005     	dc.b $01, nRst, nRst, nE0, nRst, $05
0011B8                  	smpsLoop		$00, $02, HDNR1S_Loop113, Target
0011B8 F7               	dc.b	$F7
0011B9 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop113<*)
0011BB                  		rom_ptr_z80(HDNR1S_Loop113+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011BB B291             	dc.w  (((((HDNR1S_Loop113+Target))<<8)&$FF00)|((((HDNR1S_Loop113+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011BD 02800481         	dc.b $02, nRst, $04, nC0

0011C1                  HDNR1S_Loop114:
0011C1 018080818005     	dc.b $01, nRst, nRst, nC0, nRst, $05
0011C7                  	smpsLoop		$00, $02, HDNR1S_Loop114, Target
0011C7 F7               	dc.b	$F7
0011C8 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop114<*)
0011CA                  		rom_ptr_z80(HDNR1S_Loop114+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011CA C191             	dc.w  (((((HDNR1S_Loop114+Target))<<8)&$FF00)|((((HDNR1S_Loop114+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011CC 028004           	dc.b $02, nRst, $04
0011CF                  	smpsLoop		$01, $02, HDNR1S_Loop114, Target
0011CF F7               	dc.b	$F7
0011D0 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop114<*)
0011D2                  		rom_ptr_z80(HDNR1S_Loop114+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011D2 C191             	dc.w  (((((HDNR1S_Loop114+Target))<<8)&$FF00)|((((HDNR1S_Loop114+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011D4 83               	dc.b nD0

0011D5                  HDNR1S_Loop115:
0011D5 018080838005     	dc.b $01, nRst, nRst, nD0, nRst, $05
0011DB                  	smpsLoop		$00, $02, HDNR1S_Loop115, Target
0011DB F7               	dc.b	$F7
0011DC 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop115<*)
0011DE                  		rom_ptr_z80(HDNR1S_Loop115+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011DE D591             	dc.w  (((((HDNR1S_Loop115+Target))<<8)&$FF00)|((((HDNR1S_Loop115+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011E0 02800485         	dc.b $02, nRst, $04, nE0

0011E4                  HDNR1S_Loop116:
0011E4 018080858005     	dc.b $01, nRst, nRst, nE0, nRst, $05
0011EA                  	smpsLoop		$00, $02, HDNR1S_Loop116, Target
0011EA F7               	dc.b	$F7
0011EB 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop116<*)
0011ED                  		rom_ptr_z80(HDNR1S_Loop116+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011ED E491             	dc.w  (((((HDNR1S_Loop116+Target))<<8)&$FF00)|((((HDNR1S_Loop116+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011EF 02800483         	dc.b $02, nRst, $04, nD0

0011F3                  HDNR1S_Loop117:
0011F3 018080838005     	dc.b $01, nRst, nRst, nD0, nRst, $05
0011F9                  	smpsLoop		$00, $02, HDNR1S_Loop117, Target
0011F9 F7               	dc.b	$F7
0011FA 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop117<*)
0011FC                  		rom_ptr_z80(HDNR1S_Loop117+Target)
                        	;dc.w z80_ptr(ptr,addr)
0011FC F391             	dc.w  (((((HDNR1S_Loop117+Target))<<8)&$FF00)|((((HDNR1S_Loop117+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0011FE 02800481         	dc.b $02, nRst, $04, nC0

001202                  HDNR1S_Loop118:
001202 018080818005     	dc.b $01, nRst, nRst, nC0, nRst, $05
001208                  	smpsLoop		$00, $02, HDNR1S_Loop118, Target
001208 F7               	dc.b	$F7
001209 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop118<*)
00120B                  		rom_ptr_z80(HDNR1S_Loop118+Target)
                        	;dc.w z80_ptr(ptr,addr)
00120B 0292             	dc.w  (((((HDNR1S_Loop118+Target))<<8)&$FF00)|((((HDNR1S_Loop118+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00120D 028004           	dc.b $02, nRst, $04
001210                  	smpsLoop		$01, $02, HDNR1S_Loop118, Target
001210 F7               	dc.b	$F7
001211 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop118<*)
001213                  		rom_ptr_z80(HDNR1S_Loop118+Target)
                        	;dc.w z80_ptr(ptr,addr)
001213 0292             	dc.w  (((((HDNR1S_Loop118+Target))<<8)&$FF00)|((((HDNR1S_Loop118+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001215 018080818005     	dc.b $01, nRst, nRst, nC0, nRst, $05
00121B                  	smpsAlterNote	$7F
00121B E17F             	dc.b	$E1,$7F
00121D 0180808180808080 	dc.b $01, nRst, nRst, nC0, nRst, nRst, nRst, nRst
001225 8081E701         	dc.b nRst, nC0, smpsNoAttack, $01
001229                  	smpsAlterNote	$12
001229 E112             	dc.b	$E1,$12
00122B 80               	dc.b nRst
00122C                  	smpsAlterNote	$00
00122C E100             	dc.b	$E1,$00
                        	;smpsSetVol	$FE
00122E 8F02010280100280 	dc.b nD1, $02, $01, $02, nRst, $10, $02, nRst
001236 0402800702010280 	dc.b $04, $02, nRst, $07, $02, $01, $02, nRst
00123E 0702010280100280 	dc.b $07, $02, $01, $02, nRst, $10, $02, nRst
001246 0402800702010280 	dc.b $04, $02, nRst, $07, $02, $01, $02, nRst
00124E 0102010280018D02 	dc.b $01, $02, $01, $02, nRst, $01, nC1, $02
001256 0102801002800402 	dc.b $01, $02, nRst, $10, $02, nRst, $04, $02
00125E 8007020102800102 	dc.b nRst, $07, $02, $01, $02, nRst, $01, $02
001266 010280018E020102 	dc.b $01, $02, nRst, $01, nCs1, $02, $01, $02
00126E 800D028001028001 	dc.b nRst, $0D, $02, nRst, $01, $02, nRst, $01
001276 8F02800301800306 	dc.b nD1, $02, nRst, $03, $01, nRst, $03, $06
00127E 800980558008     	dc.b nRst, $09, nRst, $55, nRst, $08
001284                  	smpsAlterNote	$F7
001284 E1F7             	dc.b	$E1,$F7
001286 8001             	dc.b nRst, $01
001288                  	smpsAlterNote	$FB
001288 E1FB             	dc.b	$E1,$FB
00128A 80               	dc.b nRst
00128B                  	smpsAlterNote	$02
00128B E102             	dc.b	$E1,$02
00128D 80               	dc.b nRst
00128E                  	smpsAlterNote	$00
00128E E100             	dc.b	$E1,$00
001290 802D             	dc.b nRst, $2D
001292                  	smpsAlterNote	$F4
001292 E1F4             	dc.b	$E1,$F4
001294 8001             	dc.b nRst, $01
001296                  	smpsAlterNote	$F6
001296 E1F6             	dc.b	$E1,$F6
001298 80               	dc.b nRst
001299                  	smpsAlterNote	$F9
001299 E1F9             	dc.b	$E1,$F9
00129B 80               	dc.b nRst
00129C                  	smpsAlterNote	$00
00129C E100             	dc.b	$E1,$00
00129E 802D             	dc.b nRst, $2D
0012A0                  	smpsAlterNote	$FA
0012A0 E1FA             	dc.b	$E1,$FA
0012A2 8001             	dc.b nRst, $01
0012A4                  	smpsAlterNote	$FB
0012A4 E1FB             	dc.b	$E1,$FB
0012A6 80               	dc.b nRst
0012A7                  	smpsAlterNote	$FD
0012A7 E1FD             	dc.b	$E1,$FD
0012A9 80               	dc.b nRst
0012AA                  	smpsAlterNote	$00
0012AA E100             	dc.b	$E1,$00
0012AC 80558008         	dc.b nRst, $55, nRst, $08
0012B0                  	smpsAlterNote	$FD
0012B0 E1FD             	dc.b	$E1,$FD
0012B2 8001             	dc.b nRst, $01
0012B4                  	smpsAlterNote	$01
0012B4 E101             	dc.b	$E1,$01
0012B6 80               	dc.b nRst
0012B7                  	smpsAlterNote	$07
0012B7 E107             	dc.b	$E1,$07
0012B9 80               	dc.b nRst
0012BA                  	smpsAlterNote	$00
0012BA E100             	dc.b	$E1,$00
0012BC 802D             	dc.b nRst, $2D
0012BE                  	smpsAlterNote	$07
0012BE E107             	dc.b	$E1,$07
0012C0 8001             	dc.b nRst, $01
0012C2                  	smpsAlterNote	$F6
0012C2 E1F6             	dc.b	$E1,$F6
0012C4 80               	dc.b nRst
0012C5                  	smpsAlterNote	$02
0012C5 E102             	dc.b	$E1,$02
0012C7 80               	dc.b nRst
0012C8                  	smpsAlterNote	$00
0012C8 E100             	dc.b	$E1,$00
0012CA 802D             	dc.b nRst, $2D
0012CC                  	smpsAlterNote	$FC
0012CC E1FC             	dc.b	$E1,$FC
0012CE 8001             	dc.b nRst, $01
0012D0                  	smpsAlterNote	$02
0012D0 E102             	dc.b	$E1,$02
0012D2 80               	dc.b nRst
0012D3                  	smpsAlterNote	$0C
0012D3 E10C             	dc.b	$E1,$0C
0012D5 80               	dc.b nRst
0012D6                  	smpsAlterNote	$00
0012D6 E100             	dc.b	$E1,$00
0012D8 0201028010028004 	dc.b $02, $01, $02, nRst, $10, $02, nRst, $04
0012E0 0280070201028007 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $07
0012E8 0201028010028004 	dc.b $02, $01, $02, nRst, $10, $02, nRst, $04
0012F0 0280070201028001 	dc.b $02, nRst, $07, $02, $01, $02, nRst, $01
0012F8 02010280018D0201 	dc.b $02, $01, $02, nRst, $01, nC1, $02, $01
001300 0280100280040280 	dc.b $02, nRst, $10, $02, nRst, $04, $02, nRst
001308 0702010280010201 	dc.b $07, $02, $01, $02, nRst, $01, $02, $01
001310 0280018E02010280 	dc.b $02, nRst, $01, nCs1, $02, $01, $02, nRst
001318 0D0280010280018F 	dc.b $0D, $02, nRst, $01, $02, nRst, $01, nD1
001320 0280030180030680 	dc.b $02, nRst, $03, $01, nRst, $03, $06, nRst
001328 09               	dc.b $09
                        	;smpsSetVol	$02
001329 0380             	dc.b $03, nRst
                        	;smpsSetVol	$FD
00132B 9406959799       	dc.b nG1, $06, nAb1, nBb1, nC2
                        	;smpsSetVol	$03
001330 90028001         	dc.b nEb1, $02, nRst, $01
                        	;smpsSetVol	$FD
001334 990F             	dc.b nC2, $0F
                        	;smpsSetVol	$03
001336 920380           	dc.b nF1, $03, nRst
                        	;smpsSetVol	$FD
001339 9B0699979918     	dc.b nD2, $06, nC2, nBb1, nC2, $18
                        	;smpsSetVol	$03
00133F 940380           	dc.b nG1, $03, nRst
                        	;smpsSetVol	$FD
001342 9C069B97990F     	dc.b nEb2, $06, nD2, nBb1, nC2, $0F
                        	;smpsSetVol	$03
001348 95028001         	dc.b nAb1, $02, nRst, $01
                        	;smpsSetVol	$FD
00134C 99039B9C189B     	dc.b nC2, $03, nD2, nEb2, $18, nD2
                        	;smpsSetVol	$03
001352 8F0380           	dc.b nD1, $03, nRst
                        	;smpsSetVol	$FD
001355 9B069C9B99       	dc.b nD2, $06, nEb2, nD2, nC2
                        	;smpsSetVol	$03
00135A 90028001         	dc.b nEb1, $02, nRst, $01
                        	;smpsSetVol	$FD
00135E 950F             	dc.b nAb1, $0F
                        	;smpsSetVol	$03
001360 920380           	dc.b nF1, $03, nRst
                        	;smpsSetVol	$FD
001363 9706999B9918     	dc.b nBb1, $06, nC2, nD2, nC2, $18
                        	;smpsSetVol	$03
001369 940380           	dc.b nG1, $03, nRst
                        	;smpsSetVol	$FD
00136C 9C069B9799       	dc.b nEb2, $06, nD2, nBb1, nC2
                        	;smpsSetVol	$03
001371 92028001         	dc.b nF1, $02, nRst, $01
                        	;smpsSetVol	$FD
001375 9E0906A19C9B9E99 	dc.b nF2, $09, $06, nAb2, nEb2, nD2, nF2, nC2
00137D 0C8003           	dc.b $0C, nRst, $03
                        	;smpsSetVol	$03
001380 9402800102800499 	dc.b nG1, $02, nRst, $01, $02, nRst, $04, nC2

001388                  HDNR1S_Loop119:
001388 0302801002800402 	dc.b $03, $02, nRst, $10, $02, nRst, $04, $02
001390 80070201028007   	dc.b nRst, $07, $02, $01, $02, nRst, $07
001397                  	smpsLoop		$00, $02, HDNR1S_Loop119, Target
001397 F7               	dc.b	$F7
001398 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop119<*)
00139A                  		rom_ptr_z80(HDNR1S_Loop119+Target)
                        	;dc.w z80_ptr(ptr,addr)
00139A 8893             	dc.w  (((((HDNR1S_Loop119+Target))<<8)&$FF00)|((((HDNR1S_Loop119+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00139C 0302801002800402 	dc.b $03, $02, nRst, $10, $02, nRst, $04, $02
0013A4 8007020102805580 	dc.b nRst, $07, $02, $01, $02, nRst, $55, nRst
0013AC 06               	dc.b $06
                        	;smpsSetVol	$FD
0013AD                  	smpsJump		HDNR1S_Jump7, Target
0013AD F6               	dc.b	$F6
                        	if (HDNR1S_Jump7<*)
0013AE                  		rom_ptr_z80(HDNR1S_Jump7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013AE 5891             	dc.w  (((((HDNR1S_Jump7+Target))<<8)&$FF00)|((((HDNR1S_Jump7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0013B0                  HDNR1S_PSG3:
0013B0                  	smpsModSet	$01, $02, $00, $06
0013B0 F001020006       	dc.b	$F0,$01,$02,$00,$06
0013B5 F480             	dc.w	sModOn
0013B7 803F8080808080   	dc.b nRst, $3F, nRst, nRst, nRst, nRst, nRst

0013BE                  HDNR1S_Jump8:
0013BE                  	smpsAlterNote	$00
0013BE E100             	dc.b	$E1,$00
0013C0 80408080808080   	dc.b nRst, $40, nRst, nRst, nRst, nRst, nRst
0013C7                  	smpsAlterNote	$10
0013C7 E110             	dc.b	$E1,$10
0013C9 8001             	dc.b nRst, $01
0013CB                  	smpsAlterNote	$11
0013CB E111             	dc.b	$E1,$11
0013CD 8080             	dc.b nRst, nRst
0013CF                  	smpsAlterNote	$12
0013CF E112             	dc.b	$E1,$12
0013D1 80               	dc.b nRst
0013D2                  	smpsAlterNote	$13
0013D2 E113             	dc.b	$E1,$13
0013D4 80               	dc.b nRst
0013D5                  	smpsAlterNote	$14
0013D5 E114             	dc.b	$E1,$14
0013D7 80               	dc.b nRst
0013D8                  	smpsAlterNote	$16
0013D8 E116             	dc.b	$E1,$16
0013DA 8080             	dc.b nRst, nRst
0013DC                  	smpsAlterNote	$4A
0013DC E14A             	dc.b	$E1,$4A
0013DE 80               	dc.b nRst
0013DF                  	smpsAlterNote	$7F
0013DF E17F             	dc.b	$E1,$7F
0013E1 808080           	dc.b nRst, nRst, nRst
0013E4                  	smpsAlterNote	$00
0013E4 E100             	dc.b	$E1,$00
0013E6 8030808055800B80 	dc.b nRst, $30, nRst, nRst, $55, nRst, $0B, nRst
0013EE 558008           	dc.b $55, nRst, $08
0013F1                  	smpsAlterNote	$F2
0013F1 E1F2             	dc.b	$E1,$F2
0013F3 8001             	dc.b nRst, $01
0013F5                  	smpsAlterNote	$F9
0013F5 E1F9             	dc.b	$E1,$F9
0013F7 80               	dc.b nRst
0013F8                  	smpsAlterNote	$7F
0013F8 E17F             	dc.b	$E1,$7F
0013FA 80               	dc.b nRst
0013FB                  	smpsAlterNote	$00
0013FB E100             	dc.b	$E1,$00
0013FD 802D             	dc.b nRst, $2D
0013FF                  	smpsAlterNote	$EF
0013FF E1EF             	dc.b	$E1,$EF
001401 8001             	dc.b nRst, $01
001403                  	smpsAlterNote	$F1
001403 E1F1             	dc.b	$E1,$F1
001405 80               	dc.b nRst
001406                  	smpsAlterNote	$7F
001406 E17F             	dc.b	$E1,$7F
001408 80               	dc.b nRst
001409                  	smpsAlterNote	$FF
001409 E1FF             	dc.b	$E1,$FF
00140B 802D             	dc.b nRst, $2D
00140D                  	smpsAlterNote	$F7
00140D E1F7             	dc.b	$E1,$F7
00140F 8001             	dc.b nRst, $01
001411                  	smpsAlterNote	$F9
001411 E1F9             	dc.b	$E1,$F9
001413 80               	dc.b nRst
001414                  	smpsAlterNote	$7F
001414 E17F             	dc.b	$E1,$7F
001416 80               	dc.b nRst
001417                  	smpsAlterNote	$00
001417 E100             	dc.b	$E1,$00
001419 80558008         	dc.b nRst, $55, nRst, $08
00141D                  	smpsAlterNote	$FB
00141D E1FB             	dc.b	$E1,$FB
00141F 8001             	dc.b nRst, $01
001421                  	smpsAlterNote	$02
001421 E102             	dc.b	$E1,$02
001423 80               	dc.b nRst
001424                  	smpsAlterNote	$7F
001424 E17F             	dc.b	$E1,$7F
001426 80               	dc.b nRst
001427                  	smpsAlterNote	$FF
001427 E1FF             	dc.b	$E1,$FF
001429 802D             	dc.b nRst, $2D
00142B                  	smpsAlterNote	$0C
00142B E10C             	dc.b	$E1,$0C
00142D 8001             	dc.b nRst, $01
00142F                  	smpsAlterNote	$F2
00142F E1F2             	dc.b	$E1,$F2
001431 80               	dc.b nRst
001432                  	smpsAlterNote	$7F
001432 E17F             	dc.b	$E1,$7F
001434 80               	dc.b nRst
001435                  	smpsAlterNote	$00
001435 E100             	dc.b	$E1,$00
001437 802D             	dc.b nRst, $2D
001439                  	smpsAlterNote	$FA
001439 E1FA             	dc.b	$E1,$FA
00143B 8001             	dc.b nRst, $01
00143D                  	smpsAlterNote	$04
00143D E104             	dc.b	$E1,$04
00143F 80               	dc.b nRst
001440                  	smpsAlterNote	$7F
001440 E17F             	dc.b	$E1,$7F
001442 80               	dc.b nRst
001443                  	smpsAlterNote	$00
001443 E100             	dc.b	$E1,$00
001445 8055808016880380 	dc.b nRst, $55, nRst, nRst, $16, nG0, $03, nRst
00144D 8F02800188038088 	dc.b nD1, $02, nRst, $01, nG0, $03, nRst, nG0
001455 0280018F038090   	dc.b $02, nRst, $01, nD1, $03, nRst, nEb1

00145C                  HDNR1S_Loop120:
00145C 80890280019003   	dc.b nRst, nAb0, $02, nRst, $01, nEb1, $03
001463                  	smpsLoop		$00, $02, HDNR1S_Loop120, Target
001463 F7               	dc.b	$F7
001464 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop120<*)
001466                  		rom_ptr_z80(HDNR1S_Loop120+Target)
                        	;dc.w z80_ptr(ptr,addr)
001466 5C94             	dc.w  (((((HDNR1S_Loop120+Target))<<8)&$FF00)|((((HDNR1S_Loop120+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001468 808B80920280018B 	dc.b nRst, nBb0, nRst, nF1, $02, nRst, $01, nBb0
001470 03808B0280019203 	dc.b $03, nRst, nBb0, $02, nRst, $01, nF1, $03
001478 8094808D0280018B 	dc.b nRst, nG1, nRst, nC1, $02, nRst, $01, nBb0
001480 03808B0280019203 	dc.b $03, nRst, nBb0, $02, nRst, $01, nF1, $03
001488 0280018D03809402 	dc.b $02, nRst, $01, nC1, $03, nRst, nG1, $02
001490 80018D03808D0280 	dc.b nRst, $01, nC1, $03, nRst, nC1, $02, nRst
001498 0194038095809502 	dc.b $01, nG1, $03, nRst, nAb1, nRst, nAb1, $02
0014A0 8001900380900280 	dc.b nRst, $01, nEb1, $03, nRst, nEb1, $02, nRst
0014A8 0195038097809202 	dc.b $01, nAb1, $03, nRst, nBb1, nRst, nF1, $02
0014B0 8001038092028001 	dc.b nRst, $01, $03, nRst, nF1, $02, nRst, $01
0014B8 9703809780920280 	dc.b nBb1, $03, nRst, nBb1, nRst, nF1, $02, nRst
0014C0 0103809202800197 	dc.b $01, $03, nRst, nF1, $02, nRst, $01, nBb1
0014C8 0280019202800188 	dc.b $02, nRst, $01, nF1, $02, nRst, $01, nG0
0014D0 03808F0280018803 	dc.b $03, nRst, nD1, $02, nRst, $01, nG0, $03
0014D8 80880280018F0380 	dc.b nRst, nG0, $02, nRst, $01, nD1, $03, nRst
0014E0 90               	dc.b nEb1

0014E1                  HDNR1S_Loop121:
0014E1 80890280019003   	dc.b nRst, nAb0, $02, nRst, $01, nEb1, $03
0014E8                  	smpsLoop		$00, $02, HDNR1S_Loop121, Target
0014E8 F7               	dc.b	$F7
0014E9 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop121<*)
0014EB                  		rom_ptr_z80(HDNR1S_Loop121+Target)
                        	;dc.w z80_ptr(ptr,addr)
0014EB E194             	dc.w  (((((HDNR1S_Loop121+Target))<<8)&$FF00)|((((HDNR1S_Loop121+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0014ED 808B80920280018B 	dc.b nRst, nBb0, nRst, nF1, $02, nRst, $01, nBb0
0014F5 03808B0280019203 	dc.b $03, nRst, nBb0, $02, nRst, $01, nF1, $03
0014FD 8094808D0280018B 	dc.b nRst, nG1, nRst, nC1, $02, nRst, $01, nBb0
001505 03808B0280019203 	dc.b $03, nRst, nBb0, $02, nRst, $01, nF1, $03
00150D 0280018D03809402 	dc.b $02, nRst, $01, nC1, $03, nRst, nG1, $02
001515 80018D03808D0280 	dc.b nRst, $01, nC1, $03, nRst, nC1, $02, nRst
00151D 0194038092808B02 	dc.b $01, nG1, $03, nRst, nF1, nRst, nBb0, $02
001525 80019203808B0280 	dc.b nRst, $01, nF1, $03, nRst, nBb0, $02, nRst
00152D 01920280018B0280 	dc.b $01, nF1, $02, nRst, $01, nBb0, $02, nRst
001535 0195038095028001 	dc.b $01, nAb1, $03, nRst, nAb1, $02, nRst, $01
00153D 8E02800192038092 	dc.b nCs1, $02, nRst, $01, nF1, $03, nRst, nF1
001545 0280018B02800194 	dc.b $02, nRst, $01, nBb0, $02, nRst, $01, nG1
00154D 03808D           	dc.b $03, nRst, nC1

001550                  HDNR1S_Loop122:
001550 028001028004     	dc.b $02, nRst, $01, $02, nRst, $04
001556                  	smpsLoop		$00, $02, HDNR1S_Loop122, Target
001556 F7               	dc.b	$F7
001557 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop122<*)
001559                  		rom_ptr_z80(HDNR1S_Loop122+Target)
                        	;dc.w z80_ptr(ptr,addr)
001559 5095             	dc.w  (((((HDNR1S_Loop122+Target))<<8)&$FF00)|((((HDNR1S_Loop122+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00155B 94               	dc.b nG1

00155C                  HDNR1S_Loop123:
00155C 0302801002800402 	dc.b $03, $02, nRst, $10, $02, nRst, $04, $02
001564 80070201028007   	dc.b nRst, $07, $02, $01, $02, nRst, $07
00156B                  	smpsLoop		$00, $02, HDNR1S_Loop123, Target
00156B F7               	dc.b	$F7
00156C 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop123<*)
00156E                  		rom_ptr_z80(HDNR1S_Loop123+Target)
                        	;dc.w z80_ptr(ptr,addr)
00156E 5C95             	dc.w  (((((HDNR1S_Loop123+Target))<<8)&$FF00)|((((HDNR1S_Loop123+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001570 0302801002800402 	dc.b $03, $02, nRst, $10, $02, nRst, $04, $02
001578 8007020102805580 	dc.b nRst, $07, $02, $01, $02, nRst, $55, nRst
001580 06               	dc.b $06
001581                  	smpsJump		HDNR1S_Jump8, Target
001581 F6               	dc.b	$F6
                        	if (HDNR1S_Jump8<*)
001582                  		rom_ptr_z80(HDNR1S_Jump8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001582 BE93             	dc.w  (((((HDNR1S_Jump8+Target))<<8)&$FF00)|((((HDNR1S_Jump8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
001584                  HDNR1S_PWM1:
001584                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
001584 E0C0             		dc.b $E0,panCenter
                        	endif
001586 8902             	dc.b	pCrashCymb, $02
001588                  	smpsAlterVol		$FA
001588 E6FA             	dc.b	$E6,$FA
00158A 01               	dc.b	$01
00158B                  	smpsAlterVol		$EF
00158B E6EF             	dc.b	$E6,$EF
00158D 828080           	dc.b	pESnare, nRst, nRst
001590                  	smpsAlterVol		$0D
001590 E60D             	dc.b	$E6,$0D
001592 98               	dc.b	pClosedHH

001593                  HDNR1S_PWM1_Loop1:
001593 80029801         	dc.b	nRst, $02, pClosedHH, $01
001597                  	smpsLoop		$00, $07, HDNR1S_PWM1_Loop1, Target
001597 F7               	dc.b	$F7
001598 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM1_Loop1<*)
00159A                  		rom_ptr_z80(HDNR1S_PWM1_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00159A 9395             	dc.w  (((((HDNR1S_PWM1_Loop1+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00159C 8002             	dc.b	nRst, $02
00159E                  	smpsAlterVol		$F0
00159E E6F0             	dc.b	$E6,$F0
0015A0 8B0C             	dc.b	pAKick, $0C
0015A2                  	smpsAlterVol		$10
0015A2 E610             	dc.b	$E6,$10
0015A4 9801800298018002 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $02
0015AC                  	smpsAlterVol		$F0
0015AC E6F0             	dc.b	$E6,$F0
0015AE 8B06             	dc.b	pAKick, $06
0015B0                  	smpsAlterVol		$10
0015B0 E610             	dc.b	$E6,$10

0015B2                  HDNR1S_PWM1_Loop2:
0015B2 98018002         	dc.b	pClosedHH, $01, nRst, $02
0015B6                  	smpsLoop		$00, $04, HDNR1S_PWM1_Loop2, Target
0015B6 F7               	dc.b	$F7
0015B7 0004             	dc.b	$00,$04
                        	if (HDNR1S_PWM1_Loop2<*)
0015B9                  		rom_ptr_z80(HDNR1S_PWM1_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
0015B9 B295             	dc.w  (((((HDNR1S_PWM1_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0015BB                  	smpsAlterVol		$F0
0015BB E6F0             	dc.b	$E6,$F0
0015BD 8B0C0C06060C0C0C 	dc.b	pAKick, $0C, $0C, $06, $06, $0C, $0C, $0C
0015C5 0C               	dc.b	$0C
0015C6                  	smpsAlterVol		$07
0015C6 E607             	dc.b	$E6,$07
0015C8 8912             	dc.b	pCrashCymb, $12
0015CA                  	smpsAlterVol		$F9
0015CA E6F9             	dc.b	$E6,$F9
0015CC 8B0606           	dc.b	pAKick, $06, $06
0015CF                  	smpsAlterVol		$1A
0015CF E61A             	dc.b	$E6,$1A
0015D1 8902             	dc.b	pCrashCymb, $02
0015D3                  	smpsAlterVol		$FA
0015D3 E6FA             	dc.b	$E6,$FA
0015D5 01               	dc.b	$01
0015D6                  	smpsAlterVol		$FA
0015D6 E6FA             	dc.b	$E6,$FA
0015D8 02               	dc.b	$02
0015D9                  	smpsAlterVol		$FC
0015D9 E6FC             	dc.b	$E6,$FC
0015DB 01               	dc.b	$01
0015DC                  	smpsAlterVol		$F6
0015DC E6F6             	dc.b	$E6,$F6
0015DE 8B0680           	dc.b	pAKick, $06, nRst
0015E1                  	smpsAlterVol		$07
0015E1 E607             	dc.b	$E6,$07
0015E3 830C             	dc.b	pSplashCymb, $0C
0015E5                  	smpsAlterVol		$F9
0015E5 E6F9             	dc.b	$E6,$F9

0015E7                  HDNR1S_PWM1_Loop3:
0015E7 8B06             	dc.b	pAKick, $06
0015E9                  	smpsAlterVol		$05
0015E9 E605             	dc.b	$E6,$05
0015EB 8C               	dc.b	pASnare
0015EC                  	smpsAlterVol		$FB
0015EC E6FB             	dc.b	$E6,$FB
0015EE 8B               	dc.b	pAKick
0015EF                  	smpsAlterVol		$06
0015EF E606             	dc.b	$E6,$06
0015F1 8C               	dc.b	pASnare
0015F2                  	smpsAlterVol		$FA
0015F2 E6FA             	dc.b	$E6,$FA
0015F4                  	smpsLoop		$00, $05, HDNR1S_PWM1_Loop3, Target
0015F4 F7               	dc.b	$F7
0015F5 0005             	dc.b	$00,$05
                        	if (HDNR1S_PWM1_Loop3<*)
0015F7                  		rom_ptr_z80(HDNR1S_PWM1_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
0015F7 E795             	dc.w  (((((HDNR1S_PWM1_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0015F9 8B               	dc.b	pAKick
0015FA                  	smpsAlterVol		$05
0015FA E605             	dc.b	$E6,$05
0015FC 8C               	dc.b	pASnare
0015FD                  	smpsAlterVol		$0B
0015FD E60B             	dc.b	$E6,$0B
0015FF 8201808004820180 	dc.b	pESnare, $01, nRst, nRst, $04, pESnare, $01, nRst
001607 0282018080       	dc.b	$02, pESnare, $01, nRst, nRst
00160C                  	smpsAlterVol		$F7
00160C E6F7             	dc.b	$E6,$F7
00160E 8B06             	dc.b	pAKick, $06
001610                  	smpsAlterVol		$09
001610 E609             	dc.b	$E6,$09
001612 8201808082808082 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pESnare
00161A 800882018002     	dc.b	nRst, $08, pESnare, $01, nRst, $02

001620                  HDNR1S_PWM1_Jump1:
001620 800C             	dc.b	nRst, $0C
001622                  	smpsAlterVol		$F0
001622 E6F0             	dc.b	$E6,$F0

001624                  HDNR1S_PWM1_Loop4:
001624 8B06             	dc.b	pAKick, $06
001626                  	smpsAlterVol		$06
001626 E606             	dc.b	$E6,$06
001628 82               	dc.b	pESnare
001629                  	smpsAlterVol		$FA
001629 E6FA             	dc.b	$E6,$FA
00162B                  	smpsLoop		$00, $0D, HDNR1S_PWM1_Loop4, Target
00162B F7               	dc.b	$F7
00162C 000D             	dc.b	$00,$0D
                        	if (HDNR1S_PWM1_Loop4<*)
00162E                  		rom_ptr_z80(HDNR1S_PWM1_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
00162E 2496             	dc.w  (((((HDNR1S_PWM1_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001630 8B               	dc.b	pAKick
001631                  	smpsAlterVol		$06
001631 E606             	dc.b	$E6,$06
001633 82               	dc.b	pESnare
001634                  	smpsAlterVol		$01
001634 E601             	dc.b	$E6,$01
001636 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
00163E 82018080         	dc.b	pESnare, $01, nRst, nRst
001642                  	smpsAlterVol		$FB
001642 E6FB             	dc.b	$E6,$FB
001644 8B06             	dc.b	pAKick, $06
001646                  	smpsAlterVol		$05
001646 E605             	dc.b	$E6,$05
001648 82018080828080   	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst
00164F                  	smpsAlterVol		$F9
00164F E6F9             	dc.b	$E6,$F9

001651                  HDNR1S_PWM1_Loop5:
001651 8B06             	dc.b	pAKick, $06
001653                  	smpsAlterVol		$06
001653 E606             	dc.b	$E6,$06
001655 82               	dc.b	pESnare
001656                  	smpsAlterVol		$FA
001656 E6FA             	dc.b	$E6,$FA
001658                  	smpsLoop		$00, $0D, HDNR1S_PWM1_Loop5, Target
001658 F7               	dc.b	$F7
001659 000D             	dc.b	$00,$0D
                        	if (HDNR1S_PWM1_Loop5<*)
00165B                  		rom_ptr_z80(HDNR1S_PWM1_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
00165B 5196             	dc.w  (((((HDNR1S_PWM1_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00165D 8B               	dc.b	pAKick
00165E                  	smpsAlterVol		$06
00165E E606             	dc.b	$E6,$06
001660 82               	dc.b	pESnare
001661                  	smpsAlterVol		$01
001661 E601             	dc.b	$E6,$01
001663 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
00166B 82018080         	dc.b	pESnare, $01, nRst, nRst
00166F                  	smpsAlterVol		$FB
00166F E6FB             	dc.b	$E6,$FB
001671 8B06             	dc.b	pAKick, $06
001673                  	smpsAlterVol		$05
001673 E605             	dc.b	$E6,$05
001675 8201808082808083 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pSplashCymb
00167D 0C               	dc.b	$0C
00167E                  	smpsAlterVol		$F9
00167E E6F9             	dc.b	$E6,$F9

001680                  HDNR1S_PWM1_Loop6:
001680 8B06             	dc.b	pAKick, $06
001682                  	smpsAlterVol		$06
001682 E606             	dc.b	$E6,$06
001684 82               	dc.b	pESnare
001685                  	smpsAlterVol		$FA
001685 E6FA             	dc.b	$E6,$FA
001687                  	smpsLoop		$00, $0A, HDNR1S_PWM1_Loop6, Target
001687 F7               	dc.b	$F7
001688 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM1_Loop6<*)
00168A                  		rom_ptr_z80(HDNR1S_PWM1_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00168A 8096             	dc.w  (((((HDNR1S_PWM1_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00168C 8B               	dc.b	pAKick
00168D                  	smpsAlterVol		$06
00168D E606             	dc.b	$E6,$06
00168F 82               	dc.b	pESnare
001690                  	smpsAlterVol		$01
001690 E601             	dc.b	$E6,$01
001692 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
00169A 82018080         	dc.b	pESnare, $01, nRst, nRst
00169E                  	smpsAlterVol		$FB
00169E E6FB             	dc.b	$E6,$FB
0016A0 8B06             	dc.b	pAKick, $06
0016A2                  	smpsAlterVol		$05
0016A2 E605             	dc.b	$E6,$05
0016A4 8201808082808082 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pESnare
0016AC 80088909         	dc.b	nRst, $08, pCrashCymb, $09
0016B0                  	smpsAlterVol		$13
0016B0 E613             	dc.b	$E6,$13
0016B2 02               	dc.b	$02
0016B3                  	smpsAlterVol		$FA
0016B3 E6FA             	dc.b	$E6,$FA
0016B5 01               	dc.b	$01
0016B6                  	smpsAlterVol		$FA
0016B6 E6FA             	dc.b	$E6,$FA
0016B8 02               	dc.b	$02
0016B9                  	smpsAlterVol		$FC
0016B9 E6FC             	dc.b	$E6,$FC
0016BB 01               	dc.b	$01
0016BC                  	smpsAlterVol		$FD
0016BC E6FD             	dc.b	$E6,$FD
0016BE 0C               	dc.b	$0C
0016BF                  	smpsAlterVol		$F9
0016BF E6F9             	dc.b	$E6,$F9

0016C1                  HDNR1S_PWM1_Loop7:
0016C1 8B06             	dc.b	pAKick, $06
0016C3                  	smpsAlterVol		$06
0016C3 E606             	dc.b	$E6,$06
0016C5 82               	dc.b	pESnare
0016C6                  	smpsAlterVol		$FA
0016C6 E6FA             	dc.b	$E6,$FA
0016C8                  	smpsLoop		$00, $1C, HDNR1S_PWM1_Loop7, Target
0016C8 F7               	dc.b	$F7
0016C9 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM1_Loop7<*)
0016CB                  		rom_ptr_z80(HDNR1S_PWM1_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0016CB C196             	dc.w  (((((HDNR1S_PWM1_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0016CD 8B               	dc.b	pAKick
0016CE                  	smpsAlterVol		$06
0016CE E606             	dc.b	$E6,$06
0016D0 82               	dc.b	pESnare
0016D1                  	smpsAlterVol		$01
0016D1 E601             	dc.b	$E6,$01
0016D3 01               	dc.b	$01

0016D4                  HDNR1S_PWM1_Loop8:
0016D4 808082           	dc.b	nRst, nRst, pESnare
0016D7                  	smpsLoop		$00, $07, HDNR1S_PWM1_Loop8, Target
0016D7 F7               	dc.b	$F7
0016D8 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM1_Loop8<*)
0016DA                  		rom_ptr_z80(HDNR1S_PWM1_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
0016DA D496             	dc.w  (((((HDNR1S_PWM1_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0016DC 8080             	dc.b	nRst, nRst
0016DE                  	smpsAlterVol		$F9
0016DE E6F9             	dc.b	$E6,$F9

0016E0                  HDNR1S_PWM1_Loop9:
0016E0 8B06             	dc.b	pAKick, $06
0016E2                  	smpsAlterVol		$06
0016E2 E606             	dc.b	$E6,$06
0016E4 82               	dc.b	pESnare
0016E5                  	smpsAlterVol		$FA
0016E5 E6FA             	dc.b	$E6,$FA
0016E7                  	smpsLoop		$00, $0D, HDNR1S_PWM1_Loop9, Target
0016E7 F7               	dc.b	$F7
0016E8 000D             	dc.b	$00,$0D
                        	if (HDNR1S_PWM1_Loop9<*)
0016EA                  		rom_ptr_z80(HDNR1S_PWM1_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
0016EA E096             	dc.w  (((((HDNR1S_PWM1_Loop9+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0016EC 8B               	dc.b	pAKick
0016ED                  	smpsAlterVol		$06
0016ED E606             	dc.b	$E6,$06
0016EF 82               	dc.b	pESnare
0016F0                  	smpsAlterVol		$01
0016F0 E601             	dc.b	$E6,$01
0016F2 01800882018008   	dc.b	$01, nRst, $08, pESnare, $01, nRst, $08
0016F9                  	smpsAlterVol		$13
0016F9 E613             	dc.b	$E6,$13
0016FB 8902             	dc.b	pCrashCymb, $02
0016FD                  	smpsAlterVol		$FA
0016FD E6FA             	dc.b	$E6,$FA
0016FF 01               	dc.b	$01
001700                  	smpsAlterVol		$FA
001700 E6FA             	dc.b	$E6,$FA
001702 02               	dc.b	$02
001703                  	smpsAlterVol		$FC
001703 E6FC             	dc.b	$E6,$FC
001705 01               	dc.b	$01
001706                  	smpsAlterVol		$FD
001706 E6FD             	dc.b	$E6,$FD
001708 0C               	dc.b	$0C
001709                  	smpsAlterVol		$F9
001709 E6F9             	dc.b	$E6,$F9

00170B                  HDNR1S_PWM1_Loop10:
00170B 8B06             	dc.b	pAKick, $06
00170D                  	smpsAlterVol		$06
00170D E606             	dc.b	$E6,$06
00170F 82               	dc.b	pESnare
001710                  	smpsAlterVol		$FA
001710 E6FA             	dc.b	$E6,$FA
001712                  	smpsLoop		$00, $2A, HDNR1S_PWM1_Loop10, Target
001712 F7               	dc.b	$F7
001713 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM1_Loop10<*)
001715                  		rom_ptr_z80(HDNR1S_PWM1_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
001715 0B97             	dc.w  (((((HDNR1S_PWM1_Loop10+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001717 8B               	dc.b	pAKick
001718                  	smpsAlterVol		$06
001718 E606             	dc.b	$E6,$06
00171A 82               	dc.b	pESnare
00171B                  	smpsAlterVol		$01
00171B E601             	dc.b	$E6,$01
00171D 01               	dc.b	$01

00171E                  HDNR1S_PWM1_Loop11:
00171E 808082           	dc.b	nRst, nRst, pESnare
001721                  	smpsLoop		$00, $07, HDNR1S_PWM1_Loop11, Target
001721 F7               	dc.b	$F7
001722 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM1_Loop11<*)
001724                  		rom_ptr_z80(HDNR1S_PWM1_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
001724 1E97             	dc.w  (((((HDNR1S_PWM1_Loop11+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001726 8080830C80838082 	dc.b	nRst, nRst, pSplashCymb, $0C, nRst, pSplashCymb, nRst, pESnare
00172E 01800882018002   	dc.b	$01, nRst, $08, pESnare, $01, nRst, $02
001735                  	smpsAlterVol		$09
001735 E609             	dc.b	$E6,$09
001737                  	smpsJump		HDNR1S_PWM1_Jump1, Target
001737 F6               	dc.b	$F6
                        	if (HDNR1S_PWM1_Jump1<*)
001738                  		rom_ptr_z80(HDNR1S_PWM1_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001738 2096             	dc.w  (((((HDNR1S_PWM1_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
00173A                  HDNR1S_PWM2:
00173A 8B0201           	dc.b	pAKick, $02, $01
00173D                  	smpsAlterVol		$0F
00173D E60F             	dc.b	$E6,$0F
00173F 8902             	dc.b	pCrashCymb, $02
001741                  	smpsAlterVol		$F1
001741 E6F1             	dc.b	$E6,$F1
001743 8B01             	dc.b	pAKick, $01
001745                  	smpsAlterVol		$03
001745 E603             	dc.b	$E6,$03
001747 82800B           	dc.b	pESnare, nRst, $0B
00174A                  	smpsAlterVol		$FD
00174A E6FD             	dc.b	$E6,$FD
00174C 8B0C             	dc.b	pAKick, $0C
00174E                  	smpsAlterVol		$11
00174E E611             	dc.b	$E6,$11

001750                  HDNR1S_PWM2_Loop1:
001750 98018002         	dc.b	pClosedHH, $01, nRst, $02
001754                  	smpsLoop		$00, $04, HDNR1S_PWM2_Loop1, Target
001754 F7               	dc.b	$F7
001755 0004             	dc.b	$00,$04
                        	if (HDNR1S_PWM2_Loop1<*)
001757                  		rom_ptr_z80(HDNR1S_PWM2_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001757 5097             	dc.w  (((((HDNR1S_PWM2_Loop1+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001759                  	smpsAlterVol		$EF
001759 E6EF             	dc.b	$E6,$EF
00175B 8B06             	dc.b	pAKick, $06
00175D                  	smpsAlterVol		$1B
00175D E61B             	dc.b	$E6,$1B
00175F 8902             	dc.b	pCrashCymb, $02
001761                  	smpsAlterVol		$F9
001761 E6F9             	dc.b	$E6,$F9
001763 01               	dc.b	$01
001764                  	smpsAlterVol		$FD
001764 E6FD             	dc.b	$E6,$FD
001766 9880             	dc.b	pClosedHH, nRst
001768                  	smpsAlterVol		$F9
001768 E6F9             	dc.b	$E6,$F9
00176A 89               	dc.b	pCrashCymb
00176B                  	smpsAlterVol		$FD
00176B E6FD             	dc.b	$E6,$FD
00176D 12               	dc.b	$12
00176E                  	smpsAlterVol		$0A
00176E E60A             	dc.b	$E6,$0A

001770                  HDNR1S_PWM2_Loop2:
001770 98018002         	dc.b	pClosedHH, $01, nRst, $02
001774                  	smpsLoop		$00, $08, HDNR1S_PWM2_Loop2, Target
001774 F7               	dc.b	$F7
001775 0008             	dc.b	$00,$08
                        	if (HDNR1S_PWM2_Loop2<*)
001777                  		rom_ptr_z80(HDNR1S_PWM2_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001777 7097             	dc.w  (((((HDNR1S_PWM2_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001779                  	smpsAlterVol		$0A
001779 E60A             	dc.b	$E6,$0A
00177B 89               	dc.b	pCrashCymb
00177C                  	smpsAlterVol		$F9
00177C E6F9             	dc.b	$E6,$F9
00177E 01               	dc.b	$01
00177F                  	smpsAlterVol		$FB
00177F E6FB             	dc.b	$E6,$FB
001781 02               	dc.b	$02
001782                  	smpsAlterVol		$FB
001782 E6FB             	dc.b	$E6,$FB
001784 01               	dc.b	$01
001785                  	smpsAlterVol		$FD
001785 E6FD             	dc.b	$E6,$FD
001787 12               	dc.b	$12
001788                  	smpsAlterVol		$0A
001788 E60A             	dc.b	$E6,$0A

00178A                  HDNR1S_PWM2_Loop3:
00178A 98018002         	dc.b	pClosedHH, $01, nRst, $02
00178E                  	smpsLoop		$00, $08, HDNR1S_PWM2_Loop3, Target
00178E F7               	dc.b	$F7
00178F 0008             	dc.b	$00,$08
                        	if (HDNR1S_PWM2_Loop3<*)
001791                  		rom_ptr_z80(HDNR1S_PWM2_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001791 8A97             	dc.w  (((((HDNR1S_PWM2_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001793                  	smpsAlterVol		$0A
001793 E60A             	dc.b	$E6,$0A
001795 89               	dc.b	pCrashCymb
001796                  	smpsAlterVol		$F9
001796 E6F9             	dc.b	$E6,$F9
001798 01               	dc.b	$01
001799                  	smpsAlterVol		$FD
001799 E6FD             	dc.b	$E6,$FD
00179B 9880             	dc.b	pClosedHH, nRst
00179D                  	smpsAlterVol		$F9
00179D E6F9             	dc.b	$E6,$F9
00179F 89               	dc.b	pCrashCymb
0017A0                  	smpsAlterVol		$F6
0017A0 E6F6             	dc.b	$E6,$F6
0017A2 8B060606         	dc.b	pAKick, $06, $06, $06
0017A6                  	smpsAlterVol		$11
0017A6 E611             	dc.b	$E6,$11

0017A8                  HDNR1S_PWM2_Loop4:
0017A8 98018002         	dc.b	pClosedHH, $01, nRst, $02
0017AC                  	smpsLoop		$00, $04, HDNR1S_PWM2_Loop4, Target
0017AC F7               	dc.b	$F7
0017AD 0004             	dc.b	$00,$04
                        	if (HDNR1S_PWM2_Loop4<*)
0017AF                  		rom_ptr_z80(HDNR1S_PWM2_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
0017AF A897             	dc.w  (((((HDNR1S_PWM2_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0017B1                  	smpsAlterVol		$EF
0017B1 E6EF             	dc.b	$E6,$EF
0017B3 8B06             	dc.b	pAKick, $06
0017B5                  	smpsAlterVol		$07
0017B5 E607             	dc.b	$E6,$07
0017B7 890C0C8003       	dc.b	pCrashCymb, $0C, $0C, nRst, $03

0017BC                  HDNR1S_PWM2_Loop5:
0017BC 98018002         	dc.b	pClosedHH, $01, nRst, $02
0017C0                  	smpsAlterVol		$04
0017C0 E604             	dc.b	$E6,$04
0017C2 8E068003         	dc.b	pFingSnap, $06, nRst, $03
0017C6                  	smpsAlterVol		$FC
0017C6 E6FC             	dc.b	$E6,$FC
0017C8 98018002         	dc.b	pClosedHH, $01, nRst, $02
0017CC                  	smpsAlterVol		$06
0017CC E606             	dc.b	$E6,$06
0017CE 8E068003         	dc.b	pFingSnap, $06, nRst, $03
0017D2                  	smpsAlterVol		$FA
0017D2 E6FA             	dc.b	$E6,$FA
0017D4                  	smpsLoop		$00, $05, HDNR1S_PWM2_Loop5, Target
0017D4 F7               	dc.b	$F7
0017D5 0005             	dc.b	$00,$05
                        	if (HDNR1S_PWM2_Loop5<*)
0017D7                  		rom_ptr_z80(HDNR1S_PWM2_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
0017D7 BC97             	dc.w  (((((HDNR1S_PWM2_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0017D9 98018002         	dc.b	pClosedHH, $01, nRst, $02
0017DD                  	smpsAlterVol		$04
0017DD E604             	dc.b	$E6,$04
0017DF 8E06             	dc.b	pFingSnap, $06
0017E1                  	smpsAlterVol		$FC
0017E1 E6FC             	dc.b	$E6,$FC
0017E3 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
0017E7                  	smpsAlterVol		$09
0017E7 E609             	dc.b	$E6,$09
0017E9 01828002         	dc.b	$01, pESnare, nRst, $02
0017ED                  	smpsAlterVol		$F7
0017ED E6F7             	dc.b	$E6,$F7
0017EF 8B060380028B0380 	dc.b	pAKick, $06, $03, nRst, $02, pAKick, $03, nRst
0017F7 018B03           	dc.b	$01, pAKick, $03

0017FA                  HDNR1S_PWM2_Jump1:
0017FA 800C838003       	dc.b	nRst, $0C, pSplashCymb, nRst, $03

0017FF                  HDNR1S_PWM2_Loop6:
0017FF 98018002         	dc.b	pClosedHH, $01, nRst, $02
001803                  	smpsAlterVol		$09
001803 E609             	dc.b	$E6,$09
001805 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001809                  	smpsAlterVol		$F7
001809 E6F7             	dc.b	$E6,$F7
00180B                  	smpsLoop		$00, $0C, HDNR1S_PWM2_Loop6, Target
00180B F7               	dc.b	$F7
00180C 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM2_Loop6<*)
00180E                  		rom_ptr_z80(HDNR1S_PWM2_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00180E FF97             	dc.w  (((((HDNR1S_PWM2_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001810 98018002         	dc.b	pClosedHH, $01, nRst, $02
001814                  	smpsAlterVol		$09
001814 E609             	dc.b	$E6,$09
001816 8E06             	dc.b	pFingSnap, $06
001818                  	smpsAlterVol		$F3
001818 E6F3             	dc.b	$E6,$F3
00181A 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
00181E                  	smpsAlterVol		$04
00181E E604             	dc.b	$E6,$04
001820 01828002         	dc.b	$01, pESnare, nRst, $02
001824                  	smpsAlterVol		$FC
001824 E6FC             	dc.b	$E6,$FC
001826 8B06             	dc.b	pAKick, $06
001828                  	smpsAlterVol		$04
001828 E604             	dc.b	$E6,$04
00182A 830C8003         	dc.b	pSplashCymb, $0C, nRst, $03

00182E                  HDNR1S_PWM2_Loop7:
00182E 98018002         	dc.b	pClosedHH, $01, nRst, $02
001832                  	smpsAlterVol		$09
001832 E609             	dc.b	$E6,$09
001834 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001838                  	smpsAlterVol		$F7
001838 E6F7             	dc.b	$E6,$F7
00183A                  	smpsLoop		$00, $0C, HDNR1S_PWM2_Loop7, Target
00183A F7               	dc.b	$F7
00183B 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM2_Loop7<*)
00183D                  		rom_ptr_z80(HDNR1S_PWM2_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
00183D 2E98             	dc.w  (((((HDNR1S_PWM2_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00183F 98018002         	dc.b	pClosedHH, $01, nRst, $02
001843                  	smpsAlterVol		$09
001843 E609             	dc.b	$E6,$09
001845 8E06             	dc.b	pFingSnap, $06
001847                  	smpsAlterVol		$F3
001847 E6F3             	dc.b	$E6,$F3
001849 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
00184D                  	smpsAlterVol		$04
00184D E604             	dc.b	$E6,$04
00184F 01828002         	dc.b	$01, pESnare, nRst, $02
001853                  	smpsAlterVol		$FC
001853 E6FC             	dc.b	$E6,$FC
001855 8B06             	dc.b	pAKick, $06
001857                  	smpsAlterVol		$04
001857 E604             	dc.b	$E6,$04
001859 890C8003         	dc.b	pCrashCymb, $0C, nRst, $03

00185D                  HDNR1S_PWM2_Loop8:
00185D 98018002         	dc.b	pClosedHH, $01, nRst, $02
001861                  	smpsAlterVol		$09
001861 E609             	dc.b	$E6,$09
001863 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001867                  	smpsAlterVol		$F7
001867 E6F7             	dc.b	$E6,$F7
001869                  	smpsLoop		$00, $0A, HDNR1S_PWM2_Loop8, Target
001869 F7               	dc.b	$F7
00186A 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM2_Loop8<*)
00186C                  		rom_ptr_z80(HDNR1S_PWM2_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
00186C 5D98             	dc.w  (((((HDNR1S_PWM2_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00186E 98018002         	dc.b	pClosedHH, $01, nRst, $02
001872                  	smpsAlterVol		$09
001872 E609             	dc.b	$E6,$09
001874 8E06             	dc.b	pFingSnap, $06
001876                  	smpsAlterVol		$F3
001876 E6F3             	dc.b	$E6,$F3
001878 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
00187C                  	smpsAlterVol		$04
00187C E604             	dc.b	$E6,$04
00187E 01828002         	dc.b	$01, pESnare, nRst, $02
001882                  	smpsAlterVol		$FC
001882 E6FC             	dc.b	$E6,$FC
001884 8B06             	dc.b	pAKick, $06
001886                  	smpsAlterVol		$FD
001886 E6FD             	dc.b	$E6,$FD
001888 038002           	dc.b	$03, nRst, $02
00188B                  	smpsAlterVol		$03
00188B E603             	dc.b	$E6,$03
00188D 8B018003         	dc.b	pAKick, $01, nRst, $03
001891                  	smpsAlterVol		$04
001891 E604             	dc.b	$E6,$04
001893 82018008         	dc.b	pESnare, $01, nRst, $08
001897                  	smpsAlterVol		$F9
001897 E6F9             	dc.b	$E6,$F9
001899 8B0606           	dc.b	pAKick, $06, $06
00189C                  	smpsAlterVol		$06
00189C E606             	dc.b	$E6,$06
00189E 828003           	dc.b	pESnare, nRst, $03
0018A1                  	smpsAlterVol		$01
0018A1 E601             	dc.b	$E6,$01

0018A3                  HDNR1S_PWM2_Loop9:
0018A3 98018002         	dc.b	pClosedHH, $01, nRst, $02
0018A7                  	smpsAlterVol		$09
0018A7 E609             	dc.b	$E6,$09
0018A9 8E068003         	dc.b	pFingSnap, $06, nRst, $03
0018AD                  	smpsAlterVol		$F7
0018AD E6F7             	dc.b	$E6,$F7
0018AF                  	smpsLoop		$00, $1C, HDNR1S_PWM2_Loop9, Target
0018AF F7               	dc.b	$F7
0018B0 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM2_Loop9<*)
0018B2                  		rom_ptr_z80(HDNR1S_PWM2_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
0018B2 A398             	dc.w  (((((HDNR1S_PWM2_Loop9+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0018B4 98018002         	dc.b	pClosedHH, $01, nRst, $02
0018B8                  	smpsAlterVol		$09
0018B8 E609             	dc.b	$E6,$09
0018BA 8E06             	dc.b	pFingSnap, $06
0018BC                  	smpsAlterVol		$F7
0018BC E6F7             	dc.b	$E6,$F7
0018BE 8B8B8B8B830C8003 	dc.b	pAKick, pAKick, pAKick, pAKick, pSplashCymb, $0C, nRst, $03

0018C6                  HDNR1S_PWM2_Loop10:
0018C6 98018002         	dc.b	pClosedHH, $01, nRst, $02
0018CA                  	smpsAlterVol		$09
0018CA E609             	dc.b	$E6,$09
0018CC 8E068003         	dc.b	pFingSnap, $06, nRst, $03
0018D0                  	smpsAlterVol		$F7
0018D0 E6F7             	dc.b	$E6,$F7
0018D2                  	smpsLoop		$00, $0C, HDNR1S_PWM2_Loop10, Target
0018D2 F7               	dc.b	$F7
0018D3 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM2_Loop10<*)
0018D5                  		rom_ptr_z80(HDNR1S_PWM2_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
0018D5 C698             	dc.w  (((((HDNR1S_PWM2_Loop10+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0018D7 98018002         	dc.b	pClosedHH, $01, nRst, $02
0018DB                  	smpsAlterVol		$09
0018DB E609             	dc.b	$E6,$09
0018DD 8E06             	dc.b	pFingSnap, $06
0018DF                  	smpsAlterVol		$F3
0018DF E6F3             	dc.b	$E6,$F3
0018E1 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
0018E9 8B038006         	dc.b	pAKick, $03, nRst, $06
0018ED                  	smpsAlterVol		$FD
0018ED E6FD             	dc.b	$E6,$FD
0018EF 8B8B             	dc.b	pAKick, pAKick
0018F1                  	smpsAlterVol		$06
0018F1 E606             	dc.b	$E6,$06
0018F3 828003           	dc.b	pESnare, nRst, $03
0018F6                  	smpsAlterVol		$01
0018F6 E601             	dc.b	$E6,$01

0018F8                  HDNR1S_PWM2_Loop11:
0018F8 98018002         	dc.b	pClosedHH, $01, nRst, $02
0018FC                  	smpsAlterVol		$09
0018FC E609             	dc.b	$E6,$09
0018FE 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001902                  	smpsAlterVol		$F7
001902 E6F7             	dc.b	$E6,$F7
001904                  	smpsLoop		$00, $2A, HDNR1S_PWM2_Loop11, Target
001904 F7               	dc.b	$F7
001905 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM2_Loop11<*)
001907                  		rom_ptr_z80(HDNR1S_PWM2_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
001907 F898             	dc.w  (((((HDNR1S_PWM2_Loop11+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001909 98018002         	dc.b	pClosedHH, $01, nRst, $02
00190D                  	smpsAlterVol		$09
00190D E609             	dc.b	$E6,$09
00190F 8E06             	dc.b	pFingSnap, $06
001911                  	smpsAlterVol		$F7
001911 E6F7             	dc.b	$E6,$F7
001913 8B8B8B8B890C8089 	dc.b	pAKick, pAKick, pAKick, pAKick, pCrashCymb, $0C, nRst, pCrashCymb
00191B 80               	dc.b	nRst
00191C                  	smpsAlterVol		$FC
00191C E6FC             	dc.b	$E6,$FC
00191E 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
001926 8B03             	dc.b	pAKick, $03
001928                  	smpsAlterVol		$04
001928 E604             	dc.b	$E6,$04
00192A                  	smpsJump		HDNR1S_PWM2_Jump1, Target
00192A F6               	dc.b	$F6
                        	if (HDNR1S_PWM2_Jump1<*)
00192B                  		rom_ptr_z80(HDNR1S_PWM2_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00192B FA97             	dc.w  (((((HDNR1S_PWM2_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
00192D                  HDNR1S_PWM3:
00192D 80038B02         	dc.b	nRst, $03, pAKick, $02
001931                  	smpsAlterVol		$0A
001931 E60A             	dc.b	$E6,$0A
001933 8901             	dc.b	pCrashCymb, $01
001935                  	smpsAlterVol		$F6
001935 E6F6             	dc.b	$E6,$F6
001937 8B0C801E         	dc.b	pAKick, $0C, nRst, $1E
00193B                  	smpsAlterVol		$11
00193B E611             	dc.b	$E6,$11
00193D 98018002         	dc.b	pClosedHH, $01, nRst, $02
001941                  	smpsAlterVol		$FE
001941 E6FE             	dc.b	$E6,$FE
001943 898001           	dc.b	pCrashCymb, nRst, $01
001946                  	smpsAlterVol		$F1
001946 E6F1             	dc.b	$E6,$F1
001948 8B0C             	dc.b	pAKick, $0C
00194A                  	smpsAlterVol		$11
00194A E611             	dc.b	$E6,$11
00194C 980180029801801A 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $1A

001954                  HDNR1S_PWM3_Loop1:
001954 98018002         	dc.b	pClosedHH, $01, nRst, $02
001958                  	smpsLoop		$00, $07, HDNR1S_PWM3_Loop1, Target
001958 F7               	dc.b	$F7
001959 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM3_Loop1<*)
00195B                  		rom_ptr_z80(HDNR1S_PWM3_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00195B 5499             	dc.w  (((((HDNR1S_PWM3_Loop1+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00195D 9801801A98018002 	dc.b	pClosedHH, $01, nRst, $1A, pClosedHH, $01, nRst, $02
001965                  	smpsAlterVol		$FE
001965 E6FE             	dc.b	$E6,$FE
001967 898001           	dc.b	pCrashCymb, nRst, $01
00196A                  	smpsAlterVol		$02
00196A E602             	dc.b	$E6,$02
00196C 98               	dc.b	pClosedHH

00196D                  HDNR1S_PWM3_Loop2:
00196D 80029801         	dc.b	nRst, $02, pClosedHH, $01
001971                  	smpsLoop		$00, $05, HDNR1S_PWM3_Loop2, Target
001971 F7               	dc.b	$F7
001972 0005             	dc.b	$00,$05
                        	if (HDNR1S_PWM3_Loop2<*)
001974                  		rom_ptr_z80(HDNR1S_PWM3_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001974 6D99             	dc.w  (((((HDNR1S_PWM3_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001976 800E980180029801 	dc.b	nRst, $0E, pClosedHH, $01, nRst, $02, pClosedHH, $01
00197E 800E             	dc.b	nRst, $0E
001980                  	smpsAlterVol		$EF
001980 E6EF             	dc.b	$E6,$EF
001982 8B06             	dc.b	pAKick, $06
001984                  	smpsAlterVol		$06
001984 E606             	dc.b	$E6,$06
001986 8C80             	dc.b	pASnare, nRst
001988                  	smpsAlterVol		$FA
001988 E6FA             	dc.b	$E6,$FA

00198A                  HDNR1S_PWM3_Loop3:
00198A 8B80             	dc.b	pAKick, nRst
00198C                  	smpsLoop		$00, $0A, HDNR1S_PWM3_Loop3, Target
00198C F7               	dc.b	$F7
00198D 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM3_Loop3<*)
00198F                  		rom_ptr_z80(HDNR1S_PWM3_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00198F 8A99             	dc.w  (((((HDNR1S_PWM3_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001991 8B               	dc.b	pAKick
001992                  	smpsAlterVol		$07
001992 E607             	dc.b	$E6,$07

001994                  HDNR1S_PWM3_Loop4:
001994 8C018080048C0180 	dc.b	pASnare, $01, nRst, nRst, $04, pASnare, $01, nRst
00199C 02               	dc.b	$02
00199D                  	smpsLoop		$00, $02, HDNR1S_PWM3_Loop4, Target
00199D F7               	dc.b	$F7
00199E 0002             	dc.b	$00,$02
                        	if (HDNR1S_PWM3_Loop4<*)
0019A0                  		rom_ptr_z80(HDNR1S_PWM3_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019A0 9499             	dc.w  (((((HDNR1S_PWM3_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019A2 8C0180808C80808C 	dc.b	pASnare, $01, nRst, nRst, pASnare, nRst, nRst, pASnare
0019AA 80088C018002     	dc.b	nRst, $08, pASnare, $01, nRst, $02

0019B0                  HDNR1S_PWM3_Jump1:
0019B0 800C898006       	dc.b	nRst, $0C, pCrashCymb, nRst, $06
0019B5                  	smpsAlterVol		$F9
0019B5 E6F9             	dc.b	$E6,$F9

0019B7                  HDNR1S_PWM3_Loop5:
0019B7 8B80             	dc.b	pAKick, nRst
0019B9                  	smpsLoop		$00, $0C, HDNR1S_PWM3_Loop5, Target
0019B9 F7               	dc.b	$F7
0019BA 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM3_Loop5<*)
0019BC                  		rom_ptr_z80(HDNR1S_PWM3_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019BC B799             	dc.w  (((((HDNR1S_PWM3_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019BE 8B8018           	dc.b	pAKick, nRst, $18
0019C1                  	smpsAlterVol		$07
0019C1 E607             	dc.b	$E6,$07
0019C3 890C8006         	dc.b	pCrashCymb, $0C, nRst, $06
0019C7                  	smpsAlterVol		$F9
0019C7 E6F9             	dc.b	$E6,$F9

0019C9                  HDNR1S_PWM3_Loop6:
0019C9 8B80             	dc.b	pAKick, nRst
0019CB                  	smpsLoop		$00, $0C, HDNR1S_PWM3_Loop6, Target
0019CB F7               	dc.b	$F7
0019CC 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM3_Loop6<*)
0019CE                  		rom_ptr_z80(HDNR1S_PWM3_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019CE C999             	dc.w  (((((HDNR1S_PWM3_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019D0 8B80188B06       	dc.b	pAKick, nRst, $18, pAKick, $06
0019D5                  	smpsAlterVol		$06
0019D5 E606             	dc.b	$E6,$06
0019D7 8280             	dc.b	pESnare, nRst
0019D9                  	smpsAlterVol		$FA
0019D9 E6FA             	dc.b	$E6,$FA

0019DB                  HDNR1S_PWM3_Loop7:
0019DB 8B80             	dc.b	pAKick, nRst
0019DD                  	smpsLoop		$00, $0A, HDNR1S_PWM3_Loop7, Target
0019DD F7               	dc.b	$F7
0019DE 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM3_Loop7<*)
0019E0                  		rom_ptr_z80(HDNR1S_PWM3_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019E0 DB99             	dc.w  (((((HDNR1S_PWM3_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019E2 8B8018           	dc.b	pAKick, nRst, $18
0019E5                  	smpsAlterVol		$07
0019E5 E607             	dc.b	$E6,$07
0019E7 8909             	dc.b	pCrashCymb, $09
0019E9                  	smpsAlterVol		$FC
0019E9 E6FC             	dc.b	$E6,$FC
0019EB 8B038006         	dc.b	pAKick, $03, nRst, $06
0019EF                  	smpsAlterVol		$0E
0019EF E60E             	dc.b	$E6,$0E
0019F1 9801800298018005 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $05
0019F9                  	smpsAlterVol		$F6
0019F9 E6F6             	dc.b	$E6,$F6
0019FB 98018002         	dc.b	pClosedHH, $01, nRst, $02
0019FF                  	smpsAlterVol		$09
0019FF E609             	dc.b	$E6,$09
001A01 8E0680           	dc.b	pFingSnap, $06, nRst
001A04                  	smpsAlterVol		$F0
001A04 E6F0             	dc.b	$E6,$F0

001A06                  HDNR1S_PWM3_Loop8:
001A06 8B80             	dc.b	pAKick, nRst
001A08                  	smpsLoop		$00, $1C, HDNR1S_PWM3_Loop8, Target
001A08 F7               	dc.b	$F7
001A09 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM3_Loop8<*)
001A0B                  		rom_ptr_z80(HDNR1S_PWM3_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A0B 069A             	dc.w  (((((HDNR1S_PWM3_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A0D 8B8018           	dc.b	pAKick, nRst, $18
001A10                  	smpsAlterVol		$07
001A10 E607             	dc.b	$E6,$07
001A12 890C8006         	dc.b	pCrashCymb, $0C, nRst, $06
001A16                  	smpsAlterVol		$F9
001A16 E6F9             	dc.b	$E6,$F9

001A18                  HDNR1S_PWM3_Loop9:
001A18 8B80             	dc.b	pAKick, nRst
001A1A                  	smpsLoop		$00, $0C, HDNR1S_PWM3_Loop9, Target
001A1A F7               	dc.b	$F7
001A1B 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM3_Loop9<*)
001A1D                  		rom_ptr_z80(HDNR1S_PWM3_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A1D 189A             	dc.w  (((((HDNR1S_PWM3_Loop9+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A1F 8B8012           	dc.b	pAKick, nRst, $12
001A22                  	smpsAlterVol		$11
001A22 E611             	dc.b	$E6,$11
001A24 9801800298018005 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $05
001A2C                  	smpsAlterVol		$F6
001A2C E6F6             	dc.b	$E6,$F6
001A2E 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A32                  	smpsAlterVol		$09
001A32 E609             	dc.b	$E6,$09
001A34 8E0680           	dc.b	pFingSnap, $06, nRst
001A37                  	smpsAlterVol		$F0
001A37 E6F0             	dc.b	$E6,$F0

001A39                  HDNR1S_PWM3_Loop10:
001A39 8B80             	dc.b	pAKick, nRst
001A3B                  	smpsLoop		$00, $2A, HDNR1S_PWM3_Loop10, Target
001A3B F7               	dc.b	$F7
001A3C 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM3_Loop10<*)
001A3E                  		rom_ptr_z80(HDNR1S_PWM3_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A3E 399A             	dc.w  (((((HDNR1S_PWM3_Loop10+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A40 8B8018           	dc.b	pAKick, nRst, $18
001A43                  	smpsAlterVol		$07
001A43 E607             	dc.b	$E6,$07

001A45                  HDNR1S_PWM3_Loop11:
001A45 820180088201800E 	dc.b	pESnare, $01, nRst, $08, pESnare, $01, nRst, $0E
001A4D                  	smpsLoop		$00, $02, HDNR1S_PWM3_Loop11, Target
001A4D F7               	dc.b	$F7
001A4E 0002             	dc.b	$00,$02
                        	if (HDNR1S_PWM3_Loop11<*)
001A50                  		rom_ptr_z80(HDNR1S_PWM3_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A50 459A             	dc.w  (((((HDNR1S_PWM3_Loop11+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A52 830C             	dc.b	pSplashCymb, $0C
001A54                  	smpsJump		HDNR1S_PWM3_Jump1, Target
001A54 F6               	dc.b	$F6
                        	if (HDNR1S_PWM3_Jump1<*)
001A55                  		rom_ptr_z80(HDNR1S_PWM3_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A55 B099             	dc.w  (((((HDNR1S_PWM3_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001A57                  HDNR1S_PWM4:
001A57                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
001A57 E0C0             		dc.b $E0,panCenter
                        	endif
                        ;HDNR1S_PWM4_Loop1:
                        	;sModOff
                        	;smpsLoop		$00, $0D, HDNR1S_PWM4_Loop1, Target
001A59 8006             	dc.b nRst, $06

001A5B                  HDNR1S_PWM4_Loop2:
001A5B 9F098003A0098003 	dc.b pOrchHitHi, $09, nRst, $03, pOrchHitMed, $09, nRst, $03
001A63 A1098003A2098003 	dc.b pOrchHitLo, $09, nRst, $03, pOrchHitLower, $09, nRst, $03
001A6B                  	smpsLoop		$00, $03, HDNR1S_PWM4_Loop2, Target
001A6B F7               	dc.b	$F7
001A6C 0003             	dc.b	$00,$03
                        	if (HDNR1S_PWM4_Loop2<*)
001A6E                  		rom_ptr_z80(HDNR1S_PWM4_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A6E 5B9A             	dc.w  (((((HDNR1S_PWM4_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A70 A106A0A2A007801A 	dc.b pOrchHitLo, $06, pOrchHitMed, pOrchHitLower, pOrchHitMed, $07, nRst, $1A
001A78                  	smpsAlterVol		$02
001A78 E602             	dc.b	$E6,$02
001A7A 98018002         	dc.b pClosedHH, $01, nRst, $02
001A7E                  	smpsAlterVol		$06
001A7E E606             	dc.b	$E6,$06
001A80 8C068009         	dc.b pASnare, $06, nRst, $09
001A84                  	smpsAlterVol		$FA
001A84 E6FA             	dc.b	$E6,$FA

001A86                  HDNR1S_PWM4_Loop3:
001A86 9801800B         	dc.b pClosedHH, $01, nRst, $0B
001A8A                  	smpsLoop		$00, $0A, HDNR1S_PWM4_Loop3, Target
001A8A F7               	dc.b	$F7
001A8B 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM4_Loop3<*)
001A8D                  		rom_ptr_z80(HDNR1S_PWM4_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A8D 869A             	dc.w  (((((HDNR1S_PWM4_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A8F 9801801A830903   	dc.b pClosedHH, $01, nRst, $1A, pSplashCymb, $09, $03

001A96                  HDNR1S_PWM4_Jump1:
001A96 800F             	dc.b nRst, $0F

001A98                  HDNR1S_PWM4_Loop5:
001A98 98018002         	dc.b pClosedHH, $01, nRst, $02
001A9C                  	smpsAlterVol		$08
001A9C E608             	dc.b	$E6,$08
001A9E 8C068009         	dc.b pASnare, $06, nRst, $09
001AA2                  	smpsAlterVol		$F8
001AA2 E6F8             	dc.b	$E6,$F8

001AA4                  HDNR1S_PWM4_Loop4:
001AA4 9801800B         	dc.b pClosedHH, $01, nRst, $0B
001AA8                  	smpsLoop		$00, $0C, HDNR1S_PWM4_Loop4, Target
001AA8 F7               	dc.b	$F7
001AA9 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM4_Loop4<*)
001AAB                  		rom_ptr_z80(HDNR1S_PWM4_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
001AAB A49A             	dc.w  (((((HDNR1S_PWM4_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001AAD 9801801D         	dc.b pClosedHH, $01, nRst, $1D
001AB1                  	smpsLoop		$01, $02, HDNR1S_PWM4_Loop5, Target
001AB1 F7               	dc.b	$F7
001AB2 0102             	dc.b	$01,$02
                        	if (HDNR1S_PWM4_Loop5<*)
001AB4                  		rom_ptr_z80(HDNR1S_PWM4_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001AB4 989A             	dc.w  (((((HDNR1S_PWM4_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001AB6 98018002         	dc.b pClosedHH, $01, nRst, $02
001ABA                  	smpsAlterVol		$08
001ABA E608             	dc.b	$E6,$08
001ABC 8C068009         	dc.b pASnare, $06, nRst, $09
001AC0                  	smpsAlterVol		$F8
001AC0 E6F8             	dc.b	$E6,$F8

001AC2                  HDNR1S_PWM4_Loop6:
001AC2 9801800B         	dc.b pClosedHH, $01, nRst, $0B
001AC6                  	smpsLoop		$00, $0A, HDNR1S_PWM4_Loop6, Target
001AC6 F7               	dc.b	$F7
001AC7 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM4_Loop6<*)
001AC9                  		rom_ptr_z80(HDNR1S_PWM4_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001AC9 C29A             	dc.w  (((((HDNR1S_PWM4_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001ACB 98018038         	dc.b pClosedHH, $01, nRst, $38
001ACF                  	smpsAlterVol		$F9
001ACF E6F9             	dc.b	$E6,$F9
001AD1 8B068009         	dc.b pAKick, $06, nRst, $09
001AD5                  	smpsAlterVol		$07
001AD5 E607             	dc.b	$E6,$07

001AD7                  HDNR1S_PWM4_Loop7:
001AD7 9801800B         	dc.b pClosedHH, $01, nRst, $0B
001ADB                  	smpsLoop		$00, $1C, HDNR1S_PWM4_Loop7, Target
001ADB F7               	dc.b	$F7
001ADC 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM4_Loop7<*)
001ADE                  		rom_ptr_z80(HDNR1S_PWM4_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001ADE D79A             	dc.w  (((((HDNR1S_PWM4_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001AE0 9801801D98018002 	dc.b pClosedHH, $01, nRst, $1D, pClosedHH, $01, nRst, $02
001AE8                  	smpsAlterVol		$08
001AE8 E608             	dc.b	$E6,$08
001AEA 8C068009         	dc.b pASnare, $06, nRst, $09
001AEE                  	smpsAlterVol		$F8
001AEE E6F8             	dc.b	$E6,$F8

001AF0                  HDNR1S_PWM4_Loop8:
001AF0 9801800B         	dc.b pClosedHH, $01, nRst, $0B
001AF4                  	smpsLoop		$00, $0C, HDNR1S_PWM4_Loop8, Target
001AF4 F7               	dc.b	$F7
001AF5 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM4_Loop8<*)
001AF7                  		rom_ptr_z80(HDNR1S_PWM4_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001AF7 F09A             	dc.w  (((((HDNR1S_PWM4_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001AF9 98018020         	dc.b pClosedHH, $01, nRst, $20
001AFD                  	smpsAlterVol		$F9
001AFD E6F9             	dc.b	$E6,$F9
001AFF 8B068009         	dc.b pAKick, $06, nRst, $09
001B03                  	smpsAlterVol		$07
001B03 E607             	dc.b	$E6,$07

001B05                  HDNR1S_PWM4_Loop9:
001B05 9801800B         	dc.b pClosedHH, $01, nRst, $0B
001B09                  	smpsLoop		$00, $2A, HDNR1S_PWM4_Loop9, Target
001B09 F7               	dc.b	$F7
001B0A 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM4_Loop9<*)
001B0C                  		rom_ptr_z80(HDNR1S_PWM4_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B0C 059B             	dc.w  (((((HDNR1S_PWM4_Loop9+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001B0E 9801801AA1050409 	dc.b pClosedHH, $01, nRst, $1A, pOrchHitLo, $05, $04, $09
001B16 8006A00504098006 	dc.b nRst, $06, pOrchHitMed, $05, $04, $09, nRst, $06
001B1E 9F050403         	dc.b pOrchHitHi, $05, $04, $03
001B22                  	smpsAlterNote	$00
001B22 E100             	dc.b	$E1,$00
001B24                  	smpsJump		HDNR1S_PWM4_Jump1, Target
001B24 F6               	dc.b	$F6
                        	if (HDNR1S_PWM4_Jump1<*)
001B25                  		rom_ptr_z80(HDNR1S_PWM4_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B25 969A             	dc.w  (((((HDNR1S_PWM4_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001B27                  HDNR1S_Patches:
                        	; Patch $00
                        	; $3F
                        	; $00, $32, $00, $76,	$1F, $1F, $1F, $1F
                        	; $0E, $0E, $0E, $10,	$03, $03, $03, $03
                        	; $08, $58, $38, $38,	$99, $8B, $8A, $8A
001B27 3F               	dc.b	$3F
001B28 003200761F1F1F1F 	dc.b	$00, $32, $00, $76,	$1F, $1F, $1F, $1F
001B30 0E0E0E1003030303 	dc.b	$0E, $0E, $0E, $10,	$03, $03, $03, $03
                        	;!@ dc.b	$08, $58, $38, $38,	$99, $8B, $8A, $8A
001B38 0858383895878686 	dc.b	$08, $58, $38, $38,	$99-$04, $8B-$04, $8A-$04, $8A-$04
                        	;smpsVcAlgorithm	$07
                        	;smpsVcFeedback	$07
                        	;smpsVcDetune	$00, $00, $03, $07
                        	;smpsVcCoarseFreq	$00, $00, $02, $06
                        	;smpsVcRateScale	$00, $00, $00, $00
                        	;smpsVcAttackRate	$1F, $1F, $1F, $1F
                        	;smpsVcAmpMod	$00, $00, $00, $00
                        	;smpsVcDecayRate1	$0E, $0E, $0E, $10
                        	;smpsVcDecayRate2	$00, $03, $05, $03
                        	;smpsVcDecayLevel	$03, $03, $03, $03
                        	;smpsVcReleaseRate	$08, $08, $08, $08
                        	;smpsVcTotalLevel	$19, $0A, $0B, $0A

                        	; Patch $01
                        	; $39
                        	; $06, $01, $01, $01,	$9F, $1F, $1F, $5F
                        	; $0A, $09, $09, $04,	$08, $07, $07, $07
                        	; $24, $24, $24, $28,	$22, $24, $26, $8A
001B40 39               	dc.b	$39
001B41 060101019F1F1F5F 	dc.b	$06, $01, $01, $01,	$9F, $1F, $1F, $5F
001B49 0A09090408070707 	dc.b	$0A, $09, $09, $04,	$08, $07, $07, $07
001B51 2424242822242686 	dc.b	$24, $24, $24, $28,	$22, $24, $26, $8A-$04
                        	;!@ dc.b	$24, $24, $24, $28,	$22, $24, $26, $8A
                        	;smpsVcAlgorithm	$01
                        	;smpsVcFeedback	$07
                        	;smpsVcDetune	$00, $00, $00, $00
                        	;smpsVcCoarseFreq	$06, $01, $01, $01
                        	;smpsVcRateScale	$02, $00, $00, $01
                        	;smpsVcAttackRate	$1F, $1F, $1F, $1F
                        	;smpsVcAmpMod	$00, $00, $00, $00
                        	;smpsVcDecayRate1	$0A, $09, $09, $04
                        	;smpsVcDecayRate2	$02, $02, $02, $02
                        	;smpsVcDecayLevel	$08, $07, $07, $07
                        	;smpsVcReleaseRate	$04, $04, $04, $08
                        	;smpsVcTotalLevel	$22, $26, $24, $0A

                        	; Patch $02
                        	; $3A
                        	; $64, $60, $60, $30,	$9D, $9D, $50, $4C
                        	; $04, $06, $04, $05,	$1F, $05, $01, $01
                        	; $A8, $25, $25, $55,	$7F, $06, $14, $8E
001B59 3A               	dc.b	$3A
001B5A 646060309D9D504C 	dc.b	$64, $60, $60, $30,	$9D, $9D, $50, $4C
001B62 040604051F050101 	dc.b	$04, $06, $04, $05,	$1F, $05, $01, $01
                        	;!@ dc.b	$A8, $25, $25, $55,	$7F, $06, $14, $8E
001B6A A82525557F061488 	dc.b	$A8, $25, $25, $55,	$7F, $06, $14, $8E-$06
                        	;smpsVcAlgorithm	$02
                        	;smpsVcFeedback	$07
                        	;smpsVcDetune	$06, $06, $06, $03
                        	;smpsVcCoarseFreq	$04, $00, $00, $00
                        	;smpsVcRateScale	$02, $01, $02, $01
                        	;smpsVcAttackRate	$1D, $10, $1D, $0C
                        	;smpsVcAmpMod	$00, $00, $00, $00
                        	;smpsVcDecayRate1	$04, $04, $06, $05
                        	;smpsVcDecayRate2	$0A, $02, $02, $05
                        	;smpsVcDecayLevel	$1F, $01, $05, $01
                        	;smpsVcReleaseRate	$08, $05, $05, $05
                        	;smpsVcTotalLevel	$7F, $14, $06, $0E

                        	; Patch $03
                        	; $3D
                        	; $72, $31, $31, $71,	$1A, $1C, $1A, $1C
                        	; $0E, $0A, $0E, $0C,	$00, $00, $00, $01
                        	; $38, $08, $28, $38,	$1C, $88, $8E, $88
001B72 3D               	dc.b	$3D
001B73 723131711A1C1A1C 	dc.b	$72, $31, $31, $71,	$1A, $1C, $1A, $1C
001B7B 0E0A0E0C00000001 	dc.b	$0E, $0A, $0E, $0C,	$00, $00, $00, $01
001B83 380828381C888E88 	dc.b	$38, $08, $28, $38,	$1C, $88, $8E, $88
                        	;smpsVcAlgorithm	$05
                        	;smpsVcFeedback	$07
                        	;smpsVcDetune	$07, $03, $03, $07
                        	;smpsVcCoarseFreq	$02, $01, $01, $01
                        	;smpsVcRateScale	$00, $00, $00, $00
                        	;smpsVcAttackRate	$1A, $1A, $1C, $1C
                        	;smpsVcAmpMod	$00, $00, $00, $00
                        	;smpsVcDecayRate1	$0E, $0E, $0A, $0C
                        	;smpsVcDecayRate2	$03, $02, $00, $03
                        	;smpsVcDecayLevel	$00, $00, $00, $01
                        	;smpsVcReleaseRate	$08, $08, $08, $08
                        	;smpsVcTotalLevel	$1C, $0E, $08, $08

                        	; Patch $04
                        	; $39
                        	; $03, $22, $61, $21,	$1F, $12, $1F, $1F
                        	; $05, $05, $05, $0B,	$00, $00, $00, $00
                        	; $10, $18, $10, $18,	$1C, $12, $1A, $8C
001B8B 39               	dc.b	$39
001B8C 032261211F121F1F 	dc.b	$03, $22, $61, $21,	$1F, $12, $1F, $1F
001B94 0505050B00000000 	dc.b	$05, $05, $05, $0B,	$00, $00, $00, $00
                        	;!@ dc.b	$10, $18, $10, $18,	$1C, $12, $1A, $8C
001B9C 101810181C121A8C 	dc.b	$10, $18, $10, $18,	$1C, $12, $1A, $8C
                        	;smpsVcAlgorithm	$01
                        	;smpsVcFeedback	$07
                        	;smpsVcDetune	$00, $06, $02, $02
                        	;smpsVcCoarseFreq	$03, $01, $02, $01
                        	;smpsVcRateScale	$00, $00, $00, $00
                        	;smpsVcAttackRate	$1F, $1F, $12, $1F
                        	;smpsVcAmpMod	$00, $00, $00, $00
                        	;smpsVcDecayRate1	$05, $05, $05, $0B
                        	;smpsVcDecayRate2	$01, $01, $01, $01
                        	;smpsVcDecayLevel	$00, $00, $00, $00
                        	;smpsVcReleaseRate	$00, $00, $08, $08
                        	;smpsVcTotalLevel	$1C, $1A, $12, $0C

                        	; Patch $05
                        	; $39
                        	; $33, $01, $51, $01,	$5F, $5F, $5F, $5F
                        	; $0F, $00, $00, $0D,	$01, $01, $01, $01
                        	; $33, $1A, $1A, $17,	$1E, $19, $16, $84
001BA4 39               	dc.b	$39
001BA5 330151015F5F5F5F 	dc.b	$33, $01, $51, $01,	$5F, $5F, $5F, $5F
001BAD 0F00000D01010101 	dc.b	$0F, $00, $00, $0D,	$01, $01, $01, $01
                        	;!@ dc.b	$33, $1A, $1A, $17,	$1E, $19, $16, $84
001BB5 331A1A171E191684 	dc.b	$33, $1A, $1A, $17,	$1E, $19, $16, $84
                        	;smpsVcAlgorithm	$01
                        	;smpsVcFeedback	$07
                        	;smpsVcDetune	$03, $05, $00, $00
                        	;smpsVcCoarseFreq	$03, $01, $01, $01
                        	;smpsVcRateScale	$01, $01, $01, $01
                        	;smpsVcAttackRate	$1F, $1F, $1F, $1F
                        	;smpsVcAmpMod	$00, $00, $00, $00
                        	;smpsVcDecayRate1	$0F, $00, $00, $0D
                        	;smpsVcDecayRate2	$03, $01, $01, $01
                        	;smpsVcDecayLevel	$01, $01, $01, $01
                        	;smpsVcReleaseRate	$03, $0A, $0A, $07
                        	;smpsVcTotalLevel	$1E, $16, $19, $04

00000 Total Error(s)

CFM3               00000002 E  CFM4               00000004 E  CFM5               00000005 E
CFM6               00000006 E  CNOISE             000000E0 E  CPSG1              00000080 E
CPSG2              000000A0 E  CPSG3              000000C0 E  CPWM1              00000018 E
CPWM2              0000001A E  CPWM3              0000001C E  CPWM4              0000001E E
DFLOORTIMPANI      0000008B E  DHITIMPANI         00000088 E  DKICK              00000081 E
DLOWTIMPANI        0000008A E  DMIDTIMPANI        00000089 E  DSNARE             00000082 E
DTIMPANI           00000083 E  DVLOWTIMPANI       0000008B E  FMPITCH            00000000 E
FMVOL1             00000010 E  FMVOL2             0000000C E  FMVOL3             0000000A E
FMVOL4             00000012 E  FMVOL5             0000000F E  FMVOL6             0000000B E
HDNR1S_FM1         00000040    HDNR1S_FM2         000003DC    HDNR1S_FM3         0000045A
HDNR1S_FM4         00000810    HDNR1S_FM5         00000AC4    HDNR1S_FM6         00000D78
HDNR1S_JUMP1       00000147    HDNR1S_JUMP2       00000514    HDNR1S_JUMP3       00000848
HDNR1S_JUMP4       00000AFC    HDNR1S_JUMP5       00000D8A    HDNR1S_JUMP6       00000EC4
HDNR1S_JUMP7       00001158    HDNR1S_JUMP8       000013BE    HDNR1S_LOOP1       00000046
HDNR1S_LOOP10      00000432    HDNR1S_LOOP100     00000CB9    HDNR1S_LOOP101     00000CBD
HDNR1S_LOOP102     00000CC5    HDNR1S_LOOP103     00000D4E    HDNR1S_LOOP104     00000EF9
HDNR1S_LOOP105     00000F71    HDNR1S_LOOP106     00001112    HDNR1S_LOOP107     00001129
HDNR1S_LOOP108     0000115D    HDNR1S_LOOP109     00001171    HDNR1S_LOOP11      0000044A
HDNR1S_LOOP110     00001180    HDNR1S_LOOP111     0000118F    HDNR1S_LOOP112     0000119E
HDNR1S_LOOP113     000011B2    HDNR1S_LOOP114     000011C1    HDNR1S_LOOP115     000011D5
HDNR1S_LOOP116     000011E4    HDNR1S_LOOP117     000011F3    HDNR1S_LOOP118     00001202
HDNR1S_LOOP119     00001388    HDNR1S_LOOP12      00000460    HDNR1S_LOOP120     0000145C
HDNR1S_LOOP121     000014E1    HDNR1S_LOOP122     00001550    HDNR1S_LOOP123     0000155C
HDNR1S_LOOP13      000004F2    HDNR1S_LOOP14      000004FF    HDNR1S_LOOP15      00000518
HDNR1S_LOOP16      00000525    HDNR1S_LOOP17      00000532    HDNR1S_LOOP18      0000053F
HDNR1S_LOOP19      0000054C    HDNR1S_LOOP2       0000032A    HDNR1S_LOOP20      00000559
HDNR1S_LOOP21      00000566    HDNR1S_LOOP22      00000573    HDNR1S_LOOP23      00000580
HDNR1S_LOOP24      0000058D    HDNR1S_LOOP25      0000059A    HDNR1S_LOOP26      000005A7
HDNR1S_LOOP27      000005B4    HDNR1S_LOOP28      000005C1    HDNR1S_LOOP29      000005CE
HDNR1S_LOOP3       00000339    HDNR1S_LOOP30      000005D2    HDNR1S_LOOP31      000005E2
HDNR1S_LOOP32      000005F5    HDNR1S_LOOP33      000005F1    HDNR1S_LOOP34      0000060D
HDNR1S_LOOP35      00000609    HDNR1S_LOOP36      00000625    HDNR1S_LOOP37      00000644
HDNR1S_LOOP38      00000642    HDNR1S_LOOP39      0000065C    HDNR1S_LOOP4       00000352
HDNR1S_LOOP40      0000065A    HDNR1S_LOOP41      00000676    HDNR1S_LOOP42      00000674
HDNR1S_LOOP43      0000068E    HDNR1S_LOOP44      0000068C    HDNR1S_LOOP45      000006A6
HDNR1S_LOOP46      000006A4    HDNR1S_LOOP47      000006BE    HDNR1S_LOOP48      000006DB
HDNR1S_LOOP49      000006EE    HDNR1S_LOOP5       0000037D    HDNR1S_LOOP50      00000701
HDNR1S_LOOP51      00000714    HDNR1S_LOOP52      00000727    HDNR1S_LOOP53      0000073A
HDNR1S_LOOP54      0000074D    HDNR1S_LOOP55      00000749    HDNR1S_LOOP56      00000765
HDNR1S_LOOP57      00000778    HDNR1S_LOOP58      0000078B    HDNR1S_LOOP59      0000079E
HDNR1S_LOOP6       00000387    HDNR1S_LOOP60      000007B1    HDNR1S_LOOP61      000007C4
HDNR1S_LOOP62      000007F3    HDNR1S_LOOP63      000007EF    HDNR1S_LOOP64      0000081E
HDNR1S_LOOP65      00000850    HDNR1S_LOOP66      0000088C    HDNR1S_LOOP67      00000899
HDNR1S_LOOP68      000008AA    HDNR1S_LOOP69      000008BB    HDNR1S_LOOP7       000003A6
HDNR1S_LOOP70      000008CC    HDNR1S_LOOP71      000008DF    HDNR1S_LOOP72      0000091B
HDNR1S_LOOP73      00000928    HDNR1S_LOOP74      00000939    HDNR1S_LOOP75      0000094A
HDNR1S_LOOP76      0000095B    HDNR1S_LOOP77      000009E3    HDNR1S_LOOP78      000009E7
HDNR1S_LOOP79      000009EF    HDNR1S_LOOP8       00000429    HDNR1S_LOOP80      00000A05
HDNR1S_LOOP81      00000A09    HDNR1S_LOOP82      00000A11    HDNR1S_LOOP83      00000A9A
HDNR1S_LOOP84      00000AD2    HDNR1S_LOOP85      00000B04    HDNR1S_LOOP86      00000B40
HDNR1S_LOOP87      00000B4D    HDNR1S_LOOP88      00000B5E    HDNR1S_LOOP89      00000B6F
HDNR1S_LOOP9       00000436    HDNR1S_LOOP90      00000B80    HDNR1S_LOOP91      00000B93
HDNR1S_LOOP92      00000BCF    HDNR1S_LOOP93      00000BDC    HDNR1S_LOOP94      00000BED
HDNR1S_LOOP95      00000BFE    HDNR1S_LOOP96      00000C0F    HDNR1S_LOOP97      00000C97
HDNR1S_LOOP98      00000C9B    HDNR1S_LOOP99      00000CA3    HDNR1S_PATCHES     00001B27
HDNR1S_PSG1        00000E9E    HDNR1S_PSG2        0000111C    HDNR1S_PSG3        000013B0
HDNR1S_PWM1        00001584    HDNR1S_PWM1_JUMP1  00001620    HDNR1S_PWM1_LOOP1  00001593
HDNR1S_PWM1_LOOP10 0000170B    HDNR1S_PWM1_LOOP11 0000171E    HDNR1S_PWM1_LOOP2  000015B2
HDNR1S_PWM1_LOOP3  000015E7    HDNR1S_PWM1_LOOP4  00001624    HDNR1S_PWM1_LOOP5  00001651
HDNR1S_PWM1_LOOP6  00001680    HDNR1S_PWM1_LOOP7  000016C1    HDNR1S_PWM1_LOOP8  000016D4
HDNR1S_PWM1_LOOP9  000016E0    HDNR1S_PWM2        0000173A    HDNR1S_PWM2_JUMP1  000017FA
HDNR1S_PWM2_LOOP1  00001750    HDNR1S_PWM2_LOOP10 000018C6    HDNR1S_PWM2_LOOP11 000018F8
HDNR1S_PWM2_LOOP2  00001770    HDNR1S_PWM2_LOOP3  0000178A    HDNR1S_PWM2_LOOP4  000017A8
HDNR1S_PWM2_LOOP5  000017BC    HDNR1S_PWM2_LOOP6  000017FF    HDNR1S_PWM2_LOOP7  0000182E
HDNR1S_PWM2_LOOP8  0000185D    HDNR1S_PWM2_LOOP9  000018A3    HDNR1S_PWM3        0000192D
HDNR1S_PWM3_JUMP1  000019B0    HDNR1S_PWM3_LOOP1  00001954    HDNR1S_PWM3_LOOP10 00001A39
HDNR1S_PWM3_LOOP11 00001A45    HDNR1S_PWM3_LOOP2  0000196D    HDNR1S_PWM3_LOOP3  0000198A
HDNR1S_PWM3_LOOP4  00001994    HDNR1S_PWM3_LOOP5  000019B7    HDNR1S_PWM3_LOOP6  000019C9
HDNR1S_PWM3_LOOP7  000019DB    HDNR1S_PWM3_LOOP8  00001A06    HDNR1S_PWM3_LOOP9  00001A18
HDNR1S_PWM4        00001A57    HDNR1S_PWM4_JUMP1  00001A96    HDNR1S_PWM4_LOOP2  00001A5B
HDNR1S_PWM4_LOOP3  00001A86    HDNR1S_PWM4_LOOP4  00001AA4    HDNR1S_PWM4_LOOP5  00001A98
HDNR1S_PWM4_LOOP6  00001AC2    HDNR1S_PWM4_LOOP7  00001AD7    HDNR1S_PWM4_LOOP8  00001AF0
HDNR1S_PWM4_LOOP9  00001B05    NA0                0000008A E  NA1                00000096 E
NA2                000000A2 E  NA3                000000AE E  NA4                000000BA E
NA5                000000C6 E  NA6                000000D2 E  NA7                000000DE E
NAB0               00000089 E  NAB1               00000095 E  NAB2               000000A1 E
NAB3               000000AD E  NAB4               000000B9 E  NAB5               000000C5 E
NAB6               000000D1 E  NAB7               000000DD E  NB0                0000008C E
NB1                00000098 E  NB2                000000A4 E  NB3                000000B0 E
NB4                000000BC E  NB5                000000C8 E  NB6                000000D4 E
NBB0               0000008B E  NBB1               00000097 E  NBB2               000000A3 E
NBB3               000000AF E  NBB4               000000BB E  NBB5               000000C7 E
NBB6               000000D3 E  NBB7               000000DF E  NC0                00000081 E
NC1                0000008D E  NC2                00000099 E  NC3                000000A5 E
NC4                000000B1 E  NC5                000000BD E  NC6                000000C9 E
NC7                000000D5 E  NCS0               00000082 E  NCS1               0000008E E
NCS2               0000009A E  NCS3               000000A6 E  NCS4               000000B2 E
NCS5               000000BE E  NCS6               000000CA E  NCS7               000000D6 E
ND0                00000083 E  ND1                0000008F E  ND2                0000009B E
ND3                000000A7 E  ND4                000000B3 E  ND5                000000BF E
ND6                000000CB E  ND7                000000D7 E  NE0                00000085 E
NE1                00000091 E  NE2                0000009D E  NE3                000000A9 E
NE4                000000B5 E  NE5                000000C1 E  NE6                000000CD E
NE7                000000D9 E  NEB0               00000084 E  NEB1               00000090 E
NEB2               0000009C E  NEB3               000000A8 E  NEB4               000000B4 E
NEB5               000000C0 E  NEB6               000000CC E  NEB7               000000D8 E
NF0                00000086 E  NF1                00000092 E  NF2                0000009E E
NF3                000000AA E  NF4                000000B6 E  NF5                000000C2 E
NF6                000000CE E  NF7                000000DA E  NFS0               00000087 E
NFS1               00000093 E  NFS2               0000009F E  NFS3               000000AB E
NFS4               000000B7 E  NFS5               000000C3 E  NFS6               000000CF E
NFS7               000000DB E  NG0                00000088 E  NG1                00000094 E
NG2                000000A0 E  NG3                000000AC E  NG4                000000B8 E
NG5                000000C4 E  NG6                000000D0 E  NG7                000000DC E
NRST               00000080 E  PAKICK             0000008B E  PANCENTER          000000C0 S
PANCENTRE          000000C0 S  PANLEFT            00000080 S  PANNONE            00000000 S
PANRIGHT           00000040 S  PASNARE            0000008C E  PBELL              0000008D E
PBONGOHI           00000092 E  PBONGOLO           00000093 E  PCLAP              0000008A E
PCLICKHI           00000090 E  PCLICKLO           00000091 E  PCLOSEDHH          00000098 E
PCOWBELL           0000008F E  PCRASHCYMB         00000089 E  PCRA_D81           00000081 E
PCRA_D82           0000008C E  PCRA_D83           00000085 E  PCRA_D84           00000086 E
PCRA_D85           00000087 E  PEHIHAT            00000088 E  PEKICK             00000081 E
PESNARE            00000082 E  PFINGSNAP          0000008E E  PFINGSNAPHI        0000008E E
PFINGSNAPLO        0000009E E  PNEPDADA           0000009D E  POPENHH            00000099 E
PORCHHITHI         0000009F E  PORCHHITLO         000000A1 E  PORCHHITLOWER      000000A2 E
PORCHHITMED        000000A0 E  PRIDEBELL          00000084 E  PSEGA              00000097 E
PSGDELTA           0000000C E  PSGMOD             00000000 E  PSGPITCH           0000000C E
PSGVOI             00000000 E  PSGVOL1            00000000 E  PSGVOL2            00000001 E
PSGVOL3            00000000 E  PSILENCE           00000096 E  PSPLASHCYMB        00000083 E
PTIMPANIHI         00000094 E  PTIMPANILO         00000095 E  PTOMHI             00000085 E
PTOMLOW            00000087 E  PTOMLOWER          0000009A E  PTOMLOWERER        0000009B E
PTOMLOWEREST       0000009C E  PTOMMID            00000086 E  PWMPITCH           00000000 E
PWMVOL1            00000099 E  SMODON             0000F480 E  SMPSED             000000ED E
SMPSEE             000000EE E  SMPSF9             000000F9 E  SMPSMODOFF         000000F4 E
SMPSMODON          000000F1 E  SMPSNOATTACK       000000E7 E  SMPSPITCH00        00000000 E
SMPSPITCH01HI      0000000C E  SMPSPITCH01LO      000000F4 E  SMPSPITCH02HI      00000018 E
SMPSPITCH02LO      000000E8 E  SMPSPITCH03HI      00000024 E  SMPSPITCH03LO      000000DC E
SMPSPITCH04HI      00000030 E  SMPSPITCH04LO      000000D0 E  SMPSPITCH05HI      0000003C E
SMPSPITCH05LO      000000C4 E  SMPSPITCH06HI      00000048 E  SMPSPITCH06LO      000000B8 E
SMPSPITCH07HI      00000054 E  SMPSPITCH07LO      000000AC E  SMPSPITCH08HI      00000060 E
SMPSPITCH08LO      000000A0 E  SMPSPITCH09HI      0000006C E  SMPSPITCH09LO      00000094 E
SMPSPITCH10HI      00000078 E  SMPSPITCH10LO      00000088 E  TARGET             00040000 E
