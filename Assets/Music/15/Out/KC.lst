                        	LIST MACRO
                        	LIST EXPAND
000000                  	include _s1smps2asm_S1KC.asm
                        ; Standard Octave Pitch Equates
       = 000088         smpsPitch10lo		EQU	$88
       = 000094         smpsPitch09lo		EQU	$94
       = 0000A0         smpsPitch08lo		EQU	$A0
       = 0000AC         smpsPitch07lo		EQU	$AC
       = 0000B8         smpsPitch06lo		EQU	$B8
       = 0000C4         smpsPitch05lo		EQU	$C4
       = 0000D0         smpsPitch04lo		EQU	$D0
       = 0000DC         smpsPitch03lo		EQU	$DC
       = 0000E8         smpsPitch02lo		EQU	$E8
       = 0000F4         smpsPitch01lo		EQU	$F4
       = 000000         smpsPitch00			EQU	$00
       = 00000C         smpsPitch01hi		EQU	$0C
       = 000018         smpsPitch02hi		EQU	$18
       = 000024         smpsPitch03hi		EQU	$24
       = 000030         smpsPitch04hi		EQU	$30
       = 00003C         smpsPitch05hi		EQU	$3C
       = 000048         smpsPitch06hi		EQU	$48
       = 000054         smpsPitch07hi		EQU	$54
       = 000060         smpsPitch08hi		EQU	$60
       = 00006C         smpsPitch09hi		EQU	$6C
       = 000078         smpsPitch10hi		EQU	$78

                        ; Note Equates
       = 000080         nRst			EQU	$80
       = 000081         nC0			EQU	$81
       = 000082         nCs0			EQU	$82
       = 000083         nD0			EQU	$83
       = 000084         nEb0			EQU	$84
       = 000085         nE0			EQU	$85
       = 000086         nF0			EQU	$86
       = 000087         nFs0			EQU	$87
       = 000088         nG0			EQU	$88
       = 000089         nAb0			EQU	$89
       = 00008A         nA0			EQU	$8A
       = 00008B         nBb0			EQU	$8B
       = 00008C         nB0			EQU	$8C
       = 00008D         nC1			EQU	$8D
       = 00008E         nCs1			EQU	$8E
       = 00008F         nD1			EQU	$8F
       = 000090         nEb1			EQU	$90
       = 000091         nE1			EQU	$91
       = 000092         nF1			EQU	$92
       = 000093         nFs1			EQU	$93
       = 000094         nG1			EQU	$94
       = 000095         nAb1			EQU	$95
       = 000096         nA1			EQU	$96
       = 000097         nBb1			EQU	$97
       = 000098         nB1			EQU	$98
       = 000099         nC2			EQU	$99
       = 00009A         nCs2			EQU	$9A
       = 00009B         nD2			EQU	$9B
       = 00009C         nEb2			EQU	$9C
       = 00009D         nE2			EQU	$9D
       = 00009E         nF2			EQU	$9E
       = 00009F         nFs2			EQU	$9F
       = 0000A0         nG2			EQU	$A0
       = 0000A1         nAb2			EQU	$A1
       = 0000A2         nA2			EQU	$A2
       = 0000A3         nBb2			EQU	$A3
       = 0000A4         nB2			EQU	$A4
       = 0000A5         nC3			EQU	$A5
       = 0000A6         nCs3			EQU	$A6
       = 0000A7         nD3			EQU	$A7
       = 0000A8         nEb3			EQU	$A8
       = 0000A9         nE3			EQU	$A9
       = 0000AA         nF3			EQU	$AA
       = 0000AB         nFs3			EQU	$AB
       = 0000AC         nG3			EQU	$AC
       = 0000AD         nAb3			EQU	$AD
       = 0000AE         nA3			EQU	$AE
       = 0000AF         nBb3			EQU	$AF
       = 0000B0         nB3			EQU	$B0
       = 0000B1         nC4			EQU	$B1
       = 0000B2         nCs4			EQU	$B2
       = 0000B3         nD4			EQU	$B3
       = 0000B4         nEb4			EQU	$B4
       = 0000B5         nE4			EQU	$B5
       = 0000B6         nF4			EQU	$B6
       = 0000B7         nFs4			EQU	$B7
       = 0000B8         nG4			EQU	$B8
       = 0000B9         nAb4			EQU	$B9
       = 0000BA         nA4			EQU	$BA
       = 0000BB         nBb4			EQU	$BB
       = 0000BC         nB4			EQU	$BC
       = 0000BD         nC5			EQU	$BD
       = 0000BE         nCs5			EQU	$BE
       = 0000BF         nD5			EQU	$BF
       = 0000C0         nEb5			EQU	$C0
       = 0000C1         nE5			EQU	$C1
       = 0000C2         nF5			EQU	$C2
       = 0000C3         nFs5			EQU	$C3
       = 0000C4         nG5			EQU	$C4
       = 0000C5         nAb5			EQU	$C5
       = 0000C6         nA5			EQU	$C6
       = 0000C7         nBb5			EQU	$C7
       = 0000C8         nB5			EQU	$C8
       = 0000C9         nC6			EQU	$C9
       = 0000CA         nCs6			EQU	$CA
       = 0000CB         nD6			EQU	$CB
       = 0000CC         nEb6			EQU	$CC
       = 0000CD         nE6			EQU	$CD
       = 0000CE         nF6			EQU	$CE
       = 0000CF         nFs6			EQU	$CF
       = 0000D0         nG6			EQU	$D0
       = 0000D1         nAb6			EQU	$D1
       = 0000D2         nA6			EQU	$D2
       = 0000D3         nBb6			EQU	$D3
       = 0000D4         nB6			EQU	$D4
       = 0000D5         nC7			EQU	$D5
       = 0000D6         nCs7			EQU	$D6
       = 0000D7         nD7			EQU	$D7
       = 0000D8         nEb7			EQU	$D8
       = 0000D9         nE7			EQU	$D9
       = 0000DA         nF7			EQU	$DA
       = 0000DB         nFs7			EQU	$DB
       = 0000DC         nG7			EQU	$DC
       = 0000DD         nAb7			EQU	$DD
       = 0000DE         nA7			EQU	$DE
       = 0000DF         nBb7			EQU	$DF

                        ; DAC Equates (S1)
       = 000081         dKick			EQU	$81
       = 000082         dSnare			EQU	$82
       = 000083         dTimpani		EQU	$83
       = 000088         dHiTimpani		EQU	$88
       = 000089         dMidTimpani		EQU	$89
       = 00008A         dLowTimpani		EQU	$8A
       = 00008B         dVLowTimpani	EQU	$8B
       = 00008B         dFloorTimpani	EQU $8B

                        ; PWM Equates (KC)
       = 000081         pEKick		EQU	$81
       = 000082         pESnare		EQU	$82
       = 000083         pSplashCymb	EQU	$83
       = 000084         pRideBell	EQU $84
       = 000085         pTomHi		EQU	$85
       = 000086         pTomMid		EQU	$86
       = 000087         pTomLow		EQU	$87
       = 000088         pEHiHat		EQU	$88
       = 000089         pCrashCymb	EQU $89
       = 00008A         pClap		EQU $8A
       = 00008B         pAKick		EQU $8B
       = 00008C         pASnare		EQU	$8C
       = 00008D         pBell		EQU $8D
       = 00008E         pFingSnap	EQU	$8E
       = 00008F         pCowbell	EQU	$8F
       = 000090         pClickHi	EQU	$90
       = 000091         pClickLo	EQU	$91
       = 000092         pBongoHi	EQU	$92
       = 000093         pBongoLo	EQU	$93
       = 000094         pTimpaniHi	EQU	$94
       = 000095         pTimpaniLo	EQU	$95
       = 000096         pSilence	EQU $96
                        ;!@ NEW DATA
       = 000097         pSega		EQU $97
       = 000098         pClosedHH	EQU $98
       = 000099         pOpenHH		EQU $99
       = 00009A         pTomLower		EQU	$9A
       = 00009B         pTomLowerer		EQU	$9B
       = 00009C         pTomLowerest	EQU	$9C

                        ;!@ Convert ptrs to z80Ptr
                        ; function to make a little-endian 16-bit pointer for the Z80 sound driver
                        ;z80_ptr function x,y,((((x)|(y))<<8)&$FF00)|((((x)|(y))>>8)&$7F)|$80
                        ;z80_ptr_neg function x,y,((((y)-(x))<<8)&$FF00)|((((y)-(x))>>8)&$7F)|$80

                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        rom_ptr_z80 macro addr
                        	;dc.w z80_ptr(ptr,addr)
                        	dc.w  ((((addr)<<8)&$FF00)|(((addr)>>8)&$7F)|$80)
                            endm
                        	
                        ;Funciton to convert S1 tempo to S2 and then S3+
                        ;The conversion works for all values of main tempo other than 0 â€” this value cannot be converted exactly between the two drivers. The conversion of main tempos from Sonic 1 to Sonic 2 can be done (approximately) with the following formul
                        ;S2 main tempo = floor{ [ (S1 main tempo-1) * 256 + floor(S1 main tempo/2) ] / S1 main tempo }			
                        ;It is easy to convert between Sonic 2 and Sonic 3+ main tempo values:
                        ;S2 main tempo = (256 - S3 main tempo) mod 256
                        ;S3 main tempo = (256 - S2 main tempo) mod 256
                        tempo_conv macro tempo
                        		if tempo==0
                        			dc.b	((256 - (((256-1)*256 + (256/2)) / 256)) % 256)
                        		else
                        			dc.b	((256 - ((((tempo)-1)*256 + ((tempo)/2)) / (tempo))) % 256)
                        		endif
                        	endm

                        	
                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        ;rom_ptr_z80_neg macro ptr,addr
                        	;dc.w z80_ptr_neg(ptr,addr)
                        	;dc.w	(((((addr)-(ptr))<<8)&$FF00)|((((addr)-(ptr))>>8)&$7F)|$80)
                            ;endm

                        ; Header Macros

                        ;!@
                        ; Header - Set up Voice Location
                        ;smpsHeaderVoice macro loc
                        smpsHeaderVoice macro loc,songstart
                        ;songStart set *
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	endm
                        ; Header - Set up Channel Usage	
                        smpsHeaderChan macro fm,psg
                        	if \0==2
                        		dc.b	fm,psg
                        	else
                        		dc.b	fm
                        	endif	
                        	endm	
                        	

                        	
                        smpsHeaderTempo macro div,mod
                        	dc.b	div,mod
                        	endm

                        ;!@
                        ; Header - Set up Tempo. Mod is converted from S1 to S3 tempo
                        smpsHeaderTempoC macro div,mod
                        TempDiv set div
                        	dc.b	div
                        	tempo_conv(mod)
000000                  	endm
                        	
                        ; Header - Set up DAC Channel
                        smpsHeaderDAC macro loc
                        	dc.w	loc-songStart
                        	dc.w	$00
                        	endm
                        	
                        ;!@
                        ; Header - Set up FM Channel	
                        ;smpsHeaderFM macro loc,pitch,vol
                        smpsHeaderFM macro loc,songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	endm

                        ;!@	
                        ; Header - Set up PSG Channel
                        ;smpsHeaderPSG macro loc,pitch,vol,voice
                        smpsHeaderPSG macro loc,songstart,pitch,vol,null,voice
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	;dc.w	voice
                        	dc.b	null,voice
                        	endm

                        ;!@
                        ; Header - Set up SFX Channel
                        ;sHeaderSFX	macro play,patch,loc,pitch,vol
                        smpsHeaderSFX	macro play,patch,loc,pitch,vol,songstart
                        	dc.b play,patch
                        	;dc.w loc-sPointZero
                        	rom_ptr_z80(loc+songstart)
                        	dc.b pitch,vol
                            endm

                        ; Co-ord Flag Macros and Equates
                        ; E0xx - Panning, AMS, FMS
                        smpsPan macro direction,amsfms
                        panNone set $00
                        panRight set $40
                        panLeft set $80
                        panCentre set $C0
                        panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if \0==2
                        		dc.b $E0,direction|amsfms
                        	else
                        		dc.b $E0,direction
                        	endif
000000                  	endm
                        	
                        ; E1xx - Alter note values by xx
                        smpsAlterNote macro val
                        	dc.b	$E1,val
                        	endm
                        	
                        ; E2xx - Unknown
                        smpsE2 macro val
                        	dc.b	$E2,val
                        	endm

                        ; E3 - Return (generally used after F8)
                        ; F9 - Return (generally used after F8)
                        smpsReturn macro val
                        	;!@
                        	;dc.b	$E3
                        	dc.b	$F9
                        	endm
                        	
                        ; E4 - Fade in previous song (ie. 1-Up)
                        smpsFade macro val
                        	dc.b	$E4
                        	endm

                        ;!@ Invalid for S3+!
                        ; E5xx - Set channel tempo divider to xx
                        smpsChanTempoDiv macro val
                        	;Error No S3 equivalent for CF!
                        	dc.b	$E5,val	
                        	endm
                        	
                        ; E6xx - Alter Volume by xx
                        smpsAlterVol macro val
                        	dc.b	$E6,val
                        	endm
                        	
                        ; E7 - Prevent attack of next note
       = 0000E7         smpsNoAttack	EQU $E7

                        ;!@ This may have problems, needs some convesion factor due to usage of mult by tempo div in S3+
                        ; E8xx - Set note fill to xx
                        smpsNoteFill macro val		
                        	dc.b	$E8,(val/TempDiv)
                        	endm
                        	
                        ;!@
                        ; E9xx - Add xx to channel pitch
                        ; FBxx - Add xx to channel pitch
                        smpsAlterPitch macro val
                        	;!@
                        	;dc.b	$E9,val
                        	dc.b	$FB,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3
                        smpsSetTempoMod macro val
                        	;dc.b	$EA,val
                        	dc.b	$FF,$00,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3 (TEMPO - TEMPO_SET)
                        smpsSetTempoModC macro val
                        	;dc.b	$EA,val
                        	dc.b $FF,$00
                        	tempo_conv(val)
                        	endm
                        	
                        ;!@
                        ; EBxx - Set music tempo divider to xx
                        ; FF04xx - Set global tick multiplier to xx (TICK_MULT - TMULT_ALL)
                        smpsSetTempoDiv macro val
                        	;dc.b	$EB,val
                        TempDiv set val
                        	dc.b $FF,$04,val
000000                  	endm

                        ;!@	
                        ; ECxx - Add xx to PSG channel volume (VOLUME - VOL_NN_PSG)
                        ;
                        ; May need interpolation/conversion factor:
                        ; Change volume attenuation of PSG track.
                        ;The single parameter byte is added to track's current volume attenuation;
                        ;anything greater than $0F (unsigned comparison) is set to $0F (silence). Also, the flutter index is reduced by 1.
                        smpsSetVol macro val
                        	dc.b	$EC,val
                        	endm
                        	
                        ; ED - Unknown
       = 0000ED         smpsED		EQU $ED
                        	
                        ;!@ S3K= send cmd to YM2612 port; unused in S1
                        ; EE - Stops special SFX ($D0-$D4, S1 only) and restarts overridden music track
       = 0000EE         smpsEE 		EQU $EE
                        	
                        ;!@
                        ; EFxx - Set Voice of FM channel to xx
                        ; EFxx[yy] - Set patch id of FM channel to xx. If xx bit7 set, read from another song instead
                        ; (INSTRUMENT - INS_C_FMP)
                        ;smpsFMvoice macro voice
                        	;dc.b	$EF,voice
                        smpsFMvoice macro pat, song		
                        	;if song<>""
                        	if \0==2
                        		dc.b $EF,pat|$80,song+$81
                        	else
                        		dc.b $EF,pat
                        	endif
                            endm

                        ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
                        smpsModSet macro wait,speed,change,step
                        	dc.b	$F0,wait,speed,change,step
                        	endm
                        	

                        ;!@ Used very differently in S3; don't use
                        ; F1 - Turn on Modulation
       = 0000F1         smpsModOn 	EQU $F1
                        ; F4 - Turn off Modulation
       = 0000F4         smpsModOff 	EQU $F4

                        ; F2 - End of channel
                        smpsStop macro
                        	dc.b	$F2
                        	endm
                        	
                        ;!@
                        ; F3xx - PSG waveform to xx
                        ; S3+ only: If parameter byte is zero, the channel is converted
                        ; back into a normal PSG channel and the noise channel is silenced.
                        ; Otherwise, sets the PSG track to noise and sets PSG noise to parameter byte, which should be from $E0 to $E7 (inclusive).
                        smpsPSGform macro form
                        	dc.b	$F3,form
                        	endm
                        	
                        ; F5xx - PSG voice to xx
                        smpsPSGvoice macro voice
                        	dc.b	$F5,voice
                        	endm
                        	
                        ;BAD Cmpr
                        ;if (loc<*)
                        	;rom_ptr_z80_neg(*-loc,songstart)
                        ;else
                        	;rom_ptr_z80(loc-*-1,songstart)
                        ;endif

                        ;!@
                        ; F6xxxx - Jump to xxxx
                        ;smpsJump macro loc
                        smpsJump macro loc,songstart
                        	dc.b	$F6
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F7xxyyzzzz - Loop back to zzzz yy times, xx being the loop index for loop recursion fixing
                        ;smpsLoop macro index,loops,loc
                        smpsLoop macro index,loops,loc,songstart
                        	dc.b	$F7
                        	dc.b	index,loops
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F8xxxx - Call pattern at xxxx, saving return point
                        ;smpsCall macro loc
                        smpsCall macro loc,songstart
                        	dc.b	$F8
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm
                        	
                        ; F9 - Unknown
       = 0000F9         smpsF9		EQU $F9

                        ; Voices - Feedback
                        smpsVcFeedback macro val
                        vcFeedback set val
000000                  	endm

                        ; Voices - Algorithm
                        smpsVcAlgorithm macro val
                        vcAlgorithm set val
000000                  	endm

                        ; Voices - Detune
                        smpsVcDetune macro op1,op2,op3,op4
                        vcDT1 set op1
                        vcDT2 set op2
                        vcDT3 set op3
                        vcDT4 set op4
000000                  	endm

                        ; Voices - Coarse-Frequency
                        smpsVcCoarseFreq macro op1,op2,op3,op4
                        vcCF1 set op1
                        vcCF2 set op2
                        vcCF3 set op3
                        vcCF4 set op4
000000                  	endm

                        ; Voices - Rate Scale
                        smpsVcRateScale macro op1,op2,op3,op4
                        vcRS1 set op1
                        vcRS2 set op2
                        vcRS3 set op3
                        vcRS4 set op4
000000                  	endm

                        ; Voices - Attack Rate
                        smpsVcAttackRate macro op1,op2,op3,op4
                        vcAR1 set op1
                        vcAR2 set op2
                        vcAR3 set op3
                        vcAR4 set op4
000000                  	endm

                        ; Voices - Amplitude Modulation
                        smpsVcAmpMod macro op1,op2,op3,op4
                        vcAM1 set op1
                        vcAM2 set op2
                        vcAM3 set op3
                        vcAM4 set op4
000000                  	endm

                        ; Voices - First Decay Rate
                        smpsVcDecayRate1 macro op1,op2,op3,op4
                        vcD1R1 set op1
                        vcD1R2 set op2
                        vcD1R3 set op3
                        vcD1R4 set op4
000000                  	endm

                        ; Voices - Second Decay Rate
                        smpsVcDecayRate2 macro op1,op2,op3,op4
                        vcD2R1 set op1
                        vcD2R2 set op2
                        vcD2R3 set op3
                        vcD2R4 set op4
000000                  	endm

                        ; Voices - Decay Level	
                        smpsVcDecayLevel macro op1,op2,op3,op4
                        vcDL1 set op1
                        vcDL2 set op2
                        vcDL3 set op3
                        vcDL4 set op4
000000                  	endm

                        ; Voices - Release Rate
                        smpsVcReleaseRate macro op1,op2,op3,op4
                        vcRR1 set op1
                        vcRR2 set op2
                        vcRR3 set op3
                        vcRR4 set op4
000000                  	endm

                        ; Voices - Total Level
                        smpsVcTotalLevel macro op1,op2,op3,op4
                        vcTL1 set op1
                        vcTL2 set op2
                        vcTL3 set op3
                        vcTL4 set op4
                        	dc.b	(vcFeedback<<3)+vcAlgorithm
                        	dc.b	(vcDT4<<4)+vcCF4,(vcDT3<<4)+vcCF3,(vcDT2<<4)+vcCF2,(vcDT1<<4)+vcCF1
                        	dc.b	(vcRS4<<6)+vcAR4,(vcRS3<<6)+vcAR3,(vcRS2<<6)+vcAR2,(vcRS1<<6)+vcAR1
                        	dc.b	(vcAM4<<5)+vcD1R4,(vcAM3<<5)+vcD1R3,(vcAM2<<5)+vcD1R2,(vcAM1<<5)+vcD1R1
                        	dc.b	vcD2R4,vcD2R3,vcD2R2,vcD2R1
                        	dc.b	(vcDL4<<4)+vcRR4,(vcDL3<<4)+vcRR3,(vcDL2<<4)+vcRR2,(vcDL1<<4)+vcRR1
                        	dc.b	vcTL4,vcTL3,vcTL2,vcTL1	
000000                  	endm
                        	
                        	
                        ;==============================================
                        ;!@ The following CF flags/macros are KC-drive specific!
                        ;Rest here mostly used  to compile KC/Nat ASM files for BC purposes...

                        ;!@
                        ; Header - Set up a secondary PWM Channel
                        ;smpsHeaderPWM macro loc
                        smpsHeaderPWM macro loc, songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)	
                        	;!@
                        	dc.b	pitch
                        	dc.b	vol
                        	endm
                        	
                        ;!@ Unused and unneeded; leftover Sonic 32x header stuff
                        ; Header - Set up first PWM Channel
                        ;smpsHeaderPWM1 macro loc,num
                        	;dc.w	loc-songStart
                        	;dc.b	num,0
                        	;endm

                        ;!@
                        ; Header - Set up Tick Multiplier (for Sfx)
                        ;sHeaderSFX
                        smpsHeaderTick	macro tmul
                        	dc.b tmul
                            endm

                        ;!@ KC Exclusives!
                        ;# PAN_ANIM
                        ;# pan animation has 2 modes; if first arg is 0, it will end it. Otherwise, more args will be used
                        ;!0xE4, 0 > sPanAni:;								
                        ;!0xE4, 1-0xFF > sPanAni: .lb, .db, .db, .db, .db;	
                        KC_smpsPanAni macro val1,val2,val3,val4,val5
                        	if val1==0
                        		dc.b	$E4,$00
                        	else
                        		dc.b	$E4,val1,val2,val3,val4,val5
                        	endif
                        	endm


                        ; Alter Volume
                        ;!0xE5 > saVolFMP: .db, .db;								
                        KC_smpsFMAlterVol macro val1,val2
                        	dc.b	$E5,val1,val2
                        	endm

                        ;!@ KC Exclusive!	
                        ;!0xE9 > ssLFO: .db, .db;									
                        KC_smpsSetLFO macro enable,amsfms
                        	dc.b	$E9,enable,amsfms
                        	endm

                        ;!0xEA > sPlayDAC: .db | 0x80;								
                        KC_smpsPlayDACSample macro sample
                        	dc.b	$EA,(sample&$7F)
                        	endm

                        ;!@ Songstart param added
                        ;!0xEB > sLoopExit: .db, .dw {						
                        ;smpsConditionalJump macro index,loc
                        KC_smpsConditionalJump macro index,loc,songstart
                        	dc.b	$EB
                        	dc.b	index
                        	;dc.w	z80_ptr(loc)
                        	rom_ptr_z80(loc+songstart)
                        	endm

                        ;!@ Usage/naming is speculative. Called ssTransposeS3K in S3k/Nat driver...	
                        ;!0xED > sYMcmd: .db, .db;							
                        ; Set note values to xx-$40
                        KC_smpsSetNote macro val
                        	dc.b	$ED,val
                        	endm

                        ;!0xEE > sYM1cmd: .db, .db;							
                        KC_smpsFMICommand macro reg,val
                        	dc.b	$EE,reg,val
                        	endm

                        ;!0xF1 > sModEnv: .db, .db {							
                        ; Set Modulation
                        KC_smpsModChange2 macro fmmod,psgmod
                        	dc.b	$F1,fmmod,psgmod
                        	endm
                        	
                        ;!0xF4 > sModEnv: .db {
                        ; Set Modulation
                        KC_smpsModChange macro val
                        	dc.b	$F4,val
                        	endm

                        ;!@ KC exclusive!
                        ;!0xFC > sPitchSlide: .db;						
                        KC_smpsPitchSlide macro enable
                        	dc.b	$FC,enable
                        	endm
                        	
                        ;!0xFD > sRawFreq: .db;							
                        KC_smpsAlternateSMPS macro flag
                        	dc.b	$FD,flag
                        	endm

                        ;!0xFE > sSpecFM3: .db, .db, .db, .db {			
                        	;%; Broken?
                        ;}
                        KC_smpsFM3SpecialMode macro ind1,ind2,ind3,ind4
                        	dc.b	$FE,ind1,ind2,ind3,ind4
                        	Error Broken?
                        	endm

                        ;!0xFF, 1 > sPlaySound: .db;						
                        KC_smpsPlaySound macro index
                        	dc.b	$FF,$01,index
                        	endm

                        ;!0xFF, 2 > sMusPause: .db;						
                        KC_smpsHaltMusic macro flag
                        	dc.b	$FF,$02,flag
                        	endm

                        ;!@ Modified with SongStart	param
                        ;!0xFF, 3 > sCopyMem: .dw, .db {					
                        	;%; No song should ever use this command. It may good idea to remove it.
                        ;}
                        ;KC_smpsCopyData macro data,len
                        KC_smpsCopyData macro data,len,songstart
                        	Error Coord. Flag to copy data should not be used. Complain to GenesisDoes if any music uses it.
                        	;Error No song should ever use this command. It may be a good idea to remove it.
                        	dc.b	$FF,$03
                        	;dc.w	little_endian(data)
                        	rom_ptr_z80(data+songstart)
                        	dc.b	len
                        	endm

                        ;!0xFF, 5 > sSSGEG: .db, .db, .db, .db {			
                        	;=op2 .a2
                        	;:=2 .a1
                        	;:=1 \op2\
                        ;}
                        KC_smpsSSGEG macro op1,op2,op3,op4
                        	dc.b	$FF,$05,op1,op3,op2,op4
                        	endm
                        	
                        	
                        ;!0xFF, 6 > sVolEnvFM: .db, .db {
                        	;:?0 {
                        		;?volenv;
                        	;}
                        ;}	
                        KC_smpsFMVolEnv macro tone,mask
                        	dc.b	$FF,$06,tone,mask
                        	endm
                        ;==============================================

000000                  	include "KC.asm"
       = 040000         Target	EQU	$40000
       = 000000         PSGVoi	EQU $00
       = 00009F         PWMVol	EQU	$9F

                        ;!@ PSGVol1	EQU	$05
                        ;!@ PSGVol2	EQU	$0B
                        ;!@ PSGVol3	EQU	$0A
       = 000001         PSGVol1	EQU	$01
       = 000003         PSGVol2	EQU	PSGVol1+$02
       = 000002         PSGVol3	EQU	PSGVol2-$01
                        ;!@ PSGTone	EQU	$00
       = 00000C         PSGTone	EQU	$0C

000000                  	smpsHeaderVoice		HDNR1S_Patches, Target
                        ;songStart set *
                        	;dc.w	loc-songStart
000000                  	rom_ptr_z80(HDNR1S_Patches+Target)
                        	;dc.w z80_ptr(ptr,addr)
000000 AE9D             	dc.w  (((((HDNR1S_Patches+Target))<<8)&$FF00)|((((HDNR1S_Patches+Target))>>8)&$7F)|$80)
000002                  	smpsHeaderChan		$06, $03
                        	if 2==2
000002 0603             		dc.b	$06,$03
                        	else
                        	endif	
000004                  	smpsHeaderTempoC	$03, $08
       = 000003         TempDiv set $03
000004 03               	dc.b	$03
000005                  	tempo_conv($08)
                        		if ($08)==0
                        		else
000005 20               			dc.b	((256 - ((((($08))-1)*256 + ((($08))/2)) / (($08)))) % 256)
                        		endif
000006                  	smpsHeaderFM		HDNR1S_FM1, Target, $00, $17
                        	;dc.w	loc-songStart
000006                  	rom_ptr_z80(HDNR1S_FM1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000006 4080             	dc.w  (((((HDNR1S_FM1+Target))<<8)&$FF00)|((((HDNR1S_FM1+Target))>>8)&$7F)|$80)
000008 0017             	dc.b	$00,$17
00000A                  	smpsHeaderFM		HDNR1S_FM2, Target, $00, $13
                        	;dc.w	loc-songStart
00000A                  	rom_ptr_z80(HDNR1S_FM2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000A 0584             	dc.w  (((((HDNR1S_FM2+Target))<<8)&$FF00)|((((HDNR1S_FM2+Target))>>8)&$7F)|$80)
00000C 0013             	dc.b	$00,$13
00000E                  	smpsHeaderFM		HDNR1S_FM3, Target, $00, $0E
                        	;dc.w	loc-songStart
00000E                  	rom_ptr_z80(HDNR1S_FM3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000E 7F84             	dc.w  (((((HDNR1S_FM3+Target))<<8)&$FF00)|((((HDNR1S_FM3+Target))>>8)&$7F)|$80)
000010 000E             	dc.b	$00,$0E
000012                  	smpsHeaderFM		HDNR1S_FM4, Target, $00, $19
                        	;dc.w	loc-songStart
000012                  	rom_ptr_z80(HDNR1S_FM4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000012 3C88             	dc.w  (((((HDNR1S_FM4+Target))<<8)&$FF00)|((((HDNR1S_FM4+Target))>>8)&$7F)|$80)
000014 0019             	dc.b	$00,$19
000016                  	smpsHeaderFM		HDNR1S_FM5, Target, $00, $16
                        	;dc.w	loc-songStart
000016                  	rom_ptr_z80(HDNR1S_FM5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000016 A88B             	dc.w  (((((HDNR1S_FM5+Target))<<8)&$FF00)|((((HDNR1S_FM5+Target))>>8)&$7F)|$80)
000018 0016             	dc.b	$00,$16
00001A                  	smpsHeaderFM		HDNR1S_FM6, Target, $00, $1B
                        	;dc.w	loc-songStart
00001A                  	rom_ptr_z80(HDNR1S_FM6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001A 238F             	dc.w  (((((HDNR1S_FM6+Target))<<8)&$FF00)|((((HDNR1S_FM6+Target))>>8)&$7F)|$80)
00001C 001B             	dc.b	$00,$1B
00001E                  	smpsHeaderPSG		HDNR1S_PSG1, Target, PSGTone, PSGVol1, $00, PSGVoi
                        	;dc.w	loc-songStart
00001E                  	rom_ptr_z80(HDNR1S_PSG1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001E 7690             	dc.w  (((((HDNR1S_PSG1+Target))<<8)&$FF00)|((((HDNR1S_PSG1+Target))>>8)&$7F)|$80)
000020 0C01             	dc.b	PSGTone,PSGVol1
                        	;dc.w	voice
000022 0000             	dc.b	$00,PSGVoi
000024                  	smpsHeaderPSG		HDNR1S_PSG2, Target, PSGTone, PSGVol2, $00, PSGVoi
                        	;dc.w	loc-songStart
000024                  	rom_ptr_z80(HDNR1S_PSG2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000024 F592             	dc.w  (((((HDNR1S_PSG2+Target))<<8)&$FF00)|((((HDNR1S_PSG2+Target))>>8)&$7F)|$80)
000026 0C03             	dc.b	PSGTone,PSGVol2
                        	;dc.w	voice
000028 0000             	dc.b	$00,PSGVoi
00002A                  	smpsHeaderPSG		HDNR1S_PSG3, Target, PSGTone, PSGVol3, $00, PSGVoi
                        	;dc.w	loc-songStart
00002A                  	rom_ptr_z80(HDNR1S_PSG3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00002A 4B96             	dc.w  (((((HDNR1S_PSG3+Target))<<8)&$FF00)|((((HDNR1S_PSG3+Target))>>8)&$7F)|$80)
00002C 0C02             	dc.b	PSGTone,PSGVol3
                        	;dc.w	voice
00002E 0000             	dc.b	$00,PSGVoi
000030                  	smpsHeaderPWM		HDNR1S_PWM1, Target, $00, PWMVol
                        	;dc.w	loc-songStart
000030                  	rom_ptr_z80(HDNR1S_PWM1+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000030 2298             	dc.w  (((((HDNR1S_PWM1+Target))<<8)&$FF00)|((((HDNR1S_PWM1+Target))>>8)&$7F)|$80)
                        	;!@
000032 00               	dc.b	$00
000033 9F               	dc.b	PWMVol
000034                  	smpsHeaderPWM		HDNR1S_PWM2, Target, $00, PWMVol
                        	;dc.w	loc-songStart
000034                  	rom_ptr_z80(HDNR1S_PWM2+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000034 D899             	dc.w  (((((HDNR1S_PWM2+Target))<<8)&$FF00)|((((HDNR1S_PWM2+Target))>>8)&$7F)|$80)
                        	;!@
000036 00               	dc.b	$00
000037 9F               	dc.b	PWMVol
000038                  	smpsHeaderPWM		HDNR1S_PWM3, Target, $00, PWMVol
                        	;dc.w	loc-songStart
000038                  	rom_ptr_z80(HDNR1S_PWM3+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000038 CB9B             	dc.w  (((((HDNR1S_PWM3+Target))<<8)&$FF00)|((((HDNR1S_PWM3+Target))>>8)&$7F)|$80)
                        	;!@
00003A 00               	dc.b	$00
00003B 9F               	dc.b	PWMVol
00003C                  	smpsHeaderPWM		HDNR1S_PWM4, Target, $00, PWMVol
                        	;dc.w	loc-songStart
00003C                  	rom_ptr_z80(HDNR1S_PWM4+Target)	
                        	;dc.w z80_ptr(ptr,addr)
00003C F59C             	dc.w  (((((HDNR1S_PWM4+Target))<<8)&$FF00)|((((HDNR1S_PWM4+Target))>>8)&$7F)|$80)
                        	;!@
00003E 00               	dc.b	$00
00003F 9F               	dc.b	PWMVol

000040                  HDNR1S_FM1:
000040                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000040 E0C0             		dc.b $E0,panCenter
                        	endif
000042                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
000042 EF00             		dc.b $EF,$00
                        	endif
                        	;!@ sModOff
                        	;!@ sModOff
000044 8006             	dc.b	nRst, $06

000046                  HDNR1S_Loop1:
000046 C702C401C102BE01 	dc.b	nBb5, $02, nG5, $01, nE5, $02, nCs5, $01
00004E BB02B801BB02BE01 	dc.b	nBb4, $02, nG4, $01, nBb4, $02, nCs5, $01
000056 C102BE01BB02B801 	dc.b	nE5, $02, nCs5, $01, nBb4, $02, nG4, $01
00005E B502B201B502B801 	dc.b	nE4, $02, nCs4, $01, nE4, $02, nG4, $01
000066 BE02BB01B802B501 	dc.b	nCs5, $02, nBb4, $01, nG4, $02, nE4, $01
00006E B202AF01B202B501 	dc.b	nCs4, $02, nBb3, $01, nCs4, $02, nE4, $01
000076 BB02B801B502B201 	dc.b	nBb4, $02, nG4, $01, nE4, $02, nCs4, $01
00007E AF02AC01AF02B201 	dc.b	nBb3, $02, nG3, $01, nBb3, $02, nCs4, $01
000086                  	smpsLoop		$00, $02, HDNR1S_Loop1, Target
000086 F7               	dc.b	$F7
000087 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop1<*)
000089                  		rom_ptr_z80(HDNR1S_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000089 4680             	dc.w  (((((HDNR1S_Loop1+Target))<<8)&$FF00)|((((HDNR1S_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00008B CA02C701C402C101 	dc.b	nCs6, $02, nBb5, $01, nG5, $02, nE5, $01
000093 BE02BB01BE02C101 	dc.b	nCs5, $02, nBb4, $01, nCs5, $02, nE5, $01
00009B C702C401C102BE01 	dc.b	nBb5, $02, nG5, $01, nE5, $02, nCs5, $01
0000A3 BB02B801BB02BE01 	dc.b	nBb4, $02, nG4, $01, nBb4, $02, nCs5, $01
0000AB C402C101BE02BB01 	dc.b	nG5, $02, nE5, $01, nCs5, $02, nBb4, $01
0000B3 B802B501B802BB01 	dc.b	nG4, $02, nE4, $01, nG4, $02, nBb4, $01
0000BB C102BE01BB02B801 	dc.b	nE5, $02, nCs5, $01, nBb4, $02, nG4, $01
0000C3 B502B201B502B801 	dc.b	nE4, $02, nCs4, $01, nE4, $02, nG4, $01
0000CB AF02B201B502B801 	dc.b	nBb3, $02, nCs4, $01, nE4, $02, nG4, $01
0000D3 BB02BE01C102C401 	dc.b	nBb4, $02, nCs5, $01, nE5, $02, nG5, $01
0000DB B202B501B802BB01 	dc.b	nCs4, $02, nE4, $01, nG4, $02, nBb4, $01
0000E3 BE02C101C402C701 	dc.b	nCs5, $02, nE5, $01, nG5, $02, nBb5, $01
0000EB BE80C78002D30180 	dc.b	nCs5, nRst, nBb5, nRst, $02, nBb6, $01, nRst
0000F3 02C70180C1BB8005 	dc.b	$02, nBb5, $01, nRst, nE5, nBb4, nRst, $05
                        	;!@ Questionable
                        	; smpsAlterNote	$03
                        	; dc.b	$01
                        	; smpsAlterNote	$05
                        	; dc.b	$01
                        	; smpsAlterNote	$07
                        	; dc.b	$01
                        	; smpsAlterNote	$08
                        	; dc.b	$01
                        	; smpsAlterNote	$13
                        	; dc.b	$01
                        	; smpsAlterNote	$14
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	
0000FB                  	smpsAlterNote	$03
0000FB E103             	dc.b	$E1,$03
0000FD 8001             	dc.b	nRst, $01
0000FF                  	smpsAlterNote	$05
0000FF E105             	dc.b	$E1,$05
000101 8001             	dc.b	nRst, $01
000103                  	smpsAlterNote	$07
000103 E107             	dc.b	$E1,$07
000105 8001             	dc.b	nRst, $01
000107                  	smpsAlterNote	$08
000107 E108             	dc.b	$E1,$08
000109 8001             	dc.b	nRst, $01
00010B                  	smpsAlterNote	$13
00010B E113             	dc.b	$E1,$13
00010D 8001             	dc.b	nRst, $01
00010F                  	smpsAlterNote	$14
00010F E114             	dc.b	$E1,$14
000111 8001             	dc.b	nRst, $01
                        	
                        	;!@ dc.b	$01, $55, $3B
000113 80018055803B     	dc.b	nRst, $01, nRst, $55, nRst, $3B
000119                  	smpsAlterVol		$02
000119 E602             	dc.b	$E6,$02
00011B AC02AF01B202B501 	dc.b	nG3, $02, nBb3, $01, nCs4, $02, nE4, $01
000123 B802BB01BE02C101 	dc.b	nG4, $02, nBb4, $01, nCs5, $02, nE5, $01
00012B BE02BB01B802B501 	dc.b	nCs5, $02, nBb4, $01, nG4, $02, nE4, $01
000133 B802BB01BE02C101 	dc.b	nG4, $02, nBb4, $01, nCs5, $02, nE5, $01
00013B 8005             	dc.b	nRst, $05
00013D                  	smpsAlterVol		$01
00013D E601             	dc.b	$E6,$01
00013F CA018002C7018002 	dc.b	nCs6, $01, nRst, $02, nBb5, $01, nRst, $02
000147 D301             	dc.b	nBb6, $01

000149                  HDNR1S_Jump1:
                        	;!@ dc.b	nRst, $54, $54, $54, $54, $54
000149 8054805480548054 	dc.b	nRst, $54, nRst, $54, nRst, $54, nRst, $54, nRst, $54
000151 8054
000153                  	smpsAlterVol		$FA
000153 E6FA             	dc.b	$E6,$FA
000155 B302B601BA02BF01 	dc.b	nD4, $02, nF4, $01, nA4, $02, nD5, $01
00015D C202C601CB02CE01 	dc.b	nF5, $02, nA5, $01, nD6, $02, nF6, $01
000165 D202CE01CB02C601 	dc.b	nA6, $02, nF6, $01, nD6, $02, nA5, $01
00016D C202BF01BA02B301 	dc.b	nF5, $02, nD5, $01, nA4, $02, nD4, $01
000175 8018             	dc.b	nRst, $18
000177                  	smpsAlterVol		$FF
000177 E6FF             	dc.b	$E6,$FF
000179 B602BA01BF02C201 	dc.b	nF4, $02, nA4, $01, nD5, $02, nF5, $01
000181 C602CB01CE02D201 	dc.b	nA5, $02, nD6, $01, nF6, $02, nA6, $01
000189 D702D201CE02CB01 	dc.b	nD7, $02, nA6, $01, nF6, $02, nD6, $01
000191 C602C201BA02B601 	dc.b	nA5, $02, nF5, $01, nA4, $02, nF4, $01
000199 8018             	dc.b	nRst, $18
00019B                  	smpsAlterVol		$FF
00019B E6FF             	dc.b	$E6,$FF
00019D B102B501B802BD01 	dc.b	nC4, $02, nE4, $01, nG4, $02, nC5, $01
0001A5 C102C401C902     	dc.b	nE5, $02, nG5, $01, nC6, $02
0001AB                  	smpsAlterVol		$01
0001AB E601             	dc.b	$E6,$01
0001AD CD01D002CD01C902 	dc.b	nE6, $01, nG6, $02, nE6, $01, nC6, $02
0001B5 C401C102BD01B802 	dc.b	nG5, $01, nE5, $02, nC5, $01, nG4, $02
0001BD B1018030         	dc.b	nC4, $01, nRst, $30
0001C1                  	smpsAlterNote	$00
0001C1 E100             	dc.b	$E1,$00
0001C3                  	smpsAlterVol		$FE
0001C3 E6FE             	dc.b	$E6,$FE
0001C5 C1028007C3028007 	dc.b	nE5, $02, nRst, $07, nFs5, $02, nRst, $07
0001CD BF028004B903C5BA 	dc.b	nD5, $02, nRst, $04, nAb4, $03, nAb5, nA4
0001D5 C6BCC8C1B5C20280 	dc.b	nA5, nB4, nB5, nE5, nE4, nF5, $02, nRst
0001DD 07C3028007BF0280 	dc.b	$07, nFs5, $02, nRst, $07, nD5, $02, nRst
0001E5 04C102C301C502C6 	dc.b	$04, nE5, $02, nFs5, $01, nAb5, $02, nA5
0001ED 01C302C501C602C8 	dc.b	$01, nFs5, $02, nAb5, $01, nA5, $02, nB5
0001F5 01C502C601C802CB 	dc.b	$01, nAb5, $02, nA5, $01, nB5, $02, nD6
0001FD 01CD03           	dc.b	$01, nE6, $03
000200                  	smpsAlterNote	$0F
000200 E10F             	dc.b	$E1,$0F
000202 E7CB01           	dc.b	smpsNoAttack, nD6, $01
000205                  	smpsAlterNote	$0A
000205 E10A             	dc.b	$E1,$0A
000207 E7C7             	dc.b	smpsNoAttack, nBb5
000209                  	smpsAlterNote	$FD
000209 E1FD             	dc.b	$E1,$FD
00020B E7C3             	dc.b	smpsNoAttack, nFs5
00020D                  	smpsAlterNote	$FF
00020D E1FF             	dc.b	$E1,$FF
00020F C1028007C3028007 	dc.b	nE5, $02, nRst, $07, nFs5, $02, nRst, $07
000217 BF028001B903C5C6 	dc.b	nD5, $02, nRst, $01, nAb4, $03, nAb5, nA5
00021F BAC8C6BAC1       	dc.b	nA4, nB5, nA5, nA4, nE5
000224                  	smpsAlterNote	$13
000224 E113             	dc.b	$E1,$13
000226 E7BF01           	dc.b	smpsNoAttack, nD5, $01
000229                  	smpsAlterNote	$15
000229 E115             	dc.b	$E1,$15
00022B E7BB             	dc.b	smpsNoAttack, nBb4
00022D                  	smpsAlterNote	$0A
00022D E10A             	dc.b	$E1,$0A
00022F E7B7             	dc.b	smpsNoAttack, nFs4
000231                  	smpsAlterNote	$01
000231 E101             	dc.b	$E1,$01
000233 C2028007C3028007 	dc.b	nF5, $02, nRst, $07, nFs5, $02, nRst, $07
00023B BF028004CE02CB01 	dc.b	nD5, $02, nRst, $04, nF6, $02, nD6, $01
000243 C802C601CB02C801 	dc.b	nB5, $02, nA5, $01, nD6, $02, nB5, $01
00024B C602C501C602C501 	dc.b	nA5, $02, nAb5, $01, nA5, $02, nAb5, $01
000253 C302C201BF03     	dc.b	nFs5, $02, nF5, $01, nD5, $03
000259                  	smpsAlterNote	$09
000259 E109             	dc.b	$E1,$09
00025B E7BD01           	dc.b	smpsNoAttack, nC5, $01
00025E                  	smpsAlterNote	$0A
00025E E10A             	dc.b	$E1,$0A
000260 E7B9             	dc.b	smpsNoAttack, nAb4
000262                  	smpsAlterNote	$04
000262 E104             	dc.b	$E1,$04
000264 E7B5             	dc.b	smpsNoAttack, nE4
000266                  	smpsAlterNote	$FF
000266 E1FF             	dc.b	$E1,$FF
000268 C5028007C6028007 	dc.b	nAb5, $02, nRst, $07, nA5, $02, nRst, $07
000270 C3028004BC03C8BD 	dc.b	nFs5, $02, nRst, $04, nB4, $03, nB5, nC5
000278 C9BFCBC4B8C50280 	dc.b	nC6, nD5, nD6, nG5, nG4, nAb5, $02, nRst
000280 07C6028007C30280 	dc.b	$07, nA5, $02, nRst, $07, nFs5, $02, nRst
000288 04C402C501C802C9 	dc.b	$04, nG5, $02, nAb5, $01, nB5, $02, nC6
000290 01C502C801C902CB 	dc.b	$01, nAb5, $02, nB5, $01, nC6, $02, nD6
000298 01C802C901CB02CE 	dc.b	$01, nB5, $02, nC6, $01, nD6, $02, nF6
0002A0 01D003           	dc.b	$01, nG6, $03
0002A3                  	smpsAlterNote	$06
0002A3 E106             	dc.b	$E1,$06
0002A5 E7CE01           	dc.b	smpsNoAttack, nF6, $01
0002A8                  	smpsAlterNote	$FF
0002A8 E1FF             	dc.b	$E1,$FF
0002AA E7CA             	dc.b	smpsNoAttack, nCs6
0002AC                  	smpsAlterNote	$F4
0002AC E1F4             	dc.b	$E1,$F4
0002AE E7C6             	dc.b	smpsNoAttack, nA5
0002B0                  	smpsAlterNote	$01
0002B0 E101             	dc.b	$E1,$01
0002B2 C5028007C6028007 	dc.b	nAb5, $02, nRst, $07, nA5, $02, nRst, $07
0002BA C3028001BC03C8C9 	dc.b	nFs5, $02, nRst, $01, nB4, $03, nB5, nC6
0002C2 BDCBC9BDC4       	dc.b	nC5, nD6, nC6, nC5, nG5
0002C7                  	smpsAlterNote	$EF
0002C7 E1EF             	dc.b	$E1,$EF
0002C9 E7C301           	dc.b	smpsNoAttack, nFs5, $01
0002CC                  	smpsAlterNote	$0C
0002CC E10C             	dc.b	$E1,$0C
0002CE E7BE             	dc.b	smpsNoAttack, nCs5
0002D0                  	smpsAlterNote	$FD
0002D0 E1FD             	dc.b	$E1,$FD
0002D2 E7BA             	dc.b	smpsNoAttack, nA4
0002D4                  	smpsAlterNote	$FF
0002D4 E1FF             	dc.b	$E1,$FF
0002D6 C5028007C6028007 	dc.b	nAb5, $02, nRst, $07, nA5, $02, nRst, $07
0002DE C3028004D102CF01 	dc.b	nFs5, $02, nRst, $04, nAb6, $02, nFs6, $01
0002E6 CE02CB01CE02CB01 	dc.b	nF6, $02, nD6, $01, nF6, $02, nD6, $01
0002EE C902C801C902C801 	dc.b	nC6, $02, nB5, $01, nC6, $02, nB5, $01
0002F6 C502C301C103     	dc.b	nAb5, $02, nFs5, $01, nE5, $03
0002FC                  	smpsAlterNote	$06
0002FC E106             	dc.b	$E1,$06
0002FE E7BF01           	dc.b	smpsNoAttack, nD5, $01
000301                  	smpsAlterNote	$FA
000301 E1FA             	dc.b	$E1,$FA
000303 E7BB             	dc.b	smpsNoAttack, nBb4
000305                  	smpsAlterNote	$F0
000305 E1F0             	dc.b	$E1,$F0
000307 E7B7             	dc.b	smpsNoAttack, nFs4
000309                  	smpsAlterNote	$FF
000309 E1FF             	dc.b	$E1,$FF
                        	;!@ dc.b	nRst, $55, $55, $54, $3E, $3E, $3E, $3E
00030B 805580558054803E 	dc.b	nRst, $55, nRst, $55, nRst, $54, nRst, $3E, nRst, $3E, nRst, $3E, nRst, $3E
000313 803E803E803E
                        	;!@ dc.b	$3E
000319 803E             	dc.b	nRst, $3E
00031B                  	smpsAlterVol		$07
00031B E607             	dc.b	$E6,$07
00031D B102B301B402B601 	dc.b	nC4, $02, nD4, $01, nEb4, $02, nF4, $01
000325 B802BB01BD02BF01 	dc.b	nG4, $02, nBb4, $01, nC5, $02, nD5, $01
                        	;!@ dc.b	nEb5, $18, nD5, $0C, nBb4, nC5, nG5
00032D C018BF0CBBBD     	dc.b	nEb5, $18, nD5, $0C, nBb4, nC5

000333                  HDNR1S_Loop2:
000333                  	smpsAlterVol		$01
000333 E601             	dc.b	$E6,$01
                        	;!@ dc.b	smpsNoAttack, $01
000335 C4E701           	dc.b	nG5, smpsNoAttack, $01
000338                  	smpsLoop		$00, $03, HDNR1S_Loop2, Target
000338 F7               	dc.b	$F7
000339 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop2<*)
00033B                  		rom_ptr_z80(HDNR1S_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00033B 3383             	dc.w  (((((HDNR1S_Loop2+Target))<<8)&$FF00)|((((HDNR1S_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00033D                  	smpsAlterVol		$02
00033D E602             	dc.b	$E6,$02
                        	;!@ dc.b	smpsNoAttack, $01
00033F C4E701           	dc.b	nG5, smpsNoAttack, $01
000342                  	smpsAlterVol		$01
000342 E601             	dc.b	$E6,$01

000344                  HDNR1S_Loop3:
                        	;!@ dc.b	smpsNoAttack, $01
000344 C4E701           	dc.b	nG5, smpsNoAttack, $01
000347                  	smpsAlterVol		$01
000347 E601             	dc.b	$E6,$01
                        	;!@ dc.b	smpsNoAttack, $01
000349 C4E701           	dc.b	nG5, smpsNoAttack, $01
00034C                  	smpsAlterVol		$02
00034C E602             	dc.b	$E6,$02
00034E                  	smpsLoop		$00, $02, HDNR1S_Loop3, Target
00034E F7               	dc.b	$F7
00034F 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop3<*)
000351                  		rom_ptr_z80(HDNR1S_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000351 4483             	dc.w  (((((HDNR1S_Loop3+Target))<<8)&$FF00)|((((HDNR1S_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	smpsNoAttack, $01
000353 C4E701           	dc.b	nG5, smpsNoAttack, $01
000356                  	smpsAlterVol		$02
000356 E602             	dc.b	$E6,$02
                        	;!@ dc.b	smpsNoAttack, $01
000358 C4E701           	dc.b	nG5, smpsNoAttack, $01
00035B                  	smpsAlterVol		$01
00035B E601             	dc.b	$E6,$01
                        	;!@ dc.b	smpsNoAttack, $01
00035D C4E701           	dc.b	nG5, smpsNoAttack, $01
000360                  	smpsAlterVol		$02
000360 E602             	dc.b	$E6,$02

000362                  HDNR1S_Loop4:
                        	;!@ dc.b	smpsNoAttack, $01
000362 C4E701           	dc.b	nG5, smpsNoAttack, $01
000365                  	smpsAlterVol		$02
000365 E602             	dc.b	$E6,$02
                        	;!@ dc.b	smpsNoAttack, $01
000367 C4E701           	dc.b	nG5, smpsNoAttack, $01
00036A                  	smpsAlterVol		$03
00036A E603             	dc.b	$E6,$03
00036C                  	smpsLoop		$00, $02, HDNR1S_Loop4, Target
00036C F7               	dc.b	$F7
00036D 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop4<*)
00036F                  		rom_ptr_z80(HDNR1S_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
00036F 6283             	dc.w  (((((HDNR1S_Loop4+Target))<<8)&$FF00)|((((HDNR1S_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	smpsNoAttack, $01
000371 C4E701           	dc.b	nG5, smpsNoAttack, $01
000374                  	smpsAlterVol		$04
000374 E604             	dc.b	$E6,$04
                        	;!@ dc.b	smpsNoAttack, $01
000376 C4E701           	dc.b	nG5, smpsNoAttack, $01
000379                  	smpsAlterVol		$03
000379 E603             	dc.b	$E6,$03
                        	;!@ dc.b	smpsNoAttack, $01
00037B C4E701           	dc.b	nG5, smpsNoAttack, $01
00037E                  	smpsAlterVol		$06
00037E E606             	dc.b	$E6,$06
                        	;!@ dc.b	smpsNoAttack, $01
000380 C4E701           	dc.b	nG5, smpsNoAttack, $01
000383                  	smpsAlterVol		$05
000383 E605             	dc.b	$E6,$05
                        	;!@ dc.b	smpsNoAttack, $01
000385 C4E701           	dc.b	nG5, smpsNoAttack, $01
000388                  	smpsAlterVol		$0A
000388 E60A             	dc.b	$E6,$0A
                        	;!@ dc.b	smpsNoAttack, $01
00038A C4E701           	dc.b	nG5, smpsNoAttack, $01
00038D                  	smpsAlterVol		$10
00038D E610             	dc.b	$E6,$10
                        	;!@ dc.b	smpsNoAttack, $01
00038F C4E701           	dc.b	nG5, smpsNoAttack, $01
000392                  	smpsAlterVol		$20
000392 E620             	dc.b	$E6,$20
                        	;!@ dc.b	smpsNoAttack, $02, nRst
                        	;!@ dc.b	smpsNoAttack, $02
000394 C4E702           	dc.b	nG5, smpsNoAttack, $02

000397                  HDNR1S_Loop5:
                        	;!@ dc.b	$01
000397 8001             	dc.b	nRst, $01
000399                  	smpsLoop		$00, $18, HDNR1S_Loop5, Target
000399 F7               	dc.b	$F7
00039A 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop5<*)
00039C                  		rom_ptr_z80(HDNR1S_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
00039C 9783             	dc.w  (((((HDNR1S_Loop5+Target))<<8)&$FF00)|((((HDNR1S_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00039E                  	smpsAlterVol		$BA
00039E E6BA             	dc.b	$E6,$BA
                        	;!@dc.b	nC5

0003A0                  HDNR1S_Loop6:
                        	;!@ dc.b	smpsNoAttack, $01
0003A0 BDE701           	dc.b	nC5, smpsNoAttack, $01
0003A3                  	smpsAlterVol		$FF
0003A3 E6FF             	dc.b	$E6,$FF
0003A5                  	smpsLoop		$00, $04, HDNR1S_Loop6, Target
0003A5 F7               	dc.b	$F7
0003A6 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop6<*)
0003A8                  		rom_ptr_z80(HDNR1S_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003A8 A083             	dc.w  (((((HDNR1S_Loop6+Target))<<8)&$FF00)|((((HDNR1S_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	smpsNoAttack, $02
0003AA BDE702           	dc.b	nC5, smpsNoAttack, $02
0003AD                  	smpsAlterVol		$FF
0003AD E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $01
0003AF BDE701           	dc.b	nC5, smpsNoAttack, $01
0003B2                  	smpsAlterVol		$FF
0003B2 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $01
0003B4 BDE701           	dc.b	nC5, smpsNoAttack, $01
0003B7                  	smpsAlterVol		$FF
0003B7 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $03
0003B9 BDE703           	dc.b	nC5, smpsNoAttack, $03
0003BC                  	smpsAlterVol		$FF
0003BC E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $01
0003BE BDE701           	dc.b	nC5, smpsNoAttack, $01
0003C1                  	smpsAlterVol		$FF
0003C1 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $01
0003C3 BDE701           	dc.b	nC5, smpsNoAttack, $01

0003C6                  HDNR1S_Loop7:
0003C6                  	smpsAlterVol		$FF
0003C6 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $02
0003C8 BDE702           	dc.b	nC5, smpsNoAttack, $02
0003CB                  	smpsLoop		$00, $05, HDNR1S_Loop7, Target
0003CB F7               	dc.b	$F7
0003CC 0005             	dc.b	$00,$05
                        	if (HDNR1S_Loop7<*)
0003CE                  		rom_ptr_z80(HDNR1S_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003CE C683             	dc.w  (((((HDNR1S_Loop7+Target))<<8)&$FF00)|((((HDNR1S_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0003D0                  	smpsAlterVol		$F1
0003D0 E6F1             	dc.b	$E6,$F1
0003D2 BC01             	dc.b	nB4, $01
0003D4                  	smpsAlterVol		$FF
0003D4 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $05
0003D6 BCE705           	dc.b	nB4, smpsNoAttack, $05
0003D9                  	smpsAlterVol		$FF
0003D9 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $05
0003DB BCE705           	dc.b	nB4, smpsNoAttack, $05
0003DE                  	smpsAlterVol		$FF
0003DE E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $06
0003E0 BCE706           	dc.b	nB4, smpsNoAttack, $06
0003E3                  	smpsAlterVol		$FF
0003E3 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $06
0003E5 BCE706           	dc.b	nB4, smpsNoAttack, $06
0003E8                  	smpsAlterVol		$FF
0003E8 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $05
0003EA BCE705           	dc.b	nB4, smpsNoAttack, $05
0003ED                  	smpsAlterVol		$FF
0003ED E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $06
0003EF BCE706           	dc.b	nB4, smpsNoAttack, $06
0003F2                  	smpsAlterVol		$FF
0003F2 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $07
0003F4 BCE707           	dc.b	nB4, smpsNoAttack, $07
0003F7                  	smpsAlterVol		$FF
0003F7 E6FF             	dc.b	$E6,$FF
                        	;!@ dc.b	smpsNoAttack, $07, nC5, $18, nCs5, $0C
0003F9 BCE707BD18BE0C   	dc.b	nB4, smpsNoAttack, $07, nC5, $18, nCs5, $0C
000400                  	smpsAlterVol		$06
000400 E606             	dc.b	$E6,$06
000402                  	smpsJump		HDNR1S_Jump1, Target
000402 F6               	dc.b	$F6
                        	if (HDNR1S_Jump1<*)
000403                  		rom_ptr_z80(HDNR1S_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000403 4981             	dc.w  (((((HDNR1S_Jump1+Target))<<8)&$FF00)|((((HDNR1S_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000405                  HDNR1S_FM2:
000405                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
000405 EF00             		dc.b $EF,$00
                        	endif
                        	;!@ sModOff
000407                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000407 E0C0             		dc.b $E0,panCenter
                        	endif
                        	;!@ sModOff
000409                  	smpsAlterNote	$FF
000409 E1FF             	dc.b	$E1,$FF
00040B 8006             	dc.b	nRst, $06
00040D                  	smpsAlterNote	$00
00040D E100             	dc.b	$E1,$00
                        	;!@ dc.b	$30, $55, $24, nE5, $01, nBb5, nRst, nE6
00040F 80308055802480C1 	dc.b	nRst, $30, nRst, $55, nRst, $24, nRst, nE5, nRst, $01, nBb5, nRst, nE6
000417 8001C780CD
00041C 80D0CD80C48080B8 	dc.b	nRst, nG6, nE6, nRst, nG5, nRst, nRst, nG4
000424 05               	dc.b	$05
000425                  	smpsAlterNote	$03
000425 E103             	dc.b	$E1,$03
000427 E7B601           	dc.b	smpsNoAttack, nF4, $01
00042A                  	smpsAlterNote	$05
00042A E105             	dc.b	$E1,$05
00042C E7B4             	dc.b	smpsNoAttack, nEb4
00042E                  	smpsAlterNote	$07
00042E E107             	dc.b	$E1,$07
000430 E7B2             	dc.b	smpsNoAttack, nCs4
000432                  	smpsAlterNote	$08
000432 E108             	dc.b	$E1,$08
000434 E7B0             	dc.b	smpsNoAttack, nB3
000436                  	smpsAlterNote	$13
000436 E113             	dc.b	$E1,$13
000438 E7AE             	dc.b	smpsNoAttack, nA3
00043A                  	smpsAlterNote	$14
00043A E114             	dc.b	$E1,$14
00043C E7AC             	dc.b	smpsNoAttack, nG3
00043E                  	smpsAlterNote	$00
00043E E100             	dc.b	$E1,$00
                        	;!@ dc.b	smpsNoAttack, $01, nRst, $55, $53
000440 E70180558053     	dc.b	smpsNoAttack, $01, nRst, $55, nRst, $53
000446                  	smpsAlterVol		$07
000446 E607             	dc.b	$E6,$07
000448 B501B88004BE0180 	dc.b	nE4, $01, nG4, nRst, $04, nCs5, $01, nRst
000450 C780CD80         	dc.b	nBb5, nRst, nE6, nRst

000454                  HDNR1S_Loop8:
000454 8054             	dc.b	nRst, $54
000456                  	smpsLoop		$00, $07, HDNR1S_Loop8, Target
000456 F7               	dc.b	$F7
000457 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop8<*)
000459                  		rom_ptr_z80(HDNR1S_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
000459 5484             	dc.w  (((((HDNR1S_Loop8+Target))<<8)&$FF00)|((((HDNR1S_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00045B                  	smpsAlterNote	$00
00045B E100             	dc.b	$E1,$00

00045D                  HDNR1S_Loop9:
                        	;!@ dc.b	$55, $0A, $01, $2F, $01, $2F, $01
00045D 8055800A8001802F 	dc.b	nRst, $55, nRst, $0A, nRst, $01, nRst, $2F, nRst, $01, nRst, $2F, nRst, $01
000465 8001802F8001
00046B                  	smpsLoop		$00, $02, HDNR1S_Loop9, Target
00046B F7               	dc.b	$F7
00046C 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop9<*)
00046E                  		rom_ptr_z80(HDNR1S_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
00046E 5D84             	dc.w  (((((HDNR1S_Loop9+Target))<<8)&$FF00)|((((HDNR1S_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000470                  HDNR1S_Loop10:
                        	;!@ dc.b	$4E
000470 804E             	dc.b	nRst, $4E
000472                  	smpsLoop		$00, $07, HDNR1S_Loop10, Target
000472 F7               	dc.b	$F7
000473 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop10<*)
000475                  		rom_ptr_z80(HDNR1S_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
000475 7084             	dc.w  (((((HDNR1S_Loop10+Target))<<8)&$FF00)|((((HDNR1S_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$55, $55, $55, $03
000477 8055555503       	dc.b	nRst, $55, $55, $55, $03
00047C                  	smpsJump		HDNR1S_Loop8, Target
00047C F6               	dc.b	$F6
                        	if (HDNR1S_Loop8<*)
00047D                  		rom_ptr_z80(HDNR1S_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
00047D 5484             	dc.w  (((((HDNR1S_Loop8+Target))<<8)&$FF00)|((((HDNR1S_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00047F                  HDNR1S_FM3:
00047F                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
00047F E0C0             		dc.b $E0,panCenter
                        	endif
000481                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
000481 EF01             		dc.b $EF,$01
                        	endif
000483 8009             	dc.b	nRst, $09

000485                  HDNR1S_Loop11:
000485 AF028001A3028001 	dc.b	nBb3, $02, nRst, $01, nBb2, $02, nRst, $01
00048D A9028004A9028001 	dc.b	nE3, $02, nRst, $04, nE3, $02, nRst, $01
000495 9D028001A3028004 	dc.b	nE2, $02, nRst, $01, nBb2, $02, nRst, $04
00049D A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
0004A5 9D0280049D028001 	dc.b	nE2, $02, nRst, $04, nE2, $02, nRst, $01
0004AD 9102800197028004 	dc.b	nE1, $02, nRst, $01, nBb1, $02, nRst, $04
0004B5                  	smpsLoop		$00, $02, HDNR1S_Loop11, Target
0004B5 F7               	dc.b	$F7
0004B6 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop11<*)
0004B8                  		rom_ptr_z80(HDNR1S_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004B8 8584             	dc.w  (((((HDNR1S_Loop11+Target))<<8)&$FF00)|((((HDNR1S_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0004BA B2028001A6028001 	dc.b	nCs4, $02, nRst, $01, nCs3, $02, nRst, $01
0004C2 B2028004AC028001 	dc.b	nCs4, $02, nRst, $04, nG3, $02, nRst, $01
0004CA A0028001AC028004 	dc.b	nG2, $02, nRst, $01, nG3, $02, nRst, $04
0004D2 A60280019A028001 	dc.b	nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
0004DA A6028004A3028001 	dc.b	nCs3, $02, nRst, $04, nBb2, $02, nRst, $01
0004E2 97028001A3028001 	dc.b	nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
0004EA 9703             	dc.b	nBb1, $03
0004EC                  	smpsAlterVol		$0A
0004EC E60A             	dc.b	$E6,$0A
0004EE A3028001         	dc.b	nBb2, $02, nRst, $01
0004F2                  	smpsAlterVol		$F6
0004F2 E6F6             	dc.b	$E6,$F6
0004F4 9A03             	dc.b	nCs2, $03
0004F6                  	smpsAlterVol		$0A
0004F6 E60A             	dc.b	$E6,$0A
0004F8 A6028001         	dc.b	nCs3, $02, nRst, $01
0004FC                  	smpsAlterVol		$F6
0004FC E6F6             	dc.b	$E6,$F6
0004FE A003             	dc.b	nG2, $03
000500                  	smpsAlterVol		$0A
000500 E60A             	dc.b	$E6,$0A
000502 AC028001         	dc.b	nG3, $02, nRst, $01
000506                  	smpsAlterVol		$F6
000506 E6F6             	dc.b	$E6,$F6
000508 A603             	dc.b	nCs3, $03
00050A                  	smpsAlterVol		$0A
00050A E60A             	dc.b	$E6,$0A
00050C B2028001         	dc.b	nCs4, $02, nRst, $01
000510                  	smpsAlterVol		$F6
000510 E6F6             	dc.b	$E6,$F6
000512 A90380A680A30680 	dc.b	nE3, $03, nRst, nCs3, nRst, nBb2, $06, nRst

00051A                  HDNR1S_Loop12:
00051A 9B028001A7028001 	dc.b	nD2, $02, nRst, $01, nD3, $02, nRst, $01
000522                  	smpsLoop		$00, $18, HDNR1S_Loop12, Target
000522 F7               	dc.b	$F7
000523 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop12<*)
000525                  		rom_ptr_z80(HDNR1S_Loop12+Target)
                        	;dc.w z80_ptr(ptr,addr)
000525 1A85             	dc.w  (((((HDNR1S_Loop12+Target))<<8)&$FF00)|((((HDNR1S_Loop12+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000527                  HDNR1S_Loop13:
000527 9A028001A6028001 	dc.b	nCs2, $02, nRst, $01, nCs3, $02, nRst, $01
00052F                  	smpsLoop		$00, $03, HDNR1S_Loop13, Target
00052F F7               	dc.b	$F7
000530 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop13<*)
000532                  		rom_ptr_z80(HDNR1S_Loop13+Target)
                        	;dc.w z80_ptr(ptr,addr)
000532 2785             	dc.w  (((((HDNR1S_Loop13+Target))<<8)&$FF00)|((((HDNR1S_Loop13+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000534 9A028001A602800D 	dc.b	nCs2, $02, nRst, $01, nCs3, $02, nRst, $0D

00053C                  HDNR1S_Jump2:
00053C 800C             	dc.b	nRst, $0C
00053E                  	smpsAlterVol		$01
00053E E601             	dc.b	$E6,$01

000540                  HDNR1S_Loop14:
000540 9B028001A7028001 	dc.b	nD2, $02, nRst, $01, nD3, $02, nRst, $01
000548                  	smpsLoop		$00, $06, HDNR1S_Loop14, Target
000548 F7               	dc.b	$F7
000549 0006             	dc.b	$00,$06
                        	if (HDNR1S_Loop14<*)
00054B                  		rom_ptr_z80(HDNR1S_Loop14+Target)
                        	;dc.w z80_ptr(ptr,addr)
00054B 4085             	dc.w  (((((HDNR1S_Loop14+Target))<<8)&$FF00)|((((HDNR1S_Loop14+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00054D                  HDNR1S_Loop15:
00054D 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
000555                  	smpsLoop		$00, $02, HDNR1S_Loop15, Target
000555 F7               	dc.b	$F7
000556 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop15<*)
000558                  		rom_ptr_z80(HDNR1S_Loop15+Target)
                        	;dc.w z80_ptr(ptr,addr)
000558 4D85             	dc.w  (((((HDNR1S_Loop15+Target))<<8)&$FF00)|((((HDNR1S_Loop15+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00055A                  HDNR1S_Loop16:
00055A 97028001A3028001 	dc.b	nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
000562                  	smpsLoop		$00, $04, HDNR1S_Loop16, Target
000562 F7               	dc.b	$F7
000563 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop16<*)
000565                  		rom_ptr_z80(HDNR1S_Loop16+Target)
                        	;dc.w z80_ptr(ptr,addr)
000565 5A85             	dc.w  (((((HDNR1S_Loop16+Target))<<8)&$FF00)|((((HDNR1S_Loop16+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000567                  HDNR1S_Loop17:
000567 99028001A5028001 	dc.b	nC2, $02, nRst, $01, nC3, $02, nRst, $01
00056F                  	smpsLoop		$00, $04, HDNR1S_Loop17, Target
00056F F7               	dc.b	$F7
000570 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop17<*)
000572                  		rom_ptr_z80(HDNR1S_Loop17+Target)
                        	;dc.w z80_ptr(ptr,addr)
000572 6785             	dc.w  (((((HDNR1S_Loop17+Target))<<8)&$FF00)|((((HDNR1S_Loop17+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000574                  HDNR1S_Loop18:
000574 94028001A0028001 	dc.b	nG1, $02, nRst, $01, nG2, $02, nRst, $01
00057C                  	smpsLoop		$00, $04, HDNR1S_Loop18, Target
00057C F7               	dc.b	$F7
00057D 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop18<*)
00057F                  		rom_ptr_z80(HDNR1S_Loop18+Target)
                        	;dc.w z80_ptr(ptr,addr)
00057F 7485             	dc.w  (((((HDNR1S_Loop18+Target))<<8)&$FF00)|((((HDNR1S_Loop18+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000581                  HDNR1S_Loop19:
000581 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
000589                  	smpsLoop		$00, $04, HDNR1S_Loop19, Target
000589 F7               	dc.b	$F7
00058A 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop19<*)
00058C                  		rom_ptr_z80(HDNR1S_Loop19+Target)
                        	;dc.w z80_ptr(ptr,addr)
00058C 8185             	dc.w  (((((HDNR1S_Loop19+Target))<<8)&$FF00)|((((HDNR1S_Loop19+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00058E                  HDNR1S_Loop20:
00058E 9D028001A9028001 	dc.b	nE2, $02, nRst, $01, nE3, $02, nRst, $01
000596                  	smpsLoop		$00, $08, HDNR1S_Loop20, Target
000596 F7               	dc.b	$F7
000597 0008             	dc.b	$00,$08
                        	if (HDNR1S_Loop20<*)
000599                  		rom_ptr_z80(HDNR1S_Loop20+Target)
                        	;dc.w z80_ptr(ptr,addr)
000599 8E85             	dc.w  (((((HDNR1S_Loop20+Target))<<8)&$FF00)|((((HDNR1S_Loop20+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00059B                  HDNR1S_Loop21:
00059B 9B028001A7028001 	dc.b	nD2, $02, nRst, $01, nD3, $02, nRst, $01
0005A3                  	smpsLoop		$00, $06, HDNR1S_Loop21, Target
0005A3 F7               	dc.b	$F7
0005A4 0006             	dc.b	$00,$06
                        	if (HDNR1S_Loop21<*)
0005A6                  		rom_ptr_z80(HDNR1S_Loop21+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005A6 9B85             	dc.w  (((((HDNR1S_Loop21+Target))<<8)&$FF00)|((((HDNR1S_Loop21+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005A8                  HDNR1S_Loop22:
0005A8 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
0005B0                  	smpsLoop		$00, $02, HDNR1S_Loop22, Target
0005B0 F7               	dc.b	$F7
0005B1 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop22<*)
0005B3                  		rom_ptr_z80(HDNR1S_Loop22+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005B3 A885             	dc.w  (((((HDNR1S_Loop22+Target))<<8)&$FF00)|((((HDNR1S_Loop22+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005B5                  HDNR1S_Loop23:
0005B5 97028001A3028001 	dc.b	nBb1, $02, nRst, $01, nBb2, $02, nRst, $01
0005BD                  	smpsLoop		$00, $04, HDNR1S_Loop23, Target
0005BD F7               	dc.b	$F7
0005BE 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop23<*)
0005C0                  		rom_ptr_z80(HDNR1S_Loop23+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005C0 B585             	dc.w  (((((HDNR1S_Loop23+Target))<<8)&$FF00)|((((HDNR1S_Loop23+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005C2                  HDNR1S_Loop24:
0005C2 99028001A5028001 	dc.b	nC2, $02, nRst, $01, nC3, $02, nRst, $01
0005CA                  	smpsLoop		$00, $04, HDNR1S_Loop24, Target
0005CA F7               	dc.b	$F7
0005CB 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop24<*)
0005CD                  		rom_ptr_z80(HDNR1S_Loop24+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005CD C285             	dc.w  (((((HDNR1S_Loop24+Target))<<8)&$FF00)|((((HDNR1S_Loop24+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005CF                  HDNR1S_Loop25:
0005CF 94028001A0028001 	dc.b	nG1, $02, nRst, $01, nG2, $02, nRst, $01
0005D7                  	smpsLoop		$00, $04, HDNR1S_Loop25, Target
0005D7 F7               	dc.b	$F7
0005D8 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop25<*)
0005DA                  		rom_ptr_z80(HDNR1S_Loop25+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005DA CF85             	dc.w  (((((HDNR1S_Loop25+Target))<<8)&$FF00)|((((HDNR1S_Loop25+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005DC                  HDNR1S_Loop26:
0005DC 9E028001AA028001 	dc.b	nF2, $02, nRst, $01, nF3, $02, nRst, $01
0005E4                  	smpsLoop		$00, $04, HDNR1S_Loop26, Target
0005E4 F7               	dc.b	$F7
0005E5 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop26<*)
0005E7                  		rom_ptr_z80(HDNR1S_Loop26+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005E7 DC85             	dc.w  (((((HDNR1S_Loop26+Target))<<8)&$FF00)|((((HDNR1S_Loop26+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005E9                  HDNR1S_Loop27:
0005E9 9D028001A9028001 	dc.b	nE2, $02, nRst, $01, nE3, $02, nRst, $01
0005F1                  	smpsLoop		$00, $04, HDNR1S_Loop27, Target
0005F1 F7               	dc.b	$F7
0005F2 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop27<*)
0005F4                  		rom_ptr_z80(HDNR1S_Loop27+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005F4 E985             	dc.w  (((((HDNR1S_Loop27+Target))<<8)&$FF00)|((((HDNR1S_Loop27+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0005F6                  HDNR1S_Loop28:
0005F6 9B028001         	dc.b	nD2, $02, nRst, $01

0005FA                  HDNR1S_Loop29:
0005FA A7028001         	dc.b	nD3, $02, nRst, $01
0005FE                  	smpsLoop		$00, $04, HDNR1S_Loop28, Target
0005FE F7               	dc.b	$F7
0005FF 0004             	dc.b	$00,$04
                        	if (HDNR1S_Loop28<*)
000601                  		rom_ptr_z80(HDNR1S_Loop28+Target)
                        	;dc.w z80_ptr(ptr,addr)
000601 F685             	dc.w  (((((HDNR1S_Loop28+Target))<<8)&$FF00)|((((HDNR1S_Loop28+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000603 9B03             	dc.b	nD2, $03
000605                  	smpsLoop		$01, $02, HDNR1S_Loop29, Target
000605 F7               	dc.b	$F7
000606 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop29<*)
000608                  		rom_ptr_z80(HDNR1S_Loop29+Target)
                        	;dc.w z80_ptr(ptr,addr)
000608 FA85             	dc.w  (((((HDNR1S_Loop29+Target))<<8)&$FF00)|((((HDNR1S_Loop29+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00060A                  HDNR1S_Loop30:
00060A A70280019B028001 	dc.b	nD3, $02, nRst, $01, nD2, $02, nRst, $01
000612                  	smpsLoop		$00, $03, HDNR1S_Loop30, Target
000612 F7               	dc.b	$F7
000613 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop30<*)
000615                  		rom_ptr_z80(HDNR1S_Loop30+Target)
                        	;dc.w z80_ptr(ptr,addr)
000615 0A86             	dc.w  (((((HDNR1S_Loop30+Target))<<8)&$FF00)|((((HDNR1S_Loop30+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000617 A702             	dc.b	nD3, $02

000619                  HDNR1S_Loop32:
000619 80019703         	dc.b	nRst, $01, nBb1, $03

00061D                  HDNR1S_Loop31:
00061D A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000625                  	smpsLoop		$00, $03, HDNR1S_Loop31, Target
000625 F7               	dc.b	$F7
000626 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop31<*)
000628                  		rom_ptr_z80(HDNR1S_Loop31+Target)
                        	;dc.w z80_ptr(ptr,addr)
000628 1D86             	dc.w  (((((HDNR1S_Loop31+Target))<<8)&$FF00)|((((HDNR1S_Loop31+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00062A A302             	dc.b	nBb2, $02
00062C                  	smpsLoop		$01, $02, HDNR1S_Loop32, Target
00062C F7               	dc.b	$F7
00062D 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop32<*)
00062F                  		rom_ptr_z80(HDNR1S_Loop32+Target)
                        	;dc.w z80_ptr(ptr,addr)
00062F 1986             	dc.w  (((((HDNR1S_Loop32+Target))<<8)&$FF00)|((((HDNR1S_Loop32+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000631                  HDNR1S_Loop34:
000631 80019903         	dc.b	nRst, $01, nC2, $03

000635                  HDNR1S_Loop33:
000635 A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
00063D                  	smpsLoop		$00, $03, HDNR1S_Loop33, Target
00063D F7               	dc.b	$F7
00063E 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop33<*)
000640                  		rom_ptr_z80(HDNR1S_Loop33+Target)
                        	;dc.w z80_ptr(ptr,addr)
000640 3586             	dc.w  (((((HDNR1S_Loop33+Target))<<8)&$FF00)|((((HDNR1S_Loop33+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000642 A502             	dc.b	nC3, $02
000644                  	smpsLoop		$01, $02, HDNR1S_Loop34, Target
000644 F7               	dc.b	$F7
000645 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop34<*)
000647                  		rom_ptr_z80(HDNR1S_Loop34+Target)
                        	;dc.w z80_ptr(ptr,addr)
000647 3186             	dc.w  (((((HDNR1S_Loop34+Target))<<8)&$FF00)|((((HDNR1S_Loop34+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000649 80019A03         	dc.b	nRst, $01, nCs2, $03

00064D                  HDNR1S_Loop35:
00064D A60280019A028001 	dc.b	nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
000655                  	smpsLoop		$00, $03, HDNR1S_Loop35, Target
000655 F7               	dc.b	$F7
000656 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop35<*)
000658                  		rom_ptr_z80(HDNR1S_Loop35+Target)
                        	;dc.w z80_ptr(ptr,addr)
000658 4D86             	dc.w  (((((HDNR1S_Loop35+Target))<<8)&$FF00)|((((HDNR1S_Loop35+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00065A A60280019B038002 	dc.b	nCs3, $02, nRst, $01, nD2, $03, nRst, $02
000662 9B0380019B098006 	dc.b	nD2, $03, nRst, $01, nD2, $09, nRst, $06
00066A                  	smpsAlterVol		$FF
00066A E6FF             	dc.b	$E6,$FF

00066C                  HDNR1S_Loop37:
00066C 9603             	dc.b	nA1, $03

00066E                  HDNR1S_Loop36:
00066E A202800196028001 	dc.b	nA2, $02, nRst, $01, nA1, $02, nRst, $01
000676                  	smpsLoop		$00, $03, HDNR1S_Loop36, Target
000676 F7               	dc.b	$F7
000677 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop36<*)
000679                  		rom_ptr_z80(HDNR1S_Loop36+Target)
                        	;dc.w z80_ptr(ptr,addr)
000679 6E86             	dc.w  (((((HDNR1S_Loop36+Target))<<8)&$FF00)|((((HDNR1S_Loop36+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00067B A2028001         	dc.b	nA2, $02, nRst, $01
00067F                  	smpsLoop		$01, $08, HDNR1S_Loop37, Target
00067F F7               	dc.b	$F7
000680 0108             	dc.b	$01,$08
                        	if (HDNR1S_Loop37<*)
000682                  		rom_ptr_z80(HDNR1S_Loop37+Target)
                        	;dc.w z80_ptr(ptr,addr)
000682 6C86             	dc.w  (((((HDNR1S_Loop37+Target))<<8)&$FF00)|((((HDNR1S_Loop37+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000684                  HDNR1S_Loop39:
000684 9903             	dc.b	nC2, $03

000686                  HDNR1S_Loop38:
000686 A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
00068E                  	smpsLoop		$00, $03, HDNR1S_Loop38, Target
00068E F7               	dc.b	$F7
00068F 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop38<*)
000691                  		rom_ptr_z80(HDNR1S_Loop38+Target)
                        	;dc.w z80_ptr(ptr,addr)
000691 8686             	dc.w  (((((HDNR1S_Loop38+Target))<<8)&$FF00)|((((HDNR1S_Loop38+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000693 A5028001         	dc.b	nC3, $02, nRst, $01
000697                  	smpsLoop		$01, $08, HDNR1S_Loop39, Target
000697 F7               	dc.b	$F7
000698 0108             	dc.b	$01,$08
                        	if (HDNR1S_Loop39<*)
00069A                  		rom_ptr_z80(HDNR1S_Loop39+Target)
                        	;dc.w z80_ptr(ptr,addr)
00069A 8486             	dc.w  (((((HDNR1S_Loop39+Target))<<8)&$FF00)|((((HDNR1S_Loop39+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00069C                  	smpsAlterVol		$01
00069C E601             	dc.b	$E6,$01

00069E                  HDNR1S_Loop41:
00069E 9B03             	dc.b	nD2, $03

0006A0                  HDNR1S_Loop40:
0006A0 A70280019B028001 	dc.b	nD3, $02, nRst, $01, nD2, $02, nRst, $01
0006A8                  	smpsLoop		$00, $03, HDNR1S_Loop40, Target
0006A8 F7               	dc.b	$F7
0006A9 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop40<*)
0006AB                  		rom_ptr_z80(HDNR1S_Loop40+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006AB A086             	dc.w  (((((HDNR1S_Loop40+Target))<<8)&$FF00)|((((HDNR1S_Loop40+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006AD A7028001         	dc.b	nD3, $02, nRst, $01
0006B1                  	smpsLoop		$01, $02, HDNR1S_Loop41, Target
0006B1 F7               	dc.b	$F7
0006B2 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop41<*)
0006B4                  		rom_ptr_z80(HDNR1S_Loop41+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006B4 9E86             	dc.w  (((((HDNR1S_Loop41+Target))<<8)&$FF00)|((((HDNR1S_Loop41+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0006B6                  HDNR1S_Loop43:
0006B6 9703             	dc.b	nBb1, $03

0006B8                  HDNR1S_Loop42:
0006B8 A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
0006C0                  	smpsLoop		$00, $03, HDNR1S_Loop42, Target
0006C0 F7               	dc.b	$F7
0006C1 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop42<*)
0006C3                  		rom_ptr_z80(HDNR1S_Loop42+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006C3 B886             	dc.w  (((((HDNR1S_Loop42+Target))<<8)&$FF00)|((((HDNR1S_Loop42+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006C5 A3028001         	dc.b	nBb2, $02, nRst, $01
0006C9                  	smpsLoop		$01, $02, HDNR1S_Loop43, Target
0006C9 F7               	dc.b	$F7
0006CA 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop43<*)
0006CC                  		rom_ptr_z80(HDNR1S_Loop43+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006CC B686             	dc.w  (((((HDNR1S_Loop43+Target))<<8)&$FF00)|((((HDNR1S_Loop43+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0006CE                  HDNR1S_Loop45:
0006CE 9903             	dc.b	nC2, $03

0006D0                  HDNR1S_Loop44:
0006D0 A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
0006D8                  	smpsLoop		$00, $03, HDNR1S_Loop44, Target
0006D8 F7               	dc.b	$F7
0006D9 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop44<*)
0006DB                  		rom_ptr_z80(HDNR1S_Loop44+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006DB D086             	dc.w  (((((HDNR1S_Loop44+Target))<<8)&$FF00)|((((HDNR1S_Loop44+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006DD A5028001         	dc.b	nC3, $02, nRst, $01
0006E1                  	smpsLoop		$01, $02, HDNR1S_Loop45, Target
0006E1 F7               	dc.b	$F7
0006E2 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop45<*)
0006E4                  		rom_ptr_z80(HDNR1S_Loop45+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006E4 CE86             	dc.w  (((((HDNR1S_Loop45+Target))<<8)&$FF00)|((((HDNR1S_Loop45+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006E6 9A03             	dc.b	nCs2, $03

0006E8                  HDNR1S_Loop46:
0006E8 A60280019A028001 	dc.b	nCs3, $02, nRst, $01, nCs2, $02, nRst, $01
0006F0                  	smpsLoop		$00, $03, HDNR1S_Loop46, Target
0006F0 F7               	dc.b	$F7
0006F1 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop46<*)
0006F3                  		rom_ptr_z80(HDNR1S_Loop46+Target)
                        	;dc.w z80_ptr(ptr,addr)
0006F3 E886             	dc.w  (((((HDNR1S_Loop46+Target))<<8)&$FF00)|((((HDNR1S_Loop46+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0006F5 A60280019B038002 	dc.b	nCs3, $02, nRst, $01, nD2, $03, nRst, $02
0006FD 9B0380019B098006 	dc.b	nD2, $03, nRst, $01, nD2, $09, nRst, $06
000705 9403             	dc.b	nG1, $03

000707                  HDNR1S_Loop47:
000707 A002800194028001 	dc.b	nG2, $02, nRst, $01, nG1, $02, nRst, $01
00070F                  	smpsLoop		$00, $03, HDNR1S_Loop47, Target
00070F F7               	dc.b	$F7
000710 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop47<*)
000712                  		rom_ptr_z80(HDNR1S_Loop47+Target)
                        	;dc.w z80_ptr(ptr,addr)
000712 0787             	dc.w  (((((HDNR1S_Loop47+Target))<<8)&$FF00)|((((HDNR1S_Loop47+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000714 A00280019503     	dc.b	nG2, $02, nRst, $01, nAb1, $03

00071A                  HDNR1S_Loop48:
00071A A102800195028001 	dc.b	nAb2, $02, nRst, $01, nAb1, $02, nRst, $01
000722                  	smpsLoop		$00, $03, HDNR1S_Loop48, Target
000722 F7               	dc.b	$F7
000723 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop48<*)
000725                  		rom_ptr_z80(HDNR1S_Loop48+Target)
                        	;dc.w z80_ptr(ptr,addr)
000725 1A87             	dc.w  (((((HDNR1S_Loop48+Target))<<8)&$FF00)|((((HDNR1S_Loop48+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000727 A10280019703     	dc.b	nAb2, $02, nRst, $01, nBb1, $03

00072D                  HDNR1S_Loop49:
00072D A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000735                  	smpsLoop		$00, $03, HDNR1S_Loop49, Target
000735 F7               	dc.b	$F7
000736 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop49<*)
000738                  		rom_ptr_z80(HDNR1S_Loop49+Target)
                        	;dc.w z80_ptr(ptr,addr)
000738 2D87             	dc.w  (((((HDNR1S_Loop49+Target))<<8)&$FF00)|((((HDNR1S_Loop49+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00073A A30280019903     	dc.b	nBb2, $02, nRst, $01, nC2, $03

000740                  HDNR1S_Loop50:
000740 A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
000748                  	smpsLoop		$00, $03, HDNR1S_Loop50, Target
000748 F7               	dc.b	$F7
000749 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop50<*)
00074B                  		rom_ptr_z80(HDNR1S_Loop50+Target)
                        	;dc.w z80_ptr(ptr,addr)
00074B 4087             	dc.w  (((((HDNR1S_Loop50+Target))<<8)&$FF00)|((((HDNR1S_Loop50+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00074D A50280019C03     	dc.b	nC3, $02, nRst, $01, nEb2, $03

000753                  HDNR1S_Loop51:
000753 A80280019C028001 	dc.b	nEb3, $02, nRst, $01, nEb2, $02, nRst, $01
00075B                  	smpsLoop		$00, $03, HDNR1S_Loop51, Target
00075B F7               	dc.b	$F7
00075C 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop51<*)
00075E                  		rom_ptr_z80(HDNR1S_Loop51+Target)
                        	;dc.w z80_ptr(ptr,addr)
00075E 5387             	dc.w  (((((HDNR1S_Loop51+Target))<<8)&$FF00)|((((HDNR1S_Loop51+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000760 A80280019E03     	dc.b	nEb3, $02, nRst, $01, nF2, $03

000766                  HDNR1S_Loop52:
000766 AA0280019E028001 	dc.b	nF3, $02, nRst, $01, nF2, $02, nRst, $01
00076E                  	smpsLoop		$00, $03, HDNR1S_Loop52, Target
00076E F7               	dc.b	$F7
00076F 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop52<*)
000771                  		rom_ptr_z80(HDNR1S_Loop52+Target)
                        	;dc.w z80_ptr(ptr,addr)
000771 6687             	dc.w  (((((HDNR1S_Loop52+Target))<<8)&$FF00)|((((HDNR1S_Loop52+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000773 AA02             	dc.b	nF3, $02

000775                  HDNR1S_Loop54:
000775 80019703         	dc.b	nRst, $01, nBb1, $03

000779                  HDNR1S_Loop53:
000779 A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
000781                  	smpsLoop		$00, $03, HDNR1S_Loop53, Target
000781 F7               	dc.b	$F7
000782 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop53<*)
000784                  		rom_ptr_z80(HDNR1S_Loop53+Target)
                        	;dc.w z80_ptr(ptr,addr)
000784 7987             	dc.w  (((((HDNR1S_Loop53+Target))<<8)&$FF00)|((((HDNR1S_Loop53+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000786 A302             	dc.b	nBb2, $02
000788                  	smpsLoop		$01, $02, HDNR1S_Loop54, Target
000788 F7               	dc.b	$F7
000789 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop54<*)
00078B                  		rom_ptr_z80(HDNR1S_Loop54+Target)
                        	;dc.w z80_ptr(ptr,addr)
00078B 7587             	dc.w  (((((HDNR1S_Loop54+Target))<<8)&$FF00)|((((HDNR1S_Loop54+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00078D 80019403         	dc.b	nRst, $01, nG1, $03

000791                  HDNR1S_Loop55:
000791 A002800194028001 	dc.b	nG2, $02, nRst, $01, nG1, $02, nRst, $01
000799                  	smpsLoop		$00, $03, HDNR1S_Loop55, Target
000799 F7               	dc.b	$F7
00079A 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop55<*)
00079C                  		rom_ptr_z80(HDNR1S_Loop55+Target)
                        	;dc.w z80_ptr(ptr,addr)
00079C 9187             	dc.w  (((((HDNR1S_Loop55+Target))<<8)&$FF00)|((((HDNR1S_Loop55+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00079E A00280019503     	dc.b	nG2, $02, nRst, $01, nAb1, $03

0007A4                  HDNR1S_Loop56:
0007A4 A102800195028001 	dc.b	nAb2, $02, nRst, $01, nAb1, $02, nRst, $01
0007AC                  	smpsLoop		$00, $03, HDNR1S_Loop56, Target
0007AC F7               	dc.b	$F7
0007AD 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop56<*)
0007AF                  		rom_ptr_z80(HDNR1S_Loop56+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007AF A487             	dc.w  (((((HDNR1S_Loop56+Target))<<8)&$FF00)|((((HDNR1S_Loop56+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007B1 A10280019703     	dc.b	nAb2, $02, nRst, $01, nBb1, $03

0007B7                  HDNR1S_Loop57:
0007B7 A302800197028001 	dc.b	nBb2, $02, nRst, $01, nBb1, $02, nRst, $01
0007BF                  	smpsLoop		$00, $03, HDNR1S_Loop57, Target
0007BF F7               	dc.b	$F7
0007C0 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop57<*)
0007C2                  		rom_ptr_z80(HDNR1S_Loop57+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007C2 B787             	dc.w  (((((HDNR1S_Loop57+Target))<<8)&$FF00)|((((HDNR1S_Loop57+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007C4 A30280019903     	dc.b	nBb2, $02, nRst, $01, nC2, $03

0007CA                  HDNR1S_Loop58:
0007CA A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
0007D2                  	smpsLoop		$00, $03, HDNR1S_Loop58, Target
0007D2 F7               	dc.b	$F7
0007D3 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop58<*)
0007D5                  		rom_ptr_z80(HDNR1S_Loop58+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007D5 CA87             	dc.w  (((((HDNR1S_Loop58+Target))<<8)&$FF00)|((((HDNR1S_Loop58+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007D7 A50280019C03     	dc.b	nC3, $02, nRst, $01, nEb2, $03

0007DD                  HDNR1S_Loop59:
0007DD A80280019C028001 	dc.b	nEb3, $02, nRst, $01, nEb2, $02, nRst, $01
0007E5                  	smpsLoop		$00, $03, HDNR1S_Loop59, Target
0007E5 F7               	dc.b	$F7
0007E6 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop59<*)
0007E8                  		rom_ptr_z80(HDNR1S_Loop59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007E8 DD87             	dc.w  (((((HDNR1S_Loop59+Target))<<8)&$FF00)|((((HDNR1S_Loop59+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007EA A80280019203     	dc.b	nEb3, $02, nRst, $01, nF1, $03

0007F0                  HDNR1S_Loop60:
0007F0 9E02800192028001 	dc.b	nF2, $02, nRst, $01, nF1, $02, nRst, $01
0007F8                  	smpsLoop		$00, $03, HDNR1S_Loop60, Target
0007F8 F7               	dc.b	$F7
0007F9 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop60<*)
0007FB                  		rom_ptr_z80(HDNR1S_Loop60+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007FB F087             	dc.w  (((((HDNR1S_Loop60+Target))<<8)&$FF00)|((((HDNR1S_Loop60+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007FD 9E0280019503A102 	dc.b	nF2, $02, nRst, $01, nAb1, $03, nAb2, $02
000805 800195028001A102 	dc.b	nRst, $01, nAb1, $02, nRst, $01, nAb2, $02
00080D 80019703A3028001 	dc.b	nRst, $01, nBb1, $03, nBb2, $02, nRst, $01
000815 97028001A302     	dc.b	nBb1, $02, nRst, $01, nBb2, $02

00081B                  HDNR1S_Loop62:
00081B 80019903         	dc.b	nRst, $01, nC2, $03

00081F                  HDNR1S_Loop61:
00081F A502800199028001 	dc.b	nC3, $02, nRst, $01, nC2, $02, nRst, $01
000827                  	smpsLoop		$00, $03, HDNR1S_Loop61, Target
000827 F7               	dc.b	$F7
000828 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop61<*)
00082A                  		rom_ptr_z80(HDNR1S_Loop61+Target)
                        	;dc.w z80_ptr(ptr,addr)
00082A 1F88             	dc.w  (((((HDNR1S_Loop61+Target))<<8)&$FF00)|((((HDNR1S_Loop61+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00082C A502             	dc.b	nC3, $02
00082E                  	smpsLoop		$01, $07, HDNR1S_Loop62, Target
00082E F7               	dc.b	$F7
00082F 0107             	dc.b	$01,$07
                        	if (HDNR1S_Loop62<*)
000831                  		rom_ptr_z80(HDNR1S_Loop62+Target)
                        	;dc.w z80_ptr(ptr,addr)
000831 1B88             	dc.w  (((((HDNR1S_Loop62+Target))<<8)&$FF00)|((((HDNR1S_Loop62+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000833                  	smpsAlterNote	$00
000833 E100             	dc.b	$E1,$00
000835 8055             	dc.b	nRst, $55
000837                  	smpsAlterVol		$FF
000837 E6FF             	dc.b	$E6,$FF
000839                  	smpsJump		HDNR1S_Jump2, Target
000839 F6               	dc.b	$F6
                        	if (HDNR1S_Jump2<*)
00083A                  		rom_ptr_z80(HDNR1S_Jump2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00083A 3C85             	dc.w  (((((HDNR1S_Jump2+Target))<<8)&$FF00)|((((HDNR1S_Jump2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00083C                  HDNR1S_FM4:
                        	;!@ sModOff
00083C                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
00083C E0C0             		dc.b $E0,panCenter
                        	endif
                        	;!@ sModOff
00083E                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
00083E EF02             		dc.b $EF,$02
                        	endif
                        	;!@ sModOff
                        	;!@ sModOff
                        	;!@ sModOff
                        	;!@ sModOff
000840 8006             	dc.b	nRst, $06

000842                  HDNR1S_Loop63:
000842 BB098003B5098003 	dc.b	nBb4, $09, nRst, $03, nE4, $09, nRst, $03
00084A B2098003AF098003 	dc.b	nCs4, $09, nRst, $03, nBb3, $09, nRst, $03
000852                  	smpsLoop		$00, $02, HDNR1S_Loop63, Target
000852 F7               	dc.b	$F7
000853 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop63<*)
000855                  		rom_ptr_z80(HDNR1S_Loop63+Target)
                        	;dc.w z80_ptr(ptr,addr)
000855 4288             	dc.w  (((((HDNR1S_Loop63+Target))<<8)&$FF00)|((((HDNR1S_Loop63+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000857 BE098003BB098003 	dc.b	nCs5, $09, nRst, $03, nBb4, $09, nRst, $03
00085F B8098003B5098003 	dc.b	nG4, $09, nRst, $03, nE4, $09, nRst, $03
000867 AF06B2B4B2078011 	dc.b	nBb3, $06, nCs4, nEb4, nCs4, $07, nRst, $11
00086F                  	smpsFMvoice		$04
                        	;if song<>""
                        	if 1==2
                        	else
00086F EF04             		dc.b $EF,$04
                        	endif
                        	;!@ dc.b	$06
000871 8006             	dc.b	nRst, $06
000873                  	smpsAlterVol		$0C
000873 E60C             	dc.b	$E6,$0C
000875 B3               	dc.b	nD4

000876                  HDNR1S_Loop64:
000876 03               	dc.b	$03
000877                  	smpsAlterVol		$F5
000877 E6F5             	dc.b	$E6,$F5
000879 03               	dc.b	$03
00087A                  	smpsAlterVol		$0B
00087A E60B             	dc.b	$E6,$0B
00087C                  	smpsLoop		$00, $18, HDNR1S_Loop64, Target
00087C F7               	dc.b	$F7
00087D 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop64<*)
00087F                  		rom_ptr_z80(HDNR1S_Loop64+Target)
                        	;dc.w z80_ptr(ptr,addr)
00087F 7688             	dc.w  (((((HDNR1S_Loop64+Target))<<8)&$FF00)|((((HDNR1S_Loop64+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000881 B5               	dc.b	nE4
000882                  	smpsAlterVol		$F5
000882 E6F5             	dc.b	$E6,$F5
000884 03               	dc.b	$03
000885                  	smpsAlterVol		$0A
000885 E60A             	dc.b	$E6,$0A
000887 03               	dc.b	$03
000888                  	smpsAlterVol		$F6
000888 E6F6             	dc.b	$E6,$F6
00088A 03               	dc.b	$03
00088B                  	smpsAlterVol		$0B
00088B E60B             	dc.b	$E6,$0B
00088D 03               	dc.b	$03
00088E                  	smpsAlterVol		$F5
00088E E6F5             	dc.b	$E6,$F5
000890 03               	dc.b	$03
000891                  	smpsAlterVol		$0A
000891 E60A             	dc.b	$E6,$0A
000893 03               	dc.b	$03
000894                  	smpsAlterVol		$F6
000894 E6F6             	dc.b	$E6,$F6
000896 03               	dc.b	$03
000897                  	smpsAlterVol		$FE
000897 E6FE             	dc.b	$E6,$FE
000899 038002B5038001B5 	dc.b	$03, nRst, $02, nE4, $03, nRst, $01, nE4
0008A1 03               	dc.b	$03

0008A2                  HDNR1S_Jump3:
0008A2 8006             	dc.b	nRst, $06
0008A4                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
0008A4 EF05             		dc.b $EF,$05
                        	endif
                        	;!@ dc.b	$06
0008A6 8006             	dc.b	nRst, $06
0008A8                  	smpsAlterVol		$09
0008A8 E609             	dc.b	$E6,$09

0008AA                  HDNR1S_Loop65:
                        	;!@ dc.b	nA3, $03, $02, nRst, $01, nA3, $02, nRst
0008AA AE03AE028001AE02 	dc.b	nA3, $03, nA3, $02, nRst, $01, nA3, $02, nRst
0008B2 80
0008B3 01               	dc.b	$01
0008B4                  	smpsLoop		$00, $02, HDNR1S_Loop65, Target
0008B4 F7               	dc.b	$F7
0008B5 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop65<*)
0008B7                  		rom_ptr_z80(HDNR1S_Loop65+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008B7 AA88             	dc.w  (((((HDNR1S_Loop65+Target))<<8)&$FF00)|((((HDNR1S_Loop65+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nA3, $03, $02, nRst, $01, nA3, $03, $02
0008B9 AE03AE028001AE03 	dc.b	nA3, $03, nA3, $02, nRst, $01, nA3, $03, nA3, $02
0008C1 AE02
0008C3 8001AE028001B103 	dc.b	nRst, $01, nA3, $02, nRst, $01, nC4, $03
0008CB 028001B1028001B4 	dc.b	$02, nRst, $01, nC4, $02, nRst, $01, nEb4
                        	;!@ dc.b	$03, $02, nRst, $01, nD4, $03, $02, nRst
0008D3 03B4028001B303B3 	dc.b	$03, nEb4, $02, nRst, $01, nD4, $03, nD4, $02, nRst
0008DB 0280
                        	;!@ dc.b	$01, nD4, $03, $02, nRst, $01, nD4, $02
0008DD 01B303B3028001B3 	dc.b	$01, nD4, $03, nD4, $02, nRst, $01, nD4, $02
0008E5 02
                        	;!@ dc.b	$01, $02, nRst, $01, nD4, $03, $02, nRst
0008E6 B301B3028001B303 	dc.b	nD4, $01, nD4, $02, nRst, $01, nD4, $03, nD4, $02, nRst
0008EE B30280
                        	;!@ dc.b	$01, nE4, $03, $02, nRst, $01, nE4, $03
0008F1 01B503B5028001B5 	dc.b	$01, nE4, $03, nE4, $02, nRst, $01, nE4, $03
0008F9 03
                        	;!@ dc.b	$02, nRst, $01, nE4, $02, nRst, $01, nE4
0008FA B5028001B5028001 	dc.b	nE4, $02, nRst, $01, nE4, $02, nRst, $01, nE4
000902 B5
                        	;!@ dc.b	$02, nRst, $01, nE4, $03, $02
000903 028001B503B502   	dc.b	$02, nRst, $01, nE4, $03, nE4, $02

00090A                  HDNR1S_Loop66:
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01, nD4
00090A 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01, nD4
000912 B3
000913 02               	dc.b	$02
000914                  	smpsLoop		$00, $02, HDNR1S_Loop66, Target
000914 F7               	dc.b	$F7
000915 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop66<*)
000917                  		rom_ptr_z80(HDNR1S_Loop66+Target)
                        	;dc.w z80_ptr(ptr,addr)
000917 0A89             	dc.w  (((((HDNR1S_Loop66+Target))<<8)&$FF00)|((((HDNR1S_Loop66+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD4, $03, $02
000919 8001B303B302     	dc.b	nRst, $01, nD4, $03, nD4, $02

00091F                  HDNR1S_Loop67:
                        	;!@ dc.b	nRst, $01, nC4, $03, $02, nRst, $01, nC4
00091F 8001B103B1028001 	dc.b	nRst, $01, nC4, $03, nC4, $02, nRst, $01, nC4
000927 B1
000928 02               	dc.b	$02
000929                  	smpsLoop		$00, $02, HDNR1S_Loop67, Target
000929 F7               	dc.b	$F7
00092A 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop67<*)
00092C                  		rom_ptr_z80(HDNR1S_Loop67+Target)
                        	;dc.w z80_ptr(ptr,addr)
00092C 1F89             	dc.w  (((((HDNR1S_Loop67+Target))<<8)&$FF00)|((((HDNR1S_Loop67+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nC4, $03, $02
00092E 8001B103B102     	dc.b	nRst, $01, nC4, $03, nC4, $02

000934                  HDNR1S_Loop68:
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02, nRst, $01, nBb3	
000934 8001AF03AF028001 	dc.b	nRst, $01, nBb3, $03, nBb3, $02, nRst, $01, nBb3
00093C AF
00093D 02               	dc.b	$02
00093E                  	smpsLoop		$00, $02, HDNR1S_Loop68, Target
00093E F7               	dc.b	$F7
00093F 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop68<*)
000941                  		rom_ptr_z80(HDNR1S_Loop68+Target)
                        	;dc.w z80_ptr(ptr,addr)
000941 3489             	dc.w  (((((HDNR1S_Loop68+Target))<<8)&$FF00)|((((HDNR1S_Loop68+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02
000943 8001AF03AF02     	dc.b	nRst, $01, nBb3, $03, nBb3, $02

000949                  HDNR1S_Loop69:
                        	;!@ dc.b	nRst, $01, nE4, $03, $02, nRst, $01, nE4
000949 8001B503B5028001 	dc.b	nRst, $01, nE4, $03, nE4, $02, nRst, $01, nE4
000951 B5
000952 02               	dc.b	$02
000953                  	smpsLoop		$00, $02, HDNR1S_Loop69, Target
000953 F7               	dc.b	$F7
000954 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop69<*)
000956                  		rom_ptr_z80(HDNR1S_Loop69+Target)
                        	;dc.w z80_ptr(ptr,addr)
000956 4989             	dc.w  (((((HDNR1S_Loop69+Target))<<8)&$FF00)|((((HDNR1S_Loop69+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nE4, $03, $02, nRst, $01
000958 8001B503B5028001 	dc.b	nRst, $01, nE4, $03, nE4, $02, nRst, $01
000960                  	smpsAlterVol		$01
000960 E601             	dc.b	$E6,$01

000962                  HDNR1S_Loop70:
                        	;!@ dc.b	nA3, $03, $02, nRst, $01, nA3, $02, nRst
000962 AE03AE028001AE02 	dc.b	nA3, $03, nA3, $02, nRst, $01, nA3, $02, nRst
00096A 80
00096B 01               	dc.b	$01
00096C                  	smpsLoop		$00, $02, HDNR1S_Loop70, Target
00096C F7               	dc.b	$F7
00096D 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop70<*)
00096F                  		rom_ptr_z80(HDNR1S_Loop70+Target)
                        	;dc.w z80_ptr(ptr,addr)
00096F 6289             	dc.w  (((((HDNR1S_Loop70+Target))<<8)&$FF00)|((((HDNR1S_Loop70+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nA3, $03, $02, nRst, $01, nA3, $03, $02
000971 AE03AE028001AE03 	dc.b	nA3, $03, nA3, $02, nRst, $01, nA3, $03, nA3, $02
000979 AE02
00097B 8001AE028001B103 	dc.b	nRst, $01, nA3, $02, nRst, $01, nC4, $03
000983 028001B1028001B4 	dc.b	$02, nRst, $01, nC4, $02, nRst, $01, nEb4
                        	;!@ dc.b	$03, $02, nRst, $01, nD4, $03, $02, nRst
00098B 03B4028001B303B3 	dc.b	$03, nEb4, $02, nRst, $01, nD4, $03, nD4, $02, nRst
000993 0280
                        	;!@ dc.b	$01, nD4, $03, $02, nRst, $01, nD4, $02
000995 01B303B3028001B3 	dc.b	$01, nD4, $03, nD4, $02, nRst, $01, nD4, $02
00099D 02
                        	;!@ dc.b	$01, $02, nRst, $01, nD4, $03, $02, nRst
00099E B301B3028001B303 	dc.b	nD4, $01, nD4, $02, nRst, $01, nD4, $03, nD4, $02, nRst
0009A6 B30280
                        	;!@ dc.b	$01, nE4, $03, $02, nRst, $01, nE4, $03
0009A9 01B503B5028001B5 	dc.b	$01, nE4, $03, nE4, $02, nRst, $01, nE4, $03
0009B1 03
                        	;!@ dc.b	$02, nRst, $01, nE4, $02, nRst, $01, nE4
0009B2 B5028001B5028001 	dc.b	nE4, $02, nRst, $01, nE4, $02, nRst, $01, nE4
0009BA B5
                        	;!@ dc.b	$02, nRst, $01, nE4, $03, $02
0009BB 028001B503B502   	dc.b	$02, nRst, $01, nE4, $03, nE4, $02

0009C2                  HDNR1S_Loop71:
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01, nD4
0009C2 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01, nD4
0009CA B3
0009CB 02               	dc.b	$02
0009CC                  	smpsLoop		$00, $02, HDNR1S_Loop71, Target
0009CC F7               	dc.b	$F7
0009CD 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop71<*)
0009CF                  		rom_ptr_z80(HDNR1S_Loop71+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009CF C289             	dc.w  (((((HDNR1S_Loop71+Target))<<8)&$FF00)|((((HDNR1S_Loop71+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD4, $03, $02
0009D1 8001B303B302     	dc.b	nRst, $01, nD4, $03, nD4, $02

0009D7                  HDNR1S_Loop72:
                        	;!@ dc.b	nRst, $01, nC4, $03, $02, nRst, $01, nC4
0009D7 8001B103B1028001 	dc.b	nRst, $01, nC4, $03, nC4, $02, nRst, $01, nC4
0009DF B1
0009E0 02               	dc.b	$02
0009E1                  	smpsLoop		$00, $02, HDNR1S_Loop72, Target
0009E1 F7               	dc.b	$F7
0009E2 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop72<*)
0009E4                  		rom_ptr_z80(HDNR1S_Loop72+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009E4 D789             	dc.w  (((((HDNR1S_Loop72+Target))<<8)&$FF00)|((((HDNR1S_Loop72+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nC4, $03, $02
0009E6 8001B103B102     	dc.b	nRst, $01, nC4, $03, nC4, $02

0009EC                  HDNR1S_Loop73:
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02, nRst, $01, nBb3
0009EC 8001AF03AF028001 	dc.b	nRst, $01, nBb3, $03, nBb3, $02, nRst, $01, nBb3
0009F4 AF
0009F5 02               	dc.b	$02
0009F6                  	smpsLoop		$00, $02, HDNR1S_Loop73, Target
0009F6 F7               	dc.b	$F7
0009F7 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop73<*)
0009F9                  		rom_ptr_z80(HDNR1S_Loop73+Target)
                        	;dc.w z80_ptr(ptr,addr)
0009F9 EC89             	dc.w  (((((HDNR1S_Loop73+Target))<<8)&$FF00)|((((HDNR1S_Loop73+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nBb3, $03, $02
0009FB 8001AF03AF02     	dc.b	nRst, $01, nBb3, $03, nBb3, $02

000A01                  HDNR1S_Loop74:
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01, nD4
000A01 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01, nD4
000A09 B3
000A0A 02               	dc.b	$02
000A0B                  	smpsLoop		$00, $02, HDNR1S_Loop74, Target
000A0B F7               	dc.b	$F7
000A0C 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop74<*)
000A0E                  		rom_ptr_z80(HDNR1S_Loop74+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A0E 018A             	dc.w  (((((HDNR1S_Loop74+Target))<<8)&$FF00)|((((HDNR1S_Loop74+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD4, $03, $02, nRst, $01
000A10 8001B303B3028001 	dc.b	nRst, $01, nD4, $03, nD4, $02, nRst, $01
000A18                  	smpsAlterVol		$FC
000A18 E6FC             	dc.b	$E6,$FC
                        	;!@ dc.b	nD4, $02, $01, $02, nRst, $04
000A1A B302B301B3028004 	dc.b	nD4, $02, nD4, $01, nD4, $02, nRst, $04
000A22                  	smpsAlterVol		$06
000A22 E606             	dc.b	$E6,$06
000A24 B30380B380       	dc.b	nD4, $03, nRst, nD4, nRst
000A29                  	smpsAlterVol		$FA
000A29 E6FA             	dc.b	$E6,$FA
000A2B B3028004B3       	dc.b	nD4, $02, nRst, $04, nD4

000A30                  HDNR1S_Loop75:
                        	;!@ dc.b	$02, nRst, $07, nD4, $02, $01
000A30 028007B302B301   	dc.b	$02, nRst, $07, nD4, $02, nD4, $01
000A37                  	smpsLoop		$00, $02, HDNR1S_Loop75, Target
000A37 F7               	dc.b	$F7
000A38 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop75<*)
000A3A                  		rom_ptr_z80(HDNR1S_Loop75+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A3A 308A             	dc.w  (((((HDNR1S_Loop75+Target))<<8)&$FF00)|((((HDNR1S_Loop75+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000A3C 028001           	dc.b	$02, nRst, $01
000A3F                  	smpsAlterVol		$06
000A3F E606             	dc.b	$E6,$06
000A41 B30380B38006     	dc.b	nD4, $03, nRst, nD4, nRst, $06
000A47                  	smpsAlterVol		$FA
000A47 E6FA             	dc.b	$E6,$FA
000A49 B3028004B3028007 	dc.b	nD4, $02, nRst, $04, nD4, $02, nRst, $07

000A51                  HDNR1S_Loop76:
                        	;!@ dc.b	nD4, $02, $01, $02, nRst, $01
000A51 B302B301B3028001 	dc.b	nD4, $02, nD4, $01, nD4, $02, nRst, $01
000A59                  	smpsLoop		$00, $02, HDNR1S_Loop76, Target
000A59 F7               	dc.b	$F7
000A5A 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop76<*)
000A5C                  		rom_ptr_z80(HDNR1S_Loop76+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A5C 518A             	dc.w  (((((HDNR1S_Loop76+Target))<<8)&$FF00)|((((HDNR1S_Loop76+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC4, $02, $01, $02, nRst, $01
000A5E B102B101B1028001 	dc.b	nC4, $02, nC4, $01, nC4, $02, nRst, $01
000A66                  	smpsAlterVol		$06
000A66 E606             	dc.b	$E6,$06
000A68 B10380B18006     	dc.b	nC4, $03, nRst, nC4, nRst, $06
000A6E                  	smpsAlterVol		$FA
000A6E E6FA             	dc.b	$E6,$FA
000A70 B1028004B1028007 	dc.b	nC4, $02, nRst, $04, nC4, $02, nRst, $07

000A78                  HDNR1S_Loop77:
                        	;!@ dc.b	nC4, $02, $01, $02, nRst, $01
000A78 B102B101B1028001 	dc.b	nC4, $02, nC4, $01, nC4, $02, nRst, $01
000A80                  	smpsLoop		$00, $02, HDNR1S_Loop77, Target
000A80 F7               	dc.b	$F7
000A81 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop77<*)
000A83                  		rom_ptr_z80(HDNR1S_Loop77+Target)
                        	;dc.w z80_ptr(ptr,addr)
000A83 788A             	dc.w  (((((HDNR1S_Loop77+Target))<<8)&$FF00)|((((HDNR1S_Loop77+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nCs4, $02, $01, $02, nRst, $01
000A85 B202B201B2028001 	dc.b	nCs4, $02, nCs4, $01, nCs4, $02, nRst, $01
000A8D                  	smpsAlterVol		$06
000A8D E606             	dc.b	$E6,$06
000A8F B20380B280       	dc.b	nCs4, $03, nRst, nCs4, nRst
000A94                  	smpsAlterVol		$FA
000A94 E6FA             	dc.b	$E6,$FA
000A96 B2028001B2028001 	dc.b	nCs4, $02, nRst, $01, nCs4, $02, nRst, $01
000A9E B3028003B3018003 	dc.b	nD4, $02, nRst, $03, nD4, $01, nRst, $03
000AA6 B3068009         	dc.b	nD4, $06, nRst, $09
000AAA                  	smpsAlterVol		$FD
000AAA E6FD             	dc.b	$E6,$FD

000AAC                  HDNR1S_Loop78:
                        	;!@ dc.b	nA1, $03, $02, nRst, $01, nA1
000AAC 96039602800196   	dc.b	nA1, $03, nA1, $02, nRst, $01, nA1

000AB3                  HDNR1S_Loop79:
000AB3 028001           	dc.b	$02, nRst, $01
000AB6                  	smpsLoop		$00, $02, HDNR1S_Loop78, Target
000AB6 F7               	dc.b	$F7
000AB7 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop78<*)
000AB9                  		rom_ptr_z80(HDNR1S_Loop78+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AB9 AC8A             	dc.w  (((((HDNR1S_Loop78+Target))<<8)&$FF00)|((((HDNR1S_Loop78+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000ABB                  HDNR1S_Loop80:
000ABB 9603             	dc.b	nA1, $03
000ABD                  	smpsLoop		$01, $02, HDNR1S_Loop79, Target
000ABD F7               	dc.b	$F7
000ABE 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop79<*)
000AC0                  		rom_ptr_z80(HDNR1S_Loop79+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AC0 B38A             	dc.w  (((((HDNR1S_Loop79+Target))<<8)&$FF00)|((((HDNR1S_Loop79+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $01, nA1, $02, nRst, $01
000AC2 9602800196028001 	dc.b	nA1, $02, nRst, $01, nA1, $02, nRst, $01
000ACA                  	smpsLoop		$02, $07, HDNR1S_Loop80, Target
000ACA F7               	dc.b	$F7
000ACB 0207             	dc.b	$02,$07
                        	if (HDNR1S_Loop80<*)
000ACD                  		rom_ptr_z80(HDNR1S_Loop80+Target)
                        	;dc.w z80_ptr(ptr,addr)
000ACD BB8A             	dc.w  (((((HDNR1S_Loop80+Target))<<8)&$FF00)|((((HDNR1S_Loop80+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000ACF 9603             	dc.b	nA1, $03

000AD1                  HDNR1S_Loop82:
000AD1 02               	dc.b	$02		;!@! Questionable!

000AD2                  HDNR1S_Loop81:
                        	;!@ dc.b	nRst, $01, nC3, $03, $02, nRst, $01, nC3
000AD2 8001A503A5028001 	dc.b	nRst, $01, nC3, $03, nC3, $02, nRst, $01, nC3
000ADA A5
000ADB 02               	dc.b	$02
000ADC                  	smpsLoop		$00, $02, HDNR1S_Loop81, Target
000ADC F7               	dc.b	$F7
000ADD 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop81<*)
000ADF                  		rom_ptr_z80(HDNR1S_Loop81+Target)
                        	;dc.w z80_ptr(ptr,addr)
000ADF D28A             	dc.w  (((((HDNR1S_Loop81+Target))<<8)&$FF00)|((((HDNR1S_Loop81+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000AE1 8001A503         	dc.b	nRst, $01, nC3, $03
000AE5                  	smpsLoop		$01, $08, HDNR1S_Loop82, Target
000AE5 F7               	dc.b	$F7
000AE6 0108             	dc.b	$01,$08
                        	if (HDNR1S_Loop82<*)
000AE8                  		rom_ptr_z80(HDNR1S_Loop82+Target)
                        	;dc.w z80_ptr(ptr,addr)
000AE8 D18A             	dc.w  (((((HDNR1S_Loop82+Target))<<8)&$FF00)|((((HDNR1S_Loop82+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $01
000AEA A5028001         	dc.b	nC3, $02, nRst, $01
000AEE                  	smpsAlterVol		$03
000AEE E603             	dc.b	$E6,$03
                        	;!@ dc.b	nD4, $02, $01, $02, nRst, $04
000AF0 B302B301B3028004 	dc.b	nD4, $02, nD4, $01, nD4, $02, nRst, $04
000AF8                  	smpsAlterVol		$06
000AF8 E606             	dc.b	$E6,$06
000AFA B30380B380       	dc.b	nD4, $03, nRst, nD4, nRst
000AFF                  	smpsAlterVol		$FA
000AFF E6FA             	dc.b	$E6,$FA
000B01 B3028004B3       	dc.b	nD4, $02, nRst, $04, nD4

000B06                  HDNR1S_Loop83:
                        	;!@ dc.b	$02, nRst, $07, nD4, $02, $01
000B06 028007B302B301   	dc.b	$02, nRst, $07, nD4, $02, nD4, $01
000B0D                  	smpsLoop		$00, $02, HDNR1S_Loop83, Target
000B0D F7               	dc.b	$F7
000B0E 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop83<*)
000B10                  		rom_ptr_z80(HDNR1S_Loop83+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B10 068B             	dc.w  (((((HDNR1S_Loop83+Target))<<8)&$FF00)|((((HDNR1S_Loop83+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000B12 028001           	dc.b	$02, nRst, $01
000B15                  	smpsAlterVol		$06
000B15 E606             	dc.b	$E6,$06
000B17 B30380B38006     	dc.b	nD4, $03, nRst, nD4, nRst, $06
000B1D                  	smpsAlterVol		$FA
000B1D E6FA             	dc.b	$E6,$FA
000B1F B3028004B3028007 	dc.b	nD4, $02, nRst, $04, nD4, $02, nRst, $07

000B27                  HDNR1S_Loop84:
                        	;!@ dc.b	nD4, $02, $01, $02, nRst, $01
000B27 B302B301B3028001 	dc.b	nD4, $02, nD4, $01, nD4, $02, nRst, $01
000B2F                  	smpsLoop		$00, $02, HDNR1S_Loop84, Target
000B2F F7               	dc.b	$F7
000B30 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop84<*)
000B32                  		rom_ptr_z80(HDNR1S_Loop84+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B32 278B             	dc.w  (((((HDNR1S_Loop84+Target))<<8)&$FF00)|((((HDNR1S_Loop84+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC4, $02, $01, $02, nRst, $01
000B34 B102B101B1028001 	dc.b	nC4, $02, nC4, $01, nC4, $02, nRst, $01
000B3C                  	smpsAlterVol		$06
000B3C E606             	dc.b	$E6,$06
000B3E B10380B18006     	dc.b	nC4, $03, nRst, nC4, nRst, $06
000B44                  	smpsAlterVol		$FA
000B44 E6FA             	dc.b	$E6,$FA
000B46 B1028004B1028007 	dc.b	nC4, $02, nRst, $04, nC4, $02, nRst, $07

000B4E                  HDNR1S_Loop85:
                        	;!@ dc.b	nC4, $02, $01, $02, nRst, $01
000B4E B102B101B1028001 	dc.b	nC4, $02, nC4, $01, nC4, $02, nRst, $01
000B56                  	smpsLoop		$00, $02, HDNR1S_Loop85, Target
000B56 F7               	dc.b	$F7
000B57 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop85<*)
000B59                  		rom_ptr_z80(HDNR1S_Loop85+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B59 4E8B             	dc.w  (((((HDNR1S_Loop85+Target))<<8)&$FF00)|((((HDNR1S_Loop85+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nCs4, $02, $01, $02, nRst, $01
000B5B B202B201B2028001 	dc.b	nCs4, $02, nCs4, $01, nCs4, $02, nRst, $01
000B63                  	smpsAlterVol		$06
000B63 E606             	dc.b	$E6,$06
000B65 B20380B280       	dc.b	nCs4, $03, nRst, nCs4, nRst
000B6A                  	smpsAlterVol		$FA
000B6A E6FA             	dc.b	$E6,$FA
000B6C B2028001B2028001 	dc.b	nCs4, $02, nRst, $01, nCs4, $02, nRst, $01
000B74 B3028003B3018003 	dc.b	nD4, $02, nRst, $03, nD4, $01, nRst, $03
                        	;!@ dc.b	nD4, $06, nRst
000B7C B306             	dc.b	nD4, $06

000B7E                  HDNR1S_Loop86:
                        	;!@ dc.b	$4F
000B7E 804F             	dc.b	nRst, $4F
000B80                  	smpsLoop		$00, $07, HDNR1S_Loop86, Target
000B80 F7               	dc.b	$F7
000B81 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop86<*)
000B83                  		rom_ptr_z80(HDNR1S_Loop86+Target)
                        	;dc.w z80_ptr(ptr,addr)
000B83 7E8B             	dc.w  (((((HDNR1S_Loop86+Target))<<8)&$FF00)|((((HDNR1S_Loop86+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02
000B85 8002             	dc.b	nRst, $02
000B87                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000B87 EF02             		dc.b $EF,$02
                        	endif
                        	;!@ dc.b	$06
000B89 8006             	dc.b	nRst, $06
000B8B                  	smpsAlterVol		$FD
000B8B E6FD             	dc.b	$E6,$FD
                        	;!@ dc.b	nB2, $05, $04, $09, nRst, $06, nC3, $05
000B8D A405A404A4098006 	dc.b	nB2, $05, nB2, $04, nB2, $09, nRst, $06, nC3, $05
000B95 A505
                        	;!@ dc.b	$04, $09, nRst, $06, nCs3, $05, $04, $03
000B97 A504A5098006A605 	dc.b	nC3, $04, nC3, $09, nRst, $06, nCs3, $05, nCs3, $04, nCs3, $03
000B9F A604A603
000BA3                  	smpsAlterVol		$FD
000BA3 E6FD             	dc.b	$E6,$FD
000BA5                  	smpsJump		HDNR1S_Jump3, Target
000BA5 F6               	dc.b	$F6
                        	if (HDNR1S_Jump3<*)
000BA6                  		rom_ptr_z80(HDNR1S_Jump3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BA6 A288             	dc.w  (((((HDNR1S_Jump3+Target))<<8)&$FF00)|((((HDNR1S_Jump3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000BA8                  HDNR1S_FM5:
                        	;!@ sModOff
000BA8                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000BA8 E0C0             		dc.b $E0,panCenter
                        	endif
                        	;!@ sModOff
                        	;!@ sModOff
                        	;!@ sModOff
                        	;!@ sModOff
                        	;!@ sModOff
000BAA                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000BAA EF02             		dc.b $EF,$02
                        	endif
                        	;!@ sModOff
                        	;!@ sModOff
000BAC 8006             	dc.b	nRst, $06

000BAE                  HDNR1S_Loop87:
000BAE C7098003C1098003 	dc.b	nBb5, $09, nRst, $03, nE5, $09, nRst, $03
000BB6 BE098003BB098003 	dc.b	nCs5, $09, nRst, $03, nBb4, $09, nRst, $03
000BBE                  	smpsLoop		$00, $02, HDNR1S_Loop87, Target
000BBE F7               	dc.b	$F7
000BBF 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop87<*)
000BC1                  		rom_ptr_z80(HDNR1S_Loop87+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BC1 AE8B             	dc.w  (((((HDNR1S_Loop87+Target))<<8)&$FF00)|((((HDNR1S_Loop87+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000BC3 CA098003C7098003 	dc.b	nCs6, $09, nRst, $03, nBb5, $09, nRst, $03
000BCB C4098003C1098003 	dc.b	nG5, $09, nRst, $03, nE5, $09, nRst, $03
000BD3 BB06BEB4BE078011 	dc.b	nBb4, $06, nCs5, nEb4, nCs5, $07, nRst, $11
000BDB                  	smpsFMvoice		$04
                        	;if song<>""
                        	if 1==2
                        	else
000BDB EF04             		dc.b $EF,$04
                        	endif
                        	;!@ dc.b	$06
000BDD 8006             	dc.b	nRst, $06
000BDF                  	smpsAlterVol		$0C
000BDF E60C             	dc.b	$E6,$0C
                        	;!@ dc.b	nD3	Questionable

000BE1                  HDNR1S_Loop88:
                        	;!@ dc.b	$03
000BE1 A703             	dc.b	nD3, $03
000BE3                  	smpsAlterVol		$F5
000BE3 E6F5             	dc.b	$E6,$F5
                        	;!@ dc.b	$03
000BE5 A703             	dc.b	nD3, $03
000BE7                  	smpsAlterVol		$0B
000BE7 E60B             	dc.b	$E6,$0B
000BE9                  	smpsLoop		$00, $18, HDNR1S_Loop88, Target
000BE9 F7               	dc.b	$F7
000BEA 0018             	dc.b	$00,$18
                        	if (HDNR1S_Loop88<*)
000BEC                  		rom_ptr_z80(HDNR1S_Loop88+Target)
                        	;dc.w z80_ptr(ptr,addr)
000BEC E18B             	dc.w  (((((HDNR1S_Loop88+Target))<<8)&$FF00)|((((HDNR1S_Loop88+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000BEE A9               	dc.b	nE3
000BEF                  	smpsAlterVol		$F5
000BEF E6F5             	dc.b	$E6,$F5
000BF1 03               	dc.b	$03
000BF2                  	smpsAlterVol		$0A
000BF2 E60A             	dc.b	$E6,$0A
                        	;!@ dc.b	$03
000BF4 A903             	dc.b	nE3, $03
000BF6                  	smpsAlterVol		$F6
000BF6 E6F6             	dc.b	$E6,$F6
                        	;!@ dc.b	$03
000BF8 A903             	dc.b	nE3, $03
000BFA                  	smpsAlterVol		$0B
000BFA E60B             	dc.b	$E6,$0B
                        	;!@ dc.b	$03
000BFC A903             	dc.b	nE3, $03
000BFE                  	smpsAlterVol		$F5
000BFE E6F5             	dc.b	$E6,$F5
                        	;!@ dc.b	$03
000C00 A903             	dc.b	nE3, $03
000C02                  	smpsAlterVol		$0A
000C02 E60A             	dc.b	$E6,$0A
                        	;!@ dc.b	$03
000C04 A903             	dc.b	nE3, $03
000C06                  	smpsAlterVol		$F6
000C06 E6F6             	dc.b	$E6,$F6
                        	;!@ dc.b	$03
000C08 A903             	dc.b	nE3, $03
000C0A                  	smpsAlterVol		$FE
000C0A E6FE             	dc.b	$E6,$FE
                        	;!@ dc.b	$03, nRst, $02, nE3, $03, nRst, $01, nE3
000C0C A9038002A9038001 	dc.b	nE3, $03, nRst, $02, nE3, $03, nRst, $01, nE3
000C14 A9
000C15 03               	dc.b	$03

000C16                  HDNR1S_Jump4:
000C16 8006             	dc.b	nRst, $06
000C18                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
000C18 EF05             		dc.b $EF,$05
                        	endif
                        	;!@ dc.b	$06
000C1A 8006             	dc.b	nRst, $06
000C1C                  	smpsAlterVol		$09
000C1C E609             	dc.b	$E6,$09

000C1E                  HDNR1S_Loop89:
                        	;!@ dc.b	nA2, $03, $02, nRst, $01, nA2, $02, nRst
000C1E A203A2028001A202 	dc.b	nA2, $03, nA2, $02, nRst, $01, nA2, $02, nRst
000C26 80
000C27 01               	dc.b	$01
000C28                  	smpsLoop		$00, $02, HDNR1S_Loop89, Target
000C28 F7               	dc.b	$F7
000C29 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop89<*)
000C2B                  		rom_ptr_z80(HDNR1S_Loop89+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C2B 1E8C             	dc.w  (((((HDNR1S_Loop89+Target))<<8)&$FF00)|((((HDNR1S_Loop89+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nA2, $03, $02, nRst, $01, nA2, $03, $02
000C2D A203A2028001A203 	dc.b	nA2, $03, nA2, $02, nRst, $01, nA2, $03, nA2, $02
000C35 A202
000C37 8001A2028001A503 	dc.b	nRst, $01, nA2, $02, nRst, $01, nC3, $03
                        	;!@ dc.b	$02, nRst, $01, nC3, $02, nRst, $01, nEb3
000C3F A5028001A5028001 	dc.b	nC3, $02, nRst, $01, nC3, $02, nRst, $01, nEb3
000C47 A8
                        	;!@ dc.b	$03, $02, nRst, $01, nD3, $03, $02, nRst
000C48 03A8028001A703A7 	dc.b	$03, nEb3, $02, nRst, $01, nD3, $03, nD3, $02, nRst
000C50 0280
                        	;!@ dc.b	$01, nD3, $03, $02, nRst, $01, nD3, $02
000C52 01A703A7028001A7 	dc.b	$01, nD3, $03, nD3, $02, nRst, $01, nD3, $02
000C5A 02
                        	;!@ dc.b	$01, $02, nRst, $01, nD3, $03, $02, nRst
000C5B A701A7028001A703 	dc.b	nD3, $01, nD3, $02, nRst, $01, nD3, $03, nD3, $02, nRst
000C63 A70280
                        	;!@ dc.b	$01, nE3, $03, $02, nRst, $01, nE3, $03
000C66 01A903A9028001A9 	dc.b	$01, nE3, $03, nE3, $02, nRst, $01, nE3, $03
000C6E 03
                        	;!@ dc.b	$02, nRst, $01, nE3, $02, nRst, $01, nE3
000C6F A9028001A9028001 	dc.b	nE3, $02, nRst, $01, nE3, $02, nRst, $01, nE3
000C77 A9
                        	;!@ dc.b	$02, nRst, $01, nE3, $03, $02
000C78 028001A903A902   	dc.b	$02, nRst, $01, nE3, $03, nE3, $02

000C7F                  HDNR1S_Loop90:
                        	;!@ dc.b	nRst, $01, nD3, $03, $02, nRst, $01, nD3
000C7F 8001A703A7028001 	dc.b	nRst, $01, nD3, $03, nD3, $02, nRst, $01, nD3
000C87 A7
000C88 02               	dc.b	$02
000C89                  	smpsLoop		$00, $02, HDNR1S_Loop90, Target
000C89 F7               	dc.b	$F7
000C8A 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop90<*)
000C8C                  		rom_ptr_z80(HDNR1S_Loop90+Target)
                        	;dc.w z80_ptr(ptr,addr)
000C8C 7F8C             	dc.w  (((((HDNR1S_Loop90+Target))<<8)&$FF00)|((((HDNR1S_Loop90+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD3, $03, $02
000C8E 8001A703A702     	dc.b	nRst, $01, nD3, $03, nD3, $02

000C94                  HDNR1S_Loop91:
                        	;!@ dc.b	nRst, $01, nC3, $03, $02, nRst, $01, nC3
000C94 8001A503A5028001 	dc.b	nRst, $01, nC3, $03, nC3, $02, nRst, $01, nC3
000C9C A5
000C9D 02               	dc.b	$02
000C9E                  	smpsLoop		$00, $02, HDNR1S_Loop91, Target
000C9E F7               	dc.b	$F7
000C9F 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop91<*)
000CA1                  		rom_ptr_z80(HDNR1S_Loop91+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CA1 948C             	dc.w  (((((HDNR1S_Loop91+Target))<<8)&$FF00)|((((HDNR1S_Loop91+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nC3, $03, $02
000CA3 8001A503A502     	dc.b	nRst, $01, nC3, $03, nC3, $02

000CA9                  HDNR1S_Loop92:
                        	;!@ dc.b	nRst, $01, nBb2, $03, $02, nRst, $01, nBb2
000CA9 8001A303A3028001 	dc.b	nRst, $01, nBb2, $03, nBb2, $02, nRst, $01, nBb2
000CB1 A3
000CB2 02               	dc.b	$02
000CB3                  	smpsLoop		$00, $02, HDNR1S_Loop92, Target
000CB3 F7               	dc.b	$F7
000CB4 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop92<*)
000CB6                  		rom_ptr_z80(HDNR1S_Loop92+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CB6 A98C             	dc.w  (((((HDNR1S_Loop92+Target))<<8)&$FF00)|((((HDNR1S_Loop92+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nBb2, $03, $02
000CB8 8001A303A302     	dc.b	nRst, $01, nBb2, $03, nBb2, $02

000CBE                  HDNR1S_Loop93:
                        	;!@ dc.b	nRst, $01, nE3, $03, $02, nRst, $01, nE3
000CBE 8001A903A9028001 	dc.b	nRst, $01, nE3, $03, nE3, $02, nRst, $01, nE3
000CC6 A9
000CC7 02               	dc.b	$02
000CC8                  	smpsLoop		$00, $02, HDNR1S_Loop93, Target
000CC8 F7               	dc.b	$F7
000CC9 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop93<*)
000CCB                  		rom_ptr_z80(HDNR1S_Loop93+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CCB BE8C             	dc.w  (((((HDNR1S_Loop93+Target))<<8)&$FF00)|((((HDNR1S_Loop93+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nE3, $03, $02, nRst, $01
000CCD 8001A903A9028001 	dc.b	nRst, $01, nE3, $03, nE3, $02, nRst, $01
000CD5                  	smpsAlterVol		$01
000CD5 E601             	dc.b	$E6,$01

000CD7                  HDNR1S_Loop94:
                        	;!@ dc.b	nA2, $03, $02, nRst, $01, nA2, $02, nRst
000CD7 A203A2028001A202 	dc.b	nA2, $03, nA2, $02, nRst, $01, nA2, $02, nRst
000CDF 80
000CE0 01               	dc.b	$01
000CE1                  	smpsLoop		$00, $02, HDNR1S_Loop94, Target
000CE1 F7               	dc.b	$F7
000CE2 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop94<*)
000CE4                  		rom_ptr_z80(HDNR1S_Loop94+Target)
                        	;dc.w z80_ptr(ptr,addr)
000CE4 D78C             	dc.w  (((((HDNR1S_Loop94+Target))<<8)&$FF00)|((((HDNR1S_Loop94+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nA2, $03, $02, nRst, $01, nA2, $03, $02
000CE6 A203A2028001A203 	dc.b	nA2, $03, nA2, $02, nRst, $01, nA2, $03, nA2, $02
000CEE A202
000CF0 8001A2028001A503 	dc.b	nRst, $01, nA2, $02, nRst, $01, nC3, $03
                        	;!@ dc.b	$02, nRst, $01, nC3, $02, nRst, $01, nEb3
000CF8 A5028001A5028001 	dc.b	nC3, $02, nRst, $01, nC3, $02, nRst, $01, nEb3
000D00 A8
                        	;!@ dc.b	$03, $02, nRst, $01, nD3, $03, $02, nRst
000D01 03A8028001A703A7 	dc.b	$03, nEb3, $02, nRst, $01, nD3, $03, nD3, $02, nRst
000D09 0280
                        	;!@ dc.b	$01, nD3, $03, $02, nRst, $01, nD3, $02
000D0B 01A703A7028001A7 	dc.b	$01, nD3, $03, nD3, $02, nRst, $01, nD3, $02
000D13 02
                        	;!@ dc.b	$01, $02, nRst, $01, nD3, $03, $02, nRst
000D14 A701A7028001A703 	dc.b	nD3, $01, nD3, $02, nRst, $01, nD3, $03, nD3, $02, nRst
000D1C A70280
                        	;!@ dc.b	$01, nE3, $03, $02, nRst, $01, nE3, $03
000D1F 01A903A9028001A9 	dc.b	$01, nE3, $03, nE3, $02, nRst, $01, nE3, $03
000D27 03
                        	;!@ dc.b	$02, nRst, $01, nE3, $02, nRst, $01, nE3
000D28 A9028001A9028001 	dc.b	nE3, $02, nRst, $01, nE3, $02, nRst, $01, nE3
000D30 A9
                        	;!@ dc.b	$02, nRst, $01, nE3, $03, $02
000D31 028001A903A902   	dc.b	$02, nRst, $01, nE3, $03, nE3, $02

000D38                  HDNR1S_Loop95:
                        	;!@ dc.b	nRst, $01, nD3, $03, $02, nRst, $01, nD3
000D38 8001A703A7028001 	dc.b	nRst, $01, nD3, $03, nD3, $02, nRst, $01, nD3
000D40 A7
000D41 02               	dc.b	$02
000D42                  	smpsLoop		$00, $02, HDNR1S_Loop95, Target
000D42 F7               	dc.b	$F7
000D43 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop95<*)
000D45                  		rom_ptr_z80(HDNR1S_Loop95+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D45 388D             	dc.w  (((((HDNR1S_Loop95+Target))<<8)&$FF00)|((((HDNR1S_Loop95+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD3, $03, $02
000D47 8001A703A702     	dc.b	nRst, $01, nD3, $03, nD3, $02

000D4D                  HDNR1S_Loop96:
                        	;!@ dc.b	nRst, $01, nC3, $03, $02, nRst, $01, nC3
000D4D 8001A503A5028001 	dc.b	nRst, $01, nC3, $03, nC3, $02, nRst, $01, nC3
000D55 A5
000D56 02               	dc.b	$02
000D57                  	smpsLoop		$00, $02, HDNR1S_Loop96, Target
000D57 F7               	dc.b	$F7
000D58 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop96<*)
000D5A                  		rom_ptr_z80(HDNR1S_Loop96+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D5A 4D8D             	dc.w  (((((HDNR1S_Loop96+Target))<<8)&$FF00)|((((HDNR1S_Loop96+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nC3, $03, $02
000D5C 8001A503A502     	dc.b	nRst, $01, nC3, $03, nC3, $02

000D62                  HDNR1S_Loop97:
                        	;!@ dc.b	nRst, $01, nBb2, $03, $02, nRst, $01, nBb2
000D62 8001A303A3028001 	dc.b	nRst, $01, nBb2, $03, nBb2, $02, nRst, $01, nBb2
000D6A A3
000D6B 02               	dc.b	$02
000D6C                  	smpsLoop		$00, $02, HDNR1S_Loop97, Target
000D6C F7               	dc.b	$F7
000D6D 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop97<*)
000D6F                  		rom_ptr_z80(HDNR1S_Loop97+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D6F 628D             	dc.w  (((((HDNR1S_Loop97+Target))<<8)&$FF00)|((((HDNR1S_Loop97+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nBb2, $03, $02
000D71 8001A303A302     	dc.b	nRst, $01, nBb2, $03, nBb2, $02

000D77                  HDNR1S_Loop98:
                        	;!@ dc.b	nRst, $01, nD3, $03, $02, nRst, $01, nD3
000D77 8001A703A7028001 	dc.b	nRst, $01, nD3, $03, nD3, $02, nRst, $01, nD3
000D7F A7
000D80 02               	dc.b	$02
000D81                  	smpsLoop		$00, $02, HDNR1S_Loop98, Target
000D81 F7               	dc.b	$F7
000D82 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop98<*)
000D84                  		rom_ptr_z80(HDNR1S_Loop98+Target)
                        	;dc.w z80_ptr(ptr,addr)
000D84 778D             	dc.w  (((((HDNR1S_Loop98+Target))<<8)&$FF00)|((((HDNR1S_Loop98+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nD3, $03, $02, nRst, $01
000D86 8001A703A7028001 	dc.b	nRst, $01, nD3, $03, nD3, $02, nRst, $01
000D8E                  	smpsAlterVol		$FC
000D8E E6FC             	dc.b	$E6,$FC
                        	;!@ dc.b	nD3, $02, $01, $02, nRst, $04
000D90 A702A701A7028004 	dc.b	nD3, $02, nD3, $01, nD3, $02, nRst, $04
000D98                  	smpsAlterVol		$06
000D98 E606             	dc.b	$E6,$06
000D9A A70380A780       	dc.b	nD3, $03, nRst, nD3, nRst
000D9F                  	smpsAlterVol		$FA
000D9F E6FA             	dc.b	$E6,$FA
                        	;!@ dc.b	nD3, $02, nRst, $04, nD3
000DA1 A7028004         	dc.b	nD3, $02, nRst, $04

000DA5                  HDNR1S_Loop99:
                        	;!@ dc.b	$02, nRst, $07, nD3, $02, $01 Questionable
000DA5 A7028007A702A701 	dc.b	nD3, $02, nRst, $07, nD3, $02, nD3, $01
000DAD                  	smpsLoop		$00, $02, HDNR1S_Loop99, Target
000DAD F7               	dc.b	$F7
000DAE 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop99<*)
000DB0                  		rom_ptr_z80(HDNR1S_Loop99+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DB0 A58D             	dc.w  (((((HDNR1S_Loop99+Target))<<8)&$FF00)|((((HDNR1S_Loop99+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $01
000DB2 A7028001         	dc.b	nD3, $02, nRst, $01
000DB6                  	smpsAlterVol		$06
000DB6 E606             	dc.b	$E6,$06
000DB8 A70380A78006     	dc.b	nD3, $03, nRst, nD3, nRst, $06
000DBE                  	smpsAlterVol		$FA
000DBE E6FA             	dc.b	$E6,$FA
000DC0 A7028004A7028007 	dc.b	nD3, $02, nRst, $04, nD3, $02, nRst, $07

000DC8                  HDNR1S_Loop100:
                        	;!@ dc.b	nD3, $02, $01, $02, nRst, $01
000DC8 A702A701A7028001 	dc.b	nD3, $02, nD3, $01, nD3, $02, nRst, $01
000DD0                  	smpsLoop		$00, $02, HDNR1S_Loop100, Target
000DD0 F7               	dc.b	$F7
000DD1 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop100<*)
000DD3                  		rom_ptr_z80(HDNR1S_Loop100+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DD3 C88D             	dc.w  (((((HDNR1S_Loop100+Target))<<8)&$FF00)|((((HDNR1S_Loop100+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC3, $02, $01, $02, nRst, $01
000DD5 A502A501A5028001 	dc.b	nC3, $02, nC3, $01, nC3, $02, nRst, $01
000DDD                  	smpsAlterVol		$06
000DDD E606             	dc.b	$E6,$06
000DDF A50380A58006     	dc.b	nC3, $03, nRst, nC3, nRst, $06
000DE5                  	smpsAlterVol		$FA
000DE5 E6FA             	dc.b	$E6,$FA
000DE7 A5028004A5028007 	dc.b	nC3, $02, nRst, $04, nC3, $02, nRst, $07

000DEF                  HDNR1S_Loop101:
                        	;!@ dc.b	nC3, $02, $01, $02, nRst, $01
000DEF A502A501A5028001 	dc.b	nC3, $02, nC3, $01, nC3, $02, nRst, $01
000DF7                  	smpsLoop		$00, $02, HDNR1S_Loop101, Target
000DF7 F7               	dc.b	$F7
000DF8 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop101<*)
000DFA                  		rom_ptr_z80(HDNR1S_Loop101+Target)
                        	;dc.w z80_ptr(ptr,addr)
000DFA EF8D             	dc.w  (((((HDNR1S_Loop101+Target))<<8)&$FF00)|((((HDNR1S_Loop101+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nCs3, $02, $01, $02, nRst, $01
000DFC A602A601A6028001 	dc.b	nCs3, $02, nCs3, $01, nCs3, $02, nRst, $01
000E04                  	smpsAlterVol		$06
000E04 E606             	dc.b	$E6,$06
000E06 A60380A680       	dc.b	nCs3, $03, nRst, nCs3, nRst
000E0B                  	smpsAlterVol		$FA
000E0B E6FA             	dc.b	$E6,$FA
000E0D A6028001A6028001 	dc.b	nCs3, $02, nRst, $01, nCs3, $02, nRst, $01
000E15 A7028003A7018003 	dc.b	nD3, $02, nRst, $03, nD3, $01, nRst, $03
000E1D A7068009         	dc.b	nD3, $06, nRst, $09
000E21                  	smpsAlterVol		$FD
000E21 E6FD             	dc.b	$E6,$FD

000E23                  HDNR1S_Loop102:
                        	;!@ dc.b	nA2, $03, $02, nRst, $01, nA2
000E23 A203A2028001     	dc.b	nA2, $03, nA2, $02, nRst, $01

000E29                  HDNR1S_Loop103:
000E29 A2028001         	dc.b	nA2, $02, nRst, $01
000E2D                  	smpsLoop		$00, $02, HDNR1S_Loop102, Target
000E2D F7               	dc.b	$F7
000E2E 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop102<*)
000E30                  		rom_ptr_z80(HDNR1S_Loop102+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E30 238E             	dc.w  (((((HDNR1S_Loop102+Target))<<8)&$FF00)|((((HDNR1S_Loop102+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000E32                  HDNR1S_Loop104:
000E32 A203             	dc.b	nA2, $03
000E34                  	smpsLoop		$01, $02, HDNR1S_Loop103, Target
000E34 F7               	dc.b	$F7
000E35 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop103<*)
000E37                  		rom_ptr_z80(HDNR1S_Loop103+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E37 298E             	dc.w  (((((HDNR1S_Loop103+Target))<<8)&$FF00)|((((HDNR1S_Loop103+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $01, nA2, $02, nRst, $01
000E39 A2028001A2028001 	dc.b	nA2, $02, nRst, $01, nA2, $02, nRst, $01
000E41                  	smpsLoop		$02, $07, HDNR1S_Loop104, Target
000E41 F7               	dc.b	$F7
000E42 0207             	dc.b	$02,$07
                        	if (HDNR1S_Loop104<*)
000E44                  		rom_ptr_z80(HDNR1S_Loop104+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E44 328E             	dc.w  (((((HDNR1S_Loop104+Target))<<8)&$FF00)|((((HDNR1S_Loop104+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nA2, $03
000E46 A203A202         	dc.b	nA2, $03, nA2, $02

                        ;!@ HDNR1S_Loop106:
                        	;!@ dc.b	$02

000E4A                  HDNR1S_Loop105:
                        	;!@ dc.b	nRst, $01, nC2, $03, $02, nRst, $01, nC2
000E4A 8001990399028001 	dc.b	nRst, $01, nC2, $03, nC2, $02, nRst, $01, nC2
000E52 99
000E53 02               	dc.b	$02
000E54                  	smpsLoop		$00, $02, HDNR1S_Loop105, Target
000E54 F7               	dc.b	$F7
000E55 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop105<*)
000E57                  		rom_ptr_z80(HDNR1S_Loop105+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E57 4A8E             	dc.w  (((((HDNR1S_Loop105+Target))<<8)&$FF00)|((((HDNR1S_Loop105+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $01, nC2, $03
000E59 800199039902     	dc.b	nRst, $01, nC2, $03, nC2, $02
                        	;!@ smpsLoop		$01, $08, HDNR1S_Loop106, Target
000E5F                  	smpsLoop		$01, $08, HDNR1S_Loop105, Target
000E5F F7               	dc.b	$F7
000E60 0108             	dc.b	$01,$08
                        	if (HDNR1S_Loop105<*)
000E62                  		rom_ptr_z80(HDNR1S_Loop105+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E62 4A8E             	dc.w  (((((HDNR1S_Loop105+Target))<<8)&$FF00)|((((HDNR1S_Loop105+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $01
000E64 99028001         	dc.b	nC2, $02, nRst, $01
000E68                  	smpsAlterVol		$03
000E68 E603             	dc.b	$E6,$03
                        	;!@ dc.b	nD3, $02, $01, $02, nRst, $04
000E6A A702A701A7028004 	dc.b	nD3, $02, nD3, $01, nD3, $02, nRst, $04
000E72                  	smpsAlterVol		$06
000E72 E606             	dc.b	$E6,$06
000E74 A70380A780       	dc.b	nD3, $03, nRst, nD3, nRst
000E79                  	smpsAlterVol		$FA
000E79 E6FA             	dc.b	$E6,$FA
                        	;!@ dc.b	nD3, $02, nRst, $04, nD3
000E7B A7028004         	dc.b	nD3, $02, nRst, $04

000E7F                  HDNR1S_Loop107:
                        	;!@ dc.b	$02, nRst, $07, nD3, $02, $01
000E7F A7028007A702A701 	dc.b	nD3, $02, nRst, $07, nD3, $02, nD3, $01
000E87                  	smpsLoop		$00, $02, HDNR1S_Loop107, Target
000E87 F7               	dc.b	$F7
000E88 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop107<*)
000E8A                  		rom_ptr_z80(HDNR1S_Loop107+Target)
                        	;dc.w z80_ptr(ptr,addr)
000E8A 7F8E             	dc.w  (((((HDNR1S_Loop107+Target))<<8)&$FF00)|((((HDNR1S_Loop107+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $01
000E8C A7028001         	dc.b	nD3, $02, nRst, $01
000E90                  	smpsAlterVol		$06
000E90 E606             	dc.b	$E6,$06
000E92 A70380A78006     	dc.b	nD3, $03, nRst, nD3, nRst, $06
000E98                  	smpsAlterVol		$FA
000E98 E6FA             	dc.b	$E6,$FA
000E9A A7028004A7028007 	dc.b	nD3, $02, nRst, $04, nD3, $02, nRst, $07

000EA2                  HDNR1S_Loop108:
                        	;!@ dc.b	nD3, $02, $01, $02, nRst, $01
000EA2 A702A701A7028001 	dc.b	nD3, $02, nD3, $01, nD3, $02, nRst, $01
000EAA                  	smpsLoop		$00, $02, HDNR1S_Loop108, Target
000EAA F7               	dc.b	$F7
000EAB 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop108<*)
000EAD                  		rom_ptr_z80(HDNR1S_Loop108+Target)
                        	;dc.w z80_ptr(ptr,addr)
000EAD A28E             	dc.w  (((((HDNR1S_Loop108+Target))<<8)&$FF00)|((((HDNR1S_Loop108+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC3, $02, $01, $02, nRst, $01
000EAF A502A501A5028001 	dc.b	nC3, $02, nC3, $01, nC3, $02, nRst, $01
000EB7                  	smpsAlterVol		$06
000EB7 E606             	dc.b	$E6,$06
000EB9 A50380A58006     	dc.b	nC3, $03, nRst, nC3, nRst, $06
000EBF                  	smpsAlterVol		$FA
000EBF E6FA             	dc.b	$E6,$FA
000EC1 A5028004A5028007 	dc.b	nC3, $02, nRst, $04, nC3, $02, nRst, $07

000EC9                  HDNR1S_Loop109:
                        	;!@ dc.b	nC3, $02, $01, $02, nRst, $01
000EC9 A502A501A5028001 	dc.b	nC3, $02, nC3, $01, nC3, $02, nRst, $01
000ED1                  	smpsLoop		$00, $02, HDNR1S_Loop109, Target
000ED1 F7               	dc.b	$F7
000ED2 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop109<*)
000ED4                  		rom_ptr_z80(HDNR1S_Loop109+Target)
                        	;dc.w z80_ptr(ptr,addr)
000ED4 C98E             	dc.w  (((((HDNR1S_Loop109+Target))<<8)&$FF00)|((((HDNR1S_Loop109+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nCs3, $02, $01, $02, nRst, $01
000ED6 A602A601A6028001 	dc.b	nCs3, $02, nCs3, $01, nCs3, $02, nRst, $01
000EDE                  	smpsAlterVol		$06
000EDE E606             	dc.b	$E6,$06
000EE0 A60380A680       	dc.b	nCs3, $03, nRst, nCs3, nRst
000EE5                  	smpsAlterVol		$FA
000EE5 E6FA             	dc.b	$E6,$FA
000EE7 A6028001A6028001 	dc.b	nCs3, $02, nRst, $01, nCs3, $02, nRst, $01
000EEF A7028003A7018003 	dc.b	nD3, $02, nRst, $03, nD3, $01, nRst, $03
                        	;!@ dc.b	nD3, $06, nRst
000EF7 A706             	dc.b	nD3, $06

000EF9                  HDNR1S_Loop110:
                        	;!@ dc.b	$4F
000EF9 804F             	dc.b	nRst, $4F	
000EFB                  	smpsLoop		$00, $07, HDNR1S_Loop110, Target
000EFB F7               	dc.b	$F7
000EFC 0007             	dc.b	$00,$07
                        	if (HDNR1S_Loop110<*)
000EFE                  		rom_ptr_z80(HDNR1S_Loop110+Target)
                        	;dc.w z80_ptr(ptr,addr)
000EFE F98E             	dc.w  (((((HDNR1S_Loop110+Target))<<8)&$FF00)|((((HDNR1S_Loop110+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02
000F00 8002             	dc.b	nRst, $02
000F02                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000F02 EF02             		dc.b $EF,$02
                        	endif
                        	;!@ dc.b	$06
000F04 8006             	dc.b	nRst, $06
000F06                  	smpsAlterVol		$FD
000F06 E6FD             	dc.b	$E6,$FD
                        	;!@ dc.b	nB3, $05, $04, $09, nRst, $06, nC4, $05
000F08 B005B004B0098006 	dc.b	nB3, $05, nB3, $04, nB3, $09, nRst, $06, nC4, $05
000F10 B105
                        	;!@ dc.b	$04, $09, nRst, $06, nCs4, $05, $04, $03
000F12 B104B1098006B205 	dc.b	nC4, $04, nC4, $09, nRst, $06, nCs4, $05, nCs4, $04, nCs4, $03
000F1A B204B203
000F1E                  	smpsAlterVol		$FD
000F1E E6FD             	dc.b	$E6,$FD
000F20                  	smpsJump		HDNR1S_Jump4, Target
000F20 F6               	dc.b	$F6
                        	if (HDNR1S_Jump4<*)
000F21                  		rom_ptr_z80(HDNR1S_Jump4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000F21 168C             	dc.w  (((((HDNR1S_Jump4+Target))<<8)&$FF00)|((((HDNR1S_Jump4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000F23                  HDNR1S_FM6:
000F23                  	smpsFMvoice		$03
                        	;if song<>""
                        	if 1==2
                        	else
000F23 EF03             		dc.b $EF,$03
                        	endif
                        	;!@ ssMod68k	$00, $01, $01, $04
000F25                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000F25 E0C0             		dc.b $E0,panCenter
                        	endif
                        	;!@ sModOn
                        	;!@ dc.b	nRst, $3F, $3F, $3F, $3F, $3F, $3F
000F27 803F803F803F803F 	dc.b	nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F
000F2F 803F803F

000F33                  HDNR1S_Jump5:
                        	;!@ Questionable
                        	; smpsAlterNote	$00
                        	; dc.b	nRst, $40, $40, $40, $40, $40, $40
                        	; smpsAlterNote	$E5
                        	; dc.b	$01
                        	; smpsAlterNote	$E8
                        	; dc.b	$01
                        	; smpsAlterNote	$E9
                        	; dc.b	$01
                        	; smpsAlterNote	$EA
                        	; dc.b	$01
                        	; smpsAlterNote	$EB
                        	; dc.b	$01
                        	; smpsAlterNote	$ED
                        	; dc.b	$01
                        	; smpsAlterNote	$EE
                        	; dc.b	$01
                        	; smpsAlterNote	$F0
                        	; dc.b	$01
                        	; smpsAlterNote	$F1
                        	; dc.b	$01
                        	; smpsAlterNote	$E4
                        	; dc.b	$01
                        	; smpsAlterNote	$E6
                        	; dc.b	$01
                        	; smpsAlterNote	$E7
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$30, $30, $55, $0B, $55, $08
                        	; smpsAlterNote	$12
                        	; dc.b	$01
                        	; smpsAlterNote	$06
                        	; dc.b	$01
                        	; smpsAlterNote	$FC
                        	; dc.b	$01
                        	; smpsAlterNote	$FF
                        	; dc.b	$2D
                        	; smpsAlterNote	$18
                        	; dc.b	$01
                        	; smpsAlterNote	$0D
                        	; dc.b	$01
                        	; smpsAlterNote	$0A
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$2D
                        	; smpsAlterNote	$0C
                        	; dc.b	$01
                        	; smpsAlterNote	$07
                        	; dc.b	$01
                        	; smpsAlterNote	$05
                        	; dc.b	$01
                        	; smpsAlterNote	$FF
                        	; dc.b	$55, $08
                        	; smpsAlterNote	$06
                        	; dc.b	$01
                        	; smpsAlterNote	$FF
                        	; dc.b	$01
                        	; smpsAlterNote	$F4
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$2D
                        	; smpsAlterNote	$EF
                        	; dc.b	$01
                        	; smpsAlterNote	$0C
                        	; dc.b	$01
                        	; smpsAlterNote	$FD
                        	; dc.b	$01
                        	; smpsAlterNote	$FF
                        	; dc.b	$2D
                        	; smpsAlterNote	$07
                        	; dc.b	$01
                        	; smpsAlterNote	$FD
                        	; dc.b	$01
                        	; smpsAlterNote	$EC
                        	; dc.b	$01
                        	; smpsAlterNote	$FF	
                        	; dc.b	$55, $55, $1C, nG3, $02, nRst, $0A, nG3
                        	
000F33 8040804080408040 	dc.b	nRst, $40, nRst, $40, nRst, $40, nRst, $40, nRst, $40, nRst, $40
000F3B 80408040
000F3F                  	smpsAlterNote	$E5
000F3F E1E5             	dc.b	$E1,$E5
000F41 8001             	dc.b	nRst, $01
000F43                  	smpsAlterNote	$E8
000F43 E1E8             	dc.b	$E1,$E8
000F45 8001             	dc.b	nRst, $01
000F47                  	smpsAlterNote	$E9
000F47 E1E9             	dc.b	$E1,$E9
000F49 8001             	dc.b	nRst, $01
000F4B                  	smpsAlterNote	$EA
000F4B E1EA             	dc.b	$E1,$EA
000F4D 8001             	dc.b	nRst, $01
000F4F                  	smpsAlterNote	$EB
000F4F E1EB             	dc.b	$E1,$EB
000F51 8001             	dc.b	nRst, $01
000F53                  	smpsAlterNote	$ED
000F53 E1ED             	dc.b	$E1,$ED
000F55 8001             	dc.b	nRst, $01
000F57                  	smpsAlterNote	$EE
000F57 E1EE             	dc.b	$E1,$EE
000F59 8001             	dc.b	nRst, $01
000F5B                  	smpsAlterNote	$F0
000F5B E1F0             	dc.b	$E1,$F0
000F5D 8001             	dc.b	nRst, $01
000F5F                  	smpsAlterNote	$F1
000F5F E1F1             	dc.b	$E1,$F1
000F61 8001             	dc.b	nRst, $01
000F63                  	smpsAlterNote	$E4
000F63 E1E4             	dc.b	$E1,$E4
000F65 8001             	dc.b	nRst, $01
000F67                  	smpsAlterNote	$E6
000F67 E1E6             	dc.b	$E1,$E6
000F69 8001             	dc.b	nRst, $01
000F6B                  	smpsAlterNote	$E7
000F6B E1E7             	dc.b	$E1,$E7
000F6D 8001             	dc.b	nRst, $01
000F6F                  	smpsAlterNote	$00
000F6F E100             	dc.b	$E1,$00
000F71 803080308055800B 	dc.b	nRst, $30, nRst, $30, nRst, $55, nRst, $0B, nRst, $55, nRst, $08
000F79 80558008
000F7D                  	smpsAlterNote	$12
000F7D E112             	dc.b	$E1,$12
000F7F 8001             	dc.b	nRst, $01
000F81                  	smpsAlterNote	$06
000F81 E106             	dc.b	$E1,$06
000F83 8001             	dc.b	nRst, $01
000F85                  	smpsAlterNote	$FC
000F85 E1FC             	dc.b	$E1,$FC
000F87 8001             	dc.b	nRst, $01
000F89                  	smpsAlterNote	$FF
000F89 E1FF             	dc.b	$E1,$FF
000F8B 802D             	dc.b	nRst, $2D
000F8D                  	smpsAlterNote	$18
000F8D E118             	dc.b	$E1,$18
000F8F 8001             	dc.b	nRst, $01
000F91                  	smpsAlterNote	$0D
000F91 E10D             	dc.b	$E1,$0D
000F93 8001             	dc.b	nRst, $01
000F95                  	smpsAlterNote	$0A
000F95 E10A             	dc.b	$E1,$0A
000F97 8001             	dc.b	nRst, $01
000F99                  	smpsAlterNote	$00
000F99 E100             	dc.b	$E1,$00
000F9B 802D             	dc.b	nRst, $2D
000F9D                  	smpsAlterNote	$0C
000F9D E10C             	dc.b	$E1,$0C
000F9F 8001             	dc.b	nRst, $01
000FA1                  	smpsAlterNote	$07
000FA1 E107             	dc.b	$E1,$07
000FA3 8001             	dc.b	nRst, $01
000FA5                  	smpsAlterNote	$05
000FA5 E105             	dc.b	$E1,$05
000FA7 8001             	dc.b	nRst, $01
000FA9                  	smpsAlterNote	$FF
000FA9 E1FF             	dc.b	$E1,$FF
000FAB 80558008         	dc.b	nRst, $55, nRst, $08
000FAF                  	smpsAlterNote	$06
000FAF E106             	dc.b	$E1,$06
000FB1 8001             	dc.b	nRst, $01
000FB3                  	smpsAlterNote	$FF
000FB3 E1FF             	dc.b	$E1,$FF
000FB5 8001             	dc.b	nRst, $01
000FB7                  	smpsAlterNote	$F4
000FB7 E1F4             	dc.b	$E1,$F4
000FB9 8001             	dc.b	nRst, $01
000FBB                  	smpsAlterNote	$00
000FBB E100             	dc.b	$E1,$00
000FBD 802D             	dc.b	nRst, $2D
000FBF                  	smpsAlterNote	$EF
000FBF E1EF             	dc.b	$E1,$EF
000FC1 8001             	dc.b	nRst, $01
000FC3                  	smpsAlterNote	$0C
000FC3 E10C             	dc.b	$E1,$0C
000FC5 8001             	dc.b	nRst, $01
000FC7                  	smpsAlterNote	$FD
000FC7 E1FD             	dc.b	$E1,$FD
000FC9 8001             	dc.b	nRst, $01
000FCB                  	smpsAlterNote	$FF
000FCB E1FF             	dc.b	$E1,$FF
000FCD 802D             	dc.b	nRst, $2D
000FCF                  	smpsAlterNote	$07
000FCF E107             	dc.b	$E1,$07
000FD1 8001             	dc.b	nRst, $01
000FD3                  	smpsAlterNote	$FD
000FD3 E1FD             	dc.b	$E1,$FD
000FD5 8001             	dc.b	nRst, $01
000FD7                  	smpsAlterNote	$EC
000FD7 E1EC             	dc.b	$E1,$EC
000FD9 8001             	dc.b	nRst, $01
000FDB                  	smpsAlterNote	$FF	
000FDB E1FF             	dc.b	$E1,$FF
000FDD 80558055801CAC02 	dc.b	nRst, $55, nRst, $55, nRst, $1C, nG3, $02, nRst, $0A, nG3
000FE5 800AAC
                        	
000FE8 0380AD8006AD0380 	dc.b	$03, nRst, nAb3, nRst, $06, nAb3, $03, nRst
000FF0 06AD038009AF0280 	dc.b	$06, nAb3, $03, nRst, $09, nBb3, $02, nRst
000FF8 0AAF0380B18006AF 	dc.b	$0A, nBb3, $03, nRst, nC4, nRst, $06, nBb3
001000 0380AF028001AF03 	dc.b	$03, nRst, nBb3, $02, nRst, $01, nBb3, $03
                        	;!@ dc.b	$02, nRst, $07, nC4, $02, nRst, $0A, nC4
001008 AF028007B102800A 	dc.b	nBb3, $02, nRst, $07, nC4, $02, nRst, $0A, nC4
001010 B1
001011 0380B480B402800A 	dc.b	$03, nRst, nEb4, nRst, nEb4, $02, nRst, $0A
001019 B40380B6800FB603 	dc.b	nEb4, $03, nRst, nF4, nRst, $0F, nF4, $03
001021 80B6800FB602800A 	dc.b	nRst, nF4, nRst, $0F, nF4, $02, nRst, $0A
001029 AC02800AAC0380AD 	dc.b	nG3, $02, nRst, $0A, nG3, $03, nRst, nAb3
001031 8006AD038006AD03 	dc.b	nRst, $06, nAb3, $03, nRst, $06, nAb3, $03
001039 8009AF02800AAF03 	dc.b	nRst, $09, nBb3, $02, nRst, $0A, nBb3, $03
                        	;!@ dc.b	nRst, nC4, nRst, $0F, nBb3, $03, $02, nRst
001041 80B1800FAF03AF02 	dc.b	nRst, nC4, nRst, $0F, nBb3, $03, nBb3, $02, nRst
001049 80
00104A 07B102800AB10380 	dc.b	$07, nC4, $02, nRst, $0A, nC4, $03, nRst
001052 AF8006AF038006AF 	dc.b	nBb3, nRst, $06, nBb3, $03, nRst, $06, nBb3
00105A 028004B20380B202 	dc.b	$02, nRst, $04, nCs4, $03, nRst, nCs4, $02
001062 8004AF0380AF0280 	dc.b	nRst, $04, nBb3, $03, nRst, nBb3, $02, nRst
                        	;!@ dc.b	$04, nC4, $03, nRst, $55, $55, $4F
00106A 04B1038055805580 	dc.b	$04, nC4, $03, nRst, $55, nRst, $55, nRst, $4F
001072 4F
001073                  	smpsJump		HDNR1S_Jump5, Target
001073 F6               	dc.b	$F6
                        	if (HDNR1S_Jump5<*)
001074                  		rom_ptr_z80(HDNR1S_Jump5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001074 338F             	dc.w  (((((HDNR1S_Jump5+Target))<<8)&$FF00)|((((HDNR1S_Jump5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001076                  HDNR1S_PSG1:
                        	;!@ ssMod68k	$00, $02, $00, $02
                        	;!@ sModOn
001076                  	smpsPSGvoice	PSGVoi
001076 F500             	dc.b	$F5,PSGVoi
001078                  	smpsAlterNote	$01
001078 E101             	dc.b	$E1,$01
                        	;!@ dc.b	nRst, $55, $55, $1C, nF1, $18, nE1, $0C
00107A 80558055801C9218 	dc.b	nRst, $55, nRst, $55, nRst, $1C, nF1, $18, nE1, $0C
001082 910C
001084 8D8F969B9D9E18A0 	dc.b	nC1, nD1, nA1, nD2, nE2, nF2, $18, nG2
00108C 9D               	dc.b	nE2
00108D                  	smpsSetVol	$02
00108D EC02             	dc.b	$EC,$02
00108F 0380029D0180039D 	dc.b	$03, nRst, $02, nE2, $01, nRst, $03, nE2
001097 028001           	dc.b	$02, nRst, $01

00109A                  HDNR1S_Jump6:
00109A                  	smpsAlterNote	$00
00109A E100             	dc.b	$E1,$00
00109C                  	smpsSetVol	$FE
00109C ECFE             	dc.b	$EC,$FE
00109E 920396999E9D189E 	dc.b	nF1, $03, nA1, nC2, nF2, nE2, $18, nF2
0010A6 0C990396999B0CA2 	dc.b	$0C, nC2, $03, nA1, nC2, nD2, $0C, nA2
0010AE 06A00380A00F9D03 	dc.b	$06, nG2, $03, nRst, nG2, $0F, nE2, $03
0010B6 80029B0380019903 	dc.b	nRst, $02, nD2, $03, nRst, $01, nC2, $03
0010BE 970C9B0380029E03 	dc.b	nBb1, $0C, nD2, $03, nRst, $02, nF2, $03
0010C6 8001A00399129B03 	dc.b	nRst, $01, nG2, $03, nC2, $12, nD2, $03
0010CE 9D               	dc.b	nE2

0010CF                  HDNR1S_Loop111:
0010CF A080029D0380019B 	dc.b	nG2, nRst, $02, nE2, $03, nRst, $01, nD2
0010D7 03               	dc.b	$03
0010D8                  	smpsLoop		$00, $02, HDNR1S_Loop111, Target
0010D8 F7               	dc.b	$F7
0010D9 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop111<*)
0010DB                  		rom_ptr_z80(HDNR1S_Loop111+Target)
                        	;dc.w z80_ptr(ptr,addr)
0010DB CF90             	dc.w  (((((HDNR1S_Loop111+Target))<<8)&$FF00)|((((HDNR1S_Loop111+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0010DD 9D0C8D039194999D 	dc.b	nE2, $0C, nC1, $03, nE1, nG1, nC2, nE2
0010E5 189E0C990396999B 	dc.b	$18, nF2, $0C, nC2, $03, nA1, nC2, nD2
0010ED 0CA206A00380A00F 	dc.b	$0C, nA2, $06, nG2, $03, nRst, nG2, $0F
0010F5 9A0380029B038001 	dc.b	nCs2, $03, nRst, $02, nD2, $03, nRst, $01
0010FD 9D039E0F9B039D9E 	dc.b	nE2, $03, nF2, $0F, nD2, $03, nE2, nF2
001105 A00C038002A00380 	dc.b	nG2, $0C, $03, nRst, $02, nG2, $03, nRst
00110D 01A203A306A09D09 	dc.b	$01, nA2, $03, nBb2, $06, nG2, nE2, $09
001115 9A039B0C         	dc.b	nCs2, $03, nD2, $0C
001119                  	smpsAlterNote	$06
001119 E106             	dc.b	$E1,$06
00111B E701             	dc.b	smpsNoAttack, $01
00111D                  	smpsAlterNote	$05
00111D E105             	dc.b	$E1,$05
00111F E79A             	dc.b	smpsNoAttack, nCs2
001121                  	smpsAlterNote	$06
001121 E106             	dc.b	$E1,$06
001123 E799             	dc.b	smpsNoAttack, nC2
001125                  	smpsAlterNote	$07
001125 E107             	dc.b	$E1,$07
001127 E798             	dc.b	smpsNoAttack, nB1
001129                  	smpsAlterNote	$06
001129 E106             	dc.b	$E1,$06
00112B E797             	dc.b	smpsNoAttack, nBb1
00112D                  	smpsAlterNote	$07
00112D E107             	dc.b	$E1,$07
00112F E796E795         	dc.b	smpsNoAttack, nA1, smpsNoAttack, nAb1
001133                  	smpsAlterNote	$08
001133 E108             	dc.b	$E1,$08
001135 E794E793E792     	dc.b	smpsNoAttack, nG1, smpsNoAttack, nFs1, smpsNoAttack, nF1
00113B                  	smpsAlterNote	$09
00113B E109             	dc.b	$E1,$09
00113D E791             	dc.b	smpsNoAttack, nE1
00113F                  	smpsAlterNote	$08
00113F E108             	dc.b	$E1,$08
001141 E790             	dc.b	smpsNoAttack, nEb1
001143                  	smpsAlterNote	$00
001143 E100             	dc.b	$E1,$00
001145                  	smpsSetVol	$01
001145 EC01             	dc.b	$EC,$01

001147                  HDNR1S_Loop112:
001147 9B02800196028001 	dc.b	nD2, $02, nRst, $01, nA1, $02, nRst, $01
00114F 9B0280019D069E02 	dc.b	nD2, $02, nRst, $01, nE2, $06, nF2, $02
001157 80019D0280019B02 	dc.b	nRst, $01, nE2, $02, nRst, $01, nD2, $02
00115F 8019             	dc.b	nRst, $19
001161                  	smpsLoop		$00, $03, HDNR1S_Loop112, Target
001161 F7               	dc.b	$F7
001162 0003             	dc.b	$00,$03
                        	if (HDNR1S_Loop112<*)
001164                  		rom_ptr_z80(HDNR1S_Loop112+Target)
                        	;dc.w z80_ptr(ptr,addr)
001164 4791             	dc.w  (((((HDNR1S_Loop112+Target))<<8)&$FF00)|((((HDNR1S_Loop112+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001166 9A02800196028001 	dc.b	nCs2, $02, nRst, $01, nA1, $02, nRst, $01
00116E 9A0280019D06A002 	dc.b	nCs2, $02, nRst, $01, nE2, $06, nG2, $02
001176 80019D0280019A02 	dc.b	nRst, $01, nE2, $02, nRst, $01, nCs2, $02
00117E 80019B0280039B01 	dc.b	nRst, $01, nD2, $02, nRst, $03, nD2, $01
001186 80039B9B06809D02 	dc.b	nRst, $03, nD2, nD2, $06, nRst, nE2, $02
00118E 80079F0280079B02 	dc.b	nRst, $07, nFs2, $02, nRst, $07, nD2, $02
001196 80049503A196A298 	dc.b	nRst, $04, nAb1, $03, nAb2, nA1, nA2, nB1
00119E A49D919E0280079F 	dc.b	nB2, nE2, nE1, nF2, $02, nRst, $07, nFs2
0011A6 0280079B0280049D 	dc.b	$02, nRst, $07, nD2, $02, nRst, $04, nE2
0011AE 029F01A102A2019F 	dc.b	$02, nFs2, $01, nAb2, $02, nA2, $01, nFs2
0011B6 02A101A202A401A1 	dc.b	$02, nAb2, $01, nA2, $02, nB2, $01, nAb2
0011BE 02A201A402A701A9 	dc.b	$02, nA2, $01, nB2, $02, nD3, $01, nE3
0011C6 03               	dc.b	$03
0011C7                  	smpsAlterNote	$FE
0011C7 E1FE             	dc.b	$E1,$FE
0011C9 E7A701           	dc.b	smpsNoAttack, nD3, $01
0011CC                  	smpsAlterNote	$FF
0011CC E1FF             	dc.b	$E1,$FF
0011CE E7A3             	dc.b	smpsNoAttack, nBb2
0011D0                  	smpsAlterNote	$01
0011D0 E101             	dc.b	$E1,$01
0011D2 E79F             	dc.b	smpsNoAttack, nFs2
0011D4                  	smpsAlterNote	$00
0011D4 E100             	dc.b	$E1,$00
0011D6 9D0280079F028007 	dc.b	nE2, $02, nRst, $07, nFs2, $02, nRst, $07
0011DE 9B0280019503A1A2 	dc.b	nD2, $02, nRst, $01, nAb1, $03, nAb2, nA2
0011E6 96A4A2969D       	dc.b	nA1, nB2, nA2, nA1, nE2
0011EB                  	smpsAlterNote	$FB
0011EB E1FB             	dc.b	$E1,$FB
0011ED E79B01           	dc.b	smpsNoAttack, nD2, $01
0011F0                  	smpsAlterNote	$FC
0011F0 E1FC             	dc.b	$E1,$FC
0011F2 E797             	dc.b	smpsNoAttack, nBb1
0011F4                  	smpsAlterNote	$FD
0011F4 E1FD             	dc.b	$E1,$FD
0011F6 E793             	dc.b	smpsNoAttack, nFs1
0011F8                  	smpsAlterNote	$00
0011F8 E100             	dc.b	$E1,$00
0011FA 9E0280079F028007 	dc.b	nF2, $02, nRst, $07, nFs2, $02, nRst, $07
001202 9B028004AA02A701 	dc.b	nD2, $02, nRst, $04, nF3, $02, nD3, $01
00120A A402A201A702A401 	dc.b	nB2, $02, nA2, $01, nD3, $02, nB2, $01
001212 A202A101A202A101 	dc.b	nA2, $02, nAb2, $01, nA2, $02, nAb2, $01
00121A 9F029E019B03     	dc.b	nFs2, $02, nF2, $01, nD2, $03
001220                  	smpsAlterNote	$FD
001220 E1FD             	dc.b	$E1,$FD
001222 E79901           	dc.b	smpsNoAttack, nC2, $01
001225                  	smpsAlterNote	$FE
001225 E1FE             	dc.b	$E1,$FE
001227 E795             	dc.b	smpsNoAttack, nAb1
001229                  	smpsAlterNote	$FF
001229 E1FF             	dc.b	$E1,$FF
00122B E791             	dc.b	smpsNoAttack, nE1
00122D                  	smpsAlterNote	$01
00122D E101             	dc.b	$E1,$01
00122F A1028007A2028007 	dc.b	nAb2, $02, nRst, $07, nA2, $02, nRst, $07
001237 9F0280049803A499 	dc.b	nFs2, $02, nRst, $04, nB1, $03, nB2, nC2
00123F A59BA7A094A10280 	dc.b	nC3, nD2, nD3, nG2, nG1, nAb2, $02, nRst
001247 07A20280079F0280 	dc.b	$07, nA2, $02, nRst, $07, nFs2, $02, nRst
00124F 04A002A101A402A5 	dc.b	$04, nG2, $02, nAb2, $01, nB2, $02, nC3
001257 01A102A401A502A7 	dc.b	$01, nAb2, $02, nB2, $01, nC3, $02, nD3
00125F 01A402A501A702AA 	dc.b	$01, nB2, $02, nC3, $01, nD3, $02, nF3
001267 01AC03           	dc.b	$01, nG3, $03
00126A                  	smpsAlterNote	$00
00126A E100             	dc.b	$E1,$00
00126C E7AA01E7A6       	dc.b	smpsNoAttack, nF3, $01, smpsNoAttack, nCs3
001271                  	smpsAlterNote	$01
001271 E101             	dc.b	$E1,$01
001273 E7A2             	dc.b	smpsNoAttack, nA2
001275                  	smpsAlterNote	$00
001275 E100             	dc.b	$E1,$00
001277 A1028007A2028007 	dc.b	nAb2, $02, nRst, $07, nA2, $02, nRst, $07
00127F 9F0280019803A4A5 	dc.b	nFs2, $02, nRst, $01, nB1, $03, nB2, nC3
001287 99A7A599A0       	dc.b	nC2, nD3, nC3, nC2, nG2
00128C                  	smpsAlterNote	$03
00128C E103             	dc.b	$E1,$03
00128E E79F01           	dc.b	smpsNoAttack, nFs2, $01
001291                  	smpsAlterNote	$FC
001291 E1FC             	dc.b	$E1,$FC
001293 E79A             	dc.b	smpsNoAttack, nCs2
001295                  	smpsAlterNote	$01
001295 E101             	dc.b	$E1,$01
001297 E796             	dc.b	smpsNoAttack, nA1
001299                  	smpsAlterNote	$00
001299 E100             	dc.b	$E1,$00
00129B A1028007A2028007 	dc.b	nAb2, $02, nRst, $07, nA2, $02, nRst, $07
0012A3 9F028004AD02AB01 	dc.b	nFs2, $02, nRst, $04, nAb3, $02, nFs3, $01
0012AB AA02A701AA02A701 	dc.b	nF3, $02, nD3, $01, nF3, $02, nD3, $01
0012B3 A502A401A502A401 	dc.b	nC3, $02, nB2, $01, nC3, $02, nB2, $01
0012BB A1029F019D03     	dc.b	nAb2, $02, nFs2, $01, nE2, $03
0012C1                  	smpsAlterNote	$FF
0012C1 E1FF             	dc.b	$E1,$FF
0012C3 E79B01           	dc.b	smpsNoAttack, nD2, $01
0012C6                  	smpsAlterNote	$01
0012C6 E101             	dc.b	$E1,$01
0012C8 E797             	dc.b	smpsNoAttack, nBb1
0012CA                  	smpsAlterNote	$06
0012CA E106             	dc.b	$E1,$06
0012CC E793             	dc.b	smpsNoAttack, nFs1
0012CE                  	smpsAlterNote	$00
0012CE E100             	dc.b	$E1,$00
0012D0                  	smpsSetVol	$01
0012D0 EC01             	dc.b	$EC,$01
0012D2 8F0C91929406968F 	dc.b	nD1, $0C, nE1, nF1, nG1, $06, nA1, nD1
0012DA 0C91929706968F0C 	dc.b	$0C, nE1, nF1, nBb1, $06, nA1, nD1, $0C
0012E2 9192940696940C91 	dc.b	nE1, nF1, nG1, $06, nA1, nG1, $0C, nE1
                        	;!@ dc.b	nD1, nRst
0012EA 8F               	dc.b	nD1

0012EB                  HDNR1S_Loop113:
                        	;! dc.b	$4E
0012EB 804E             	dc.b	nRst, $4E
0012ED                  	smpsLoop		$00, $08, HDNR1S_Loop113, Target
0012ED F7               	dc.b	$F7
0012EE 0008             	dc.b	$00,$08
                        	if (HDNR1S_Loop113<*)
0012F0                  		rom_ptr_z80(HDNR1S_Loop113+Target)
                        	;dc.w z80_ptr(ptr,addr)
0012F0 EB92             	dc.w  (((((HDNR1S_Loop113+Target))<<8)&$FF00)|((((HDNR1S_Loop113+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0012F2                  	smpsJump		HDNR1S_Jump6, Target
0012F2 F6               	dc.b	$F6
                        	if (HDNR1S_Jump6<*)
0012F3                  		rom_ptr_z80(HDNR1S_Jump6+Target)
                        	;dc.w z80_ptr(ptr,addr)
0012F3 9A90             	dc.w  (((((HDNR1S_Jump6+Target))<<8)&$FF00)|((((HDNR1S_Jump6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0012F5                  HDNR1S_PSG2:
                        	;!@ ssMod68k	$00, $02, $00, $02
                        	;!@ sModOn
0012F5                  	smpsPSGvoice	PSGVoi
0012F5 F500             	dc.b	$F5,PSGVoi
                        	;!@ dc.b	nRst, $55, $55, $1C, nD1, $02, $01
                        	;!@ dc.b	nRst, $55, nRst, $55, nRst, $1C, nD1, $02, nD1
0012F7 80558055801C8F02 	dc.b	nRst, $55, nRst, $55, nRst, $1C, nD1, $02

                        ;!@! Questionable
0012FF                  HDNR1S_Loop115:
                        	;!@ dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1
0012FF 8F0280108F028004 	dc.b	nD1, $02, nRst, $10, nD1, $02, nRst, $04, nD1
001307 8F

                        ;!@! Questionable
001308                  HDNR1S_Loop114:
                        	;!@ dc.b	$02, nRst, $07, nD1, $02, $01
001308 8F0280078F028F01 	dc.b	nD1, $02, nRst, $07, nD1, $02, nD1, $01
001310                  	smpsLoop		$00, $02, HDNR1S_Loop114, Target
001310 F7               	dc.b	$F7
001311 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop114<*)
001313                  		rom_ptr_z80(HDNR1S_Loop114+Target)
                        	;dc.w z80_ptr(ptr,addr)
001313 0893             	dc.w  (((((HDNR1S_Loop114+Target))<<8)&$FF00)|((((HDNR1S_Loop114+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001315                  	smpsLoop		$01, $02, HDNR1S_Loop115, Target
001315 F7               	dc.b	$F7
001316 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop115<*)
001318                  		rom_ptr_z80(HDNR1S_Loop115+Target)
                        	;dc.w z80_ptr(ptr,addr)
001318 FF92             	dc.w  (((((HDNR1S_Loop115+Target))<<8)&$FF00)|((((HDNR1S_Loop115+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1
00131A 8F0280108F028004 	dc.b	nD1, $02, nRst, $10, nD1, $02, nRst, $04, nD1
001322 8F
001323 8F0280078F028F01 	dc.b	nD1, $02, nRst, $07, nD1, $02, nD1, $01, nD1, $02, nRst
00132B 8F0280
00132E 1F               	dc.b	$1F
00132F                  	smpsSetVol	$FC
00132F ECFC             	dc.b	$EC,$FC
001331 A0038002A0018003 	dc.b	nG2, $03, nRst, $02, nG2, $01, nRst, $03
001339 A0028001         	dc.b	nG2, $02, nRst, $01

00133D                  HDNR1S_Jump7:
00133D                  	smpsAlterNote	$00
00133D E100             	dc.b	$E1,$00
00133F 800F             	dc.b	nRst, $0F
001341                  	smpsSetVol	$03
001341 EC03             	dc.b	$EC,$03

001343                  HDNR1S_Loop116:
                        	;!@ dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
001343 8101800180018101 	dc.b	nC0, $01, nRst, $01, nRst, $01, nC0, $01, nRst, $05
00134B 8005
00134D                  	smpsLoop		$00, $02, HDNR1S_Loop116, Target
00134D F7               	dc.b	$F7
00134E 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop116<*)
001350                  		rom_ptr_z80(HDNR1S_Loop116+Target)
                        	;dc.w z80_ptr(ptr,addr)
001350 4393             	dc.w  (((((HDNR1S_Loop116+Target))<<8)&$FF00)|((((HDNR1S_Loop116+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001352 81028004         	dc.b	nC0, $02, nRst, $04
001356                  	smpsLoop		$01, $02, HDNR1S_Loop116, Target
001356 F7               	dc.b	$F7
001357 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop116<*)
001359                  		rom_ptr_z80(HDNR1S_Loop116+Target)
                        	;dc.w z80_ptr(ptr,addr)
001359 4393             	dc.w  (((((HDNR1S_Loop116+Target))<<8)&$FF00)|((((HDNR1S_Loop116+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00135B                  HDNR1S_Loop117:
                        	;!@ dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
00135B 8301800180018301 	dc.b	nD0, $01, nRst, $01, nRst, $01, nD0, $01, nRst, $05
001363 8005
001365                  	smpsLoop		$00, $02, HDNR1S_Loop117, Target
001365 F7               	dc.b	$F7
001366 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop117<*)
001368                  		rom_ptr_z80(HDNR1S_Loop117+Target)
                        	;dc.w z80_ptr(ptr,addr)
001368 5B93             	dc.w  (((((HDNR1S_Loop117+Target))<<8)&$FF00)|((((HDNR1S_Loop117+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00136A 83028004         	dc.b	nD0, $02, nRst, $04

00136E                  HDNR1S_Loop118:
                        	;!@ dc.b	nE0, $01, nRst, nRst, nE0, nRst, $05
00136E 8501800180018501 	dc.b	nE0, $01, nRst, $01, nRst, $01, nE0, $01, nRst, $05
001376 8005
001378                  	smpsLoop		$00, $02, HDNR1S_Loop118, Target
001378 F7               	dc.b	$F7
001379 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop118<*)
00137B                  		rom_ptr_z80(HDNR1S_Loop118+Target)
                        	;dc.w z80_ptr(ptr,addr)
00137B 6E93             	dc.w  (((((HDNR1S_Loop118+Target))<<8)&$FF00)|((((HDNR1S_Loop118+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00137D 85028004         	dc.b	nE0, $02, nRst, $04

001381                  HDNR1S_Loop119:
                        	;!@ dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
001381 8301800180018301 	dc.b	nD0, $01, nRst, $01, nRst, $01, nD0, $01, nRst, $05
001389 8005
00138B                  	smpsLoop		$00, $02, HDNR1S_Loop119, Target
00138B F7               	dc.b	$F7
00138C 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop119<*)
00138E                  		rom_ptr_z80(HDNR1S_Loop119+Target)
                        	;dc.w z80_ptr(ptr,addr)
00138E 8193             	dc.w  (((((HDNR1S_Loop119+Target))<<8)&$FF00)|((((HDNR1S_Loop119+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001390 8302             	dc.b	nD0, $02

001392                  HDNR1S_Loop121:
001392 8004             	dc.b	nRst, $04

001394                  HDNR1S_Loop120:
                        	;!@ dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
001394 8101800180018101 	dc.b	nC0, $01, nRst, $01, nRst, $01, nC0, $01, nRst, $05
00139C 8005
00139E                  	smpsLoop		$00, $02, HDNR1S_Loop120, Target
00139E F7               	dc.b	$F7
00139F 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop120<*)
0013A1                  		rom_ptr_z80(HDNR1S_Loop120+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013A1 9493             	dc.w  (((((HDNR1S_Loop120+Target))<<8)&$FF00)|((((HDNR1S_Loop120+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013A3 8102             	dc.b	nC0, $02
0013A5                  	smpsLoop		$01, $02, HDNR1S_Loop121, Target
0013A5 F7               	dc.b	$F7
0013A6 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop121<*)
0013A8                  		rom_ptr_z80(HDNR1S_Loop121+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013A8 9293             	dc.w  (((((HDNR1S_Loop121+Target))<<8)&$FF00)|((((HDNR1S_Loop121+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013AA 8004             	dc.b	nRst, $04

0013AC                  HDNR1S_Loop122:
                        	;!@ dc.b	nE0, $01, nRst, nRst, nE0, nRst, $05
0013AC 8501800180018501 	dc.b	nE0, $01, nRst, $01, nRst, $01, nE0, $01, nRst, $05
0013B4 8005
0013B6                  	smpsLoop		$00, $02, HDNR1S_Loop122, Target
0013B6 F7               	dc.b	$F7
0013B7 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop122<*)
0013B9                  		rom_ptr_z80(HDNR1S_Loop122+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013B9 AC93             	dc.w  (((((HDNR1S_Loop122+Target))<<8)&$FF00)|((((HDNR1S_Loop122+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013BB 8502             	dc.b	nE0, $02

0013BD                  HDNR1S_Loop124:
0013BD 8004             	dc.b	nRst, $04

0013BF                  HDNR1S_Loop123:
                        	;!@ dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
0013BF 8101800180018101 	dc.b	nC0, $01, nRst, $01, nRst, $01, nC0, $01, nRst, $05
0013C7 8005
0013C9                  	smpsLoop		$00, $02, HDNR1S_Loop123, Target
0013C9 F7               	dc.b	$F7
0013CA 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop123<*)
0013CC                  		rom_ptr_z80(HDNR1S_Loop123+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013CC BF93             	dc.w  (((((HDNR1S_Loop123+Target))<<8)&$FF00)|((((HDNR1S_Loop123+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013CE 8102             	dc.b	nC0, $02
0013D0                  	smpsLoop		$01, $02, HDNR1S_Loop124, Target
0013D0 F7               	dc.b	$F7
0013D1 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop124<*)
0013D3                  		rom_ptr_z80(HDNR1S_Loop124+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013D3 BD93             	dc.w  (((((HDNR1S_Loop124+Target))<<8)&$FF00)|((((HDNR1S_Loop124+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013D5 8004             	dc.b	nRst, $04

0013D7                  HDNR1S_Loop125:
                        	;!@ dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
0013D7 8301800180018301 	dc.b	nD0, $01, nRst, $01, nRst, $01, nD0, $01, nRst, $05
0013DF 8005
0013E1                  	smpsLoop		$00, $02, HDNR1S_Loop125, Target
0013E1 F7               	dc.b	$F7
0013E2 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop125<*)
0013E4                  		rom_ptr_z80(HDNR1S_Loop125+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013E4 D793             	dc.w  (((((HDNR1S_Loop125+Target))<<8)&$FF00)|((((HDNR1S_Loop125+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013E6 83028004         	dc.b	nD0, $02, nRst, $04

0013EA                  HDNR1S_Loop126:
                        	;!@ dc.b	nE0, $01, nRst, nRst, nE0, nRst, $05
0013EA 8501800180018501 	dc.b	nE0, $01, nRst, $01, nRst, $01, nE0, $01, nRst, $05
0013F2 8005
0013F4                  	smpsLoop		$00, $02, HDNR1S_Loop126, Target
0013F4 F7               	dc.b	$F7
0013F5 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop126<*)
0013F7                  		rom_ptr_z80(HDNR1S_Loop126+Target)
                        	;dc.w z80_ptr(ptr,addr)
0013F7 EA93             	dc.w  (((((HDNR1S_Loop126+Target))<<8)&$FF00)|((((HDNR1S_Loop126+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0013F9 85028004         	dc.b	nE0, $02, nRst, $04

0013FD                  HDNR1S_Loop127:
                        	;!@ dc.b	nD0, $01, nRst, nRst, nD0, nRst, $05
0013FD 8301800180018301 	dc.b	nD0, $01, nRst, $01, nRst, $01, nD0, $01, nRst, $05
001405 8005
001407                  	smpsLoop		$00, $02, HDNR1S_Loop127, Target
001407 F7               	dc.b	$F7
001408 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop127<*)
00140A                  		rom_ptr_z80(HDNR1S_Loop127+Target)
                        	;dc.w z80_ptr(ptr,addr)
00140A FD93             	dc.w  (((((HDNR1S_Loop127+Target))<<8)&$FF00)|((((HDNR1S_Loop127+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00140C 8302             	dc.b	nD0, $02

00140E                  HDNR1S_Loop129:
00140E 8004             	dc.b	nRst, $04

001410                  HDNR1S_Loop128:
                        	;!@ dc.b	nC0, $01, nRst, nRst, nC0, nRst, $05
001410 8101800180018101 	dc.b	nC0, $01, nRst, $01, nRst, $01, nC0, $01, nRst, $05
001418 8005
00141A                  	smpsLoop		$00, $02, HDNR1S_Loop128, Target
00141A F7               	dc.b	$F7
00141B 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop128<*)
00141D                  		rom_ptr_z80(HDNR1S_Loop128+Target)
                        	;dc.w z80_ptr(ptr,addr)
00141D 1094             	dc.w  (((((HDNR1S_Loop128+Target))<<8)&$FF00)|((((HDNR1S_Loop128+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00141F 8102             	dc.b	nC0, $02
001421                  	smpsLoop		$01, $02, HDNR1S_Loop129, Target
001421 F7               	dc.b	$F7
001422 0102             	dc.b	$01,$02
                        	if (HDNR1S_Loop129<*)
001424                  		rom_ptr_z80(HDNR1S_Loop129+Target)
                        	;dc.w z80_ptr(ptr,addr)
001424 0E94             	dc.w  (((((HDNR1S_Loop129+Target))<<8)&$FF00)|((((HDNR1S_Loop129+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nRst, $04, nC0, $01, nRst, nRst, nC0, nRst
001426 8004810180018001 	dc.b	nRst, $04, nC0, $01, nRst, $01, nRst, $01, nC0, $01, nRst
00142E 810180
001431 05               	dc.b	$05
001432                  	smpsAlterNote	$7F
001432 E17F             	dc.b	$E1,$7F
                        	;!@ dc.b	nC0, $01, nRst, nRst, nC0, nRst, $01, $01
001434 8101800180018101 	dc.b	nC0, $01, nRst, $01, nRst, $01, nC0, $01, nRst, $01, nRst, $01
00143C 80018001
                        	;!@ dc.b	$01, $01, $01, nC0, smpsNoAttack, $01
001440 80018001800181E7 	dc.b	nRst, $01, nRst, $01, nRst, $01, nC0, smpsNoAttack, $01
001448 01
001449                  	smpsAlterNote	$12
001449 E112             	dc.b	$E1,$12
00144B 80               	dc.b	nRst
00144C                  	smpsAlterNote	$00
00144C E100             	dc.b	$E1,$00
00144E                  	smpsSetVol	$FE
00144E ECFE             	dc.b	$EC,$FE
                        	;!@ dc.b	nD1, $02, $01, $02, nRst, $10, nD1, $02
001450 8F028F018F028010 	dc.b	nD1, $02, nD1, $01, nD1, $02, nRst, $10, nD1, $02
001458 8F02
                        	;!@ dc.b	nRst, $04, nD1
00145A 8004             	dc.b	nRst, $04

00145C                  HDNR1S_Loop130:
                        	;!@ dc.b	$02, nRst, $07, nD1, $02, $01
00145C 8F0280078F028F01 	dc.b	nD1, $02, nRst, $07, nD1, $02, nD1, $01
001464                  	smpsLoop		$00, $02, HDNR1S_Loop130, Target
001464 F7               	dc.b	$F7
001465 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop130<*)
001467                  		rom_ptr_z80(HDNR1S_Loop130+Target)
                        	;dc.w z80_ptr(ptr,addr)
001467 5C94             	dc.w  (((((HDNR1S_Loop130+Target))<<8)&$FF00)|((((HDNR1S_Loop130+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1
001469 8F0280108F028004 	dc.b	nD1, $02, nRst, $10, nD1, $02, nRst, $04, nD1
001471 8F
001472 028007           	dc.b	$02, nRst, $07

001475                  HDNR1S_Loop131:
                        	;!@ dc.b	nD1, $02, $01, $02, nRst, $01
001475 8F028F018F028001 	dc.b	nD1, $02, nD1, $01, nD1, $02, nRst, $01
00147D                  	smpsLoop		$00, $02, HDNR1S_Loop131, Target
00147D F7               	dc.b	$F7
00147E 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop131<*)
001480                  		rom_ptr_z80(HDNR1S_Loop131+Target)
                        	;dc.w z80_ptr(ptr,addr)
001480 7594             	dc.w  (((((HDNR1S_Loop131+Target))<<8)&$FF00)|((((HDNR1S_Loop131+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC1, $02, $01, $02, nRst, $10, nC1, $02
001482 8D028D018D028010 	dc.b	nC1, $02, nC1, $01, nC1, $02, nRst, $10, nC1, $02
00148A 8D02
00148C 80048D028007     	dc.b	nRst, $04, nC1, $02, nRst, $07

001492                  HDNR1S_Loop132:
                        	;!@ dc.b	nC1, $02, $01, $02, nRst, $01
001492 8D028D018D028001 	dc.b	nC1, $02, nC1, $01, nC1, $02, nRst, $01
00149A                  	smpsLoop		$00, $02, HDNR1S_Loop132, Target
00149A F7               	dc.b	$F7
00149B 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop132<*)
00149D                  		rom_ptr_z80(HDNR1S_Loop132+Target)
                        	;dc.w z80_ptr(ptr,addr)
00149D 9294             	dc.w  (((((HDNR1S_Loop132+Target))<<8)&$FF00)|((((HDNR1S_Loop132+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nCs1, $02, $01, $02, nRst, $0D, nCs1, $02
00149F 8E028E018E02800D 	dc.b	nCs1, $02, nCs1, $01, nCs1, $02, nRst, $0D, nCs1, $02
0014A7 8E02
0014A9 80018E0280018F02 	dc.b	nRst, $01, nCs1, $02, nRst, $01, nD1, $02
0014B1 80038F0180038F06 	dc.b	nRst, $03, nD1, $01, nRst, $03, nD1, $06
                        	;!@ dc.b	nRst, $09, $55, $08
0014B9 800980558008     	dc.b	nRst, $09, nRst, $55, nRst, $08
                        	
                        	;!@ Questionable
                        	; smpsAlterNote	$F7
                        	; dc.b	$01
                        	; smpsAlterNote	$FB
                        	; dc.b	$01
                        	; smpsAlterNote	$02
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$2D
                        	; smpsAlterNote	$F4
                        	; dc.b	$01
                        	; smpsAlterNote	$F6
                        	; dc.b	$01
                        	; smpsAlterNote	$F9
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$2D
                        	; smpsAlterNote	$FA
                        	; dc.b	$01
                        	; smpsAlterNote	$FB
                        	; dc.b	$01
                        	; smpsAlterNote	$FD
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$55, $08
                        	; smpsAlterNote	$FD
                        	; dc.b	$01
                        	; smpsAlterNote	$01
                        	; dc.b	$01
                        	; smpsAlterNote	$07
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$2D
                        	; smpsAlterNote	$07
                        	; dc.b	$01
                        	; smpsAlterNote	$F6
                        	; dc.b	$01
                        	; smpsAlterNote	$02
                        	; dc.b	$01
                        	; smpsAlterNote	$00
                        	; dc.b	$2D
                        	; smpsAlterNote	$FC
                        	; dc.b	$01
                        	; smpsAlterNote	$02
                        	; dc.b	$01
                        	; smpsAlterNote	$0C
                        	; dc.b	$01
                        	
0014BF                  	smpsAlterNote	$F7
0014BF E1F7             	dc.b	$E1,$F7
0014C1 8001             	dc.b	nRst, $01
0014C3                  	smpsAlterNote	$FB
0014C3 E1FB             	dc.b	$E1,$FB
0014C5 8001             	dc.b	nRst, $01
0014C7                  	smpsAlterNote	$02
0014C7 E102             	dc.b	$E1,$02
0014C9 8001             	dc.b	nRst, $01
0014CB                  	smpsAlterNote	$00
0014CB E100             	dc.b	$E1,$00
0014CD 802D             	dc.b	nRst, $2D
0014CF                  	smpsAlterNote	$F4
0014CF E1F4             	dc.b	$E1,$F4
0014D1 8001             	dc.b	nRst, $01
0014D3                  	smpsAlterNote	$F6
0014D3 E1F6             	dc.b	$E1,$F6
0014D5 8001             	dc.b	nRst, $01
0014D7                  	smpsAlterNote	$F9
0014D7 E1F9             	dc.b	$E1,$F9
0014D9 8001             	dc.b	nRst, $01
0014DB                  	smpsAlterNote	$00
0014DB E100             	dc.b	$E1,$00
0014DD 802D             	dc.b	nRst, $2D
0014DF                  	smpsAlterNote	$FA
0014DF E1FA             	dc.b	$E1,$FA
0014E1 8001             	dc.b	nRst, $01
0014E3                  	smpsAlterNote	$FB
0014E3 E1FB             	dc.b	$E1,$FB
0014E5 8001             	dc.b	nRst, $01
0014E7                  	smpsAlterNote	$FD
0014E7 E1FD             	dc.b	$E1,$FD
0014E9 8001             	dc.b	nRst, $01
0014EB                  	smpsAlterNote	$00
0014EB E100             	dc.b	$E1,$00
0014ED 5508             	dc.b	$55, $08
0014EF                  	smpsAlterNote	$FD
0014EF E1FD             	dc.b	$E1,$FD
0014F1 8001             	dc.b	nRst, $01
0014F3                  	smpsAlterNote	$01
0014F3 E101             	dc.b	$E1,$01
0014F5 8001             	dc.b	nRst, $01
0014F7                  	smpsAlterNote	$07
0014F7 E107             	dc.b	$E1,$07
0014F9 8001             	dc.b	nRst, $01
0014FB                  	smpsAlterNote	$00
0014FB E100             	dc.b	$E1,$00
0014FD 802D             	dc.b	nRst, $2D
0014FF                  	smpsAlterNote	$07
0014FF E107             	dc.b	$E1,$07
001501 8001             	dc.b	nRst, $01
001503                  	smpsAlterNote	$F6
001503 E1F6             	dc.b	$E1,$F6
001505 8001             	dc.b	nRst, $01
001507                  	smpsAlterNote	$02
001507 E102             	dc.b	$E1,$02
001509 8001             	dc.b	nRst, $01
00150B                  	smpsAlterNote	$00
00150B E100             	dc.b	$E1,$00
00150D 802D             	dc.b	nRst, $2D
00150F                  	smpsAlterNote	$FC
00150F E1FC             	dc.b	$E1,$FC
001511 8001             	dc.b	nRst, $01
001513                  	smpsAlterNote	$02
001513 E102             	dc.b	$E1,$02
001515 8001             	dc.b	nRst, $01
001517                  	smpsAlterNote	$0C
001517 E10C             	dc.b	$E1,$0C
001519 8001             	dc.b	nRst, $01
                        	
00151B                  	smpsAlterNote	$00
00151B E100             	dc.b	$E1,$00
                        	;!@ dc.b	nD1, $02, $01, $02, nRst, $10, nD1, $02
00151D 8F028F018F028010 	dc.b	nD1, $02, nD1, $01, nD1, $02, nRst, $10, nD1, $02
001525 8F02
                        	;!@ dc.b	nRst, $04, nD1
001527 8004             	dc.b	nRst, $04

001529                  HDNR1S_Loop133:
                        	;!@ dc.b	$02, nRst, $07, nD1, $02, $01
001529 8F0280078F028F01 	dc.b	nD1, $02, nRst, $07, nD1, $02, nD1, $01
001531                  	smpsLoop		$00, $02, HDNR1S_Loop133, Target
001531 F7               	dc.b	$F7
001532 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop133<*)
001534                  		rom_ptr_z80(HDNR1S_Loop133+Target)
                        	;dc.w z80_ptr(ptr,addr)
001534 2995             	dc.w  (((((HDNR1S_Loop133+Target))<<8)&$FF00)|((((HDNR1S_Loop133+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	$02, nRst, $10, nD1, $02, nRst, $04, nD1
001536 8F0280108F028004 	dc.b	nD1, $02, nRst, $10, nD1, $02, nRst, $04, nD1
00153E 8F
00153F 028007           	dc.b	$02, nRst, $07

001542                  HDNR1S_Loop134:
                        	;!@ dc.b	nD1, $02, $01, $02, nRst, $01
001542 8F028F018F028001 	dc.b	nD1, $02, nD1, $01, nD1, $02, nRst, $01
00154A                  	smpsLoop		$00, $02, HDNR1S_Loop134, Target
00154A F7               	dc.b	$F7
00154B 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop134<*)
00154D                  		rom_ptr_z80(HDNR1S_Loop134+Target)
                        	;dc.w z80_ptr(ptr,addr)
00154D 4295             	dc.w  (((((HDNR1S_Loop134+Target))<<8)&$FF00)|((((HDNR1S_Loop134+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC1, $02, $01, $02, nRst, $10, nC1, $02
00154F 8D028D018D028010 	dc.b	nC1, $02, nC1, $01, nC1, $02, nRst, $10, nC1, $02
001557 8D02
001559 80048D028007     	dc.b	nRst, $04, nC1, $02, nRst, $07

00155F                  HDNR1S_Loop135:
                        	;!@ dc.b	nC1, $02, $01, $02, nRst, $01
00155F 8D028D018D028001 	dc.b	nC1, $02, nC1, $01, nC1, $02, nRst, $01
001567                  	smpsLoop		$00, $02, HDNR1S_Loop135, Target
001567 F7               	dc.b	$F7
001568 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop135<*)
00156A                  		rom_ptr_z80(HDNR1S_Loop135+Target)
                        	;dc.w z80_ptr(ptr,addr)
00156A 5F95             	dc.w  (((((HDNR1S_Loop135+Target))<<8)&$FF00)|((((HDNR1S_Loop135+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nCs1, $02, $01, $02, nRst, $0D, nCs1, $02
00156C 8E028E018E02800D 	dc.b	nCs1, $02, nCs1, $01, nCs1, $02, nRst, $0D, nCs1, $02
001574 8E02
001576 80018E0280018F02 	dc.b	nRst, $01, nCs1, $02, nRst, $01, nD1, $02
00157E 80038F0180038F06 	dc.b	nRst, $03, nD1, $01, nRst, $03, nD1, $06
001586 8009             	dc.b	nRst, $09
001588                  	smpsSetVol	$02
001588 EC02             	dc.b	$EC,$02
00158A 8F0380           	dc.b	nD1, $03, nRst
00158D                  	smpsSetVol	$FD
00158D ECFD             	dc.b	$EC,$FD
00158F 9406959799       	dc.b	nG1, $06, nAb1, nBb1, nC2
001594                  	smpsSetVol	$03
001594 EC03             	dc.b	$EC,$03
001596 90028001         	dc.b	nEb1, $02, nRst, $01
00159A                  	smpsSetVol	$FD
00159A ECFD             	dc.b	$EC,$FD
00159C 990F             	dc.b	nC2, $0F
00159E                  	smpsSetVol	$03
00159E EC03             	dc.b	$EC,$03
0015A0 920380           	dc.b	nF1, $03, nRst
0015A3                  	smpsSetVol	$FD
0015A3 ECFD             	dc.b	$EC,$FD
0015A5 9B0699979918     	dc.b	nD2, $06, nC2, nBb1, nC2, $18
0015AB                  	smpsSetVol	$03
0015AB EC03             	dc.b	$EC,$03
0015AD 940380           	dc.b	nG1, $03, nRst
0015B0                  	smpsSetVol	$FD
0015B0 ECFD             	dc.b	$EC,$FD
0015B2 9C069B97990F     	dc.b	nEb2, $06, nD2, nBb1, nC2, $0F
0015B8                  	smpsSetVol	$03
0015B8 EC03             	dc.b	$EC,$03
0015BA 95028001         	dc.b	nAb1, $02, nRst, $01
0015BE                  	smpsSetVol	$FD
0015BE ECFD             	dc.b	$EC,$FD
0015C0 99039B9C189B     	dc.b	nC2, $03, nD2, nEb2, $18, nD2
0015C6                  	smpsSetVol	$03
0015C6 EC03             	dc.b	$EC,$03
0015C8 8F0380           	dc.b	nD1, $03, nRst
0015CB                  	smpsSetVol	$FD
0015CB ECFD             	dc.b	$EC,$FD
0015CD 9B069C9B99       	dc.b	nD2, $06, nEb2, nD2, nC2
0015D2                  	smpsSetVol	$03
0015D2 EC03             	dc.b	$EC,$03
0015D4 90028001         	dc.b	nEb1, $02, nRst, $01
0015D8                  	smpsSetVol	$FD
0015D8 ECFD             	dc.b	$EC,$FD
0015DA 950F             	dc.b	nAb1, $0F
0015DC                  	smpsSetVol	$03
0015DC EC03             	dc.b	$EC,$03
0015DE 920380           	dc.b	nF1, $03, nRst
0015E1                  	smpsSetVol	$FD
0015E1 ECFD             	dc.b	$EC,$FD
0015E3 9706999B9918     	dc.b	nBb1, $06, nC2, nD2, nC2, $18
0015E9                  	smpsSetVol	$03
0015E9 EC03             	dc.b	$EC,$03
0015EB 940380           	dc.b	nG1, $03, nRst
0015EE                  	smpsSetVol	$FD
0015EE ECFD             	dc.b	$EC,$FD
0015F0 9C069B9799       	dc.b	nEb2, $06, nD2, nBb1, nC2
0015F5                  	smpsSetVol	$03
0015F5 EC03             	dc.b	$EC,$03
0015F7 92028001         	dc.b	nF1, $02, nRst, $01
0015FB                  	smpsSetVol	$FD
0015FB ECFD             	dc.b	$EC,$FD
                        	;!@ dc.b	nF2, $09, $06, nAb2, nEb2, nD2, nF2, nC2
0015FD 9E099E06A19C9B9E 	dc.b	nF2, $09, nF2, $06, nAb2, nEb2, nD2, nF2, nC2
001605 99
001606 0C8003           	dc.b	$0C, nRst, $03
001609                  	smpsSetVol	$03
001609 EC03             	dc.b	$EC,$03
00160B 9402800194028004 	dc.b	nG1, $02, nRst, $01, nG1, $02, nRst, $04

001613                  HDNR1S_Loop136:
                        	;!@ dc.b	nC2, $03, $02, nRst, $10, nC2, $02, nRst
001613 9903990280109902 	dc.b	nC2, $03, nC2, $02, nRst, $10, nC2, $02, nRst
00161B 80
                        	;!@ dc.b	$04, nC2, $02, nRst, $07, nC2, $02, $01
00161C 0499028007990299 	dc.b	$04, nC2, $02, nRst, $07, nC2, $02, nC2, $01
001624 01
                        	;!@ dc.b	$02, nRst, $07
001625 99028007         	dc.b	nC2, $02, nRst, $07
001629                  	smpsLoop		$00, $02, HDNR1S_Loop136, Target
001629 F7               	dc.b	$F7
00162A 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop136<*)
00162C                  		rom_ptr_z80(HDNR1S_Loop136+Target)
                        	;dc.w z80_ptr(ptr,addr)
00162C 1396             	dc.w  (((((HDNR1S_Loop136+Target))<<8)&$FF00)|((((HDNR1S_Loop136+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nC2, $03, $02, nRst, $10, nC2, $02, nRst
00162E 9903990280109902 	dc.b	nC2, $03, nC2, $02, nRst, $10, nC2, $02, nRst
001636 80
                        	;!@ dc.b	$04, nC2, $02, nRst, $07, nC2, $02, $01
001637 0499028007990299 	dc.b	$04, nC2, $02, nRst, $07, nC2, $02, nC2, $01
00163F 01
                        	;!@ dc.b	$02, nRst, $55, $06
001640 990280558006     	dc.b	nC2, $02, nRst, $55, nRst, $06
001646                  	smpsSetVol	$FD
001646 ECFD             	dc.b	$EC,$FD
001648                  	smpsJump		HDNR1S_Jump7, Target
001648 F6               	dc.b	$F6
                        	if (HDNR1S_Jump7<*)
001649                  		rom_ptr_z80(HDNR1S_Jump7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001649 3D93             	dc.w  (((((HDNR1S_Jump7+Target))<<8)&$FF00)|((((HDNR1S_Jump7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00164B                  HDNR1S_PSG3:
                        	;!@ ssMod68k	$00, $02, $00, $02
                        	;!@ sModOn
00164B                  	smpsPSGvoice	PSGVoi
00164B F500             	dc.b	$F5,PSGVoi
                        	;!@ dc.b	nRst, $3F, $3F, $3F, $3F, $3F, $3F
00164D 803F803F803F803F 	dc.b	nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F, nRst, $3F
001655 803F803F

001659                  HDNR1S_Jump8:
                        	;!@ Questionable
001659                  	smpsAlterNote	$00
001659 E100             	dc.b	$E1,$00
                        	;!@ dc.b	nRst, $40, $40, $40, $40, $40, $40
00165B 8040804080408040 	dc.b	nRst, $40, nRst, $40, nRst, $40, nRst, $40, nRst, $40, nRst, $40
001663 80408040
001667                  	smpsAlterNote	$10
001667 E110             	dc.b	$E1,$10
001669 01               	dc.b	$01
00166A                  	smpsAlterNote	$11
00166A E111             	dc.b	$E1,$11
00166C 0101             	dc.b	$01, $01
00166E                  	smpsAlterNote	$12
00166E E112             	dc.b	$E1,$12
001670 01               	dc.b	$01
001671                  	smpsAlterNote	$13
001671 E113             	dc.b	$E1,$13
001673 01               	dc.b	$01
001674                  	smpsAlterNote	$14
001674 E114             	dc.b	$E1,$14
001676 01               	dc.b	$01
001677                  	smpsAlterNote	$16
001677 E116             	dc.b	$E1,$16
001679 0101             	dc.b	$01, $01
00167B                  	smpsAlterNote	$4A
00167B E14A             	dc.b	$E1,$4A
00167D 01               	dc.b	$01
00167E                  	smpsAlterNote	$7F
00167E E17F             	dc.b	$E1,$7F
001680 010101           	dc.b	$01, $01, $01
001683                  	smpsAlterNote	$00
001683 E100             	dc.b	$E1,$00
001685 3030550B5508     	dc.b	$30, $30, $55, $0B, $55, $08
00168B                  	smpsAlterNote	$F2
00168B E1F2             	dc.b	$E1,$F2
00168D 01               	dc.b	$01
00168E                  	smpsAlterNote	$F9
00168E E1F9             	dc.b	$E1,$F9
001690 01               	dc.b	$01
001691                  	smpsAlterNote	$7F
001691 E17F             	dc.b	$E1,$7F
001693 01               	dc.b	$01
001694                  	smpsAlterNote	$00
001694 E100             	dc.b	$E1,$00
001696 2D               	dc.b	$2D
001697                  	smpsAlterNote	$EF
001697 E1EF             	dc.b	$E1,$EF
001699 01               	dc.b	$01
00169A                  	smpsAlterNote	$F1
00169A E1F1             	dc.b	$E1,$F1
00169C 01               	dc.b	$01
00169D                  	smpsAlterNote	$7F
00169D E17F             	dc.b	$E1,$7F
00169F 01               	dc.b	$01
0016A0                  	smpsAlterNote	$FF
0016A0 E1FF             	dc.b	$E1,$FF
0016A2 2D               	dc.b	$2D
0016A3                  	smpsAlterNote	$F7
0016A3 E1F7             	dc.b	$E1,$F7
0016A5 01               	dc.b	$01
0016A6                  	smpsAlterNote	$F9
0016A6 E1F9             	dc.b	$E1,$F9
0016A8 01               	dc.b	$01
0016A9                  	smpsAlterNote	$7F
0016A9 E17F             	dc.b	$E1,$7F
0016AB 01               	dc.b	$01
0016AC                  	smpsAlterNote	$00
0016AC E100             	dc.b	$E1,$00
0016AE 5508             	dc.b	$55, $08
0016B0                  	smpsAlterNote	$FB
0016B0 E1FB             	dc.b	$E1,$FB
0016B2 01               	dc.b	$01
0016B3                  	smpsAlterNote	$02
0016B3 E102             	dc.b	$E1,$02
0016B5 01               	dc.b	$01
0016B6                  	smpsAlterNote	$7F
0016B6 E17F             	dc.b	$E1,$7F
0016B8 01               	dc.b	$01
0016B9                  	smpsAlterNote	$FF
0016B9 E1FF             	dc.b	$E1,$FF
0016BB 2D               	dc.b	$2D
0016BC                  	smpsAlterNote	$0C
0016BC E10C             	dc.b	$E1,$0C
0016BE 01               	dc.b	$01
0016BF                  	smpsAlterNote	$F2
0016BF E1F2             	dc.b	$E1,$F2
0016C1 01               	dc.b	$01
0016C2                  	smpsAlterNote	$7F
0016C2 E17F             	dc.b	$E1,$7F
0016C4 01               	dc.b	$01
0016C5                  	smpsAlterNote	$00
0016C5 E100             	dc.b	$E1,$00
0016C7 2D               	dc.b	$2D
0016C8                  	smpsAlterNote	$FA
0016C8 E1FA             	dc.b	$E1,$FA
0016CA 01               	dc.b	$01
0016CB                  	smpsAlterNote	$04
0016CB E104             	dc.b	$E1,$04
0016CD 01               	dc.b	$01
0016CE                  	smpsAlterNote	$7F
0016CE E17F             	dc.b	$E1,$7F
0016D0 01               	dc.b	$01
0016D1                  	smpsAlterNote	$00
0016D1 E100             	dc.b	$E1,$00
0016D3 5555168803808F02 	dc.b	$55, $55, $16, nG0, $03, nRst, nD1, $02
0016DB 8001880380880280 	dc.b	nRst, $01, nG0, $03, nRst, nG0, $02, nRst
0016E3 018F038090       	dc.b	$01, nD1, $03, nRst, nEb1

0016E8                  HDNR1S_Loop137:
0016E8 80890280019003   	dc.b	nRst, nAb0, $02, nRst, $01, nEb1, $03
0016EF                  	smpsLoop		$00, $02, HDNR1S_Loop137, Target
0016EF F7               	dc.b	$F7
0016F0 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop137<*)
0016F2                  		rom_ptr_z80(HDNR1S_Loop137+Target)
                        	;dc.w z80_ptr(ptr,addr)
0016F2 E896             	dc.w  (((((HDNR1S_Loop137+Target))<<8)&$FF00)|((((HDNR1S_Loop137+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0016F4 808B80920280018B 	dc.b	nRst, nBb0, nRst, nF1, $02, nRst, $01, nBb0
0016FC 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
001704 8094808D0280018B 	dc.b	nRst, nG1, nRst, nC1, $02, nRst, $01, nBb0
00170C 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
                        	;!@ dc.b	$02, nRst, $01, nC1, $03, nRst, nG1, $02
001714 920280018D038094 	dc.b	nF1, $02, nRst, $01, nC1, $03, nRst, nG1, $02
00171C 02
00171D 80018D03808D0280 	dc.b	nRst, $01, nC1, $03, nRst, nC1, $02, nRst
001725 0194038095809502 	dc.b	$01, nG1, $03, nRst, nAb1, nRst, nAb1, $02
00172D 8001900380900280 	dc.b	nRst, $01, nEb1, $03, nRst, nEb1, $02, nRst
001735 0195038097809202 	dc.b	$01, nAb1, $03, nRst, nBb1, nRst, nF1, $02
00173D 8001920380920280 	dc.b	nRst, $01, nF1, $03, nRst, nF1, $02, nRst
001745 0197038097809202 	dc.b	$01, nBb1, $03, nRst, nBb1, nRst, nF1, $02
00174D 8001920380920280 	dc.b	nRst, $01, nF1, $03, nRst, nF1, $02, nRst
001755 0197028001920280 	dc.b	$01, nBb1, $02, nRst, $01, nF1, $02, nRst
00175D 018803808F028001 	dc.b	$01, nG0, $03, nRst, nD1, $02, nRst, $01
001765 880380880280018F 	dc.b	nG0, $03, nRst, nG0, $02, nRst, $01, nD1
00176D 038090           	dc.b	$03, nRst, nEb1

001770                  HDNR1S_Loop138:
001770 80890280019003   	dc.b	nRst, nAb0, $02, nRst, $01, nEb1, $03
001777                  	smpsLoop		$00, $02, HDNR1S_Loop138, Target
001777 F7               	dc.b	$F7
001778 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop138<*)
00177A                  		rom_ptr_z80(HDNR1S_Loop138+Target)
                        	;dc.w z80_ptr(ptr,addr)
00177A 7097             	dc.w  (((((HDNR1S_Loop138+Target))<<8)&$FF00)|((((HDNR1S_Loop138+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00177C 808B80920280018B 	dc.b	nRst, nBb0, nRst, nF1, $02, nRst, $01, nBb0
001784 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
00178C 8094808D0280018B 	dc.b	nRst, nG1, nRst, nC1, $02, nRst, $01, nBb0
001794 03808B0280019203 	dc.b	$03, nRst, nBb0, $02, nRst, $01, nF1, $03
                        	;!@ dc.b	$02, nRst, $01, nC1, $03, nRst, nG1, $02
00179C 920280018D038094 	dc.b	nF1, $02, nRst, $01, nC1, $03, nRst, nG1, $02
0017A4 02
0017A5 80018D03808D0280 	dc.b	nRst, $01, nC1, $03, nRst, nC1, $02, nRst
0017AD 0194038092808B02 	dc.b	$01, nG1, $03, nRst, nF1, nRst, nBb0, $02
0017B5 80019203808B0280 	dc.b	nRst, $01, nF1, $03, nRst, nBb0, $02, nRst
0017BD 01920280018B0280 	dc.b	$01, nF1, $02, nRst, $01, nBb0, $02, nRst
0017C5 0195038095028001 	dc.b	$01, nAb1, $03, nRst, nAb1, $02, nRst, $01
0017CD 8E02800192038092 	dc.b	nCs1, $02, nRst, $01, nF1, $03, nRst, nF1
0017D5 0280018B02800194 	dc.b	$02, nRst, $01, nBb0, $02, nRst, $01, nG1
0017DD 0380             	dc.b	$03, nRst

0017DF                  HDNR1S_Loop139:
0017DF 8D0280018D028004 	dc.b	nC1, $02, nRst, $01, nC1, $02, nRst, $04
0017E7                  	smpsLoop		$00, $02, HDNR1S_Loop139, Target
0017E7 F7               	dc.b	$F7
0017E8 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop139<*)
0017EA                  		rom_ptr_z80(HDNR1S_Loop139+Target)
                        	;dc.w z80_ptr(ptr,addr)
0017EA DF97             	dc.w  (((((HDNR1S_Loop139+Target))<<8)&$FF00)|((((HDNR1S_Loop139+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0017EC                  HDNR1S_Loop140:
                        	;!@ dc.b	nG1, $03, $02, nRst, $10, nG1, $02, nRst
0017EC 9403940280109402 	dc.b	nG1, $03, nG1, $02, nRst, $10, nG1, $02, nRst
0017F4 80
                        	;!@ dc.b	$04, nG1, $02, nRst, $07, nG1, $02, $01
0017F5 0494028007940294 	dc.b	$04, nG1, $02, nRst, $07, nG1, $02, nG1, $01
0017FD 01
0017FE 94028007         	dc.b	nG1, $02, nRst, $07
001802                  	smpsLoop		$00, $02, HDNR1S_Loop140, Target
001802 F7               	dc.b	$F7
001803 0002             	dc.b	$00,$02
                        	if (HDNR1S_Loop140<*)
001805                  		rom_ptr_z80(HDNR1S_Loop140+Target)
                        	;dc.w z80_ptr(ptr,addr)
001805 EC97             	dc.w  (((((HDNR1S_Loop140+Target))<<8)&$FF00)|((((HDNR1S_Loop140+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	;!@ dc.b	nG1, $03, $02, nRst, $10, nG1, $02, nRst
001807 9403940280109402 	dc.b	nG1, $03, nG1, $02, nRst, $10, nG1, $02, nRst
00180F 80
                        	;!@ dc.b	$04, nG1, $02, nRst, $07, nG1, $02, $01
001810 0494028007940294 	dc.b	$04, nG1, $02, nRst, $07, nG1, $02, nG1, $01
001818 01
                        	;!@ dc.b	$02, nRst, $55, $06
001819 940280558006     	dc.b	nG1, $02, nRst, $55, nRst, $06
00181F                  	smpsJump		HDNR1S_Jump8, Target
00181F F6               	dc.b	$F6
                        	if (HDNR1S_Jump8<*)
001820                  		rom_ptr_z80(HDNR1S_Jump8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001820 5996             	dc.w  (((((HDNR1S_Jump8+Target))<<8)&$FF00)|((((HDNR1S_Jump8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
001822                  HDNR1S_PWM1:
001822                  	smpsPan		panCenter
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
001822 E0C0             		dc.b $E0,panCenter
                        	endif
001824 8902             	dc.b	pCrashCymb, $02
001826                  	smpsAlterVol		$FA
001826 E6FA             	dc.b	$E6,$FA
001828 01               	dc.b	$01
001829                  	smpsAlterVol		$EF
001829 E6EF             	dc.b	$E6,$EF
00182B 828080           	dc.b	pESnare, nRst, nRst
00182E                  	smpsAlterVol		$0D
00182E E60D             	dc.b	$E6,$0D
001830 98               	dc.b	pClosedHH

001831                  HDNR1S_PWM1_Loop1:
001831 80029801         	dc.b	nRst, $02, pClosedHH, $01
001835                  	smpsLoop		$00, $07, HDNR1S_PWM1_Loop1, Target
001835 F7               	dc.b	$F7
001836 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM1_Loop1<*)
001838                  		rom_ptr_z80(HDNR1S_PWM1_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001838 3198             	dc.w  (((((HDNR1S_PWM1_Loop1+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00183A 8002             	dc.b	nRst, $02
00183C                  	smpsAlterVol		$F0
00183C E6F0             	dc.b	$E6,$F0
00183E 8B0C             	dc.b	pAKick, $0C
001840                  	smpsAlterVol		$10
001840 E610             	dc.b	$E6,$10
001842 9801800298018002 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $02
00184A                  	smpsAlterVol		$F0
00184A E6F0             	dc.b	$E6,$F0
00184C 8B06             	dc.b	pAKick, $06
00184E                  	smpsAlterVol		$10
00184E E610             	dc.b	$E6,$10

001850                  HDNR1S_PWM1_Loop2:
001850 98018002         	dc.b	pClosedHH, $01, nRst, $02
001854                  	smpsLoop		$00, $04, HDNR1S_PWM1_Loop2, Target
001854 F7               	dc.b	$F7
001855 0004             	dc.b	$00,$04
                        	if (HDNR1S_PWM1_Loop2<*)
001857                  		rom_ptr_z80(HDNR1S_PWM1_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001857 5098             	dc.w  (((((HDNR1S_PWM1_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001859                  	smpsAlterVol		$F0
001859 E6F0             	dc.b	$E6,$F0
00185B 8B0C0C06060C0C0C 	dc.b	pAKick, $0C, $0C, $06, $06, $0C, $0C, $0C
001863 0C               	dc.b	$0C
001864                  	smpsAlterVol		$07
001864 E607             	dc.b	$E6,$07
001866 8912             	dc.b	pCrashCymb, $12
001868                  	smpsAlterVol		$F9
001868 E6F9             	dc.b	$E6,$F9
00186A 8B0606           	dc.b	pAKick, $06, $06
00186D                  	smpsAlterVol		$1A
00186D E61A             	dc.b	$E6,$1A
00186F 8902             	dc.b	pCrashCymb, $02
001871                  	smpsAlterVol		$FA
001871 E6FA             	dc.b	$E6,$FA
001873 01               	dc.b	$01
001874                  	smpsAlterVol		$FA
001874 E6FA             	dc.b	$E6,$FA
001876 02               	dc.b	$02
001877                  	smpsAlterVol		$FC
001877 E6FC             	dc.b	$E6,$FC
001879 01               	dc.b	$01
00187A                  	smpsAlterVol		$F6
00187A E6F6             	dc.b	$E6,$F6
00187C 8B0680           	dc.b	pAKick, $06, nRst
00187F                  	smpsAlterVol		$07
00187F E607             	dc.b	$E6,$07
001881 830C             	dc.b	pSplashCymb, $0C
001883                  	smpsAlterVol		$F9
001883 E6F9             	dc.b	$E6,$F9

001885                  HDNR1S_PWM1_Loop3:
001885 8B06             	dc.b	pAKick, $06
001887                  	smpsAlterVol		$05
001887 E605             	dc.b	$E6,$05
001889 8C               	dc.b	pASnare
00188A                  	smpsAlterVol		$FB
00188A E6FB             	dc.b	$E6,$FB
00188C 8B               	dc.b	pAKick
00188D                  	smpsAlterVol		$06
00188D E606             	dc.b	$E6,$06
00188F 8C               	dc.b	pASnare
001890                  	smpsAlterVol		$FA
001890 E6FA             	dc.b	$E6,$FA
001892                  	smpsLoop		$00, $05, HDNR1S_PWM1_Loop3, Target
001892 F7               	dc.b	$F7
001893 0005             	dc.b	$00,$05
                        	if (HDNR1S_PWM1_Loop3<*)
001895                  		rom_ptr_z80(HDNR1S_PWM1_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001895 8598             	dc.w  (((((HDNR1S_PWM1_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001897 8B               	dc.b	pAKick
001898                  	smpsAlterVol		$05
001898 E605             	dc.b	$E6,$05
00189A 8C               	dc.b	pASnare
00189B                  	smpsAlterVol		$0B
00189B E60B             	dc.b	$E6,$0B
00189D 8201808004820180 	dc.b	pESnare, $01, nRst, nRst, $04, pESnare, $01, nRst
0018A5 0282018080       	dc.b	$02, pESnare, $01, nRst, nRst
0018AA                  	smpsAlterVol		$F7
0018AA E6F7             	dc.b	$E6,$F7
0018AC 8B06             	dc.b	pAKick, $06
0018AE                  	smpsAlterVol		$09
0018AE E609             	dc.b	$E6,$09
0018B0 8201808082808082 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pESnare
0018B8 800882018002     	dc.b	nRst, $08, pESnare, $01, nRst, $02

0018BE                  HDNR1S_PWM1_Jump1:
0018BE 800C             	dc.b	nRst, $0C
0018C0                  	smpsAlterVol		$F0
0018C0 E6F0             	dc.b	$E6,$F0

0018C2                  HDNR1S_PWM1_Loop4:
0018C2 8B06             	dc.b	pAKick, $06
0018C4                  	smpsAlterVol		$06
0018C4 E606             	dc.b	$E6,$06
0018C6 82               	dc.b	pESnare
0018C7                  	smpsAlterVol		$FA
0018C7 E6FA             	dc.b	$E6,$FA
0018C9                  	smpsLoop		$00, $0D, HDNR1S_PWM1_Loop4, Target
0018C9 F7               	dc.b	$F7
0018CA 000D             	dc.b	$00,$0D
                        	if (HDNR1S_PWM1_Loop4<*)
0018CC                  		rom_ptr_z80(HDNR1S_PWM1_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
0018CC C298             	dc.w  (((((HDNR1S_PWM1_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0018CE 8B               	dc.b	pAKick
0018CF                  	smpsAlterVol		$06
0018CF E606             	dc.b	$E6,$06
0018D1 82               	dc.b	pESnare
0018D2                  	smpsAlterVol		$01
0018D2 E601             	dc.b	$E6,$01
0018D4 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
0018DC 82018080         	dc.b	pESnare, $01, nRst, nRst
0018E0                  	smpsAlterVol		$FB
0018E0 E6FB             	dc.b	$E6,$FB
0018E2 8B06             	dc.b	pAKick, $06
0018E4                  	smpsAlterVol		$05
0018E4 E605             	dc.b	$E6,$05
0018E6 82018080828080   	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst
0018ED                  	smpsAlterVol		$F9
0018ED E6F9             	dc.b	$E6,$F9

0018EF                  HDNR1S_PWM1_Loop5:
0018EF 8B06             	dc.b	pAKick, $06
0018F1                  	smpsAlterVol		$06
0018F1 E606             	dc.b	$E6,$06
0018F3 82               	dc.b	pESnare
0018F4                  	smpsAlterVol		$FA
0018F4 E6FA             	dc.b	$E6,$FA
0018F6                  	smpsLoop		$00, $0D, HDNR1S_PWM1_Loop5, Target
0018F6 F7               	dc.b	$F7
0018F7 000D             	dc.b	$00,$0D
                        	if (HDNR1S_PWM1_Loop5<*)
0018F9                  		rom_ptr_z80(HDNR1S_PWM1_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
0018F9 EF98             	dc.w  (((((HDNR1S_PWM1_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0018FB 8B               	dc.b	pAKick
0018FC                  	smpsAlterVol		$06
0018FC E606             	dc.b	$E6,$06
0018FE 82               	dc.b	pESnare
0018FF                  	smpsAlterVol		$01
0018FF E601             	dc.b	$E6,$01
001901 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
001909 82018080         	dc.b	pESnare, $01, nRst, nRst
00190D                  	smpsAlterVol		$FB
00190D E6FB             	dc.b	$E6,$FB
00190F 8B06             	dc.b	pAKick, $06
001911                  	smpsAlterVol		$05
001911 E605             	dc.b	$E6,$05
001913 8201808082808083 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pSplashCymb
00191B 0C               	dc.b	$0C
00191C                  	smpsAlterVol		$F9
00191C E6F9             	dc.b	$E6,$F9

00191E                  HDNR1S_PWM1_Loop6:
00191E 8B06             	dc.b	pAKick, $06
001920                  	smpsAlterVol		$06
001920 E606             	dc.b	$E6,$06
001922 82               	dc.b	pESnare
001923                  	smpsAlterVol		$FA
001923 E6FA             	dc.b	$E6,$FA
001925                  	smpsLoop		$00, $0A, HDNR1S_PWM1_Loop6, Target
001925 F7               	dc.b	$F7
001926 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM1_Loop6<*)
001928                  		rom_ptr_z80(HDNR1S_PWM1_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001928 1E99             	dc.w  (((((HDNR1S_PWM1_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00192A 8B               	dc.b	pAKick
00192B                  	smpsAlterVol		$06
00192B E606             	dc.b	$E6,$06
00192D 82               	dc.b	pESnare
00192E                  	smpsAlterVol		$01
00192E E601             	dc.b	$E6,$01
001930 0180800482018002 	dc.b	$01, nRst, nRst, $04, pESnare, $01, nRst, $02
001938 82018080         	dc.b	pESnare, $01, nRst, nRst
00193C                  	smpsAlterVol		$FB
00193C E6FB             	dc.b	$E6,$FB
00193E 8B06             	dc.b	pAKick, $06
001940                  	smpsAlterVol		$05
001940 E605             	dc.b	$E6,$05
001942 8201808082808082 	dc.b	pESnare, $01, nRst, nRst, pESnare, nRst, nRst, pESnare
00194A 80088909         	dc.b	nRst, $08, pCrashCymb, $09
00194E                  	smpsAlterVol		$13
00194E E613             	dc.b	$E6,$13
001950 02               	dc.b	$02
001951                  	smpsAlterVol		$FA
001951 E6FA             	dc.b	$E6,$FA
001953 01               	dc.b	$01
001954                  	smpsAlterVol		$FA
001954 E6FA             	dc.b	$E6,$FA
001956 02               	dc.b	$02
001957                  	smpsAlterVol		$FC
001957 E6FC             	dc.b	$E6,$FC
001959 01               	dc.b	$01
00195A                  	smpsAlterVol		$FD
00195A E6FD             	dc.b	$E6,$FD
00195C 0C               	dc.b	$0C
00195D                  	smpsAlterVol		$F9
00195D E6F9             	dc.b	$E6,$F9

00195F                  HDNR1S_PWM1_Loop7:
00195F 8B06             	dc.b	pAKick, $06
001961                  	smpsAlterVol		$06
001961 E606             	dc.b	$E6,$06
001963 82               	dc.b	pESnare
001964                  	smpsAlterVol		$FA
001964 E6FA             	dc.b	$E6,$FA
001966                  	smpsLoop		$00, $1C, HDNR1S_PWM1_Loop7, Target
001966 F7               	dc.b	$F7
001967 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM1_Loop7<*)
001969                  		rom_ptr_z80(HDNR1S_PWM1_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001969 5F99             	dc.w  (((((HDNR1S_PWM1_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00196B 8B               	dc.b	pAKick
00196C                  	smpsAlterVol		$06
00196C E606             	dc.b	$E6,$06
00196E 82               	dc.b	pESnare
00196F                  	smpsAlterVol		$01
00196F E601             	dc.b	$E6,$01
001971 01               	dc.b	$01

001972                  HDNR1S_PWM1_Loop8:
001972 808082           	dc.b	nRst, nRst, pESnare
001975                  	smpsLoop		$00, $07, HDNR1S_PWM1_Loop8, Target
001975 F7               	dc.b	$F7
001976 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM1_Loop8<*)
001978                  		rom_ptr_z80(HDNR1S_PWM1_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001978 7299             	dc.w  (((((HDNR1S_PWM1_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00197A 8080             	dc.b	nRst, nRst
00197C                  	smpsAlterVol		$F9
00197C E6F9             	dc.b	$E6,$F9

00197E                  HDNR1S_PWM1_Loop9:
00197E 8B06             	dc.b	pAKick, $06
001980                  	smpsAlterVol		$06
001980 E606             	dc.b	$E6,$06
001982 82               	dc.b	pESnare
001983                  	smpsAlterVol		$FA
001983 E6FA             	dc.b	$E6,$FA
001985                  	smpsLoop		$00, $0D, HDNR1S_PWM1_Loop9, Target
001985 F7               	dc.b	$F7
001986 000D             	dc.b	$00,$0D
                        	if (HDNR1S_PWM1_Loop9<*)
001988                  		rom_ptr_z80(HDNR1S_PWM1_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001988 7E99             	dc.w  (((((HDNR1S_PWM1_Loop9+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00198A 8B               	dc.b	pAKick
00198B                  	smpsAlterVol		$06
00198B E606             	dc.b	$E6,$06
00198D 82               	dc.b	pESnare
00198E                  	smpsAlterVol		$01
00198E E601             	dc.b	$E6,$01
001990 01800882018008   	dc.b	$01, nRst, $08, pESnare, $01, nRst, $08
001997                  	smpsAlterVol		$13
001997 E613             	dc.b	$E6,$13
001999 8902             	dc.b	pCrashCymb, $02
00199B                  	smpsAlterVol		$FA
00199B E6FA             	dc.b	$E6,$FA
00199D 01               	dc.b	$01
00199E                  	smpsAlterVol		$FA
00199E E6FA             	dc.b	$E6,$FA
0019A0 02               	dc.b	$02
0019A1                  	smpsAlterVol		$FC
0019A1 E6FC             	dc.b	$E6,$FC
0019A3 01               	dc.b	$01
0019A4                  	smpsAlterVol		$FD
0019A4 E6FD             	dc.b	$E6,$FD
0019A6 0C               	dc.b	$0C
0019A7                  	smpsAlterVol		$F9
0019A7 E6F9             	dc.b	$E6,$F9

0019A9                  HDNR1S_PWM1_Loop10:
0019A9 8B06             	dc.b	pAKick, $06
0019AB                  	smpsAlterVol		$06
0019AB E606             	dc.b	$E6,$06
0019AD 82               	dc.b	pESnare
0019AE                  	smpsAlterVol		$FA
0019AE E6FA             	dc.b	$E6,$FA
0019B0                  	smpsLoop		$00, $2A, HDNR1S_PWM1_Loop10, Target
0019B0 F7               	dc.b	$F7
0019B1 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM1_Loop10<*)
0019B3                  		rom_ptr_z80(HDNR1S_PWM1_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019B3 A999             	dc.w  (((((HDNR1S_PWM1_Loop10+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019B5 8B               	dc.b	pAKick
0019B6                  	smpsAlterVol		$06
0019B6 E606             	dc.b	$E6,$06
0019B8 82               	dc.b	pESnare
0019B9                  	smpsAlterVol		$01
0019B9 E601             	dc.b	$E6,$01
0019BB 01               	dc.b	$01

0019BC                  HDNR1S_PWM1_Loop11:
0019BC 808082           	dc.b	nRst, nRst, pESnare
0019BF                  	smpsLoop		$00, $07, HDNR1S_PWM1_Loop11, Target
0019BF F7               	dc.b	$F7
0019C0 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM1_Loop11<*)
0019C2                  		rom_ptr_z80(HDNR1S_PWM1_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019C2 BC99             	dc.w  (((((HDNR1S_PWM1_Loop11+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019C4 8080830C80838082 	dc.b	nRst, nRst, pSplashCymb, $0C, nRst, pSplashCymb, nRst, pESnare
0019CC 01800882018002   	dc.b	$01, nRst, $08, pESnare, $01, nRst, $02
0019D3                  	smpsAlterVol		$09
0019D3 E609             	dc.b	$E6,$09
0019D5                  	smpsJump		HDNR1S_PWM1_Jump1, Target
0019D5 F6               	dc.b	$F6
                        	if (HDNR1S_PWM1_Jump1<*)
0019D6                  		rom_ptr_z80(HDNR1S_PWM1_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019D6 BE98             	dc.w  (((((HDNR1S_PWM1_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM1_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
0019D8                  HDNR1S_PWM2:
0019D8 8B0201           	dc.b	pAKick, $02, $01
0019DB                  	smpsAlterVol		$0F
0019DB E60F             	dc.b	$E6,$0F
0019DD 8902             	dc.b	pCrashCymb, $02
0019DF                  	smpsAlterVol		$F1
0019DF E6F1             	dc.b	$E6,$F1
0019E1 8B01             	dc.b	pAKick, $01
0019E3                  	smpsAlterVol		$03
0019E3 E603             	dc.b	$E6,$03
0019E5 82800B           	dc.b	pESnare, nRst, $0B
0019E8                  	smpsAlterVol		$FD
0019E8 E6FD             	dc.b	$E6,$FD
0019EA 8B0C             	dc.b	pAKick, $0C
0019EC                  	smpsAlterVol		$11
0019EC E611             	dc.b	$E6,$11

0019EE                  HDNR1S_PWM2_Loop1:
0019EE 98018002         	dc.b	pClosedHH, $01, nRst, $02
0019F2                  	smpsLoop		$00, $04, HDNR1S_PWM2_Loop1, Target
0019F2 F7               	dc.b	$F7
0019F3 0004             	dc.b	$00,$04
                        	if (HDNR1S_PWM2_Loop1<*)
0019F5                  		rom_ptr_z80(HDNR1S_PWM2_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0019F5 EE99             	dc.w  (((((HDNR1S_PWM2_Loop1+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0019F7                  	smpsAlterVol		$EF
0019F7 E6EF             	dc.b	$E6,$EF
0019F9 8B06             	dc.b	pAKick, $06
0019FB                  	smpsAlterVol		$1B
0019FB E61B             	dc.b	$E6,$1B
0019FD 8902             	dc.b	pCrashCymb, $02
0019FF                  	smpsAlterVol		$F9
0019FF E6F9             	dc.b	$E6,$F9
001A01 01               	dc.b	$01
001A02                  	smpsAlterVol		$FD
001A02 E6FD             	dc.b	$E6,$FD
001A04 9880             	dc.b	pClosedHH, nRst
001A06                  	smpsAlterVol		$F9
001A06 E6F9             	dc.b	$E6,$F9
001A08 89               	dc.b	pCrashCymb
001A09                  	smpsAlterVol		$FD
001A09 E6FD             	dc.b	$E6,$FD
001A0B 12               	dc.b	$12
001A0C                  	smpsAlterVol		$0A
001A0C E60A             	dc.b	$E6,$0A

001A0E                  HDNR1S_PWM2_Loop2:
001A0E 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A12                  	smpsLoop		$00, $08, HDNR1S_PWM2_Loop2, Target
001A12 F7               	dc.b	$F7
001A13 0008             	dc.b	$00,$08
                        	if (HDNR1S_PWM2_Loop2<*)
001A15                  		rom_ptr_z80(HDNR1S_PWM2_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A15 0E9A             	dc.w  (((((HDNR1S_PWM2_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A17                  	smpsAlterVol		$0A
001A17 E60A             	dc.b	$E6,$0A
001A19 89               	dc.b	pCrashCymb
001A1A                  	smpsAlterVol		$F9
001A1A E6F9             	dc.b	$E6,$F9
001A1C 01               	dc.b	$01
001A1D                  	smpsAlterVol		$FB
001A1D E6FB             	dc.b	$E6,$FB
001A1F 02               	dc.b	$02
001A20                  	smpsAlterVol		$FB
001A20 E6FB             	dc.b	$E6,$FB
001A22 01               	dc.b	$01
001A23                  	smpsAlterVol		$FD
001A23 E6FD             	dc.b	$E6,$FD
001A25 12               	dc.b	$12
001A26                  	smpsAlterVol		$0A
001A26 E60A             	dc.b	$E6,$0A

001A28                  HDNR1S_PWM2_Loop3:
001A28 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A2C                  	smpsLoop		$00, $08, HDNR1S_PWM2_Loop3, Target
001A2C F7               	dc.b	$F7
001A2D 0008             	dc.b	$00,$08
                        	if (HDNR1S_PWM2_Loop3<*)
001A2F                  		rom_ptr_z80(HDNR1S_PWM2_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A2F 289A             	dc.w  (((((HDNR1S_PWM2_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A31                  	smpsAlterVol		$0A
001A31 E60A             	dc.b	$E6,$0A
001A33 89               	dc.b	pCrashCymb
001A34                  	smpsAlterVol		$F9
001A34 E6F9             	dc.b	$E6,$F9
001A36 01               	dc.b	$01
001A37                  	smpsAlterVol		$FD
001A37 E6FD             	dc.b	$E6,$FD
001A39 9880             	dc.b	pClosedHH, nRst
001A3B                  	smpsAlterVol		$F9
001A3B E6F9             	dc.b	$E6,$F9
001A3D 89               	dc.b	pCrashCymb
001A3E                  	smpsAlterVol		$F6
001A3E E6F6             	dc.b	$E6,$F6
001A40 8B060606         	dc.b	pAKick, $06, $06, $06
001A44                  	smpsAlterVol		$11
001A44 E611             	dc.b	$E6,$11

001A46                  HDNR1S_PWM2_Loop4:
001A46 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A4A                  	smpsLoop		$00, $04, HDNR1S_PWM2_Loop4, Target
001A4A F7               	dc.b	$F7
001A4B 0004             	dc.b	$00,$04
                        	if (HDNR1S_PWM2_Loop4<*)
001A4D                  		rom_ptr_z80(HDNR1S_PWM2_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A4D 469A             	dc.w  (((((HDNR1S_PWM2_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A4F                  	smpsAlterVol		$EF
001A4F E6EF             	dc.b	$E6,$EF
001A51 8B06             	dc.b	pAKick, $06
001A53                  	smpsAlterVol		$07
001A53 E607             	dc.b	$E6,$07
001A55 890C0C8003       	dc.b	pCrashCymb, $0C, $0C, nRst, $03

001A5A                  HDNR1S_PWM2_Loop5:
001A5A 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A5E                  	smpsAlterVol		$04
001A5E E604             	dc.b	$E6,$04
001A60 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001A64                  	smpsAlterVol		$FC
001A64 E6FC             	dc.b	$E6,$FC
001A66 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A6A                  	smpsAlterVol		$06
001A6A E606             	dc.b	$E6,$06
001A6C 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001A70                  	smpsAlterVol		$FA
001A70 E6FA             	dc.b	$E6,$FA
001A72                  	smpsLoop		$00, $05, HDNR1S_PWM2_Loop5, Target
001A72 F7               	dc.b	$F7
001A73 0005             	dc.b	$00,$05
                        	if (HDNR1S_PWM2_Loop5<*)
001A75                  		rom_ptr_z80(HDNR1S_PWM2_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001A75 5A9A             	dc.w  (((((HDNR1S_PWM2_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001A77 98018002         	dc.b	pClosedHH, $01, nRst, $02
001A7B                  	smpsAlterVol		$04
001A7B E604             	dc.b	$E6,$04
001A7D 8E06             	dc.b	pFingSnap, $06
001A7F                  	smpsAlterVol		$FC
001A7F E6FC             	dc.b	$E6,$FC
001A81 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001A85                  	smpsAlterVol		$09
001A85 E609             	dc.b	$E6,$09
001A87 01828002         	dc.b	$01, pESnare, nRst, $02
001A8B                  	smpsAlterVol		$F7
001A8B E6F7             	dc.b	$E6,$F7
001A8D 8B060380028B0380 	dc.b	pAKick, $06, $03, nRst, $02, pAKick, $03, nRst
001A95 018B03           	dc.b	$01, pAKick, $03

001A98                  HDNR1S_PWM2_Jump1:
001A98 800C838003       	dc.b	nRst, $0C, pSplashCymb, nRst, $03

001A9D                  HDNR1S_PWM2_Loop6:
001A9D 98018002         	dc.b	pClosedHH, $01, nRst, $02
001AA1                  	smpsAlterVol		$09
001AA1 E609             	dc.b	$E6,$09
001AA3 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001AA7                  	smpsAlterVol		$F7
001AA7 E6F7             	dc.b	$E6,$F7
001AA9                  	smpsLoop		$00, $0C, HDNR1S_PWM2_Loop6, Target
001AA9 F7               	dc.b	$F7
001AAA 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM2_Loop6<*)
001AAC                  		rom_ptr_z80(HDNR1S_PWM2_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001AAC 9D9A             	dc.w  (((((HDNR1S_PWM2_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001AAE 98018002         	dc.b	pClosedHH, $01, nRst, $02
001AB2                  	smpsAlterVol		$09
001AB2 E609             	dc.b	$E6,$09
001AB4 8E06             	dc.b	pFingSnap, $06
001AB6                  	smpsAlterVol		$F3
001AB6 E6F3             	dc.b	$E6,$F3
001AB8 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001ABC                  	smpsAlterVol		$04
001ABC E604             	dc.b	$E6,$04
001ABE 01828002         	dc.b	$01, pESnare, nRst, $02
001AC2                  	smpsAlterVol		$FC
001AC2 E6FC             	dc.b	$E6,$FC
001AC4 8B06             	dc.b	pAKick, $06
001AC6                  	smpsAlterVol		$04
001AC6 E604             	dc.b	$E6,$04
001AC8 830C8003         	dc.b	pSplashCymb, $0C, nRst, $03

001ACC                  HDNR1S_PWM2_Loop7:
001ACC 98018002         	dc.b	pClosedHH, $01, nRst, $02
001AD0                  	smpsAlterVol		$09
001AD0 E609             	dc.b	$E6,$09
001AD2 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001AD6                  	smpsAlterVol		$F7
001AD6 E6F7             	dc.b	$E6,$F7
001AD8                  	smpsLoop		$00, $0C, HDNR1S_PWM2_Loop7, Target
001AD8 F7               	dc.b	$F7
001AD9 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM2_Loop7<*)
001ADB                  		rom_ptr_z80(HDNR1S_PWM2_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001ADB CC9A             	dc.w  (((((HDNR1S_PWM2_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001ADD 98018002         	dc.b	pClosedHH, $01, nRst, $02
001AE1                  	smpsAlterVol		$09
001AE1 E609             	dc.b	$E6,$09
001AE3 8E06             	dc.b	pFingSnap, $06
001AE5                  	smpsAlterVol		$F3
001AE5 E6F3             	dc.b	$E6,$F3
001AE7 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001AEB                  	smpsAlterVol		$04
001AEB E604             	dc.b	$E6,$04
001AED 01828002         	dc.b	$01, pESnare, nRst, $02
001AF1                  	smpsAlterVol		$FC
001AF1 E6FC             	dc.b	$E6,$FC
001AF3 8B06             	dc.b	pAKick, $06
001AF5                  	smpsAlterVol		$04
001AF5 E604             	dc.b	$E6,$04
001AF7 890C8003         	dc.b	pCrashCymb, $0C, nRst, $03

001AFB                  HDNR1S_PWM2_Loop8:
001AFB 98018002         	dc.b	pClosedHH, $01, nRst, $02
001AFF                  	smpsAlterVol		$09
001AFF E609             	dc.b	$E6,$09
001B01 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001B05                  	smpsAlterVol		$F7
001B05 E6F7             	dc.b	$E6,$F7
001B07                  	smpsLoop		$00, $0A, HDNR1S_PWM2_Loop8, Target
001B07 F7               	dc.b	$F7
001B08 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM2_Loop8<*)
001B0A                  		rom_ptr_z80(HDNR1S_PWM2_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B0A FB9A             	dc.w  (((((HDNR1S_PWM2_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001B0C 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B10                  	smpsAlterVol		$09
001B10 E609             	dc.b	$E6,$09
001B12 8E06             	dc.b	pFingSnap, $06
001B14                  	smpsAlterVol		$F3
001B14 E6F3             	dc.b	$E6,$F3
001B16 8B8B8002         	dc.b	pAKick, pAKick, nRst, $02
001B1A                  	smpsAlterVol		$04
001B1A E604             	dc.b	$E6,$04
001B1C 01828002         	dc.b	$01, pESnare, nRst, $02
001B20                  	smpsAlterVol		$FC
001B20 E6FC             	dc.b	$E6,$FC
001B22 8B06             	dc.b	pAKick, $06
001B24                  	smpsAlterVol		$FD
001B24 E6FD             	dc.b	$E6,$FD
001B26 038002           	dc.b	$03, nRst, $02
001B29                  	smpsAlterVol		$03
001B29 E603             	dc.b	$E6,$03
001B2B 8B018003         	dc.b	pAKick, $01, nRst, $03
001B2F                  	smpsAlterVol		$04
001B2F E604             	dc.b	$E6,$04
001B31 82018008         	dc.b	pESnare, $01, nRst, $08
001B35                  	smpsAlterVol		$F9
001B35 E6F9             	dc.b	$E6,$F9
001B37 8B0606           	dc.b	pAKick, $06, $06
001B3A                  	smpsAlterVol		$06
001B3A E606             	dc.b	$E6,$06
001B3C 828003           	dc.b	pESnare, nRst, $03
001B3F                  	smpsAlterVol		$01
001B3F E601             	dc.b	$E6,$01

001B41                  HDNR1S_PWM2_Loop9:
001B41 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B45                  	smpsAlterVol		$09
001B45 E609             	dc.b	$E6,$09
001B47 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001B4B                  	smpsAlterVol		$F7
001B4B E6F7             	dc.b	$E6,$F7
001B4D                  	smpsLoop		$00, $1C, HDNR1S_PWM2_Loop9, Target
001B4D F7               	dc.b	$F7
001B4E 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM2_Loop9<*)
001B50                  		rom_ptr_z80(HDNR1S_PWM2_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B50 419B             	dc.w  (((((HDNR1S_PWM2_Loop9+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001B52 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B56                  	smpsAlterVol		$09
001B56 E609             	dc.b	$E6,$09
001B58 8E06             	dc.b	pFingSnap, $06
001B5A                  	smpsAlterVol		$F7
001B5A E6F7             	dc.b	$E6,$F7
001B5C 8B8B8B8B830C8003 	dc.b	pAKick, pAKick, pAKick, pAKick, pSplashCymb, $0C, nRst, $03

001B64                  HDNR1S_PWM2_Loop10:
001B64 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B68                  	smpsAlterVol		$09
001B68 E609             	dc.b	$E6,$09
001B6A 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001B6E                  	smpsAlterVol		$F7
001B6E E6F7             	dc.b	$E6,$F7
001B70                  	smpsLoop		$00, $0C, HDNR1S_PWM2_Loop10, Target
001B70 F7               	dc.b	$F7
001B71 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM2_Loop10<*)
001B73                  		rom_ptr_z80(HDNR1S_PWM2_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
001B73 649B             	dc.w  (((((HDNR1S_PWM2_Loop10+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001B75 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B79                  	smpsAlterVol		$09
001B79 E609             	dc.b	$E6,$09
001B7B 8E06             	dc.b	pFingSnap, $06
001B7D                  	smpsAlterVol		$F3
001B7D E6F3             	dc.b	$E6,$F3
001B7F 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
001B87 8B038006         	dc.b	pAKick, $03, nRst, $06
001B8B                  	smpsAlterVol		$FD
001B8B E6FD             	dc.b	$E6,$FD
001B8D 8B8B             	dc.b	pAKick, pAKick
001B8F                  	smpsAlterVol		$06
001B8F E606             	dc.b	$E6,$06
001B91 828003           	dc.b	pESnare, nRst, $03
001B94                  	smpsAlterVol		$01
001B94 E601             	dc.b	$E6,$01

001B96                  HDNR1S_PWM2_Loop11:
001B96 98018002         	dc.b	pClosedHH, $01, nRst, $02
001B9A                  	smpsAlterVol		$09
001B9A E609             	dc.b	$E6,$09
001B9C 8E068003         	dc.b	pFingSnap, $06, nRst, $03
001BA0                  	smpsAlterVol		$F7
001BA0 E6F7             	dc.b	$E6,$F7
001BA2                  	smpsLoop		$00, $2A, HDNR1S_PWM2_Loop11, Target
001BA2 F7               	dc.b	$F7
001BA3 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM2_Loop11<*)
001BA5                  		rom_ptr_z80(HDNR1S_PWM2_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
001BA5 969B             	dc.w  (((((HDNR1S_PWM2_Loop11+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001BA7 98018002         	dc.b	pClosedHH, $01, nRst, $02
001BAB                  	smpsAlterVol		$09
001BAB E609             	dc.b	$E6,$09
001BAD 8E06             	dc.b	pFingSnap, $06
001BAF                  	smpsAlterVol		$F7
001BAF E6F7             	dc.b	$E6,$F7
001BB1 8B8B8B8B890C8089 	dc.b	pAKick, pAKick, pAKick, pAKick, pCrashCymb, $0C, nRst, pCrashCymb
001BB9 80               	dc.b	nRst
001BBA                  	smpsAlterVol		$FC
001BBA E6FC             	dc.b	$E6,$FC
001BBC 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
001BC4 8B03             	dc.b	pAKick, $03
001BC6                  	smpsAlterVol		$04
001BC6 E604             	dc.b	$E6,$04
001BC8                  	smpsJump		HDNR1S_PWM2_Jump1, Target
001BC8 F6               	dc.b	$F6
                        	if (HDNR1S_PWM2_Jump1<*)
001BC9                  		rom_ptr_z80(HDNR1S_PWM2_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001BC9 989A             	dc.w  (((((HDNR1S_PWM2_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM2_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
001BCB                  HDNR1S_PWM3:
001BCB 80038B02         	dc.b	nRst, $03, pAKick, $02
001BCF                  	smpsAlterVol		$0A
001BCF E60A             	dc.b	$E6,$0A
001BD1 8901             	dc.b	pCrashCymb, $01
001BD3                  	smpsAlterVol		$F6
001BD3 E6F6             	dc.b	$E6,$F6
001BD5 8B0C801E         	dc.b	pAKick, $0C, nRst, $1E
001BD9                  	smpsAlterVol		$11
001BD9 E611             	dc.b	$E6,$11
001BDB 98018002         	dc.b	pClosedHH, $01, nRst, $02
001BDF                  	smpsAlterVol		$FE
001BDF E6FE             	dc.b	$E6,$FE
001BE1 898001           	dc.b	pCrashCymb, nRst, $01
001BE4                  	smpsAlterVol		$F1
001BE4 E6F1             	dc.b	$E6,$F1
001BE6 8B0C             	dc.b	pAKick, $0C
001BE8                  	smpsAlterVol		$11
001BE8 E611             	dc.b	$E6,$11
001BEA 980180029801801A 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $1A

001BF2                  HDNR1S_PWM3_Loop1:
001BF2 98018002         	dc.b	pClosedHH, $01, nRst, $02
001BF6                  	smpsLoop		$00, $07, HDNR1S_PWM3_Loop1, Target
001BF6 F7               	dc.b	$F7
001BF7 0007             	dc.b	$00,$07
                        	if (HDNR1S_PWM3_Loop1<*)
001BF9                  		rom_ptr_z80(HDNR1S_PWM3_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001BF9 F29B             	dc.w  (((((HDNR1S_PWM3_Loop1+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001BFB 9801801A98018002 	dc.b	pClosedHH, $01, nRst, $1A, pClosedHH, $01, nRst, $02
001C03                  	smpsAlterVol		$FE
001C03 E6FE             	dc.b	$E6,$FE
001C05 898001           	dc.b	pCrashCymb, nRst, $01
001C08                  	smpsAlterVol		$02
001C08 E602             	dc.b	$E6,$02
001C0A 98               	dc.b	pClosedHH

001C0B                  HDNR1S_PWM3_Loop2:
001C0B 80029801         	dc.b	nRst, $02, pClosedHH, $01
001C0F                  	smpsLoop		$00, $05, HDNR1S_PWM3_Loop2, Target
001C0F F7               	dc.b	$F7
001C10 0005             	dc.b	$00,$05
                        	if (HDNR1S_PWM3_Loop2<*)
001C12                  		rom_ptr_z80(HDNR1S_PWM3_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C12 0B9C             	dc.w  (((((HDNR1S_PWM3_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C14 800E980180029801 	dc.b	nRst, $0E, pClosedHH, $01, nRst, $02, pClosedHH, $01
001C1C 800E             	dc.b	nRst, $0E
001C1E                  	smpsAlterVol		$EF
001C1E E6EF             	dc.b	$E6,$EF
001C20 8B06             	dc.b	pAKick, $06
001C22                  	smpsAlterVol		$06
001C22 E606             	dc.b	$E6,$06
001C24 8C80             	dc.b	pASnare, nRst
001C26                  	smpsAlterVol		$FA
001C26 E6FA             	dc.b	$E6,$FA

001C28                  HDNR1S_PWM3_Loop3:
001C28 8B80             	dc.b	pAKick, nRst
001C2A                  	smpsLoop		$00, $0A, HDNR1S_PWM3_Loop3, Target
001C2A F7               	dc.b	$F7
001C2B 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM3_Loop3<*)
001C2D                  		rom_ptr_z80(HDNR1S_PWM3_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C2D 289C             	dc.w  (((((HDNR1S_PWM3_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C2F 8B               	dc.b	pAKick
001C30                  	smpsAlterVol		$07
001C30 E607             	dc.b	$E6,$07

001C32                  HDNR1S_PWM3_Loop4:
001C32 8C018080048C0180 	dc.b	pASnare, $01, nRst, nRst, $04, pASnare, $01, nRst
001C3A 02               	dc.b	$02
001C3B                  	smpsLoop		$00, $02, HDNR1S_PWM3_Loop4, Target
001C3B F7               	dc.b	$F7
001C3C 0002             	dc.b	$00,$02
                        	if (HDNR1S_PWM3_Loop4<*)
001C3E                  		rom_ptr_z80(HDNR1S_PWM3_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C3E 329C             	dc.w  (((((HDNR1S_PWM3_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C40 8C0180808C80808C 	dc.b	pASnare, $01, nRst, nRst, pASnare, nRst, nRst, pASnare
001C48 80088C018002     	dc.b	nRst, $08, pASnare, $01, nRst, $02

001C4E                  HDNR1S_PWM3_Jump1:
001C4E 800C898006       	dc.b	nRst, $0C, pCrashCymb, nRst, $06
001C53                  	smpsAlterVol		$F9
001C53 E6F9             	dc.b	$E6,$F9

001C55                  HDNR1S_PWM3_Loop5:
001C55 8B80             	dc.b	pAKick, nRst
001C57                  	smpsLoop		$00, $0C, HDNR1S_PWM3_Loop5, Target
001C57 F7               	dc.b	$F7
001C58 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM3_Loop5<*)
001C5A                  		rom_ptr_z80(HDNR1S_PWM3_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C5A 559C             	dc.w  (((((HDNR1S_PWM3_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C5C 8B8018           	dc.b	pAKick, nRst, $18
001C5F                  	smpsAlterVol		$07
001C5F E607             	dc.b	$E6,$07
001C61 890C8006         	dc.b	pCrashCymb, $0C, nRst, $06
001C65                  	smpsAlterVol		$F9
001C65 E6F9             	dc.b	$E6,$F9

001C67                  HDNR1S_PWM3_Loop6:
001C67 8B80             	dc.b	pAKick, nRst
001C69                  	smpsLoop		$00, $0C, HDNR1S_PWM3_Loop6, Target
001C69 F7               	dc.b	$F7
001C6A 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM3_Loop6<*)
001C6C                  		rom_ptr_z80(HDNR1S_PWM3_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C6C 679C             	dc.w  (((((HDNR1S_PWM3_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C6E 8B80188B06       	dc.b	pAKick, nRst, $18, pAKick, $06
001C73                  	smpsAlterVol		$06
001C73 E606             	dc.b	$E6,$06
001C75 8280             	dc.b	pESnare, nRst
001C77                  	smpsAlterVol		$FA
001C77 E6FA             	dc.b	$E6,$FA

001C79                  HDNR1S_PWM3_Loop7:
001C79 8B80             	dc.b	pAKick, nRst
001C7B                  	smpsLoop		$00, $0A, HDNR1S_PWM3_Loop7, Target
001C7B F7               	dc.b	$F7
001C7C 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM3_Loop7<*)
001C7E                  		rom_ptr_z80(HDNR1S_PWM3_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001C7E 799C             	dc.w  (((((HDNR1S_PWM3_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001C80 8B8018           	dc.b	pAKick, nRst, $18
001C83                  	smpsAlterVol		$07
001C83 E607             	dc.b	$E6,$07
001C85 8909             	dc.b	pCrashCymb, $09
001C87                  	smpsAlterVol		$FC
001C87 E6FC             	dc.b	$E6,$FC
001C89 8B038006         	dc.b	pAKick, $03, nRst, $06
001C8D                  	smpsAlterVol		$0E
001C8D E60E             	dc.b	$E6,$0E
001C8F 9801800298018005 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $05
001C97                  	smpsAlterVol		$F6
001C97 E6F6             	dc.b	$E6,$F6
001C99 98018002         	dc.b	pClosedHH, $01, nRst, $02
001C9D                  	smpsAlterVol		$09
001C9D E609             	dc.b	$E6,$09
001C9F 8E0680           	dc.b	pFingSnap, $06, nRst
001CA2                  	smpsAlterVol		$F0
001CA2 E6F0             	dc.b	$E6,$F0

001CA4                  HDNR1S_PWM3_Loop8:
001CA4 8B80             	dc.b	pAKick, nRst
001CA6                  	smpsLoop		$00, $1C, HDNR1S_PWM3_Loop8, Target
001CA6 F7               	dc.b	$F7
001CA7 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM3_Loop8<*)
001CA9                  		rom_ptr_z80(HDNR1S_PWM3_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CA9 A49C             	dc.w  (((((HDNR1S_PWM3_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CAB 8B8018           	dc.b	pAKick, nRst, $18
001CAE                  	smpsAlterVol		$07
001CAE E607             	dc.b	$E6,$07
001CB0 890C8006         	dc.b	pCrashCymb, $0C, nRst, $06
001CB4                  	smpsAlterVol		$F9
001CB4 E6F9             	dc.b	$E6,$F9

001CB6                  HDNR1S_PWM3_Loop9:
001CB6 8B80             	dc.b	pAKick, nRst
001CB8                  	smpsLoop		$00, $0C, HDNR1S_PWM3_Loop9, Target
001CB8 F7               	dc.b	$F7
001CB9 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM3_Loop9<*)
001CBB                  		rom_ptr_z80(HDNR1S_PWM3_Loop9+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CBB B69C             	dc.w  (((((HDNR1S_PWM3_Loop9+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CBD 8B8012           	dc.b	pAKick, nRst, $12
001CC0                  	smpsAlterVol		$11
001CC0 E611             	dc.b	$E6,$11
001CC2 9801800298018005 	dc.b	pClosedHH, $01, nRst, $02, pClosedHH, $01, nRst, $05
001CCA                  	smpsAlterVol		$F6
001CCA E6F6             	dc.b	$E6,$F6
001CCC 98018002         	dc.b	pClosedHH, $01, nRst, $02
001CD0                  	smpsAlterVol		$09
001CD0 E609             	dc.b	$E6,$09
001CD2 8E0680           	dc.b	pFingSnap, $06, nRst
001CD5                  	smpsAlterVol		$F0
001CD5 E6F0             	dc.b	$E6,$F0

001CD7                  HDNR1S_PWM3_Loop10:
001CD7 8B80             	dc.b	pAKick, nRst
001CD9                  	smpsLoop		$00, $2A, HDNR1S_PWM3_Loop10, Target
001CD9 F7               	dc.b	$F7
001CDA 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM3_Loop10<*)
001CDC                  		rom_ptr_z80(HDNR1S_PWM3_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CDC D79C             	dc.w  (((((HDNR1S_PWM3_Loop10+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CDE 8B8018           	dc.b	pAKick, nRst, $18
001CE1                  	smpsAlterVol		$07
001CE1 E607             	dc.b	$E6,$07

001CE3                  HDNR1S_PWM3_Loop11:
001CE3 820180088201800E 	dc.b	pESnare, $01, nRst, $08, pESnare, $01, nRst, $0E
001CEB                  	smpsLoop		$00, $02, HDNR1S_PWM3_Loop11, Target
001CEB F7               	dc.b	$F7
001CEC 0002             	dc.b	$00,$02
                        	if (HDNR1S_PWM3_Loop11<*)
001CEE                  		rom_ptr_z80(HDNR1S_PWM3_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CEE E39C             	dc.w  (((((HDNR1S_PWM3_Loop11+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001CF0 830C             	dc.b	pSplashCymb, $0C
001CF2                  	smpsJump		HDNR1S_PWM3_Jump1, Target
001CF2 F6               	dc.b	$F6
                        	if (HDNR1S_PWM3_Jump1<*)
001CF3                  		rom_ptr_z80(HDNR1S_PWM3_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001CF3 4E9C             	dc.w  (((((HDNR1S_PWM3_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM3_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
001CF5                  HDNR1S_PWM4:
001CF5 8006891280555507 	dc.b	nRst, $06, pCrashCymb, $12, nRst, $55, $55, $07
001CFD 98018002         	dc.b	pClosedHH, $01, nRst, $02
001D01                  	smpsAlterVol		$06
001D01 E606             	dc.b	$E6,$06
001D03 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001D07                  	smpsAlterVol		$FA
001D07 E6FA             	dc.b	$E6,$FA

001D09                  HDNR1S_PWM4_Loop1:
001D09 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D0D                  	smpsLoop		$00, $0A, HDNR1S_PWM4_Loop1, Target
001D0D F7               	dc.b	$F7
001D0E 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM4_Loop1<*)
001D10                  		rom_ptr_z80(HDNR1S_PWM4_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D10 099D             	dc.w  (((((HDNR1S_PWM4_Loop1+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D12 9801801A830903   	dc.b	pClosedHH, $01, nRst, $1A, pSplashCymb, $09, $03

001D19                  HDNR1S_PWM4_Jump1:
001D19 800F             	dc.b	nRst, $0F

001D1B                  HDNR1S_PWM4_Loop3:
001D1B 98018002         	dc.b	pClosedHH, $01, nRst, $02
001D1F                  	smpsAlterVol		$09
001D1F E609             	dc.b	$E6,$09
001D21 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001D25                  	smpsAlterVol		$F7
001D25 E6F7             	dc.b	$E6,$F7

001D27                  HDNR1S_PWM4_Loop2:
001D27 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D2B                  	smpsLoop		$00, $0C, HDNR1S_PWM4_Loop2, Target
001D2B F7               	dc.b	$F7
001D2C 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM4_Loop2<*)
001D2E                  		rom_ptr_z80(HDNR1S_PWM4_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D2E 279D             	dc.w  (((((HDNR1S_PWM4_Loop2+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D30 9801801D         	dc.b	pClosedHH, $01, nRst, $1D
001D34                  	smpsLoop		$01, $02, HDNR1S_PWM4_Loop3, Target
001D34 F7               	dc.b	$F7
001D35 0102             	dc.b	$01,$02
                        	if (HDNR1S_PWM4_Loop3<*)
001D37                  		rom_ptr_z80(HDNR1S_PWM4_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D37 1B9D             	dc.w  (((((HDNR1S_PWM4_Loop3+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D39 98018002         	dc.b	pClosedHH, $01, nRst, $02
001D3D                  	smpsAlterVol		$09
001D3D E609             	dc.b	$E6,$09
001D3F 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001D43                  	smpsAlterVol		$F7
001D43 E6F7             	dc.b	$E6,$F7

001D45                  HDNR1S_PWM4_Loop4:
001D45 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D49                  	smpsLoop		$00, $0A, HDNR1S_PWM4_Loop4, Target
001D49 F7               	dc.b	$F7
001D4A 000A             	dc.b	$00,$0A
                        	if (HDNR1S_PWM4_Loop4<*)
001D4C                  		rom_ptr_z80(HDNR1S_PWM4_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D4C 459D             	dc.w  (((((HDNR1S_PWM4_Loop4+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D4E 98018038         	dc.b	pClosedHH, $01, nRst, $38
001D52                  	smpsAlterVol		$F9
001D52 E6F9             	dc.b	$E6,$F9
001D54 8B068009         	dc.b	pAKick, $06, nRst, $09
001D58                  	smpsAlterVol		$07
001D58 E607             	dc.b	$E6,$07

001D5A                  HDNR1S_PWM4_Loop5:
001D5A 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D5E                  	smpsLoop		$00, $1C, HDNR1S_PWM4_Loop5, Target
001D5E F7               	dc.b	$F7
001D5F 001C             	dc.b	$00,$1C
                        	if (HDNR1S_PWM4_Loop5<*)
001D61                  		rom_ptr_z80(HDNR1S_PWM4_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D61 5A9D             	dc.w  (((((HDNR1S_PWM4_Loop5+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D63 9801801D98018002 	dc.b	pClosedHH, $01, nRst, $1D, pClosedHH, $01, nRst, $02
001D6B                  	smpsAlterVol		$09
001D6B E609             	dc.b	$E6,$09
001D6D 8E068009         	dc.b	pFingSnap, $06, nRst, $09
001D71                  	smpsAlterVol		$F7
001D71 E6F7             	dc.b	$E6,$F7

001D73                  HDNR1S_PWM4_Loop6:
001D73 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D77                  	smpsLoop		$00, $0C, HDNR1S_PWM4_Loop6, Target
001D77 F7               	dc.b	$F7
001D78 000C             	dc.b	$00,$0C
                        	if (HDNR1S_PWM4_Loop6<*)
001D7A                  		rom_ptr_z80(HDNR1S_PWM4_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D7A 739D             	dc.w  (((((HDNR1S_PWM4_Loop6+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D7C 98018020         	dc.b	pClosedHH, $01, nRst, $20
001D80                  	smpsAlterVol		$F9
001D80 E6F9             	dc.b	$E6,$F9
001D82 8B068009         	dc.b	pAKick, $06, nRst, $09
001D86                  	smpsAlterVol		$07
001D86 E607             	dc.b	$E6,$07

001D88                  HDNR1S_PWM4_Loop7:
001D88 9801800B         	dc.b	pClosedHH, $01, nRst, $0B
001D8C                  	smpsLoop		$00, $2A, HDNR1S_PWM4_Loop7, Target
001D8C F7               	dc.b	$F7
001D8D 002A             	dc.b	$00,$2A
                        	if (HDNR1S_PWM4_Loop7<*)
001D8F                  		rom_ptr_z80(HDNR1S_PWM4_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
001D8F 889D             	dc.w  (((((HDNR1S_PWM4_Loop7+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001D91 9801801A         	dc.b	pClosedHH, $01, nRst, $1A
001D95                  	smpsAlterVol		$FC
001D95 E6FC             	dc.b	$E6,$FC

001D97                  HDNR1S_PWM4_Loop8:
001D97 8B0380028B038001 	dc.b	pAKick, $03, nRst, $02, pAKick, $03, nRst, $01
001D9F 8B03800C         	dc.b	pAKick, $03, nRst, $0C
001DA3                  	smpsLoop		$00, $02, HDNR1S_PWM4_Loop8, Target
001DA3 F7               	dc.b	$F7
001DA4 0002             	dc.b	$00,$02
                        	if (HDNR1S_PWM4_Loop8<*)
001DA6                  		rom_ptr_z80(HDNR1S_PWM4_Loop8+Target)
                        	;dc.w z80_ptr(ptr,addr)
001DA6 979D             	dc.w  (((((HDNR1S_PWM4_Loop8+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Loop8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
001DA8                  	smpsAlterVol		$04
001DA8 E604             	dc.b	$E6,$04
001DAA 89               	dc.b	pCrashCymb
001DAB                  	smpsJump		HDNR1S_PWM4_Jump1, Target
001DAB F6               	dc.b	$F6
                        	if (HDNR1S_PWM4_Jump1<*)
001DAC                  		rom_ptr_z80(HDNR1S_PWM4_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
001DAC 199D             	dc.w  (((((HDNR1S_PWM4_Jump1+Target))<<8)&$FF00)|((((HDNR1S_PWM4_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

001DAE                  HDNR1S_Patches:	
001DAE 3F               	dc.b	$3F
001DAF 003200761F1F1F1F 	dc.b	$00, $32, $00, $76,	$1F, $1F, $1F, $1F
001DB7 0E0E0E1003030303 	dc.b	$0E, $0E, $0E, $10,	$03, $03, $03, $03
001DBF 08583838190B0A0A 	dc.b	$08, $58, $38, $38,	$19, $0B, $0A, $0A
                        	
001DC7 39               	dc.b	$39
001DC8 060101019F1F1F5F 	dc.b	$06, $01, $01, $01,	$9F, $1F, $1F, $5F
001DD0 0A09090408070707 	dc.b	$0A, $09, $09, $04,	$08, $07, $07, $07
001DD8 242424282224260A 	dc.b	$24, $24, $24, $28,	$22, $24, $26, $0A
                        	
001DE0 3A               	dc.b	$3A
001DE1 646060309D9D504C 	dc.b	$64, $60, $60, $30,	$9D, $9D, $50, $4C
001DE9 040604051F050101 	dc.b	$04, $06, $04, $05,	$1F, $05, $01, $01
001DF1 A82525557F06140E 	dc.b	$A8, $25, $25, $55,	$7F, $06, $14, $0E
                        	
001DF9 3D               	dc.b	$3D
001DFA 723131711A1C1A1C 	dc.b	$72, $31, $31, $71,	$1A, $1C, $1A, $1C
001E02 0E0A0E0C00000001 	dc.b	$0E, $0A, $0E, $0C,	$00, $00, $00, $01
001E0A 380828381C080E08 	dc.b	$38, $08, $28, $38,	$1C, $08, $0E, $08
                        	
001E12 39               	dc.b	$39
001E13 032261211F121F1F 	dc.b	$03, $22, $61, $21,	$1F, $12, $1F, $1F
001E1B 0505050B00000000 	dc.b	$05, $05, $05, $0B,	$00, $00, $00, $00
001E23 101810181C121A0C 	dc.b	$10, $18, $10, $18,	$1C, $12, $1A, $0C

001E2B 39               	dc.b	$39
001E2C 330151015F5F5F5F 	dc.b	$33, $01, $51, $01,	$5F, $5F, $5F, $5F
001E34 0F00000D01010101 	dc.b	$0F, $00, $00, $0D,	$01, $01, $01, $01
001E3C 331A1A171E191604 	dc.b	$33, $1A, $1A, $17,	$1E, $19, $16, $04

00000 Total Error(s)

DFLOORTIMPANI      0000008B E  DHITIMPANI         00000088 E  DKICK              00000081 E
DLOWTIMPANI        0000008A E  DMIDTIMPANI        00000089 E  DSNARE             00000082 E
DTIMPANI           00000083 E  DVLOWTIMPANI       0000008B E  HDNR1S_FM1         00000040
HDNR1S_FM2         00000405    HDNR1S_FM3         0000047F    HDNR1S_FM4         0000083C
HDNR1S_FM5         00000BA8    HDNR1S_FM6         00000F23    HDNR1S_JUMP1       00000149
HDNR1S_JUMP2       0000053C    HDNR1S_JUMP3       000008A2    HDNR1S_JUMP4       00000C16
HDNR1S_JUMP5       00000F33    HDNR1S_JUMP6       0000109A    HDNR1S_JUMP7       0000133D
HDNR1S_JUMP8       00001659    HDNR1S_LOOP1       00000046    HDNR1S_LOOP10      00000470
HDNR1S_LOOP100     00000DC8    HDNR1S_LOOP101     00000DEF    HDNR1S_LOOP102     00000E23
HDNR1S_LOOP103     00000E29    HDNR1S_LOOP104     00000E32    HDNR1S_LOOP105     00000E4A
HDNR1S_LOOP107     00000E7F    HDNR1S_LOOP108     00000EA2    HDNR1S_LOOP109     00000EC9
HDNR1S_LOOP11      00000485    HDNR1S_LOOP110     00000EF9    HDNR1S_LOOP111     000010CF
HDNR1S_LOOP112     00001147    HDNR1S_LOOP113     000012EB    HDNR1S_LOOP114     00001308
HDNR1S_LOOP115     000012FF    HDNR1S_LOOP116     00001343    HDNR1S_LOOP117     0000135B
HDNR1S_LOOP118     0000136E    HDNR1S_LOOP119     00001381    HDNR1S_LOOP12      0000051A
HDNR1S_LOOP120     00001394    HDNR1S_LOOP121     00001392    HDNR1S_LOOP122     000013AC
HDNR1S_LOOP123     000013BF    HDNR1S_LOOP124     000013BD    HDNR1S_LOOP125     000013D7
HDNR1S_LOOP126     000013EA    HDNR1S_LOOP127     000013FD    HDNR1S_LOOP128     00001410
HDNR1S_LOOP129     0000140E    HDNR1S_LOOP13      00000527    HDNR1S_LOOP130     0000145C
HDNR1S_LOOP131     00001475    HDNR1S_LOOP132     00001492    HDNR1S_LOOP133     00001529
HDNR1S_LOOP134     00001542    HDNR1S_LOOP135     0000155F    HDNR1S_LOOP136     00001613
HDNR1S_LOOP137     000016E8    HDNR1S_LOOP138     00001770    HDNR1S_LOOP139     000017DF
HDNR1S_LOOP14      00000540    HDNR1S_LOOP140     000017EC    HDNR1S_LOOP15      0000054D
HDNR1S_LOOP16      0000055A    HDNR1S_LOOP17      00000567    HDNR1S_LOOP18      00000574
HDNR1S_LOOP19      00000581    HDNR1S_LOOP2       00000333    HDNR1S_LOOP20      0000058E
HDNR1S_LOOP21      0000059B    HDNR1S_LOOP22      000005A8    HDNR1S_LOOP23      000005B5
HDNR1S_LOOP24      000005C2    HDNR1S_LOOP25      000005CF    HDNR1S_LOOP26      000005DC
HDNR1S_LOOP27      000005E9    HDNR1S_LOOP28      000005F6    HDNR1S_LOOP29      000005FA
HDNR1S_LOOP3       00000344    HDNR1S_LOOP30      0000060A    HDNR1S_LOOP31      0000061D
HDNR1S_LOOP32      00000619    HDNR1S_LOOP33      00000635    HDNR1S_LOOP34      00000631
HDNR1S_LOOP35      0000064D    HDNR1S_LOOP36      0000066E    HDNR1S_LOOP37      0000066C
HDNR1S_LOOP38      00000686    HDNR1S_LOOP39      00000684    HDNR1S_LOOP4       00000362
HDNR1S_LOOP40      000006A0    HDNR1S_LOOP41      0000069E    HDNR1S_LOOP42      000006B8
HDNR1S_LOOP43      000006B6    HDNR1S_LOOP44      000006D0    HDNR1S_LOOP45      000006CE
HDNR1S_LOOP46      000006E8    HDNR1S_LOOP47      00000707    HDNR1S_LOOP48      0000071A
HDNR1S_LOOP49      0000072D    HDNR1S_LOOP5       00000397    HDNR1S_LOOP50      00000740
HDNR1S_LOOP51      00000753    HDNR1S_LOOP52      00000766    HDNR1S_LOOP53      00000779
HDNR1S_LOOP54      00000775    HDNR1S_LOOP55      00000791    HDNR1S_LOOP56      000007A4
HDNR1S_LOOP57      000007B7    HDNR1S_LOOP58      000007CA    HDNR1S_LOOP59      000007DD
HDNR1S_LOOP6       000003A0    HDNR1S_LOOP60      000007F0    HDNR1S_LOOP61      0000081F
HDNR1S_LOOP62      0000081B    HDNR1S_LOOP63      00000842    HDNR1S_LOOP64      00000876
HDNR1S_LOOP65      000008AA    HDNR1S_LOOP66      0000090A    HDNR1S_LOOP67      0000091F
HDNR1S_LOOP68      00000934    HDNR1S_LOOP69      00000949    HDNR1S_LOOP7       000003C6
HDNR1S_LOOP70      00000962    HDNR1S_LOOP71      000009C2    HDNR1S_LOOP72      000009D7
HDNR1S_LOOP73      000009EC    HDNR1S_LOOP74      00000A01    HDNR1S_LOOP75      00000A30
HDNR1S_LOOP76      00000A51    HDNR1S_LOOP77      00000A78    HDNR1S_LOOP78      00000AAC
HDNR1S_LOOP79      00000AB3    HDNR1S_LOOP8       00000454    HDNR1S_LOOP80      00000ABB
HDNR1S_LOOP81      00000AD2    HDNR1S_LOOP82      00000AD1    HDNR1S_LOOP83      00000B06
HDNR1S_LOOP84      00000B27    HDNR1S_LOOP85      00000B4E    HDNR1S_LOOP86      00000B7E
HDNR1S_LOOP87      00000BAE    HDNR1S_LOOP88      00000BE1    HDNR1S_LOOP89      00000C1E
HDNR1S_LOOP9       0000045D    HDNR1S_LOOP90      00000C7F    HDNR1S_LOOP91      00000C94
HDNR1S_LOOP92      00000CA9    HDNR1S_LOOP93      00000CBE    HDNR1S_LOOP94      00000CD7
HDNR1S_LOOP95      00000D38    HDNR1S_LOOP96      00000D4D    HDNR1S_LOOP97      00000D62
HDNR1S_LOOP98      00000D77    HDNR1S_LOOP99      00000DA5    HDNR1S_PATCHES     00001DAE
HDNR1S_PSG1        00001076    HDNR1S_PSG2        000012F5    HDNR1S_PSG3        0000164B
HDNR1S_PWM1        00001822    HDNR1S_PWM1_JUMP1  000018BE    HDNR1S_PWM1_LOOP1  00001831
HDNR1S_PWM1_LOOP10 000019A9    HDNR1S_PWM1_LOOP11 000019BC    HDNR1S_PWM1_LOOP2  00001850
HDNR1S_PWM1_LOOP3  00001885    HDNR1S_PWM1_LOOP4  000018C2    HDNR1S_PWM1_LOOP5  000018EF
HDNR1S_PWM1_LOOP6  0000191E    HDNR1S_PWM1_LOOP7  0000195F    HDNR1S_PWM1_LOOP8  00001972
HDNR1S_PWM1_LOOP9  0000197E    HDNR1S_PWM2        000019D8    HDNR1S_PWM2_JUMP1  00001A98
HDNR1S_PWM2_LOOP1  000019EE    HDNR1S_PWM2_LOOP10 00001B64    HDNR1S_PWM2_LOOP11 00001B96
HDNR1S_PWM2_LOOP2  00001A0E    HDNR1S_PWM2_LOOP3  00001A28    HDNR1S_PWM2_LOOP4  00001A46
HDNR1S_PWM2_LOOP5  00001A5A    HDNR1S_PWM2_LOOP6  00001A9D    HDNR1S_PWM2_LOOP7  00001ACC
HDNR1S_PWM2_LOOP8  00001AFB    HDNR1S_PWM2_LOOP9  00001B41    HDNR1S_PWM3        00001BCB
HDNR1S_PWM3_JUMP1  00001C4E    HDNR1S_PWM3_LOOP1  00001BF2    HDNR1S_PWM3_LOOP10 00001CD7
HDNR1S_PWM3_LOOP11 00001CE3    HDNR1S_PWM3_LOOP2  00001C0B    HDNR1S_PWM3_LOOP3  00001C28
HDNR1S_PWM3_LOOP4  00001C32    HDNR1S_PWM3_LOOP5  00001C55    HDNR1S_PWM3_LOOP6  00001C67
HDNR1S_PWM3_LOOP7  00001C79    HDNR1S_PWM3_LOOP8  00001CA4    HDNR1S_PWM3_LOOP9  00001CB6
HDNR1S_PWM4        00001CF5    HDNR1S_PWM4_JUMP1  00001D19    HDNR1S_PWM4_LOOP1  00001D09
HDNR1S_PWM4_LOOP2  00001D27    HDNR1S_PWM4_LOOP3  00001D1B    HDNR1S_PWM4_LOOP4  00001D45
HDNR1S_PWM4_LOOP5  00001D5A    HDNR1S_PWM4_LOOP6  00001D73    HDNR1S_PWM4_LOOP7  00001D88
HDNR1S_PWM4_LOOP8  00001D97    NA0                0000008A E  NA1                00000096 E
NA2                000000A2 E  NA3                000000AE E  NA4                000000BA E
NA5                000000C6 E  NA6                000000D2 E  NA7                000000DE E
NAB0               00000089 E  NAB1               00000095 E  NAB2               000000A1 E
NAB3               000000AD E  NAB4               000000B9 E  NAB5               000000C5 E
NAB6               000000D1 E  NAB7               000000DD E  NB0                0000008C E
NB1                00000098 E  NB2                000000A4 E  NB3                000000B0 E
NB4                000000BC E  NB5                000000C8 E  NB6                000000D4 E
NBB0               0000008B E  NBB1               00000097 E  NBB2               000000A3 E
NBB3               000000AF E  NBB4               000000BB E  NBB5               000000C7 E
NBB6               000000D3 E  NBB7               000000DF E  NC0                00000081 E
NC1                0000008D E  NC2                00000099 E  NC3                000000A5 E
NC4                000000B1 E  NC5                000000BD E  NC6                000000C9 E
NC7                000000D5 E  NCS0               00000082 E  NCS1               0000008E E
NCS2               0000009A E  NCS3               000000A6 E  NCS4               000000B2 E
NCS5               000000BE E  NCS6               000000CA E  NCS7               000000D6 E
ND0                00000083 E  ND1                0000008F E  ND2                0000009B E
ND3                000000A7 E  ND4                000000B3 E  ND5                000000BF E
ND6                000000CB E  ND7                000000D7 E  NE0                00000085 E
NE1                00000091 E  NE2                0000009D E  NE3                000000A9 E
NE4                000000B5 E  NE5                000000C1 E  NE6                000000CD E
NE7                000000D9 E  NEB0               00000084 E  NEB1               00000090 E
NEB2               0000009C E  NEB3               000000A8 E  NEB4               000000B4 E
NEB5               000000C0 E  NEB6               000000CC E  NEB7               000000D8 E
NF0                00000086 E  NF1                00000092 E  NF2                0000009E E
NF3                000000AA E  NF4                000000B6 E  NF5                000000C2 E
NF6                000000CE E  NF7                000000DA E  NFS0               00000087 E
NFS1               00000093 E  NFS2               0000009F E  NFS3               000000AB E
NFS4               000000B7 E  NFS5               000000C3 E  NFS6               000000CF E
NFS7               000000DB E  NG0                00000088 E  NG1                00000094 E
NG2                000000A0 E  NG3                000000AC E  NG4                000000B8 E
NG5                000000C4 E  NG6                000000D0 E  NG7                000000DC E
NRST               00000080 E  PAKICK             0000008B E  PANCENTER          000000C0 S
PANCENTRE          000000C0 S  PANLEFT            00000080 S  PANNONE            00000000 S
PANRIGHT           00000040 S  PASNARE            0000008C E  PBELL              0000008D E
PBONGOHI           00000092 E  PBONGOLO           00000093 E  PCLAP              0000008A E
PCLICKHI           00000090 E  PCLICKLO           00000091 E  PCLOSEDHH          00000098 E
PCOWBELL           0000008F E  PCRASHCYMB         00000089 E  PEHIHAT            00000088 E
PEKICK             00000081 E  PESNARE            00000082 E  PFINGSNAP          0000008E E
POPENHH            00000099 E  PRIDEBELL          00000084 E  PSEGA              00000097 E
PSGTONE            0000000C E  PSGVOI             00000000 E  PSGVOL1            00000001 E
PSGVOL2            00000003 E  PSGVOL3            00000002 E  PSILENCE           00000096 E
PSPLASHCYMB        00000083 E  PTIMPANIHI         00000094 E  PTIMPANILO         00000095 E
PTOMHI             00000085 E  PTOMLOW            00000087 E  PTOMLOWER          0000009A E
PTOMLOWERER        0000009B E  PTOMLOWEREST       0000009C E  PTOMMID            00000086 E
PWMVOL             0000009F E  SMPSED             000000ED E  SMPSEE             000000EE E
SMPSF9             000000F9 E  SMPSMODOFF         000000F4 E  SMPSMODON          000000F1 E
SMPSNOATTACK       000000E7 E  SMPSPITCH00        00000000 E  SMPSPITCH01HI      0000000C E
SMPSPITCH01LO      000000F4 E  SMPSPITCH02HI      00000018 E  SMPSPITCH02LO      000000E8 E
SMPSPITCH03HI      00000024 E  SMPSPITCH03LO      000000DC E  SMPSPITCH04HI      00000030 E
SMPSPITCH04LO      000000D0 E  SMPSPITCH05HI      0000003C E  SMPSPITCH05LO      000000C4 E
SMPSPITCH06HI      00000048 E  SMPSPITCH06LO      000000B8 E  SMPSPITCH07HI      00000054 E
SMPSPITCH07LO      000000AC E  SMPSPITCH08HI      00000060 E  SMPSPITCH08LO      000000A0 E
SMPSPITCH09HI      0000006C E  SMPSPITCH09LO      00000094 E  SMPSPITCH10HI      00000078 E
SMPSPITCH10LO      00000088 E  TARGET             00040000 E  TEMPDIV            00000003 S
