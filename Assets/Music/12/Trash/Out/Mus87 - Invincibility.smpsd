--; args=[]
--; filein=G:\Hacking\Tools\16bit\Gens\Sonic\Music\Preview\MDMusicPlayer.1.1\music\Mus87 - Invincibility.bin
--; fileout=G:\Hacking\Tools\16bit\Gens\Sonic\Music\Preview\MDMusicPlayer.1.1\music\Mus87 - Invincibility.asm
--; folder=G:\Hacking\Tools\16bit\Gens\Sonic\Music\Preview\MDMusicPlayer.1.1
--; script=G:\Hacking\Tools\16bit\Gens\Sonic\Music\Preview\MDMusicPlayer.1.1\SMPS\MegaPCM\smps2asm.smpss
--; lable=Maniax
--; type=
--; Prepare script parse
--------------------------------------------------------------------------------
0000: =type ''
0005: c ('\type\' != 'voice') && ('\type\' != 'sfx') && ('\type\' != '') && ('\type\' != 'music') {
0006: 	+Available types: Music, SFX, Voice
0007: 	$.cc
0008: 	;
0009: }
0011: =endian 'big'
0012: =offset 0
0014: c '\type\' == 'voice' {
0015: 	~£_Patches .of
0016: 	/ >patch
0017: 	;
0018: }
0020: c '\type\' == 'sfx' {
0021: 	/ >headersfx
0022: }{
0023: 	/ >header
0024: }
0026: ?header {
0027: 	! > sHeaderInit: {
0028: 		~£_Header .of
0029: 	}
0031: 	! > sHeaderPatch: .dw{
0032: 		~£_Patches :0
0033: 	}
0035: 	=FMnum .db
0036: 	=PSGnum .nb
0037: 	! > sHeaderCh: .lb, .db;
0038: 	! > sHeaderTempo: .db, .db;
0039: 	! > sHeaderDAC: .dw{
0040: 		~£_DAC :0
0041: 	}
0043: 	$.sw
0044: 	f \FMnum\ - 1 {
0045: 		! > sHeaderFM: .dw, .db, .db{
0046: 			~£_FM? :0
0047: 		}
0048: 	}
0050: 	f \PSGnum\ {
0051: 		! > sHeaderPSG: .dw, .db, .db, .db, .db{
0052: 			~£_PSG? :0
0053: 			:? 4 {
0054: 				?volenv;
0055: 			}
0056: 		}
0057: 	}
0059: 	/£_FM? ?note ?comm
0060: 	/£_PSG? ?note ?comm
0061: 	/£_DAC ?DAC ?comm
0062: 	/£_Patches >patch
0063: }
0065: ?headersfx {
0066: 	! > sHeaderInit: {
0067: 		~£_Header .of
0068: 	}
0069: 	! > sHeaderPatch: .dw{
0070: 		~£_Patches :0
0071: 	}
0073: 	! > sHeaderTick: .db;
0074: 	=CHnum .db
0075: 	! > sHeaderCh: \CHnum\;
0076: 	=trpd 0
0077: 	=trpn 0
0079: 	f \CHnum\ {
0080: 		>f 1
0081: 		=trpd .nb
0082: 		>b 1
0083: 		c (\trpd\ & 0x80) == 0 {
0084: 			=trpn (\trpd\&3)+1
0086: 			c (\trpd\ & 4) != 0 {
0087: 				=trpn \trpn\+3
0088: 			}
0090: 			! > sHeaderSFX: .db, .db, .dw, .db, .db{
0091: 				~£_FM\trpn\ :2
0092: 			}
0094: 		}{
0095: 			=trpn ((\trpd\&0x60)>>5)+1
0096: 			! > sHeaderSFX: .db, .db, .dw, .db, .db{
0097: 				~£_PSG\trpn\ :2
0098: 			}
0099: 		}
0101: 	}
0103: 	/£_FM? ?note ?comm
0104: 	/£_PSG? ?note ?comm
0105: 	/£_Patches >patch
0106: }
0108: ?patch {
0109: 	=num 0
0110: 	=b1 0
0111: 	=b2 0
0112: 	=b3 0
0113: 	=b4 0
0114: 	f (.an-.pc)/25 {
0115: 		%\n\t; Patch {$2!\num\}\r\n\t; {$2!.db}\r\n\t; {$2!.db}, {$2!.db}, {$2!.db}, {$2!.db},\t{$2!.db}, {$2!.db}, {$2!.db}, {$2!.db}\r\n\t; {$2!.db}, {$2!.db}, {$2!.db}, {$2!.db},\t{$2!.db}, {$2!.db}, {$2!.db}, {$2!.db}\r\n\t; {$2!.db}, {$2!.db}, {$2!.db}, {$2!.db},\t{$2!.db}, {$2!.db}, {$2!.db}, {$2!.db}
0116: 		>b 25
0117: 		! > spAlgorithm: .nb&0x7;
0118: 		! > spFeedback: (.db&0x38)>>3;
0119: 		=b1 .db
0120: 		=b3 .db
0121: 		=b2 .db
0122: 		=b4 .db
0123: 		! > spDetune: (\b1\&0xF0)>>4, (\b2\&0xF0)>>4, (\b3\&0xF0)>>4, (\b4\&0xF0)>>4;
0124: 		! > spMultiple: \b1\&0xF, \b2\&0xF, \b3\&0xF, \b4\&0xF;
0125: 		=b1 .db
0126: 		=b3 .db
0127: 		=b2 .db
0128: 		=b4 .db
0129: 		! > spRateScale: (\b1\&0xC0)>>6, (\b2\&0xC0)>>6, (\b3\&0xC0)>>6, (\b4\&0xC0)>>6;
0130: 		! > spAttackRt: \b1\&0x1F, \b2\&0x1F, \b3\&0x1F, \b4\&0x1F;
0131: 		=b1 .db
0132: 		=b3 .db
0133: 		=b2 .db
0134: 		=b4 .db
0135: 		! > spAmpMod: (\b1\&0x80)>>7, (\b2\&0x80)>>7, (\b3\&0x80)>>7, (\b4\&0x80)>>7;
0136: 		! > spSustainRt: \b1\&0x1F, \b2\&0x1F, \b3\&0x1F, \b4\&0x1F;
0137: 		=d1 .db
0138: 		=d3 .db
0139: 		=d2 .db
0140: 		=d4 .db
0141: 		=b1 .db
0142: 		=b3 .db
0143: 		=b2 .db
0144: 		=b4 .db
0145: 		! > spSustainLv: (\b1\&0xF0)>>4, (\b2\&0xF0)>>4, (\b3\&0xF0)>>4, (\b4\&0xF0)>>4;
0146: 		! > spDecayRt: \d1\, \d2\, \d3\, \d4\;
0147: 		! > spReleaseRt: \b1\&0xF, \b2\&0xF, \b3\&0xF, \b4\&0xF;
0148: 		=b1 .db
0149: 		=b3 .db
0150: 		=b2 .db
0151: 		! > spTotalLv: \b1\&0x7F, \b2\&0x7F, \b3\&0x7F, .db&0x7F;
0152: 		=num \num\+1
0153: 	}
0155: 	c (.an-.pc)==1 {
0156: 		!0 > even: ;
0157: 	}
0158: }
0160: ?volenv {
0161: 	=v00 0
0162: 	=v01 1
0163: 	=v02 2
0164: 	=v03 3
0165: 	=v04 4
0166: 	=v05 5
0167: 	=v06 6
0168: 	=v07 7
0169: 	=v08 8
0170: 	=v09 9
0171: }
0173: ?DAC {
0174: 	=nRst 0x80
0175: 	=dKick 0x81
0176: 	=dSnare 0x82
0177: 	=dTimpani 0x83
0178: 	=dHiTimpani 0x88
0179: 	=dMidTimpani 0x89
0180: 	=dLowTimpani 0x8A
0181: 	=dFloorTimpani 0x8B
0182: }
0184: --; macro: parse another file '..\SMPS\SMPS default notes.smpss' (102 lines)
--------------------------------------------------------------------------------
0005: ?note {
0006: 	=nRst 0x80
0007: 	=nC0 0x81
0008: 	=nCs0 0x82
0009: 	=nD0 0x83
0010: 	=nEb0 0x84
0011: 	=nE0 0x85
0012: 	=nF0 0x86
0013: 	=nFs0 0x87
0014: 	=nG0 0x88
0015: 	=nAb0 0x89
0016: 	=nA0 0x8A
0017: 	=nBb0 0x8B
0018: 	=nB0 0x8C
0019: 	=nC1 0x8D
0020: 	=nCs1 0x8E
0021: 	=nD1 0x8F
0022: 	=nEb1 0x90
0023: 	=nE1 0x91
0024: 	=nF1 0x92
0025: 	=nFs1 0x93
0026: 	=nG1 0x94
0027: 	=nAb1 0x95
0028: 	=nA1 0x96
0029: 	=nBb1 0x97
0030: 	=nB1 0x98
0031: 	=nC2 0x99
0032: 	=nCs2 0x9A
0033: 	=nD2 0x9B
0034: 	=nEb2 0x9C
0035: 	=nE2 0x9D
0036: 	=nF2 0x9E
0037: 	=nFs2 0x9F
0038: 	=nG2 0xA0
0039: 	=nAb2 0xA1
0040: 	=nA2 0xA2
0041: 	=nBb2 0xA3
0042: 	=nB2 0xA4
0043: 	=nC3 0xA5
0044: 	=nCs3 0xA6
0045: 	=nD3 0xA7
0046: 	=nEb3 0xA8
0047: 	=nE3 0xA9
0048: 	=nF3 0xAA
0049: 	=nFs3 0xAB
0050: 	=nG3 0xAC
0051: 	=nAb3 0xAD
0052: 	=nA3 0xAE
0053: 	=nBb3 0xAF
0054: 	=nB3 0xB0
0055: 	=nC4 0xB1
0056: 	=nCs4 0xB2
0057: 	=nD4 0xB3
0058: 	=nEb4 0xB4
0059: 	=nE4 0xB5
0060: 	=nF4 0xB6
0061: 	=nFs4 0xB7
0062: 	=nG4 0xB8
0063: 	=nAb4 0xB9
0064: 	=nA4 0xBA
0065: 	=nBb4 0xBB
0066: 	=nB4 0xBC
0067: 	=nC5 0xBD
0068: 	=nCs5 0xBE
0069: 	=nD5 0xBF
0070: 	=nEb5 0xC0
0071: 	=nE5 0xC1
0072: 	=nF5 0xC2
0073: 	=nFs5 0xC3
0074: 	=nG5 0xC4
0075: 	=nAb5 0xC5
0076: 	=nA5 0xC6
0077: 	=nBb5 0xC7
0078: 	=nB5 0xC8
0079: 	=nC6 0xC9
0080: 	=nCs6 0xCA
0081: 	=nD6 0xCB
0082: 	=nEb6 0xCC
0083: 	=nE6 0xCD
0084: 	=nF6 0xCE
0085: 	=nFs6 0xCF
0086: 	=nG6 0xD0
0087: 	=nAb6 0xD1
0088: 	=nA6 0xD2
0089: 	=nBb6 0xD3
0090: 	=nB6 0xD4
0091: 	=nC7 0xD5
0092: 	=nCs7 0xD6
0093: 	=nD7 0xD7
0094: 	=nEb7 0xD8
0095: 	=nE7 0xD9
0096: 	=nF7 0xDA
0097: 	=nFs7 0xDB
0098: 	=nG7 0xDC
0099: 	=nAb7 0xDD
0100: 	=nA7 0xDE
0101: 	=nBb7 0xDF
0102: }
--------------------------------------------------------------------------------
0184: --; return to previous file
0186: ?comm {
0187: 	!0xE0 > sPan: .db & 0xC0, .lb & 0x3F{
0188: 		:? 0 {
0189: 			=spNone 0x00
0190: 			=spRight 0x40
0191: 			=spLeft 0x80
0192: 			=spCenter 0xC0
0193: 		}
0195: 		c .n1 == 0 {
0196: 			:- 1
0197: 			}
0198: 		}
0199: 		!0xE1 > ssDetune: .db;
0200: 		!0xE2 > sComm: .db;
0201: 		!0xE3 > sRet: {
0202: 			;
0203: 		}
0204: 		!0xE4 > sFade: {
0205: 			;
0206: 		}
0207: 		!0xE5 > ssTickMulCh: .db;
0208: 		!0xE6 > saVolFM: .db;
0209: 		=sHold 0xE7
0210: 		!0xE8 > sNoteTimeOut: .db;
0211: 		!0xE9 > saTranspose: .db;
0212: 		!0xEA > ssTempo: .db;
0213: 		!0xEB > ssTickMul: .db;
0214: 		!0xEC > saVolPSG: .db;
0215: 		!0xED > sClrPush: ;
0216: 		!0xEE > sStopSpecFM4: {
0217: 			;
0218: 		}
0219: 		!0xEF > sPatFM: .db;
0220: 		!0xF0 > ssMod68k: .db, .db, .db, .db;
0221: 		!0xF1 > sModOn: ;
0222: 		!0xF2 > sStop: {
0223: 			;
0224: 		}
0225: 		!0xF3 > sNoisePSG: .db;
0226: 		!0xF4 > sModOff: ;
0227: 		!0xF5 > sVolEnvPSG: .db{
0228: 			:? 0 {
0229: 				?volenv;
0230: 			}
0231: 		}
0232: 		!0xF6 > sJump: .ow{
0233: 			~£_Jump? :0
0234: 			;
0235: 		}
0236: 		!0xF7 > sLoop: .db, .db, .ow{
0237: 			~£_Loop? :2
0238: 		}
0239: 		!0xF8 > sCall: .ow{
0240: 			~£_Call? :0
0241: 		}
0242: 		!0xF9 > sMuteFM1: ;
0243: 	}
--------------------------------------------------------------------------------
Prepare conversion
--------------------------------------------------------------------------------
--> Start conversion with subscript ''
$0000 EQU0 0:   	=type '' 
$0000 CON5 5:   	c ('\type\' != 'voice') && ('\type\' != 'sfx') && ('\type\' != '') && ('\type\' != 'music') (false)
$0000 EQU11 11:   	=endian 'big' big
$0000 EQU12 12:   	=offset 0 0
$0000 CON14 14:   	c '\type\' == 'voice' (false)
$0000 CON20 20:   	c '\type\' == 'sfx' (false)
$0000 EXE23 23:   	/
--> InitConvertVars: endian=big offset=$0000
--:  $0000 LUT=False run=True
$0000 MAC27 27:   	! > sHeaderInit
$0000 LAC28 28:   	~Maniax_Header .of $0000
$0000 MAC31 31:   	! > sHeaderPatch: $1B4
$0002 LAM32 32:   	~Maniax_Patches :0 $01B4
$0003 EQU35 35:   	=FMnum .db 6
$0003 EQU36 36:   	=PSGnum .nb 3
$0003 MAC37 37:   	! > sHeaderCh: $06, $03
$0004 MAC38 38:   	! > sHeaderTempo: $01, $08
$0006 MAC39 39:   	! > sHeaderDAC: $166
$0008 LAM40 40:   	~Maniax_DAC :0 $0166
--! ERROR IN EXPRESSION: 
--! INITIAL EXPRESSION: .sw
--! System.ArgumentException: Expression can't be empty
Parameter name: expression
   at NCalc.Expression..ctor(String expression, EvaluateOptions options)
   at SMPS2ASMv2.Parse.ParseNumber(String s, Nullable`1 lnun)
$000A OPR43 43:   	$.sw 
$000A REP44 44:   	f 5 {
$000A MAC45 45:   	! > sHeaderFM: $32, $F4, $11
$000E LAM46 46:   	~Maniax_FM1 :0 $0032
$000E MAC45 45:   	! > sHeaderFM: $9D, $F4, $07
$0012 LAM46 46:   	~Maniax_FM2 :0 $009D
$0012 MAC45 45:   	! > sHeaderFM: $EB, $E8, $0F
$0016 LAM46 46:   	~Maniax_FM3 :0 $00EB
$0016 MAC45 45:   	! > sHeaderFM: $11E, $E8, $0F
$001A LAM46 46:   	~Maniax_FM4 :0 $011E
$001A MAC45 45:   	! > sHeaderFM: $30, $F4, $11
$001E LAM46 46:   	~Maniax_FM5 :0 $0030
$001E REP50 50:   	f 3 {
$001E MAC51 51:   	! > sHeaderPSG: $151, $D0, $05, $00, $05
$0024 LAM52 52:   	~Maniax_PSG1 :0 $0151
$0024 AGM53 53:   	:?4 $05 $0024
--> InitConvertVars: endian=big offset=$0000
--:  $0000 LUT=True run=False
$0000 True 166:   	v05 $05
$0024 MAC51 51:   	! > sHeaderPSG: $151, $DC, $05, $00, $05
$002A LAM52 52:   	~Maniax_PSG1 :0 NULL
$002A AGM53 53:   	:?4 $05 $002A
--> InitConvertVars: endian=big offset=$0000
--:  $0000 LUT=True run=False
$0000 True 166:   	v05 $05
$002A MAC51 51:   	! > sHeaderPSG: $152, $00, $03, $00, $04
$0030 LAM52 52:   	~Maniax_PSG2 :0 $0152
$0030 AGM53 53:   	:?4 $04 $0030
--> InitConvertVars: endian=big offset=$0000
--:  $0000 LUT=True run=False
$0000 True 165:   	v04 $04
$0030 EXE59 59:   	/£_FM?
--> InitConvertVars: endian=big offset=$0000
--: Maniax_FM1 $0032 LUT=True run=True
$0033 MAC219 219:   	!$EF > sPatFM: $00
$0034 False 6:   	nRst $80
$0036 False 6:   	nRst $80
$0038 False 80:   	nCs6 $CA
$003A False 6:   	nRst $80
$003C False 80:   	nCs6 $CA
$003E False 6:   	nRst $80
$003F False 81:   	nD6 $CB
$0041 False 6:   	nRst $80
$0043 False 78:   	nB5 $C8
$0045 False 6:   	nRst $80
$0047 False 80:   	nCs6 $CA
$0049 False 6:   	nRst $80
$004A False 80:   	nCs6 $CA
$004B False 6:   	nRst $80
$004C False 80:   	nCs6 $CA
$004D False 6:   	nRst $80
$004E False 76:   	nA5 $C6
$004F False 6:   	nRst $80
$0050 False 74:   	nG5 $C4
$0052 False 6:   	nRst $80
$0054 False 78:   	nB5 $C8
$0056 False 6:   	nRst $80
$0058 False 6:   	nRst $80
$005A False 80:   	nCs6 $CA
$005C False 6:   	nRst $80
$005E False 80:   	nCs6 $CA
$0060 False 6:   	nRst $80
$0061 False 81:   	nD6 $CB
$0063 False 6:   	nRst $80
$0065 False 78:   	nB5 $C8
$0067 False 6:   	nRst $80
$0069 False 80:   	nCs6 $CA
$006B False 6:   	nRst $80
$006C False 80:   	nCs6 $CA
$006D False 6:   	nRst $80
$006E False 80:   	nCs6 $CA
$006F False 6:   	nRst $80
$0070 False 76:   	nA5 $C6
$0071 False 6:   	nRst $80
$0072 False 74:   	nG5 $C4
$0074 False 6:   	nRst $80
$0076 False 78:   	nB5 $C8
$0078 False 6:   	nRst $80
$007B MAC208 208:   	!$E6 > saVolFM: $FD
$007C False 6:   	nRst $80
$007E False 6:   	nRst $80
$007F False 76:   	nA5 $C6
$0081 False 78:   	nB5 $C8
$0082 False 80:   	nCs6 $CA
$0083 False 81:   	nD6 $CB
$0084 False 83:   	nE6 $CD
$0085 False 85:   	nFs6 $CF
$0086 False 78:   	nB5 $C8
$0087 False 80:   	nCs6 $CA
$0088 False 82:   	nEb6 $CC
$0089 False 83:   	nE6 $CD
$008A False 85:   	nFs6 $CF
$008B False 87:   	nAb6 $D1
$008C False 80:   	nCs6 $CA
$008D False 82:   	nEb6 $CC
$008E False 84:   	nF6 $CE
$008F False 85:   	nFs6 $CF
$0090 False 87:   	nAb6 $D1
$0091 False 89:   	nBb6 $D3
$0092 False 84:   	nF6 $CE
$0093 False 85:   	nFs6 $CF
$0094 False 87:   	nAb6 $D1
$0095 False 89:   	nBb6 $D3
$0096 False 91:   	nC7 $D5
$0097 False 92:   	nCs7 $D6
$0099 MAC208 208:   	!$E6 > saVolFM: $03
$009B MAC232 232:   	!$F6 > sJump: $36
$009D LAM233 233:   	~Maniax_Jump1 :0 $0036
$009D STP234 234:   	;
--: Maniax_FM2 $009D LUT=True run=True
$009E MAC200 200:   	!$E2 > sComm: $01
$00A0 MAC219 219:   	!$EF > sPatFM: $01
$00A1 False 6:   	nRst $80
$00A3 False 52:   	nA3 $AE
$00A5 False 6:   	nRst $80
$00A6 False 52:   	nA3 $AE
$00A7 False 6:   	nRst $80
$00A8 False 47:   	nE3 $A9
$00A9 False 6:   	nRst $80
$00AA False 47:   	nE3 $A9
$00AB False 6:   	nRst $80
$00AC False 50:   	nG3 $AC
$00AE False 49:   	nFs3 $AB
$00B0 False 50:   	nG3 $AC
$00B2 False 49:   	nFs3 $AB
$00B4 False 52:   	nA3 $AE
$00B6 False 6:   	nRst $80
$00B7 False 52:   	nA3 $AE
$00B8 False 6:   	nRst $80
$00B9 False 47:   	nE3 $A9
$00BA False 6:   	nRst $80
$00BB False 47:   	nE3 $A9
$00BC False 6:   	nRst $80
$00BD False 57:   	nD4 $B3
$00BF False 56:   	nCs4 $B2
$00C1 False 57:   	nD4 $B3
$00C3 False 56:   	nCs4 $B2
$00C6 MAC236 236:   	!$F7 > sLoop: $00, $02, $A3
$00CA LAM237 237:   	~Maniax_Loop1 :2 $00A3
$00CA False 42:   	nB2 $A4
$00CC False 38:   	nG2 $A0
$00CE False 40:   	nA2 $A2
$00D0 False 6:   	nRst $80
$00D1 False 42:   	nB2 $A4
$00D2 False 6:   	nRst $80
$00D4 MAC236 236:   	!$F7 > sLoop: $00, $02, $CA
$00D8 LAM237 237:   	~Maniax_Loop2 :2 $00CA
$00D8 False 40:   	nA2 $A2
$00DA False 42:   	nB2 $A4
$00DB False 44:   	nCs3 $A6
$00DC False 46:   	nEb3 $A8
$00DD False 42:   	nB2 $A4
$00DF False 44:   	nCs3 $A6
$00E0 False 46:   	nEb3 $A8
$00E1 False 48:   	nF3 $AA
$00E2 False 44:   	nCs3 $A6
$00E3 False 46:   	nEb3 $A8
$00E4 False 48:   	nF3 $AA
$00E5 False 49:   	nFs3 $AB
$00E7 MAC200 200:   	!$E2 > sComm: $01
$00E9 MAC232 232:   	!$F6 > sJump: $A3
$00EB LAM233 233:   	~Maniax_Loop1 :0 NULL
$00EB STP234 234:   	;
--: Maniax_FM3 $00EB LUT=True run=True
$00EC MAC219 219:   	!$EF > sPatFM: $00
$00ED False 6:   	nRst $80
$00EF False 83:   	nE6 $CD
$00F1 False 6:   	nRst $80
$00F2 False 83:   	nE6 $CD
$00F3 False 6:   	nRst $80
$00F4 False 80:   	nCs6 $CA
$00F5 False 6:   	nRst $80
$00F6 False 80:   	nCs6 $CA
$00F7 False 6:   	nRst $80
$00F8 False 81:   	nD6 $CB
$00FA False 81:   	nD6 $CB
$00FC False 83:   	nE6 $CD
$00FE False 6:   	nRst $80
$00FF False 83:   	nE6 $CD
$0100 False 6:   	nRst $80
$0101 False 80:   	nCs6 $CA
$0102 False 6:   	nRst $80
$0103 False 80:   	nCs6 $CA
$0104 False 6:   	nRst $80
$0105 False 86:   	nG6 $D0
$0107 False 86:   	nG6 $D0
$010A MAC236 236:   	!$F7 > sLoop: $00, $02, $EF
$010E LAM237 237:   	~Maniax_Loop3 :2 $00EF
$010E False 6:   	nRst $80
$0110 False 74:   	nG5 $C4
$0112 False 76:   	nA5 $C6
$0114 False 6:   	nRst $80
$0117 MAC236 236:   	!$F7 > sLoop: $00, $04, $10E
$011B LAM237 237:   	~Maniax_Loop4 :2 $010E
$011C MAC232 232:   	!$F6 > sJump: $EF
$011E LAM233 233:   	~Maniax_Loop3 :0 NULL
$011E STP234 234:   	;
--: Maniax_FM4 $011E LUT=True run=True
$011F MAC219 219:   	!$EF > sPatFM: $00
$0120 False 6:   	nRst $80
$0122 False 80:   	nCs6 $CA
$0124 False 6:   	nRst $80
$0125 False 80:   	nCs6 $CA
$0126 False 6:   	nRst $80
$0127 False 76:   	nA5 $C6
$0128 False 6:   	nRst $80
$0129 False 76:   	nA5 $C6
$012A False 6:   	nRst $80
$012B False 78:   	nB5 $C8
$012D False 78:   	nB5 $C8
$012F False 80:   	nCs6 $CA
$0131 False 6:   	nRst $80
$0132 False 80:   	nCs6 $CA
$0133 False 6:   	nRst $80
$0134 False 76:   	nA5 $C6
$0135 False 6:   	nRst $80
$0136 False 76:   	nA5 $C6
$0137 False 6:   	nRst $80
$0138 False 81:   	nD6 $CB
$013A False 81:   	nD6 $CB
$013D MAC236 236:   	!$F7 > sLoop: $00, $02, $122
$0141 LAM237 237:   	~Maniax_Loop5 :2 $0122
$0141 False 6:   	nRst $80
$0143 False 78:   	nB5 $C8
$0145 False 80:   	nCs6 $CA
$0147 False 6:   	nRst $80
$014A MAC236 236:   	!$F7 > sLoop: $00, $04, $141
$014E LAM237 237:   	~Maniax_Loop6 :2 $0141
$014F MAC232 232:   	!$F6 > sJump: $122
$0151 LAM233 233:   	~Maniax_Loop5 :0 NULL
$0151 STP234 234:   	;
--: Maniax_FM5 $0030 LUT=True run=True
$0031 MAC199 199:   	!$E1 > ssDetune: $03
$0033 MAC219 219:   	!$EF > sPatFM: $00
$0034 False 6:   	nRst $80
$0036 False 6:   	nRst $80
$0038 False 80:   	nCs6 $CA
$003A False 6:   	nRst $80
$003C False 80:   	nCs6 $CA
$003E False 6:   	nRst $80
$003F False 81:   	nD6 $CB
$0041 False 6:   	nRst $80
$0043 False 78:   	nB5 $C8
$0045 False 6:   	nRst $80
$0047 False 80:   	nCs6 $CA
$0049 False 6:   	nRst $80
$004A False 80:   	nCs6 $CA
$004B False 6:   	nRst $80
$004C False 80:   	nCs6 $CA
$004D False 6:   	nRst $80
$004E False 76:   	nA5 $C6
$004F False 6:   	nRst $80
$0050 False 74:   	nG5 $C4
$0052 False 6:   	nRst $80
$0054 False 78:   	nB5 $C8
$0056 False 6:   	nRst $80
$0058 False 6:   	nRst $80
$005A False 80:   	nCs6 $CA
$005C False 6:   	nRst $80
$005E False 80:   	nCs6 $CA
$0060 False 6:   	nRst $80
$0061 False 81:   	nD6 $CB
$0063 False 6:   	nRst $80
$0065 False 78:   	nB5 $C8
$0067 False 6:   	nRst $80
$0069 False 80:   	nCs6 $CA
$006B False 6:   	nRst $80
$006C False 80:   	nCs6 $CA
$006D False 6:   	nRst $80
$006E False 80:   	nCs6 $CA
$006F False 6:   	nRst $80
$0070 False 76:   	nA5 $C6
$0071 False 6:   	nRst $80
$0072 False 74:   	nG5 $C4
$0074 False 6:   	nRst $80
$0076 False 78:   	nB5 $C8
$0078 False 6:   	nRst $80
$007B MAC208 208:   	!$E6 > saVolFM: $FD
$007C False 6:   	nRst $80
$007E False 6:   	nRst $80
$007F False 76:   	nA5 $C6
$0081 False 78:   	nB5 $C8
$0082 False 80:   	nCs6 $CA
$0083 False 81:   	nD6 $CB
$0084 False 83:   	nE6 $CD
$0085 False 85:   	nFs6 $CF
$0086 False 78:   	nB5 $C8
$0087 False 80:   	nCs6 $CA
$0088 False 82:   	nEb6 $CC
$0089 False 83:   	nE6 $CD
$008A False 85:   	nFs6 $CF
$008B False 87:   	nAb6 $D1
$008C False 80:   	nCs6 $CA
$008D False 82:   	nEb6 $CC
$008E False 84:   	nF6 $CE
$008F False 85:   	nFs6 $CF
$0090 False 87:   	nAb6 $D1
$0091 False 89:   	nBb6 $D3
$0092 False 84:   	nF6 $CE
$0093 False 85:   	nFs6 $CF
$0094 False 87:   	nAb6 $D1
$0095 False 89:   	nBb6 $D3
$0096 False 91:   	nC7 $D5
$0097 False 92:   	nCs7 $D6
$0099 MAC208 208:   	!$E6 > saVolFM: $03
$009B MAC232 232:   	!$F6 > sJump: $36
$009D LAM233 233:   	~Maniax_Jump1 :0 NULL
$009D STP234 234:   	;
$009D EXE60 60:   	/£_PSG?
--> InitConvertVars: endian=big offset=$0000
--: Maniax_PSG1 $0151 LUT=True run=True
$0152 MAC222 222:   	!$F2 > sStop
$0152 STP223 223:   	;
--: Maniax_PSG2 $0152 LUT=True run=True
$0153 MAC225 225:   	!$F3 > sNoisePSG: $E7
$0154 False 6:   	nRst $80
$0157 MAC210 210:   	!$E8 > sNoteTimeOut: $03
$0158 False 76:   	nA5 $C6
$015B MAC210 210:   	!$E8 > sNoteTimeOut: $0C
$015E MAC210 210:   	!$E8 > sNoteTimeOut: $03
$0161 MAC210 210:   	!$E8 > sNoteTimeOut: $0C
$0164 MAC232 232:   	!$F6 > sJump: $156
$0166 LAM233 233:   	~Maniax_Jump2 :0 $0156
$0166 STP234 234:   	;
$0166 EXE61 61:   	/£_DAC
--> InitConvertVars: endian=big offset=$0000
--: Maniax_DAC $0166 LUT=True run=True
$0166 False 176:   	dSnare $82
$0168 False 176:   	dSnare $82
$0169 False 176:   	dSnare $82
$016A False 176:   	dSnare $82
$016B False 176:   	dSnare $82
$016D False 176:   	dSnare $82
$016F False 175:   	dKick $81
$0171 False 175:   	dKick $81
$0173 False 176:   	dSnare $82
$0174 False 175:   	dKick $81
$0175 False 176:   	dSnare $82
$0176 False 175:   	dKick $81
$0178 False 176:   	dSnare $82
$0179 False 175:   	dKick $81
$017A False 176:   	dSnare $82
$017B False 175:   	dKick $81
$017D False 176:   	dSnare $82
$017E False 175:   	dKick $81
$017F False 176:   	dSnare $82
$0180 False 175:   	dKick $81
$0182 False 176:   	dSnare $82
$0183 False 175:   	dKick $81
$0185 False 174:   	nRst $80
$0186 False 176:   	dSnare $82
$0187 False 176:   	dSnare $82
$018A MAC236 236:   	!$F7 > sLoop: $00, $02, $171
$018E LAM237 237:   	~Maniax_Loop7 :2 $0171
$018E False 175:   	dKick $81
$0190 False 176:   	dSnare $82
$0192 False 175:   	dKick $81
$0194 False 176:   	dSnare $82
$0195 False 176:   	dSnare $82
$0197 False 175:   	dKick $81
$0199 False 175:   	dKick $81
$019B False 176:   	dSnare $82
$019C False 176:   	dSnare $82
$019E False 175:   	dKick $81
$01A0 False 175:   	dKick $81
$01A2 False 176:   	dSnare $82
$01A3 False 176:   	dSnare $82
$01A5 False 176:   	dSnare $82
$01A6 False 176:   	dSnare $82
$01A7 False 176:   	dSnare $82
$01A8 False 176:   	dSnare $82
$01A9 False 176:   	dSnare $82
$01AA False 176:   	dSnare $82
$01AB False 176:   	dSnare $82
$01AC False 176:   	dSnare $82
$01AD False 176:   	dSnare $82
$01AE False 176:   	dSnare $82
$01AF False 176:   	dSnare $82
$01B1 MAC232 232:   	!$F6 > sJump: $171
$01B3 LAM233 233:   	~Maniax_Loop7 :0 NULL
$01B3 STP234 234:   	;
$01B3 EXE62 62:   	/£_Patches
--> InitConvertVars: endian=big offset=$0000
--: Maniax_Patches $01B4 LUT=False run=True
$01B4 EQU109 109:   	=num 0 0
$01B4 EQU110 110:   	=b1 0 0
$01B4 EQU111 111:   	=b2 0 0
$01B4 EQU112 112:   	=b3 0 0
$01B4 EQU113 113:   	=b4 0 0
$01B4 REP114 114:   	f 2 {
$01CD COM115 115:   	%\n\t; Patch $00\r\n\t; $3A\r\n\t; $01, $07, $01, $01,\t$8E, $8E, $8D, $53\r\n\t; $0E, $0E, $0E, $03,\t$00, $00, $00, $00\r\n\t; $1F, $FF, $1F, $0F,\t$18, $28, $27, $80
$01CD GOT116 116:   	>b 25 -> $01B4
$01B4 MAC117 117:   	! > spAlgorithm: $02
$01B4 MAC118 118:   	! > spFeedback: $07
$01B6 EQU119 119:   	=b1 .db 1
$01B7 EQU120 120:   	=b3 .db 7
$01B8 EQU121 121:   	=b2 .db 1
$01B9 EQU122 122:   	=b4 .db 1
$01B9 MAC123 123:   	! > spDetune: $00, $00, $00, $00
$01B9 MAC124 124:   	! > spMultiple: $01, $01, $07, $01
$01BA EQU125 125:   	=b1 .db 142
$01BB EQU126 126:   	=b3 .db 142
$01BC EQU127 127:   	=b2 .db 141
$01BD EQU128 128:   	=b4 .db 83
$01BD MAC129 129:   	! > spRateScale: $02, $02, $02, $01
$01BD MAC130 130:   	! > spAttackRt: $0E, $0D, $0E, $13
$01BE EQU131 131:   	=b1 .db 14
$01BF EQU132 132:   	=b3 .db 14
$01C0 EQU133 133:   	=b2 .db 14
$01C1 EQU134 134:   	=b4 .db 3
$01C1 MAC135 135:   	! > spAmpMod: $00, $00, $00, $00
$01C1 MAC136 136:   	! > spSustainRt: $0E, $0E, $0E, $03
$01C2 EQU137 137:   	=d1 .db 0
$01C3 EQU138 138:   	=d3 .db 0
$01C4 EQU139 139:   	=d2 .db 0
$01C5 EQU140 140:   	=d4 .db 0
$01C6 EQU141 141:   	=b1 .db 31
$01C7 EQU142 142:   	=b3 .db 255
$01C8 EQU143 143:   	=b2 .db 31
$01C9 EQU144 144:   	=b4 .db 15
$01C9 MAC145 145:   	! > spSustainLv: $01, $01, $0F, $00
$01C9 MAC146 146:   	! > spDecayRt: $00, $00, $00, $00
$01C9 MAC147 147:   	! > spReleaseRt: $0F, $0F, $0F, $0F
$01CA EQU148 148:   	=b1 .db 24
$01CB EQU149 149:   	=b3 .db 40
$01CC EQU150 150:   	=b2 .db 39
$01CC MAC151 151:   	! > spTotalLv: $18, $27, $28, $00
$01CD EQU152 152:   	=num \num\+1 1
$01E6 COM115 115:   	%\n\t; Patch $01\r\n\t; $3A\r\n\t; $61, $3C, $14, $31,\t$9C, $DB, $9C, $DA\r\n\t; $04, $09, $04, $03,\t$03, $01, $03, $00\r\n\t; $1F, $0F, $0F, $AF,\t$21, $47, $31, $80
$01E6 GOT116 116:   	>b 25 -> $01CD
$01CD MAC117 117:   	! > spAlgorithm: $02
$01CD MAC118 118:   	! > spFeedback: $07
$01CF EQU119 119:   	=b1 .db 97
$01D0 EQU120 120:   	=b3 .db 60
$01D1 EQU121 121:   	=b2 .db 20
$01D2 EQU122 122:   	=b4 .db 49
$01D2 MAC123 123:   	! > spDetune: $06, $01, $03, $03
$01D2 MAC124 124:   	! > spMultiple: $01, $04, $0C, $01
$01D3 EQU125 125:   	=b1 .db 156
$01D4 EQU126 126:   	=b3 .db 219
$01D5 EQU127 127:   	=b2 .db 156
$01D6 EQU128 128:   	=b4 .db 218
$01D6 MAC129 129:   	! > spRateScale: $02, $02, $03, $03
$01D6 MAC130 130:   	! > spAttackRt: $1C, $1C, $1B, $1A
$01D7 EQU131 131:   	=b1 .db 4
$01D8 EQU132 132:   	=b3 .db 9
$01D9 EQU133 133:   	=b2 .db 4
$01DA EQU134 134:   	=b4 .db 3
$01DA MAC135 135:   	! > spAmpMod: $00, $00, $00, $00
$01DA MAC136 136:   	! > spSustainRt: $04, $04, $09, $03
$01DB EQU137 137:   	=d1 .db 3
$01DC EQU138 138:   	=d3 .db 1
$01DD EQU139 139:   	=d2 .db 3
$01DE EQU140 140:   	=d4 .db 0
$01DF EQU141 141:   	=b1 .db 31
$01E0 EQU142 142:   	=b3 .db 15
$01E1 EQU143 143:   	=b2 .db 15
$01E2 EQU144 144:   	=b4 .db 175
$01E2 MAC145 145:   	! > spSustainLv: $01, $00, $00, $0A
$01E2 MAC146 146:   	! > spDecayRt: $03, $03, $01, $00
$01E2 MAC147 147:   	! > spReleaseRt: $0F, $0F, $0F, $0F
$01E3 EQU148 148:   	=b1 .db 33
$01E4 EQU149 149:   	=b3 .db 71
$01E5 EQU150 150:   	=b2 .db 49
$01E5 MAC151 151:   	! > spTotalLv: $21, $31, $47, $00
$01E6 EQU152 152:   	=num \num\+1 2
$01E6 CON155 155:   	c (.an-.pc)==1 (false)
--------------------------------------------------------------------------------
--; Prepare output to G:\Hacking\Tools\16bit\Gens\Sonic\Music\Preview\MDMusicPlayer.1.1\music\Mus87 - Invincibility.asm
--------------------------------------------------------------------------------
$0000: Maniax_Header:
$0000: 	sHeaderInit
$0000: 	sHeaderPatch	Maniax_Patches
$0003: 	sHeaderCh	$06, $03
$0004: 	sHeaderTempo	$01, $08
$0006: 	sHeaderDAC	Maniax_DAC
$000A: 	sHeaderFM	Maniax_FM1, $F4, $11
$000E: 	sHeaderFM	Maniax_FM2, $F4, $07
$0012: 	sHeaderFM	Maniax_FM3, $E8, $0F
$0016: 	sHeaderFM	Maniax_FM4, $E8, $0F
$001A: 	sHeaderFM	Maniax_FM5, $F4, $11
$001E: 	sHeaderPSG	Maniax_PSG1, $D0, $05, $00, v05
$0024: 	sHeaderPSG	Maniax_PSG1, $DC, $05, $00, v05
$002A: 	sHeaderPSG	Maniax_PSG2, $00, $03, $00, v04
$0030: Maniax_FM5:
$0030: 	ssDetune	$03
$0032: Maniax_FM1:
$0032: 	sPatFM		$00
--& nRst
--& $30
$0036: 	dc.b nRst, $30
$0036: Maniax_Jump1:
--& nRst
--& $0C
--& nCs6
--& $15
--& nRst
--& $03
--& nCs6
--& $06
$003D: 	dc.b nRst, $0C, nCs6, $15, nRst, $03, nCs6, $06
--& nRst
--& nD6
--& $0F
--& nRst
--& $03
--& nB5
--& $18
--& nRst
$0045: 	dc.b nRst, nD6, $0F, nRst, $03, nB5, $18, nRst
--& $06
--& nCs6
--& $06
--& nRst
--& nCs6
--& nRst
--& nCs6
--& nRst
$004D: 	dc.b $06, nCs6, $06, nRst, nCs6, nRst, nCs6, nRst
--& nA5
--& nRst
--& nG5
--& $0F
--& nRst
--& $03
--& nB5
--& $18
$0055: 	dc.b nA5, nRst, nG5, $0F, nRst, $03, nB5, $18
--& nRst
--& $06
--& nRst
--& $0C
--& nCs6
--& $15
--& nRst
--& $03
$005D: 	dc.b nRst, $06, nRst, $0C, nCs6, $15, nRst, $03
--& nCs6
--& $06
--& nRst
--& nD6
--& $0F
--& nRst
--& $03
--& nB5
$0065: 	dc.b nCs6, $06, nRst, nD6, $0F, nRst, $03, nB5
--& $18
--& nRst
--& $06
--& nCs6
--& $06
--& nRst
--& nCs6
--& nRst
$006D: 	dc.b $18, nRst, $06, nCs6, $06, nRst, nCs6, nRst
--& nCs6
--& nRst
--& nA5
--& nRst
--& nG5
--& $0F
--& nRst
--& $03
$0075: 	dc.b nCs6, nRst, nA5, nRst, nG5, $0F, nRst, $03
--& nB5
--& $18
--& nRst
--& $06
$007A: 	dc.b nB5, $18, nRst, $06
$007A: 	saVolFM		$FD
--& nRst
--& $30
--& nRst
--& nA5
--& $04
--& nB5
--& nCs6
--& nD6
$0083: 	dc.b nRst, $30, nRst, nA5, $04, nB5, nCs6, nD6
--& nE6
--& nFs6
--& nB5
--& nCs6
--& nEb6
--& nE6
--& nFs6
--& nAb6
$008B: 	dc.b nE6, nFs6, nB5, nCs6, nEb6, nE6, nFs6, nAb6
--& nCs6
--& nEb6
--& nF6
--& nFs6
--& nAb6
--& nBb6
--& nF6
--& nFs6
$0093: 	dc.b nCs6, nEb6, nF6, nFs6, nAb6, nBb6, nF6, nFs6
--& nAb6
--& nBb6
--& nC7
--& nCs7
$0098: 	dc.b nAb6, nBb6, nC7, nCs7
$0098: 	saVolFM		$03
$009A: 	sJump		Maniax_Jump1
$009D: Maniax_FM2:
$009D: 	sComm		$01
$009F: 	sPatFM		$01
--& nRst
--& $30
$00A3: 	dc.b nRst, $30
$00A3: Maniax_Loop1:
--& nA3
--& $06
--& nRst
--& nA3
--& nRst
--& nE3
--& nRst
--& nE3
$00AA: 	dc.b nA3, $06, nRst, nA3, nRst, nE3, nRst, nE3
--& nRst
--& nG3
--& $12
--& nFs3
--& $0C
--& nG3
--& $06
--& nFs3
$00B2: 	dc.b nRst, nG3, $12, nFs3, $0C, nG3, $06, nFs3
--& $0C
--& nA3
--& $06
--& nRst
--& nA3
--& nRst
--& nE3
--& nRst
$00BA: 	dc.b $0C, nA3, $06, nRst, nA3, nRst, nE3, nRst
--& nE3
--& nRst
--& nD4
--& $12
--& nCs4
--& $0C
--& nD4
--& $06
$00C2: 	dc.b nE3, nRst, nD4, $12, nCs4, $0C, nD4, $06
--& nCs4
--& $0C
$00C5: 	dc.b nCs4, $0C
$00C5: 	sLoop		$00, $02, Maniax_Loop1
$00CA: Maniax_Loop2:
--& nB2
--& $06
--& nG2
--& $12
--& nA2
--& $06
--& nRst
--& nB2
$00D1: 	dc.b nB2, $06, nG2, $12, nA2, $06, nRst, nB2
--& nRst
$00D3: 	dc.b nRst
$00D3: 	sLoop		$00, $02, Maniax_Loop2
--& nA2
--& $0C
--& nB2
--& nCs3
--& nEb3
--& nB2
--& $06
--& nCs3
$00DF: 	dc.b nA2, $0C, nB2, nCs3, nEb3, nB2, $06, nCs3
--& nEb3
--& nF3
--& nCs3
--& nEb3
--& nF3
--& nFs3
$00E6: 	dc.b nEb3, nF3, nCs3, nEb3, nF3, nFs3
$00E6: 	sComm		$01
$00E8: 	sJump		Maniax_Loop1
$00EB: Maniax_FM3:
$00EB: 	sPatFM		$00
--& nRst
--& $30
$00EF: 	dc.b nRst, $30
$00EF: Maniax_Loop3:
--& nE6
--& $06
--& nRst
--& nE6
--& nRst
--& nCs6
--& nRst
--& nCs6
$00F6: 	dc.b nE6, $06, nRst, nE6, nRst, nCs6, nRst, nCs6
--& nRst
--& nD6
--& $12
--& nD6
--& $1E
--& nE6
--& $06
--& nRst
$00FE: 	dc.b nRst, nD6, $12, nD6, $1E, nE6, $06, nRst
--& nE6
--& nRst
--& nCs6
--& nRst
--& nCs6
--& nRst
--& nG6
--& $12
$0106: 	dc.b nE6, nRst, nCs6, nRst, nCs6, nRst, nG6, $12
--& nG6
--& $1E
$0109: 	dc.b nG6, $1E
$0109: 	sLoop		$00, $02, Maniax_Loop3
$010E: Maniax_Loop4:
--& nRst
--& $06
--& nG5
--& $12
--& nA5
--& $06
--& nRst
--& $12
$0115: 	dc.b nRst, $06, nG5, $12, nA5, $06, nRst, $12
$0116: 	sLoop		$00, $04, Maniax_Loop4
$011B: 	sJump		Maniax_Loop3
$011E: Maniax_FM4:
$011E: 	sPatFM		$00
--& nRst
--& $30
$0122: 	dc.b nRst, $30
$0122: Maniax_Loop5:
--& nCs6
--& $06
--& nRst
--& nCs6
--& nRst
--& nA5
--& nRst
--& nA5
$0129: 	dc.b nCs6, $06, nRst, nCs6, nRst, nA5, nRst, nA5
--& nRst
--& nB5
--& $12
--& nB5
--& $1E
--& nCs6
--& $06
--& nRst
$0131: 	dc.b nRst, nB5, $12, nB5, $1E, nCs6, $06, nRst
--& nCs6
--& nRst
--& nA5
--& nRst
--& nA5
--& nRst
--& nD6
--& $12
$0139: 	dc.b nCs6, nRst, nA5, nRst, nA5, nRst, nD6, $12
--& nD6
--& $1E
$013C: 	dc.b nD6, $1E
$013C: 	sLoop		$00, $02, Maniax_Loop5
$0141: Maniax_Loop6:
--& nRst
--& $06
--& nB5
--& $12
--& nCs6
--& $06
--& nRst
--& $12
$0148: 	dc.b nRst, $06, nB5, $12, nCs6, $06, nRst, $12
$0149: 	sLoop		$00, $04, Maniax_Loop6
$014E: 	sJump		Maniax_Loop5
$0151: Maniax_PSG1:
$0151: 	sStop
$0152: Maniax_PSG2:
$0152: 	sNoisePSG	$E7
--& nRst
--& $30
$0156: 	dc.b nRst, $30
$0156: Maniax_Jump2:
$0156: 	sNoteTimeOut	$03
--& nA5
--& $0C
$015A: 	dc.b nA5, $0C
$015A: 	sNoteTimeOut	$0C
--& $0C
$015D: 	dc.b $0C
$015D: 	sNoteTimeOut	$03
--& $0C
$0160: 	dc.b $0C
$0160: 	sNoteTimeOut	$0C
--& $0C
$0163: 	dc.b $0C
$0163: 	sJump		Maniax_Jump2
$0166: Maniax_DAC:
--& dSnare
--& $06
--& dSnare
--& dSnare
--& dSnare
--& dSnare
--& $02
--& dSnare
$016D: 	dc.b dSnare, $06, dSnare, dSnare, dSnare, dSnare, $02, dSnare
--& $04
--& dKick
--& $12
$0171: 	dc.b $04, dKick, $12
$0171: Maniax_Loop7:
--& dKick
--& $0C
--& dSnare
--& dKick
--& dSnare
--& dKick
--& $0C
--& dSnare
$0178: 	dc.b dKick, $0C, dSnare, dKick, dSnare, dKick, $0C, dSnare
--& dKick
--& dSnare
--& dKick
--& $0C
--& dSnare
--& dKick
--& dSnare
--& dKick
$0180: 	dc.b dKick, dSnare, dKick, $0C, dSnare, dKick, dSnare, dKick
--& $0C
--& dSnare
--& dKick
--& $04
--& nRst
--& dSnare
--& dSnare
--& $0C
$0188: 	dc.b $0C, dSnare, dKick, $04, nRst, dSnare, dSnare, $0C
$0189: 	sLoop		$00, $02, Maniax_Loop7
--& dKick
--& $06
--& dSnare
--& $12
--& dKick
--& $0C
--& dSnare
--& dSnare
$0195: 	dc.b dKick, $06, dSnare, $12, dKick, $0C, dSnare, dSnare
--& $06
--& dKick
--& $12
--& dKick
--& $0C
--& dSnare
--& dSnare
--& $06
$019D: 	dc.b $06, dKick, $12, dKick, $0C, dSnare, dSnare, $06
--& dKick
--& $12
--& dKick
--& $0C
--& dSnare
--& dSnare
--& $04
--& dSnare
$01A5: 	dc.b dKick, $12, dKick, $0C, dSnare, dSnare, $04, dSnare
--& dSnare
--& dSnare
--& dSnare
--& dSnare
--& dSnare
--& dSnare
--& dSnare
--& dSnare
$01AD: 	dc.b dSnare, dSnare, dSnare, dSnare, dSnare, dSnare, dSnare, dSnare
--& dSnare
--& dSnare
$01B0: 	dc.b dSnare, dSnare
$01B0: 	sJump		Maniax_Loop7
$01B3: 	dc.
--= $F2
$01B4: 	dc.b $F2	; Unused
$01B4: Maniax_Patches:
$01B4: 
	; Patch $00
	; $3A
	; $01, $07, $01, $01,	$8E, $8E, $8D, $53
	; $0E, $0E, $0E, $03,	$00, $00, $00, $00
	; $1F, $FF, $1F, $0F,	$18, $28, $27, $80
$01B4: 	spAlgorithm	$02
$01B4: 	spFeedback	$07
$01B9: 	spDetune	$00, $00, $00, $00
$01B9: 	spMultiple	$01, $01, $07, $01
$01BD: 	spRateScale	$02, $02, $02, $01
$01BD: 	spAttackRt	$0E, $0D, $0E, $13
$01C1: 	spAmpMod	$00, $00, $00, $00
$01C1: 	spSustainRt	$0E, $0E, $0E, $03
$01C9: 	spSustainLv	$01, $01, $0F, $00
$01C9: 	spDecayRt	$00, $00, $00, $00
$01C9: 	spReleaseRt	$0F, $0F, $0F, $0F
$01CC: 	spTotalLv	$18, $27, $28, $00
$01CD: 
	; Patch $01
	; $3A
	; $61, $3C, $14, $31,	$9C, $DB, $9C, $DA
	; $04, $09, $04, $03,	$03, $01, $03, $00
	; $1F, $0F, $0F, $AF,	$21, $47, $31, $80
$01CD: 	spAlgorithm	$02
$01CD: 	spFeedback	$07
$01D2: 	spDetune	$06, $01, $03, $03
$01D2: 	spMultiple	$01, $04, $0C, $01
$01D6: 	spRateScale	$02, $02, $03, $03
$01D6: 	spAttackRt	$1C, $1C, $1B, $1A
$01DA: 	spAmpMod	$00, $00, $00, $00
$01DA: 	spSustainRt	$04, $04, $09, $03
$01E2: 	spSustainLv	$01, $00, $00, $0A
$01E2: 	spDecayRt	$03, $03, $01, $00
$01E2: 	spReleaseRt	$0F, $0F, $0F, $0F
$01E5: 	spTotalLv	$21, $31, $47, $00
--------------------------------------------------------------------------------
--; Time for Script 58 ms
--; Time for Convert 356 ms
--; Time for Save 55 ms
--; Time for Total 469 ms
