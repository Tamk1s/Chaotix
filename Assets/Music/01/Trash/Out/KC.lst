                        	LIST MACRO
                        	LIST EXPAND
000000                  	include _s1smps2asm_S1KC.asm
                        ; Standard Octave Pitch Equates
       = 000088         smpsPitch10lo		EQU	$88
       = 000094         smpsPitch09lo		EQU	$94
       = 0000A0         smpsPitch08lo		EQU	$A0
       = 0000AC         smpsPitch07lo		EQU	$AC
       = 0000B8         smpsPitch06lo		EQU	$B8
       = 0000C4         smpsPitch05lo		EQU	$C4
       = 0000D0         smpsPitch04lo		EQU	$D0
       = 0000DC         smpsPitch03lo		EQU	$DC
       = 0000E8         smpsPitch02lo		EQU	$E8
       = 0000F4         smpsPitch01lo		EQU	$F4
       = 000000         smpsPitch00		EQU	$00
       = 00000C         smpsPitch01hi		EQU	$0C
       = 000018         smpsPitch02hi		EQU	$18
       = 000024         smpsPitch03hi		EQU	$24
       = 000030         smpsPitch04hi		EQU	$30
       = 00003C         smpsPitch05hi		EQU	$3C
       = 000048         smpsPitch06hi		EQU	$48
       = 000054         smpsPitch07hi		EQU	$54
       = 000060         smpsPitch08hi		EQU	$60
       = 00006C         smpsPitch09hi		EQU	$6C
       = 000078         smpsPitch10hi		EQU	$78

                        ; Note Equates
       = 000080         nRst			EQU	$80
       = 000081         nC0			EQU	$81
       = 000082         nCs0			EQU	$82
       = 000083         nD0			EQU	$83
       = 000084         nEb0			EQU	$84
       = 000085         nE0			EQU	$85
       = 000086         nF0			EQU	$86
       = 000087         nFs0			EQU	$87
       = 000088         nG0			EQU	$88
       = 000089         nAb0			EQU	$89
       = 00008A         nA0			EQU	$8A
       = 00008B         nBb0			EQU	$8B
       = 00008C         nB0			EQU	$8C
       = 00008D         nC1			EQU	$8D
       = 00008E         nCs1			EQU	$8E
       = 00008F         nD1			EQU	$8F
       = 000090         nEb1			EQU	$90
       = 000091         nE1			EQU	$91
       = 000092         nF1			EQU	$92
       = 000093         nFs1			EQU	$93
       = 000094         nG1			EQU	$94
       = 000095         nAb1			EQU	$95
       = 000096         nA1			EQU	$96
       = 000097         nBb1			EQU	$97
       = 000098         nB1			EQU	$98
       = 000099         nC2			EQU	$99
       = 00009A         nCs2			EQU	$9A
       = 00009B         nD2			EQU	$9B
       = 00009C         nEb2			EQU	$9C
       = 00009D         nE2			EQU	$9D
       = 00009E         nF2			EQU	$9E
       = 00009F         nFs2			EQU	$9F
       = 0000A0         nG2			EQU	$A0
       = 0000A1         nAb2			EQU	$A1
       = 0000A2         nA2			EQU	$A2
       = 0000A3         nBb2			EQU	$A3
       = 0000A4         nB2			EQU	$A4
       = 0000A5         nC3			EQU	$A5
       = 0000A6         nCs3			EQU	$A6
       = 0000A7         nD3			EQU	$A7
       = 0000A8         nEb3			EQU	$A8
       = 0000A9         nE3			EQU	$A9
       = 0000AA         nF3			EQU	$AA
       = 0000AB         nFs3			EQU	$AB
       = 0000AC         nG3			EQU	$AC
       = 0000AD         nAb3			EQU	$AD
       = 0000AE         nA3			EQU	$AE
       = 0000AF         nBb3			EQU	$AF
       = 0000B0         nB3			EQU	$B0
       = 0000B1         nC4			EQU	$B1
       = 0000B2         nCs4			EQU	$B2
       = 0000B3         nD4			EQU	$B3
       = 0000B4         nEb4			EQU	$B4
       = 0000B5         nE4			EQU	$B5
       = 0000B6         nF4			EQU	$B6
       = 0000B7         nFs4			EQU	$B7
       = 0000B8         nG4			EQU	$B8
       = 0000B9         nAb4			EQU	$B9
       = 0000BA         nA4			EQU	$BA
       = 0000BB         nBb4			EQU	$BB
       = 0000BC         nB4			EQU	$BC
       = 0000BD         nC5			EQU	$BD
       = 0000BE         nCs5			EQU	$BE
       = 0000BF         nD5			EQU	$BF
       = 0000C0         nEb5			EQU	$C0
       = 0000C1         nE5			EQU	$C1
       = 0000C2         nF5			EQU	$C2
       = 0000C3         nFs5			EQU	$C3
       = 0000C4         nG5			EQU	$C4
       = 0000C5         nAb5			EQU	$C5
       = 0000C6         nA5			EQU	$C6
       = 0000C7         nBb5			EQU	$C7
       = 0000C8         nB5			EQU	$C8
       = 0000C9         nC6			EQU	$C9
       = 0000CA         nCs6			EQU	$CA
       = 0000CB         nD6			EQU	$CB
       = 0000CC         nEb6			EQU	$CC
       = 0000CD         nE6			EQU	$CD
       = 0000CE         nF6			EQU	$CE
       = 0000CF         nFs6			EQU	$CF
       = 0000D0         nG6			EQU	$D0
       = 0000D1         nAb6			EQU	$D1
       = 0000D2         nA6			EQU	$D2
       = 0000D3         nBb6			EQU	$D3
       = 0000D4         nB6			EQU	$D4
       = 0000D5         nC7			EQU	$D5
       = 0000D6         nCs7			EQU	$D6
       = 0000D7         nD7			EQU	$D7
       = 0000D8         nEb7			EQU	$D8
       = 0000D9         nE7			EQU	$D9
       = 0000DA         nF7			EQU	$DA
       = 0000DB         nFs7			EQU	$DB
       = 0000DC         nG7			EQU	$DC
       = 0000DD         nAb7			EQU	$DD
       = 0000DE         nA7			EQU	$DE
       = 0000DF         nBb7			EQU	$DF

                        ; DAC Equates
       = 000081         dKick			EQU	$81
       = 000082         dSnare			EQU	$82
       = 000083         dTimpani		EQU	$83
       = 000088         dHiTimpani		EQU	$88
       = 000089         dMidTimpani		EQU	$89
       = 00008A         dLowTimpani		EQU	$8A
       = 00008B         dVLowTimpani	EQU	$8B
       = 00008B         dFloorTimpani	EQU $8B

                        ;!@ Convert ptrs to z80Ptr
                        ; function to make a little-endian 16-bit pointer for the Z80 sound driver
                        ;z80_ptr function x,y,((((x)|(y))<<8)&$FF00)|((((x)|(y))>>8)&$7F)|$80
                        ;z80_ptr_neg function x,y,((((y)-(x))<<8)&$FF00)|((((y)-(x))>>8)&$7F)|$80

                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        rom_ptr_z80 macro ptr,addr
                        	;dc.w z80_ptr(ptr,addr)
                        	dc.w  (((((ptr)|(addr))<<8)&$FF00)|((((ptr)|(addr))>>8)&$7F)|$80)
                            endm
                        	
                        ;Funciton to convert S1 tempo to S2 and then S3+
                        ;The conversion works for all values of main tempo other than 0 â€” this value cannot be converted exactly between the two drivers. The conversion of main tempos from Sonic 1 to Sonic 2 can be done (approximately) with the following formul
                        ;S2 main tempo = floor{ [ (S1 main tempo-1) * 256 + floor(S1 main tempo/2) ] / S1 main tempo }			
                        ;It is easy to convert between Sonic 2 and Sonic 3+ main tempo values:
                        ;S2 main tempo = (256 - S3 main tempo) mod 256
                        ;S3 main tempo = (256 - S2 main tempo) mod 256
                        tempo_conv macro tempo
                        		if tempo==0
                        			dc.b	((256 - (((256-1)*256 + (256/2)) / 256)) % 256)
                        		else
                        			dc.b	((256 - ((((tempo)-1)*256 + ((tempo)/2)) / (tempo))) % 256)
                        		endif
                        	endm

                        	
                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        ;rom_ptr_z80_neg macro ptr,addr
                        	;dc.w z80_ptr_neg(ptr,addr)
                        	;dc.w	(((((addr)-(ptr))<<8)&$FF00)|((((addr)-(ptr))>>8)&$7F)|$80)
                            ;endm

                        ; Header Macros

                        ;!@
                        ; Header - Set up Voice Location
                        ;smpsHeaderVoice macro loc
                        smpsHeaderVoice macro loc,songstart
                        ;songStart set *
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc,songstart)
                        	endm
                        ; Header - Set up Channel Usage	
                        smpsHeaderChan macro fm,psg
                        	dc.b	fm,psg
                        	endm

                        ;!@
                        ; Header - Set up Tempo. Mod is converted from S1 to S3 tempo
                        smpsHeaderTempo macro div,mod
                        TempDiv set div
                        	dc.b	div
                        	tempo_conv(mod)
000000                  	endm
                        	
                        ; Header - Set up DAC Channel
                        smpsHeaderDAC macro loc
                        	dc.w	loc-songStart
                        	dc.w	$00
                        	endm
                        	
                        ;!@
                        ; Header - Set up FM Channel	
                        ;smpsHeaderFM macro loc,pitch,vol
                        smpsHeaderFM macro loc,songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc,songstart)
                        	dc.b	pitch,vol
                        	endm

                        ;!@	
                        ; Header - Set up PSG Channel
                        ;smpsHeaderPSG macro loc,pitch,vol,voice
                        smpsHeaderPSG macro loc,songstart,pitch,vol,null,voice
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc,songstart)
                        	dc.b	pitch,vol
                        	;dc.w	voice
                        	dc.b	null,voice
                        	endm

                        ; Co-ord Flag Macros and Equates
                        ; E0xx - Panning, AMS, FMS
                        smpsPan macro direction,amsfms
                        panNone set $00
                        panRight set $40
                        panLeft set $80
                        panCentre set $C0
                        panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if \0==2
                        		dc.b $E0,direction|amsfms
                        	else
                        		dc.b $E0,direction
                        	endif
000000                  	endm
                        	
                        ; E1xx - Alter note values by xx
                        smpsAlterNote macro val
                        	dc.b	$E1,val
                        	endm
                        	
                        ; E2xx - Unknown
                        smpsE2 macro val
                        	dc.b	$E2,val
                        	endm

                        ; E3 - Return (generally used after F8)
                        ; F9 - Return (generally used after F8)
                        smpsReturn macro val
                        	;!@
                        	;dc.b	$E3
                        	dc.b	$F9
                        	endm
                        	
                        ; E4 - Fade in previous song (ie. 1-Up)
                        smpsFade macro val
                        	dc.b	$E4
                        	endm

                        ;!@ Invalid for S3+!
                        ; E5xx - Set channel tempo divider to xx
                        smpsChanTempoDiv macro val
                        	Error No S3 equivalent for CF!
                        	;dc.b	$E5,val	
                        	endm
                        	
                        ; E6xx - Alter Volume by xx
                        smpsAlterVol macro val
                        	dc.b	$E6,val
                        	endm
                        	
                        ; E7 - Prevent attack of next note
       = 0000E7         smpsNoAttack	EQU $E7

                        ;!@ This may have problems, needs some convesion factor due to usage of mult by tempo div in S3+
                        ; E8xx - Set note fill to xx
                        smpsNoteFill macro val		
                        	dc.b	$E8,(val/TempDiv)
                        	endm
                        	
                        ;!@
                        ; E9xx - Add xx to channel pitch
                        ; FBxx - Add xx to channel pitch
                        smpsAlterPitch macro val
                        	;!@
                        	;dc.b	$E9,val
                        	dc.b	$FB,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3 (TEMPO - TEMPO_SET)
                        smpsSetTempoMod macro val
                        	;dc.b	$EA,val
                        	dc.b $FF,$00
                        	tempo_conv(val)
                        	endm
                        	
                        ;!@
                        ; EBxx - Set music tempo divider to xx
                        ; FF04xx - Set global tick multiplier to xx (TICK_MULT - TMULT_ALL)
                        smpsSetTempoDiv macro val
                        	;dc.b	$EB,val
                        TempDiv set val
                        	dc.b $FF,$04,val
000000                  	endm

                        ;!@	
                        ; ECxx - Add xx to PSG channel volume (VOLUME - VOL_NN_PSG)
                        ;
                        ; May need interpolation/conversion factor:
                        ; Change volume attenuation of PSG track.
                        ;The single parameter byte is added to track's current volume attenuation;
                        ;anything greater than $0F (unsigned comparison) is set to $0F (silence). Also, the flutter index is reduced by 1.
                        smpsSetVol macro val
                        	dc.b	$EC,val
                        	endm
                        	
                        ; ED - Unknown
       = 0000ED         smpsED		EQU $ED
                        	
                        ;!@ S3K= send cmd to YM2612 port; unused in S1
                        ; EE - Stops special SFX ($D0-$D4, S1 only) and restarts overridden music track
       = 0000EE         smpsEE 		EQU $EE
                        	
                        ;!@
                        ; EFxx - Set Voice of FM channel to xx
                        ; EFxx[yy] - Set patch id of FM channel to xx. If xx bit7 set, read from another song instead
                        ; (INSTRUMENT - INS_C_FMP)
                        ;smpsFMvoice macro voice
                        	;dc.b	$EF,voice
                        smpsFMvoice macro pat, song		
                        	;if song<>""
                        	if \0==2
                        		dc.b $EF,pat|$80,song+$81
                        	else
                        		dc.b $EF,pat
                        	endif
                            endm

                        ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
                        smpsModSet macro wait,speed,change,step
                        	dc.b	$F0,wait,speed,change,step
                        	endm
                        	

                        ;!@ Used very differently in S3; don't use
                        ; F1 - Turn on Modulation
       = 0000F1         smpsModOn 	EQU $F1
                        ; F4 - Turn off Modulation
       = 0000F4         smpsModOff 	EQU $F4

                        ; F2 - End of channel
                        smpsStop macro
                        	dc.b	$F2
                        	endm
                        	
                        ;!@
                        ; F3xx - PSG waveform to xx
                        ; S3+ only: If parameter byte is zero, the channel is converted
                        ; back into a normal PSG channel and the noise channel is silenced.
                        ; Otherwise, sets the PSG track to noise and sets PSG noise to parameter byte, which should be from $E0 to $E7 (inclusive).
                        smpsPSGform macro form
                        	dc.b	$F3,form
                        	endm
                        	
                        ; F5xx - PSG voice to xx
                        smpsPSGvoice macro voice
                        	dc.b	$F5,voice
                        	endm
                        	
                        ;BAD Cmpr
                        ;if (loc<*)
                        	;rom_ptr_z80_neg(*-loc,songstart)
                        ;else
                        	;rom_ptr_z80(loc-*-1,songstart)
                        ;endif

                        ;!@
                        ; F6xxxx - Jump to xxxx
                        ;smpsJump macro loc
                        smpsJump macro loc,songstart
                        	dc.b	$F6
                        	if (loc<*)
                        		rom_ptr_z80(loc,songstart)
                        	else
                        		rom_ptr_z80(loc,songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F7xxyyzzzz - Loop back to zzzz yy times, xx being the loop index for loop recursion fixing
                        ;smpsLoop macro index,loops,loc
                        smpsLoop macro index,loops,loc,songstart
                        	dc.b	$F7
                        	dc.b	index,loops
                        	if (loc<*)
                        		rom_ptr_z80(loc,songstart)
                        	else
                        		rom_ptr_z80(loc,songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F8xxxx - Call pattern at xxxx, saving return point
                        ;smpsCall macro loc
                        smpsCall macro loc,songstart
                        	dc.b	$F8
                        	if (loc<*)
                        		rom_ptr_z80(loc,songstart)
                        	else
                        		rom_ptr_z80(loc,songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm
                        	
                        ; F9 - Unknown
       = 0000F9         smpsF9		EQU $F9

                        ; Voices - Feedback
                        smpsVcFeedback macro val
                        vcFeedback set val
000000                  	endm

                        ; Voices - Algorithm
                        smpsVcAlgorithm macro val
                        vcAlgorithm set val
000000                  	endm

                        ; Voices - Detune
                        smpsVcDetune macro op1,op2,op3,op4
                        vcDT1 set op1
                        vcDT2 set op2
                        vcDT3 set op3
                        vcDT4 set op4
000000                  	endm

                        ; Voices - Coarse-Frequency
                        smpsVcCoarseFreq macro op1,op2,op3,op4
                        vcCF1 set op1
                        vcCF2 set op2
                        vcCF3 set op3
                        vcCF4 set op4
000000                  	endm

                        ; Voices - Rate Scale
                        smpsVcRateScale macro op1,op2,op3,op4
                        vcRS1 set op1
                        vcRS2 set op2
                        vcRS3 set op3
                        vcRS4 set op4
000000                  	endm

                        ; Voices - Attack Rate
                        smpsVcAttackRate macro op1,op2,op3,op4
                        vcAR1 set op1
                        vcAR2 set op2
                        vcAR3 set op3
                        vcAR4 set op4
000000                  	endm

                        ; Voices - Amplitude Modulation
                        smpsVcAmpMod macro op1,op2,op3,op4
                        vcAM1 set op1
                        vcAM2 set op2
                        vcAM3 set op3
                        vcAM4 set op4
000000                  	endm

                        ; Voices - First Decay Rate
                        smpsVcDecayRate1 macro op1,op2,op3,op4
                        vcD1R1 set op1
                        vcD1R2 set op2
                        vcD1R3 set op3
                        vcD1R4 set op4
000000                  	endm

                        ; Voices - Second Decay Rate
                        smpsVcDecayRate2 macro op1,op2,op3,op4
                        vcD2R1 set op1
                        vcD2R2 set op2
                        vcD2R3 set op3
                        vcD2R4 set op4
000000                  	endm

                        ; Voices - Decay Level	
                        smpsVcDecayLevel macro op1,op2,op3,op4
                        vcDL1 set op1
                        vcDL2 set op2
                        vcDL3 set op3
                        vcDL4 set op4
000000                  	endm

                        ; Voices - Release Rate
                        smpsVcReleaseRate macro op1,op2,op3,op4
                        vcRR1 set op1
                        vcRR2 set op2
                        vcRR3 set op3
                        vcRR4 set op4
000000                  	endm

                        ; Voices - Total Level
                        smpsVcTotalLevel macro op1,op2,op3,op4
                        vcTL1 set op1
                        vcTL2 set op2
                        vcTL3 set op3
                        vcTL4 set op4
                        	dc.b	(vcFeedback<<3)+vcAlgorithm
                        	dc.b	(vcDT4<<4)+vcCF4,(vcDT3<<4)+vcCF3,(vcDT2<<4)+vcCF2,(vcDT1<<4)+vcCF1
                        	dc.b	(vcRS4<<6)+vcAR4,(vcRS3<<6)+vcAR3,(vcRS2<<6)+vcAR2,(vcRS1<<6)+vcAR1
                        	dc.b	(vcAM4<<5)+vcD1R4,(vcAM3<<5)+vcD1R3,(vcAM2<<5)+vcD1R2,(vcAM1<<5)+vcD1R1
                        	dc.b	vcD2R4,vcD2R3,vcD2R2,vcD2R1
                        	dc.b	(vcDL4<<4)+vcRR4,(vcDL3<<4)+vcRR3,(vcDL2<<4)+vcRR2,(vcDL1<<4)+vcRR1
                        	dc.b	vcTL4,vcTL3,vcTL2,vcTL1	
000000                  	endm

                        ;!@
                        ; Header - Set up a secondary PWM Channel
                        ;smpsHeaderPWM macro loc
                        smpsHeaderPWM macro loc, songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc,songstart)	
                        	;!@
                        	dc.b	pitch
                        	dc.b	vol
                        	endm
                        	
                        ;!@ Unused and unneeded; leftover Sonic 32x header stuff
                        ; Header - Set up first PWM Channel
                        ;smpsHeaderPWM1 macro loc,num
                        	;dc.w	loc-songStart
                        	;dc.b	num,0
                        	;endm
000000                  	include "KC.asm"
       = 040000         Target	EQU	$40000

000000                  Maniax_Header:
000000                  	smpsHeaderVoice	Maniax_Voices,Target
                        ;songStart set *
                        	;dc.w	loc-songStart
000000                  	rom_ptr_z80(Maniax_Voices,Target)
                        	;dc.w z80_ptr(ptr,addr)
000000 5E98             	dc.w  ((((((Maniax_Voices)|(Target)))<<8)&$FF00)|(((((Maniax_Voices)|(Target)))>>8)&$7F)|$80)
000002                  	smpsHeaderChan	6, 3
000002 0603             	dc.b	6,3
000004                  	smpsHeaderTempo	$02, $1E
       = 000002         TempDiv set $02
000004 02               	dc.b	$02
000005                  	tempo_conv($1E)
                        		if ($1E)==0
                        		else
000005 09               			dc.b	((256 - ((((($1E))-1)*256 + ((($1E))/2)) / (($1E)))) % 256)
                        		endif
                        	;smpsHeaderTempo	$02, $09
000006                  	smpsHeaderFM	Maniax_FM1, Target, $00, $13
                        	;dc.w	loc-songStart
000006                  	rom_ptr_z80(Maniax_FM1,Target)
                        	;dc.w z80_ptr(ptr,addr)
000006 4080             	dc.w  ((((((Maniax_FM1)|(Target)))<<8)&$FF00)|(((((Maniax_FM1)|(Target)))>>8)&$7F)|$80)
000008 0013             	dc.b	$00,$13
00000A                  	smpsHeaderFM	Maniax_FM2, Target, $00, $17
                        	;dc.w	loc-songStart
00000A                  	rom_ptr_z80(Maniax_FM2,Target)
                        	;dc.w z80_ptr(ptr,addr)
00000A BC82             	dc.w  ((((((Maniax_FM2)|(Target)))<<8)&$FF00)|(((((Maniax_FM2)|(Target)))>>8)&$7F)|$80)
00000C 0017             	dc.b	$00,$17
00000E                  	smpsHeaderFM	Maniax_FM3, Target, $00, $1A
                        	;dc.w	loc-songStart
00000E                  	rom_ptr_z80(Maniax_FM3,Target)
                        	;dc.w z80_ptr(ptr,addr)
00000E 3184             	dc.w  ((((((Maniax_FM3)|(Target)))<<8)&$FF00)|(((((Maniax_FM3)|(Target)))>>8)&$7F)|$80)
000010 001A             	dc.b	$00,$1A
000012                  	smpsHeaderFM	Maniax_FM4, Target, $00, $14
                        	;dc.w	loc-songStart
000012                  	rom_ptr_z80(Maniax_FM4,Target)
                        	;dc.w z80_ptr(ptr,addr)
000012 B986             	dc.w  ((((((Maniax_FM4)|(Target)))<<8)&$FF00)|(((((Maniax_FM4)|(Target)))>>8)&$7F)|$80)
000014 0014             	dc.b	$00,$14
000016                  	smpsHeaderFM	Maniax_FM5, Target, $00, $18
                        	;dc.w	loc-songStart
000016                  	rom_ptr_z80(Maniax_FM5,Target)
                        	;dc.w z80_ptr(ptr,addr)
000016 0488             	dc.w  ((((((Maniax_FM5)|(Target)))<<8)&$FF00)|(((((Maniax_FM5)|(Target)))>>8)&$7F)|$80)
000018 0018             	dc.b	$00,$18
00001A                  	smpsHeaderFM	Maniax_FM6, Target, $00, $12
                        	;dc.w	loc-songStart
00001A                  	rom_ptr_z80(Maniax_FM6,Target)
                        	;dc.w z80_ptr(ptr,addr)
00001A 5F88             	dc.w  ((((((Maniax_FM6)|(Target)))<<8)&$FF00)|(((((Maniax_FM6)|(Target)))>>8)&$7F)|$80)
00001C 0012             	dc.b	$00,$12
00001E                  	smpsHeaderPSG	Maniax_PSG1, Target, $dc, $2, $00, $00
                        	;dc.w	loc-songStart
00001E                  	rom_ptr_z80(Maniax_PSG1,Target)
                        	;dc.w z80_ptr(ptr,addr)
00001E 608A             	dc.w  ((((((Maniax_PSG1)|(Target)))<<8)&$FF00)|(((((Maniax_PSG1)|(Target)))>>8)&$7F)|$80)
000020 DC02             	dc.b	$dc,$2
                        	;dc.w	voice
000022 0000             	dc.b	$00,$00
000024                  	smpsHeaderPSG	Maniax_PSG2, Target, $dc, $2, $00, $00
                        	;dc.w	loc-songStart
000024                  	rom_ptr_z80(Maniax_PSG2,Target)
                        	;dc.w z80_ptr(ptr,addr)
000024 CC8C             	dc.w  ((((((Maniax_PSG2)|(Target)))<<8)&$FF00)|(((((Maniax_PSG2)|(Target)))>>8)&$7F)|$80)
000026 DC02             	dc.b	$dc,$2
                        	;dc.w	voice
000028 0000             	dc.b	$00,$00
00002A                  	smpsHeaderPSG	Maniax_PSG3, Target, $dc, $2, $00, $00
                        	;dc.w	loc-songStart
00002A                  	rom_ptr_z80(Maniax_PSG3,Target)
                        	;dc.w z80_ptr(ptr,addr)
00002A F28D             	dc.w  ((((((Maniax_PSG3)|(Target)))<<8)&$FF00)|(((((Maniax_PSG3)|(Target)))>>8)&$7F)|$80)
00002C DC02             	dc.b	$dc,$2
                        	;dc.w	voice
00002E 0000             	dc.b	$00,$00
000030                  	smpsHeaderPWM	Maniax_PWM1, Target, $00, $AA
                        	;dc.w	loc-songStart
000030                  	rom_ptr_z80(Maniax_PWM1,Target)	
                        	;dc.w z80_ptr(ptr,addr)
000030 878F             	dc.w  ((((((Maniax_PWM1)|(Target)))<<8)&$FF00)|(((((Maniax_PWM1)|(Target)))>>8)&$7F)|$80)
                        	;!@
000032 00               	dc.b	$00
000033 AA               	dc.b	$AA
000034                  	smpsHeaderPWM	Maniax_PWM2, Target, $00, $AA
                        	;dc.w	loc-songStart
000034                  	rom_ptr_z80(Maniax_PWM2,Target)	
                        	;dc.w z80_ptr(ptr,addr)
000034 F293             	dc.w  ((((((Maniax_PWM2)|(Target)))<<8)&$FF00)|(((((Maniax_PWM2)|(Target)))>>8)&$7F)|$80)
                        	;!@
000036 00               	dc.b	$00
000037 AA               	dc.b	$AA
000038                  	smpsHeaderPWM	Maniax_PWM3, Target, $00, $AA
                        	;dc.w	loc-songStart
000038                  	rom_ptr_z80(Maniax_PWM3,Target)	
                        	;dc.w z80_ptr(ptr,addr)
000038 AD96             	dc.w  ((((((Maniax_PWM3)|(Target)))<<8)&$FF00)|(((((Maniax_PWM3)|(Target)))>>8)&$7F)|$80)
                        	;!@
00003A 00               	dc.b	$00
00003B AA               	dc.b	$AA
00003C                  	smpsHeaderPWM	Maniax_PWM4, Target, $00, $AA	
                        	;dc.w	loc-songStart
00003C                  	rom_ptr_z80(Maniax_PWM4,Target)	
                        	;dc.w z80_ptr(ptr,addr)
00003C B697             	dc.w  ((((((Maniax_PWM4)|(Target)))<<8)&$FF00)|(((((Maniax_PWM4)|(Target)))>>8)&$7F)|$80)
                        	;!@
00003E 00               	dc.b	$00
00003F AA               	dc.b	$AA

000040                  Maniax_FM1:
000040                  	smpsPan		$C0
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000040 E0C0             		dc.b $E0,$C0
                        	endif
000042                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
000042 EF01             		dc.b $EF,$01
                        	endif
000044 8006B3068003B106 	dc.b nRst, $06, nD4, $06, nRst, $03, nC4, $06
00004C 8003B3038003     	dc.b nRst, $03, nD4, $03, nRst, $03

000052                  Maniax_FM1_Loop:
000052 B012AE12B012AE12 	dc.b nB3, $12, nA3, $12, nB3, $12, nA3, $12
00005A B00CAE0CB112B012 	dc.b nB3, $0C, nA3, $0C, nC4, $12, nB3, $12
000062 AE3CAE12B012B10C 	dc.b nA3, $3C, nA3, $12, nB3, $12, nC4, $0C
00006A AE12B012B10CB112 	dc.b nA3, $12, nB3, $12, nC4, $0C, nC4, $12
000072 B01E8012         	dc.b nB3, $1E, nRst, $12
000076                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
000076 EF00             		dc.b $EF,$00
                        	endif
000078 1EB109B10CB006B0 	dc.b $1E, nC4, $09, nC4, $0C, nB3, $06, nB3
000080 09B00CB009B003B0 	dc.b $09, nB3, $0C, nB3, $09, nB3, $03, nB3
000088 09AE06AE09AE0CB1 	dc.b $09, nA3, $06, nA3, $09, nA3, $0C, nC4
000090 09B103B109B006B0 	dc.b $09, nC4, $03, nC4, $09, nB3, $06, nB3
000098 09B00CB006B006B0 	dc.b $09, nB3, $0C, nB3, $06, nB3, $06, nB3
0000A0 03B006AE06AE09AE 	dc.b $03, nB3, $06, nA3, $06, nA3, $09, nA3
0000A8 06AE03AE03B10FB1 	dc.b $06, nA3, $03, nA3, $03, nC4, $0F, nC4
0000B0 06B009B003B003B0 	dc.b $06, nB3, $09, nB3, $03, nB3, $03, nB3
0000B8 0CB009B003B003B0 	dc.b $0C, nB3, $09, nB3, $03, nB3, $03, nB3
0000C0 06AE06AE09AE0CB1 	dc.b $06, nA3, $06, nA3, $09, nA3, $0C, nC4
0000C8 09B106B106B30CB0 	dc.b $09, nC4, $06, nC4, $06, nD4, $0C, nB3
0000D0 03B00CB009B003B0 	dc.b $03, nB3, $0C, nB3, $09, nB3, $03, nB3
0000D8 06B00CB006B506B4 	dc.b $06, nB3, $0C, nB3, $06, nE4, $06, nEb4
0000E0 06B109B10CB006B0 	dc.b $06, nC4, $09, nC4, $0C, nB3, $06, nB3
0000E8 09B00CB009B003B0 	dc.b $09, nB3, $0C, nB3, $09, nB3, $03, nB3
0000F0 09AE06AE09AE0CB1 	dc.b $09, nA3, $06, nA3, $09, nA3, $0C, nC4
0000F8 09B103B109B006B0 	dc.b $09, nC4, $03, nC4, $09, nB3, $06, nB3
000100 09B00CB006B006B0 	dc.b $09, nB3, $0C, nB3, $06, nB3, $06, nB3
000108 03B006AE06AE09AE 	dc.b $03, nB3, $06, nA3, $06, nA3, $09, nA3
000110 06AE03AE03B10FB1 	dc.b $06, nA3, $03, nA3, $03, nC4, $0F, nC4
000118 06B009B003B003B0 	dc.b $06, nB3, $09, nB3, $03, nB3, $03, nB3
000120 0CB009B003B003B0 	dc.b $0C, nB3, $09, nB3, $03, nB3, $03, nB3
000128 06AE06AE09AE0CB1 	dc.b $06, nA3, $06, nA3, $09, nA3, $0C, nC4
000130 09B103B103B106B0 	dc.b $09, nC4, $03, nC4, $03, nC4, $06, nB3
000138 0CB003B00CB10CB1 	dc.b $0C, nB3, $03, nB3, $0C, nC4, $0C, nC4
000140 06B10CB509B409B3 	dc.b $06, nC4, $0C, nE4, $09, nEb4, $09, nD4
000148 0CB309B309B309B3 	dc.b $0C, nD4, $09, nD4, $09, nD4, $09, nD4
000150 09B506B509B506B5 	dc.b $09, nE4, $06, nE4, $09, nE4, $06, nE4
000158 06B506B509B503B5 	dc.b $06, nE4, $06, nE4, $09, nE4, $03, nE4
000160 03B509B506B506B5 	dc.b $03, nE4, $09, nE4, $06, nE4, $06, nE4
000168 09B506B503B509B7 	dc.b $09, nE4, $06, nE4, $03, nE4, $09, nFs4
000170 18B718B909B906B9 	dc.b $18, nFs4, $18, nAb4, $09, nAb4, $06, nAb4
000178 06B909B903B90FB8 	dc.b $06, nAb4, $09, nAb4, $03, nAb4, $0F, nG4
000180 09B806B806B81BB8 	dc.b $09, nG4, $06, nG4, $06, nG4, $1B, nG4
000188 06B803B806B806B8 	dc.b $06, nG4, $03, nG4, $06, nG4, $06, nG4
000190 06B809B806B806B6 	dc.b $06, nG4, $09, nG4, $06, nG4, $06, nF4
000198 06B603B606B606B6 	dc.b $06, nF4, $03, nF4, $06, nF4, $06, nF4
0001A0 03B60CB50CB106B1 	dc.b $03, nF4, $0C, nE4, $0C, nC4, $06, nC4
0001A8 03B106B106B006B0 	dc.b $03, nC4, $06, nC4, $06, nB3, $06, nB3
0001B0 06B003B006B006B0 	dc.b $06, nB3, $03, nB3, $06, nB3, $06, nB3
0001B8 06B003B006B006AE 	dc.b $06, nB3, $03, nB3, $06, nB3, $06, nA3
0001C0 06AE06AE03AE06AE 	dc.b $06, nA3, $06, nA3, $03, nA3, $06, nA3
0001C8 06B106B103B106B1 	dc.b $06, nC4, $06, nC4, $03, nC4, $06, nC4
0001D0 06B006B006B003B0 	dc.b $06, nB3, $06, nB3, $06, nB3, $03, nB3
0001D8 06B006B006B003B0 	dc.b $06, nB3, $06, nB3, $06, nB3, $03, nB3
0001E0 06B006AE06AE06AE 	dc.b $06, nB3, $06, nA3, $06, nA3, $06, nA3
0001E8 03AE06AE06B106B1 	dc.b $03, nA3, $06, nA3, $06, nC4, $06, nC4
0001F0 03B106B106B006B0 	dc.b $03, nC4, $06, nC4, $06, nB3, $06, nB3
0001F8 06B003B006B006B0 	dc.b $06, nB3, $03, nB3, $06, nB3, $06, nB3
000200 06B003B006B006AE 	dc.b $06, nB3, $03, nB3, $06, nB3, $06, nA3
000208 06AE06AE03AE06AE 	dc.b $06, nA3, $06, nA3, $03, nA3, $06, nA3
000210 06B106B103B106B1 	dc.b $06, nC4, $06, nC4, $03, nC4, $06, nC4
000218 06B006B006B003B0 	dc.b $06, nB3, $06, nB3, $06, nB3, $03, nB3
000220 06B006B10CB106B1 	dc.b $06, nB3, $06, nC4, $0C, nC4, $06, nC4
000228 0CB112B106B103B1 	dc.b $0C, nC4, $12, nC4, $06, nC4, $03, nC4
000230 06B106B006B006B0 	dc.b $06, nC4, $06, nB3, $06, nB3, $06, nB3
000238 03B006B006B006B0 	dc.b $03, nB3, $06, nB3, $06, nB3, $06, nB3
000240 03B006B006AE06AE 	dc.b $03, nB3, $06, nB3, $06, nA3, $06, nA3
000248 06AE03AE06AE06B1 	dc.b $06, nA3, $03, nA3, $06, nA3, $06, nC4
000250 06B103B106B106B0 	dc.b $06, nC4, $03, nC4, $06, nC4, $06, nB3
000258 06B006B003B006B0 	dc.b $06, nB3, $06, nB3, $03, nB3, $06, nB3
000260 06B006B003B006B0 	dc.b $06, nB3, $06, nB3, $03, nB3, $06, nB3
000268 06AE06AE06AE03AE 	dc.b $06, nA3, $06, nA3, $06, nA3, $03, nA3
000270 06AE06B106B103B1 	dc.b $06, nA3, $06, nC4, $06, nC4, $03, nC4
000278 06B106B006B006B0 	dc.b $06, nC4, $06, nB3, $06, nB3, $06, nB3
000280 03B006B006B006B0 	dc.b $03, nB3, $06, nB3, $06, nB3, $06, nB3
000288 03B006B006AE06AE 	dc.b $03, nB3, $06, nB3, $06, nA3, $06, nA3
000290 06AE03AE06AE06B1 	dc.b $06, nA3, $03, nA3, $06, nA3, $06, nC4
000298 06B103B106B106B0 	dc.b $06, nC4, $03, nC4, $06, nC4, $06, nB3
0002A0 06B006B003B006B0 	dc.b $06, nB3, $06, nB3, $03, nB3, $06, nB3
0002A8 06B012B00CB012AF 	dc.b $06, nB3, $12, nB3, $0C, nB3, $12, nBb3
0002B0 60B160B160B112B1 	dc.b $60, nC4, $60, nC4, $60, nC4, $12, nC4
0002B8 4E               	dc.b $4E
0002B9                  	smpsJump	Maniax_FM1_Loop,Target
0002B9 F6               	dc.b	$F6
                        	if (Maniax_FM1_Loop<*)
0002BA                  		rom_ptr_z80(Maniax_FM1_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
0002BA 5280             	dc.w  ((((((Maniax_FM1_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_FM1_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0002BC                  Maniax_FM2:
0002BC                  	smpsPan		$C0
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
0002BC E0C0             		dc.b $E0,$C0
                        	endif
0002BE                  	smpsFMvoice		$03
                        	;if song<>""
                        	if 1==2
                        	else
0002BE EF03             		dc.b $EF,$03
                        	endif
0002C0 8006BC038006BA03 	dc.b nRst, $06, nB4, $03, nRst, $06, nA4, $03
0002C8 8006BC038003     	dc.b nRst, $06, nB4, $03, nRst, $03

0002CE                  Maniax_FM2_Loop:
0002CE 807F7F4C         	dc.b nRst, $7F, $7F, $4C
0002D2                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
0002D2 EF02             		dc.b $EF,$02
                        	endif
0002D4 06AC03AE03B003B1 	dc.b $06, nG3, $03, nA3, $03, nB3, $03, nC4
0002DC 03AE03B003B103B3 	dc.b $03, nA3, $03, nB3, $03, nC4, $03, nD4
0002E4 03B003B103B303B5 	dc.b $03, nB3, $03, nC4, $03, nD4, $03, nE4
0002EC 03B103B303B503B6 	dc.b $03, nC4, $03, nD4, $03, nE4, $03, nF4
0002F4 03B806805C5C5C5C 	dc.b $03, nG4, $06, nRst, $5C, $5C, $5C, $5C
0002FC 5C5C5C5C5C       	dc.b $5C, $5C, $5C, $5C, $5C
000301                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000301 EF02             		dc.b $EF,$02
                        	endif
000303 7F7F0A           	dc.b $7F, $7F, $0A
000306                  	smpsFMvoice		$03
                        	;if song<>""
                        	if 1==2
                        	else
000306 EF03             		dc.b $EF,$03
                        	endif
000308 06B8038003B603B5 	dc.b $06, nG4, $03, nRst, $03, nF4, $03, nE4
000310 038003B6038003B8 	dc.b $03, nRst, $03, nF4, $03, nRst, $03, nG4
000318 03B8038015       	dc.b $03, nG4, $03, nRst, $15
00031D                  	smpsAlterVol		$04
00031D E604             	dc.b	$E6,$04
00031F B506B303B106B506 	dc.b nE4, $06, nD4, $03, nC4, $06, nE4, $06
000327 B3068006AC03B006 	dc.b nD4, $06, nRst, $06, nG3, $03, nB3, $06
00032F B106B306B103B006 	dc.b nC4, $06, nD4, $06, nC4, $03, nB3, $06
000337 B306B1068006AC03 	dc.b nD4, $06, nC4, $06, nRst, $06, nG3, $03
00033F B106B306B506B303 	dc.b nC4, $06, nD4, $06, nE4, $06, nD4, $03
000347 B106B506B3068006 	dc.b nC4, $06, nE4, $06, nD4, $06, nRst, $06
00034F AC03B006B106B306 	dc.b nG3, $03, nB3, $06, nC4, $06, nD4, $06
000357 B103B006B306B106 	dc.b nC4, $03, nB3, $06, nD4, $06, nC4, $06
00035F 8006AC03B106B306 	dc.b nRst, $06, nG3, $03, nC4, $06, nD4, $06
000367 B506B303B106B506 	dc.b nE4, $06, nD4, $03, nC4, $06, nE4, $06
00036F B3068006AC03B006 	dc.b nD4, $06, nRst, $06, nG3, $03, nB3, $06
000377 B106B306B103B006 	dc.b nC4, $06, nD4, $06, nC4, $03, nB3, $06
00037F B306B1068006AC03 	dc.b nD4, $06, nC4, $06, nRst, $06, nG3, $03
000387 B106B306B506B303 	dc.b nC4, $06, nD4, $06, nE4, $06, nD4, $03
00038F B106B506B3068006 	dc.b nC4, $06, nE4, $06, nD4, $06, nRst, $06
000397 AC03B006B306B10C 	dc.b nG3, $03, nB3, $06, nD4, $06, nC4, $0C
00039F B106B10CB112B506 	dc.b nC4, $06, nC4, $0C, nC4, $12, nE4, $06
0003A7 B303B106B506B306 	dc.b nD4, $03, nC4, $06, nE4, $06, nD4, $06
0003AF 8006AC03B006B106 	dc.b nRst, $06, nG3, $03, nB3, $06, nC4, $06
0003B7 B306B103B006B306 	dc.b nD4, $06, nC4, $03, nB3, $06, nD4, $06
0003BF B1068006AC03B106 	dc.b nC4, $06, nRst, $06, nG3, $03, nC4, $06
0003C7 B306B506B303B106 	dc.b nD4, $06, nE4, $06, nD4, $03, nC4, $06
0003CF B506B3068006AC03 	dc.b nE4, $06, nD4, $06, nRst, $06, nG3, $03
0003D7 B006B106B306B103 	dc.b nB3, $06, nC4, $06, nD4, $06, nC4, $03
0003DF B006B306B1068006 	dc.b nB3, $06, nD4, $06, nC4, $06, nRst, $06
0003E7 AC03B106B306B506 	dc.b nG3, $03, nC4, $06, nD4, $06, nE4, $06
0003EF B303B106B506B306 	dc.b nD4, $03, nC4, $06, nE4, $06, nD4, $06
0003F7 8006AC03B006B106 	dc.b nRst, $06, nG3, $03, nB3, $06, nC4, $06
0003FF B306B103B006B306 	dc.b nD4, $06, nC4, $03, nB3, $06, nD4, $06
000407 B1068006AC03B106 	dc.b nC4, $06, nRst, $06, nG3, $03, nC4, $06
00040F B306B506B303B106 	dc.b nD4, $06, nE4, $06, nD4, $03, nC4, $06
000417 B506B3068006AC03 	dc.b nE4, $06, nD4, $06, nRst, $06, nG3, $03
00041F B006B106B309     	dc.b nB3, $06, nC4, $06, nD4, $09
000425                  	smpsAlterNote	$00
000425 E100             	dc.b	$E1,$00
000427 807F7F7F2A       	dc.b nRst, $7F, $7F, $7F, $2A
00042C                  	smpsAlterVol		$FC
00042C E6FC             	dc.b	$E6,$FC
00042E                  	smpsJump	Maniax_FM2_Loop,Target
00042E F6               	dc.b	$F6
                        	if (Maniax_FM2_Loop<*)
00042F                  		rom_ptr_z80(Maniax_FM2_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
00042F CE82             	dc.w  ((((((Maniax_FM2_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_FM2_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000431                  Maniax_FM3:
000431                  	smpsPan		$80
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000431 E080             		dc.b $E0,$80
                        	endif
000433                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
000433 EF05             		dc.b $EF,$05
                        	endif
000435 801E             	dc.b nRst, $1E

000437                  Maniax_FM3_Loop:
000437 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
00043F D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000447 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
00044F D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000457 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
00045F D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000467 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
00046F D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000477 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
00047F D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000487 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
00048F D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000497 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
00049F D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
0004A7 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
0004AF D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
0004B7                  	smpsAlterVol		$FC
0004B7 E6FC             	dc.b	$E6,$FC
0004B9 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
0004C1 D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
0004C9 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
0004D1 D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
0004D9 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
0004E1 D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
0004E9 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
0004F1 D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
0004F9 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
000501 D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000509 D5028004D4028004 	dc.b nC7, $02, nRst, $04, nB6, $02, nRst, $04
000511 D2028004D0028004 	dc.b nA6, $02, nRst, $04, nG6, $02, nRst, $04
000519                  	smpsAlterVol		$FA
000519 E6FA             	dc.b	$E6,$FA
00051B C403C603C803C903 	dc.b nG5, $03, nA5, $03, nB5, $03, nC6, $03
000523 C603C803C903CB03 	dc.b nA5, $03, nB5, $03, nC6, $03, nD6, $03
00052B C803C903CB03CD03 	dc.b nB5, $03, nC6, $03, nD6, $03, nE6, $03
000533 C903CB03CD03CE03 	dc.b nC6, $03, nD6, $03, nE6, $03, nF6, $03
00053B D006807F7F5E     	dc.b nG6, $06, nRst, $7F, $7F, $5E
000541                  	smpsFMvoice		$04
                        	;if song<>""
                        	if 1==2
                        	else
000541 EF04             		dc.b $EF,$04
                        	endif
000543 1E               	dc.b $1E
000544                  	smpsAlterVol		$02
000544 E602             	dc.b	$E6,$02
000546 BC02BD39BE01BF0B 	dc.b nB4, $02, nC5, $39, nCs5, $01, nD5, $0B
00054E BD01BC0BBA01B80B 	dc.b nC5, $01, nB4, $0B, nA4, $01, nG4, $0B
000556 8001BD3CBC0BBA01 	dc.b nRst, $01, nC5, $3C, nB4, $0B, nA4, $01
00055E B80BB701B50BB801 	dc.b nG4, $0B, nFs4, $01, nE4, $0B, nG4, $01
000566 BA39BC02BD01BF0B 	dc.b nA4, $39, nB4, $02, nC5, $01, nD5, $0B
00056E BD01BC0BBA01B80B 	dc.b nC5, $01, nB4, $0B, nA4, $01, nG4, $0B
000576 B701B62FB701B81E 	dc.b nFs4, $01, nF4, $2F, nFs4, $01, nG4, $1E
00057E B809B709B609B802 	dc.b nG4, $09, nFs4, $09, nF4, $09, nG4, $02
000586                  	smpsAlterVol		$FF
000586 E6FF             	dc.b	$E6,$FF
000588 BA01             	dc.b nA4, $01
00058A                  	smpsAlterVol		$FF
00058A E6FF             	dc.b	$E6,$FF
00058C BB038003BD038003 	dc.b nBb4, $03, nRst, $03, nC5, $03, nRst, $03
000594 BF06C103C2038003 	dc.b nD5, $06, nE5, $03, nF5, $03, nRst, $03
00059C C202C4078005C501 	dc.b nF5, $02, nG5, $07, nRst, $05, nAb5, $01
0005A4 C606C106C603C506 	dc.b nA5, $06, nE5, $06, nA5, $03, nAb5, $06
0005AC C105C001C105C001 	dc.b nE5, $05, nEb5, $01, nE5, $05, nEb5, $01
0005B4 C105C201C40B8001 	dc.b nE5, $05, nF5, $01, nG5, $0B, nRst, $01
0005BC BD038003C4038003 	dc.b nC5, $03, nRst, $03, nG5, $03, nRst, $03
0005C4 C109C4038003C103 	dc.b nE5, $09, nG5, $03, nRst, $03, nE5, $03
0005CC C4038003BD02BF01 	dc.b nG5, $03, nRst, $03, nC5, $02, nD5, $01
0005D4 C103C003BF03BE03 	dc.b nE5, $03, nEb5, $03, nD5, $03, nCs5, $03
0005DC C003BF03BE03BD03 	dc.b nEb5, $03, nD5, $03, nCs5, $03, nC5, $03
0005E4 BE03BF03C103BF03 	dc.b nCs5, $03, nD5, $03, nE5, $03, nD5, $03
0005EC C203C403C503C803 	dc.b nF5, $03, nG5, $03, nAb5, $03, nB5, $03
0005F4 C9068003C7038003 	dc.b nC6, $06, nRst, $03, nBb5, $03, nRst, $03
0005FC C9038003C20CBD02 	dc.b nC6, $03, nRst, $03, nF5, $0C, nC5, $02
000604 8001C003C203C403 	dc.b nRst, $01, nEb5, $03, nF5, $03, nG5, $03
00060C C703C802C907C403 	dc.b nBb5, $03, nB5, $02, nC6, $07, nG5, $03
000614 8003C9038003C806 	dc.b nRst, $03, nC6, $03, nRst, $03, nB5, $06
00061C C302C401C303C403 	dc.b nFs5, $02, nG5, $01, nFs5, $03, nG5, $03
000624 C503C403C503C603 	dc.b nAb5, $03, nG5, $03, nAb5, $03, nA5, $03
00062C C708C3018006C703 	dc.b nBb5, $08, nFs5, $01, nRst, $06, nBb5, $03
000634 8003C406C0088001 	dc.b nRst, $03, nG5, $06, nEb5, $08, nRst, $01
00063C C2038003C3038003 	dc.b nF5, $03, nRst, $03, nFs5, $03, nRst, $03
000644 C4038003C203C103 	dc.b nG5, $03, nRst, $03, nF5, $03, nE5, $03
00064C 8003C2038003C403 	dc.b nRst, $03, nF5, $03, nRst, $03, nG5, $03
000654 C403807F7F7F18   	dc.b nG5, $03, nRst, $7F, $7F, $7F, $18
00065B                  	smpsAlterVol		$02
00065B E602             	dc.b	$E6,$02
00065D BC02BD39BE01BF0B 	dc.b nB4, $02, nC5, $39, nCs5, $01, nD5, $0B
000665 BD01BC0BBA01B80B 	dc.b nC5, $01, nB4, $0B, nA4, $01, nG4, $0B
00066D BA01BD3CBC0BBA01 	dc.b nA4, $01, nC5, $3C, nB4, $0B, nA4, $01
000675 B80BB701B50B8001 	dc.b nG4, $0B, nFs4, $01, nE4, $0B, nRst, $01
00067D BA39BC02BD01BF0B 	dc.b nA4, $39, nB4, $02, nC5, $01, nD5, $0B
000685 BD01BC0BBA01B80B 	dc.b nC5, $01, nB4, $0B, nA4, $01, nG4, $0B
00068D B701B62F8001B81E 	dc.b nFs4, $01, nF4, $2F, nRst, $01, nG4, $1E
000695 807F7F46         	dc.b nRst, $7F, $7F, $46
000699                  	smpsFMvoice		$05
                        	;if song<>""
                        	if 1==2
                        	else
000699 EF05             		dc.b $EF,$05
                        	endif
00069B 12               	dc.b $12
00069C                  	smpsAlterVol		$FE
00069C E6FE             	dc.b	$E6,$FE
00069E C406CD098003CD06 	dc.b nG5, $06, nE6, $09, nRst, $03, nE6, $06
0006A6 CE06CD06D006CD05 	dc.b nF6, $06, nE6, $06, nG6, $06, nE6, $05
0006AE 8001CD06C906     	dc.b nRst, $01, nE6, $06, nC6, $06
0006B4                  	smpsAlterVol		$0A
0006B4 E60A             	dc.b	$E6,$0A
0006B6                  	smpsJump	Maniax_FM3_Loop,Target
0006B6 F6               	dc.b	$F6
                        	if (Maniax_FM3_Loop<*)
0006B7                  		rom_ptr_z80(Maniax_FM3_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
0006B7 3784             	dc.w  ((((((Maniax_FM3_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_FM3_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0006B9                  Maniax_FM4:
0006B9                  	smpsPan		$C0
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
0006B9 E0C0             		dc.b $E0,$C0
                        	endif
0006BB                  	smpsFMvoice		$06
                        	;if song<>""
                        	if 1==2
                        	else
0006BB EF06             		dc.b $EF,$06
                        	endif
0006BD 801E             	dc.b nRst, $1E

0006BF                  Maniax_FM4_Loop:
0006BF B1028007B1028007 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $07
0006C7 B1028004B1028004 	dc.b nC4, $02, nRst, $04, nC4, $02, nRst, $04
0006CF AE028001AC028004 	dc.b nA3, $02, nRst, $01, nG3, $02, nRst, $04
0006D7 B1028007B1028007 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $07
0006DF B1028007B1028004 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $04
0006E7 B1028004AE028001 	dc.b nC4, $02, nRst, $04, nA3, $02, nRst, $01
0006EF AC028004B1028001 	dc.b nG3, $02, nRst, $04, nC4, $02, nRst, $01
0006F7 B3028001B5028001 	dc.b nD4, $02, nRst, $01, nE4, $02, nRst, $01
0006FF B1028007B1028007 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $07
000707 B1028004B1028004 	dc.b nC4, $02, nRst, $04, nC4, $02, nRst, $04
00070F AE028001AC028004 	dc.b nA3, $02, nRst, $01, nG3, $02, nRst, $04
000717 B1028007B1028004 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $04
00071F B1028001AE028001 	dc.b nC4, $02, nRst, $01, nA3, $02, nRst, $01
000727 B1028001AE028001 	dc.b nC4, $02, nRst, $01, nA3, $02, nRst, $01
00072F B1028001B1028001 	dc.b nC4, $02, nRst, $01, nC4, $02, nRst, $01
000737 B1028004B1028001 	dc.b nC4, $02, nRst, $04, nC4, $02, nRst, $01
00073F AE028001B1028001 	dc.b nA3, $02, nRst, $01, nC4, $02, nRst, $01
000747 AE028001B1028001 	dc.b nA3, $02, nRst, $01, nC4, $02, nRst, $01
00074F B3028001B1028007 	dc.b nD4, $02, nRst, $01, nC4, $02, nRst, $07
000757 B1028007B1028004 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $04
00075F B1028004AE028001 	dc.b nC4, $02, nRst, $04, nA3, $02, nRst, $01
000767 AC028004B1028007 	dc.b nG3, $02, nRst, $04, nC4, $02, nRst, $07
00076F B1028007B1028007 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $07
000777 B1028004B1028004 	dc.b nC4, $02, nRst, $04, nC4, $02, nRst, $04
00077F AE028001AC028004 	dc.b nA3, $02, nRst, $01, nG3, $02, nRst, $04
000787 B1028001B3028001 	dc.b nC4, $02, nRst, $01, nD4, $02, nRst, $01
00078F B5028001B1028007 	dc.b nE4, $02, nRst, $01, nC4, $02, nRst, $07
000797 B1028007B1028004 	dc.b nC4, $02, nRst, $07, nC4, $02, nRst, $04
00079F B1028004AE028001 	dc.b nC4, $02, nRst, $04, nA3, $02, nRst, $01
0007A7 AC028004B1028007 	dc.b nG3, $02, nRst, $04, nC4, $02, nRst, $07
0007AF B1028004B1028001 	dc.b nC4, $02, nRst, $04, nC4, $02, nRst, $01
0007B7 AE028001B1028001 	dc.b nA3, $02, nRst, $01, nC4, $02, nRst, $01
0007BF AE028001B1028001 	dc.b nA3, $02, nRst, $01, nC4, $02, nRst, $01
0007C7 B1028001B1028004 	dc.b nC4, $02, nRst, $01, nC4, $02, nRst, $04
0007CF B1028001AE028001 	dc.b nC4, $02, nRst, $01, nA3, $02, nRst, $01
0007D7 B1028001AE028001 	dc.b nC4, $02, nRst, $01, nA3, $02, nRst, $01
0007DF B1028001B302     	dc.b nC4, $02, nRst, $01, nD4, $02
0007E5                  	smpsAlterNote	$00
0007E5 E100             	dc.b	$E1,$00
0007E7 8060606060606060 	dc.b nRst, $60, $60, $60, $60, $60, $60, $60
0007EF 6060606060606060 	dc.b $60, $60, $60, $60, $60, $60, $60, $60
0007F7 6060606060606060 	dc.b $60, $60, $60, $60, $60, $60, $60, $60
0007FF 6001             	dc.b $60, $01
000801                  	smpsJump	Maniax_FM4_Loop,Target
000801 F6               	dc.b	$F6
                        	if (Maniax_FM4_Loop<*)
000802                  		rom_ptr_z80(Maniax_FM4_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
000802 BF86             	dc.w  ((((((Maniax_FM4_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_FM4_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000804                  Maniax_FM5:
000804                  	smpsPan		$C0
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
000804 E0C0             		dc.b $E0,$C0
                        	endif
000806                  	smpsFMvoice		$07
                        	;if song<>""
                        	if 1==2
                        	else
000806 EF07             		dc.b $EF,$07
                        	endif
000808 801E             	dc.b nRst, $1E

00080A                  Maniax_FM5_Loop:
00080A B012AE12B012AE12 	dc.b nB3, $12, nA3, $12, nB3, $12, nA3, $12
000812 B00CAE0CB112B012 	dc.b nB3, $0C, nA3, $0C, nC4, $12, nB3, $12
00081A AE3CAE12B112B10C 	dc.b nA3, $3C, nA3, $12, nC4, $12, nC4, $0C
000822 AE12B012B10CB112 	dc.b nA3, $12, nB3, $12, nC4, $0C, nC4, $12
00082A B04E806060606060 	dc.b nB3, $4E, nRst, $60, $60, $60, $60, $60
000832 606060B330B530B5 	dc.b $60, $60, $60, nD4, $30, nE4, $30, nE4
00083A 30B730B630B430B4 	dc.b $30, nFs4, $30, nF4, $30, nEb4, $30, nEb4
000842 30B606B603B606B6 	dc.b $30, nF4, $06, nF4, $03, nF4, $06, nF4
00084A 06B603B606       	dc.b $06, nF4, $03, nF4, $06
00084F                  	smpsAlterNote	$00
00084F E100             	dc.b	$E1,$00
000851 8075757575757575 	dc.b nRst, $75, $75, $75, $75, $75, $75, $75
000859 757575           	dc.b $75, $75, $75
00085C                  	smpsJump	Maniax_FM5_Loop,Target
00085C F6               	dc.b	$F6
                        	if (Maniax_FM5_Loop<*)
00085D                  		rom_ptr_z80(Maniax_FM5_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
00085D 0A88             	dc.w  ((((((Maniax_FM5_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_FM5_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00085F                  Maniax_FM6:
00085F                  	smpsPan		$C0
       = 000000         panNone set $00
       = 000040         panRight set $40
       = 000080         panLeft set $80
       = 0000C0         panCentre set $C0
       = 0000C0         panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if 1==2
                        	else
00085F E0C0             		dc.b $E0,$C0
                        	endif
000861                  	smpsFMvoice		$08
                        	;if song<>""
                        	if 1==2
                        	else
000861 EF08             		dc.b $EF,$08
                        	endif
000863 801E             	dc.b nRst, $1E

000865                  Maniax_FM6_Loop:
000865 807F1DAE038003AC 	dc.b nRst, $7F, $1D, nA3, $03, nRst, $03, nG3
00086D 038003B1038003B0 	dc.b $03, nRst, $03, nC4, $03, nRst, $03, nB3
000875 03B1038006AC03AE 	dc.b $03, nC4, $03, nRst, $06, nG3, $03, nA3
00087D 03B1308030B10680 	dc.b $03, nC4, $30, nRst, $30, nC4, $06, nRst
000885 0CB34E804EAC03AE 	dc.b $0C, nD4, $4E, nRst, $4E, nG3, $03, nA3
00088D 03B106AE028052AC 	dc.b $03, nC4, $06, nA3, $02, nRst, $52, nG3
000895 03AE03B1028001B1 	dc.b $03, nA3, $03, nC4, $02, nRst, $01, nC4
00089D 028001AE03AC0380 	dc.b $02, nRst, $01, nA3, $03, nG3, $03, nRst
0008A5 48B1038003AE0380 	dc.b $48, nC4, $03, nRst, $03, nA3, $03, nRst
0008AD 03B303B5038003B5 	dc.b $03, nD4, $03, nE4, $03, nRst, $03, nE4
0008B5 038036B5038009B1 	dc.b $03, nRst, $36, nE4, $03, nRst, $09, nC4
0008BD 038009AC028001AC 	dc.b $03, nRst, $09, nG3, $02, nRst, $01, nG3
0008C5 028001B003B103AB 	dc.b $02, nRst, $01, nB3, $03, nC4, $03, nFs3
0008CD 03AC03804EAC03AE 	dc.b $03, nG3, $03, nRst, $4E, nG3, $03, nA3
0008D5 03B106AE028052AC 	dc.b $03, nC4, $06, nA3, $02, nRst, $52, nG3
0008DD 028001AC028001B1 	dc.b $02, nRst, $01, nG3, $02, nRst, $01, nC4
0008E5 028001B1028001B3 	dc.b $02, nRst, $01, nC4, $02, nRst, $01, nD4
0008ED 03B5038047BF0180 	dc.b $03, nE4, $03, nRst, $47, nD5, $01, nRst
0008F5 03B3028001AE03B1 	dc.b $03, nD4, $02, nRst, $01, nA3, $03, nC4
0008FD 038003B103AE0680 	dc.b $03, nRst, $03, nC4, $03, nA3, $06, nRst
000905 36AC028001AC0280 	dc.b $36, nG3, $02, nRst, $01, nG3, $02, nRst
00090D 01B1028001B10280 	dc.b $01, nC4, $02, nRst, $01, nC4, $02, nRst
000915 01AC028001AC0280 	dc.b $01, nG3, $02, nRst, $01, nG3, $02, nRst
00091D 01B1038003B10380 	dc.b $01, nC4, $03, nRst, $03, nC4, $03, nRst
000925 06B0038006AF0680 	dc.b $06, nB3, $03, nRst, $06, nBb3, $06, nRst
00092D 7F1ABF038003BF03 	dc.b $7F, $1A, nD5, $03, nRst, $03, nD5, $03
000935 8027B6038003B203 	dc.b nRst, $27, nF4, $03, nRst, $03, nCs4, $03
00093D 8027B8038003B803 	dc.b nRst, $27, nG4, $03, nRst, $03, nG4, $03
000945 8027B8038003B403 	dc.b nRst, $27, nG4, $03, nRst, $03, nEb4, $03
00094D 8018B8038003B603 	dc.b nRst, $18, nG4, $03, nRst, $03, nF4, $03
000955 B5038003B6038003 	dc.b nE4, $03, nRst, $03, nF4, $03, nRst, $03
00095D B803B8038063AC03 	dc.b nG4, $03, nG4, $03, nRst, $63, nG3, $03
000965 AE03B106AE028052 	dc.b nA3, $03, nC4, $06, nA3, $02, nRst, $52
00096D AC03AE03B1028001 	dc.b nG3, $03, nA3, $03, nC4, $02, nRst, $01
000975 B1028001AE03AC03 	dc.b nC4, $02, nRst, $01, nA3, $03, nG3, $03
00097D 8045AE02BD018003 	dc.b nRst, $45, nA3, $02, nC5, $01, nRst, $03
000985 B103AC03B1038003 	dc.b nC4, $03, nG3, $03, nC4, $03, nRst, $03
00098D B103AE068036B103 	dc.b nC4, $03, nA3, $06, nRst, $36, nC4, $03
000995 8003B3038003B503 	dc.b nRst, $03, nD4, $03, nRst, $03, nE4, $03
00099D 8003B6038003B503 	dc.b nRst, $03, nF4, $03, nRst, $03, nE4, $03
0009A5 B3038003B5038003 	dc.b nD4, $03, nRst, $03, nE4, $03, nRst, $03
0009AD B133801EAC03AE03 	dc.b nC4, $33, nRst, $1E, nG3, $03, nA3, $03
0009B5 B106AE028052AC02 	dc.b nC4, $06, nA3, $02, nRst, $52, nG3, $02
0009BD 8001AC028001B102 	dc.b nRst, $01, nG3, $02, nRst, $01, nC4, $02
0009C5 8001B1028001B303 	dc.b nRst, $01, nC4, $02, nRst, $01, nD4, $03
0009CD B5038047BF018003 	dc.b nE4, $03, nRst, $47, nD5, $01, nRst, $03
0009D5 BD028001AC03B103 	dc.b nC5, $02, nRst, $01, nG3, $03, nC4, $03
0009DD 8003AC03AE06802A 	dc.b nRst, $03, nG3, $03, nA3, $06, nRst, $2A
0009E5 B5058007B1058007 	dc.b nE4, $05, nRst, $07, nC4, $05, nRst, $07
0009ED AE058007AC0CAE03 	dc.b nA3, $05, nRst, $07, nG3, $0C, nA3, $03
0009F5 8003AF0F8003AE0F 	dc.b nRst, $03, nBb3, $0F, nRst, $03, nA3, $0F
0009FD 8003AC0F8003AA0F 	dc.b nRst, $03, nG3, $0F, nRst, $03, nF3, $0F
000A05 8003B5038009B303 	dc.b nRst, $03, nE4, $03, nRst, $09, nD4, $03
000A0D 8009AE0F8003B00F 	dc.b nRst, $09, nA3, $0F, nRst, $03, nB3, $0F
000A15 8003B10F8003B30F 	dc.b nRst, $03, nC4, $0F, nRst, $03, nD4, $0F
000A1D 8003B5038009BA03 	dc.b nRst, $03, nE4, $03, nRst, $09, nA4, $03
000A25 8009B90F8003B80F 	dc.b nRst, $09, nAb4, $0F, nRst, $03, nG4, $0F
000A2D 8003B60F8003B40F 	dc.b nRst, $03, nF4, $0F, nRst, $03, nEb4, $0F
000A35 8003B3038009B103 	dc.b nRst, $03, nD4, $03, nRst, $09, nC4, $03
000A3D 800FAC06AE06AC0C 	dc.b nRst, $0F, nG3, $06, nA3, $06, nG3, $0C
000A45 8006AC06B5098003 	dc.b nRst, $06, nG3, $06, nE4, $09, nRst, $03
000A4D B506B606B506B806 	dc.b nE4, $06, nF4, $06, nE4, $06, nG4, $06
000A55 B5038003B506B106 	dc.b nE4, $03, nRst, $03, nE4, $06, nC4, $06
000A5D                  	smpsJump	Maniax_FM6_Loop,Target
000A5D F6               	dc.b	$F6
                        	if (Maniax_FM6_Loop<*)
000A5E                  		rom_ptr_z80(Maniax_FM6_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
000A5E 6588             	dc.w  ((((((Maniax_FM6_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_FM6_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000A60                  Maniax_PSG1:
000A60 801E             	dc.b nRst, $1E

000A62                  Maniax_PSG1_Loop:
000A62 A9028001A7028001 	dc.b nE3, $02, nRst, $01, nD3, $02, nRst, $01
000A6A A9028001         	dc.b nE3, $02, nRst, $01
000A6E                  	smpsSetVol	$01
000A6E EC01             	dc.b	$EC,$01
000A70 A7028001A9028001 	dc.b nD3, $02, nRst, $01, nE3, $02, nRst, $01
000A78 A7028001A9028001 	dc.b nD3, $02, nRst, $01, nE3, $02, nRst, $01
000A80                  	smpsSetVol	$01
000A80 EC01             	dc.b	$EC,$01
000A82 A7028001A9028001 	dc.b nD3, $02, nRst, $01, nE3, $02, nRst, $01
000A8A                  	smpsSetVol	$01
000A8A EC01             	dc.b	$EC,$01
000A8C A7028001A9028001 	dc.b nD3, $02, nRst, $01, nE3, $02, nRst, $01
000A94 A7028001         	dc.b nD3, $02, nRst, $01
000A98                  	smpsSetVol	$01
000A98 EC01             	dc.b	$EC,$01
000A9A A9028001A7028001 	dc.b nE3, $02, nRst, $01, nD3, $02, nRst, $01
000AA2 A9028001A7028001 	dc.b nE3, $02, nRst, $01, nD3, $02, nRst, $01
000AAA A9028001A7028001 	dc.b nE3, $02, nRst, $01, nD3, $02, nRst, $01
000AB2 A9028001A7028001 	dc.b nE3, $02, nRst, $01, nD3, $02, nRst, $01
000ABA                  	smpsSetVol	$01
000ABA EC01             	dc.b	$EC,$01
000ABC A9028001A7028001 	dc.b nE3, $02, nRst, $01, nD3, $02, nRst, $01
000AC4 A9028001A7028001 	dc.b nE3, $02, nRst, $01, nD3, $02, nRst, $01
000ACC A902800180028001 	dc.b nE3, $02, nRst, $01, nRst, $02, nRst, $01
000AD4 8002800180028001 	dc.b nRst, $02, nRst, $01, nRst, $02, nRst, $01
000ADC 8002800180028001 	dc.b nRst, $02, nRst, $01, nRst, $02, nRst, $01
000AE4 8002800180028060 	dc.b nRst, $02, nRst, $01, nRst, $02, nRst, $60
000AEC 6060606060606060 	dc.b $60, $60, $60, $60, $60, $60, $60, $60
000AF4 6060606060606060 	dc.b $60, $60, $60, $60, $60, $60, $60, $60
000AFC 60606060606001   	dc.b $60, $60, $60, $60, $60, $60, $01
000B03                  	smpsSetVol	$F7
000B03 ECF7             	dc.b	$EC,$F7
000B05 9B0280019E028001 	dc.b nD2, $02, nRst, $01, nF2, $02, nRst, $01
000B0D A2028001A3028001 	dc.b nA2, $02, nRst, $01, nBb2, $02, nRst, $01
000B15 A7028001A3028001 	dc.b nD3, $02, nRst, $01, nBb2, $02, nRst, $01
000B1D A20280019E028001 	dc.b nA2, $02, nRst, $01, nF2, $02, nRst, $01
000B25 9B0280019E028001 	dc.b nD2, $02, nRst, $01, nF2, $02, nRst, $01
000B2D A2028001A3028001 	dc.b nA2, $02, nRst, $01, nBb2, $02, nRst, $01
000B35 A7028001A3028001 	dc.b nD3, $02, nRst, $01, nBb2, $02, nRst, $01
000B3D A20280019E028001 	dc.b nA2, $02, nRst, $01, nF2, $02, nRst, $01
000B45 9B0280019E028001 	dc.b nD2, $02, nRst, $01, nF2, $02, nRst, $01
000B4D A2028001A3028001 	dc.b nA2, $02, nRst, $01, nBb2, $02, nRst, $01
000B55 A7028001A3028001 	dc.b nD3, $02, nRst, $01, nBb2, $02, nRst, $01
000B5D A20280019E028001 	dc.b nA2, $02, nRst, $01, nF2, $02, nRst, $01
000B65 9B0280019E028001 	dc.b nD2, $02, nRst, $01, nF2, $02, nRst, $01
000B6D A2028001A3028001 	dc.b nA2, $02, nRst, $01, nBb2, $02, nRst, $01
000B75 A7028001A3028001 	dc.b nD3, $02, nRst, $01, nBb2, $02, nRst, $01
000B7D A20280019E028001 	dc.b nA2, $02, nRst, $01, nF2, $02, nRst, $01
000B85 9D028001A0028001 	dc.b nE2, $02, nRst, $01, nG2, $02, nRst, $01
000B8D A4028001A5028001 	dc.b nB2, $02, nRst, $01, nC3, $02, nRst, $01
000B95 A9028001A5028001 	dc.b nE3, $02, nRst, $01, nC3, $02, nRst, $01
000B9D A4028001A0028001 	dc.b nB2, $02, nRst, $01, nG2, $02, nRst, $01
000BA5 9D028001A0028001 	dc.b nE2, $02, nRst, $01, nG2, $02, nRst, $01
000BAD A4028001A5028001 	dc.b nB2, $02, nRst, $01, nC3, $02, nRst, $01
000BB5 A9028001A5028001 	dc.b nE3, $02, nRst, $01, nC3, $02, nRst, $01
000BBD A4028001A0028001 	dc.b nB2, $02, nRst, $01, nG2, $02, nRst, $01
000BC5 9D028001A0028001 	dc.b nE2, $02, nRst, $01, nG2, $02, nRst, $01
000BCD A4028001A5028001 	dc.b nB2, $02, nRst, $01, nC3, $02, nRst, $01
000BD5 A9028001A5028001 	dc.b nE3, $02, nRst, $01, nC3, $02, nRst, $01
000BDD A4028001A0028001 	dc.b nB2, $02, nRst, $01, nG2, $02, nRst, $01
000BE5 9D028001A0028001 	dc.b nE2, $02, nRst, $01, nG2, $02, nRst, $01
000BED A4028001A5028001 	dc.b nB2, $02, nRst, $01, nC3, $02, nRst, $01
000BF5 A9028001A5028001 	dc.b nE3, $02, nRst, $01, nC3, $02, nRst, $01
000BFD A4028001A0028001 	dc.b nB2, $02, nRst, $01, nG2, $02, nRst, $01
000C05 9C028001A0028001 	dc.b nEb2, $02, nRst, $01, nG2, $02, nRst, $01
000C0D A1028001A5028001 	dc.b nAb2, $02, nRst, $01, nC3, $02, nRst, $01
000C15 A8028001A5028001 	dc.b nEb3, $02, nRst, $01, nC3, $02, nRst, $01
000C1D A1028001A0028001 	dc.b nAb2, $02, nRst, $01, nG2, $02, nRst, $01
000C25 9C028001A0028001 	dc.b nEb2, $02, nRst, $01, nG2, $02, nRst, $01
000C2D A1028001A5028001 	dc.b nAb2, $02, nRst, $01, nC3, $02, nRst, $01
000C35 A8028001A5028001 	dc.b nEb3, $02, nRst, $01, nC3, $02, nRst, $01
000C3D A1028001A0028001 	dc.b nAb2, $02, nRst, $01, nG2, $02, nRst, $01
000C45 9C028001A0028001 	dc.b nEb2, $02, nRst, $01, nG2, $02, nRst, $01
000C4D A1028001A5028001 	dc.b nAb2, $02, nRst, $01, nC3, $02, nRst, $01
000C55 A8028001A5028001 	dc.b nEb3, $02, nRst, $01, nC3, $02, nRst, $01
000C5D A1028001A0028001 	dc.b nAb2, $02, nRst, $01, nG2, $02, nRst, $01
000C65 9C028001A0028001 	dc.b nEb2, $02, nRst, $01, nG2, $02, nRst, $01
000C6D A1028001A5028001 	dc.b nAb2, $02, nRst, $01, nC3, $02, nRst, $01
000C75 A8028001A5028001 	dc.b nEb3, $02, nRst, $01, nC3, $02, nRst, $01
000C7D A1028001A0028001 	dc.b nAb2, $02, nRst, $01, nG2, $02, nRst, $01
000C85 A9038003A9038003 	dc.b nE3, $03, nRst, $03, nE3, $03, nRst, $03
000C8D A9038003A9038003 	dc.b nE3, $03, nRst, $03, nE3, $03, nRst, $03
000C95 A9038003A9038003 	dc.b nE3, $03, nRst, $03, nE3, $03, nRst, $03
000C9D A9038003A9038003 	dc.b nE3, $03, nRst, $03, nE3, $03, nRst, $03
000CA5 A9038003A9038003 	dc.b nE3, $03, nRst, $03, nE3, $03, nRst, $03
000CAD A9038003A9038003 	dc.b nE3, $03, nRst, $03, nE3, $03, nRst, $03
000CB5 A9038003A9038003 	dc.b nE3, $03, nRst, $03, nE3, $03, nRst, $03
000CBD A9038003A903     	dc.b nE3, $03, nRst, $03, nE3, $03
000CC3                  	smpsAlterNote	$00
000CC3 E100             	dc.b	$E1,$00
000CC5 8003             	dc.b nRst, $03
000CC7                  	smpsSetVol	$04
000CC7 EC04             	dc.b	$EC,$04
000CC9                  	smpsJump	Maniax_PSG1_Loop,Target	
000CC9 F6               	dc.b	$F6
                        	if (Maniax_PSG1_Loop<*)
000CCA                  		rom_ptr_z80(Maniax_PSG1_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
000CCA 628A             	dc.w  ((((((Maniax_PSG1_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_PSG1_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000CCC                  Maniax_PSG2:
000CCC                  	smpsModSet	$00, $02, $00, $02
000CCC F000020002       	dc.b	$F0,$00,$02,$00,$02
000CD1 801E             	dc.b nRst, $1E

000CD3                  Maniax_PSG2_Loop:
000CD3 807F7F7F1BA506A2 	dc.b nRst, $7F, $7F, $7F, $1B, nC3, $06, nA2
000CDB 0CA506A40CA506A4 	dc.b $0C, nC3, $06, nB2, $0C, nC3, $06, nB2
000CE3 0CA024A206A906A7 	dc.b $0C, nG2, $24, nA2, $06, nE3, $06, nD3
000CEB 0CA506A40CA506A4 	dc.b $0C, nC3, $06, nB2, $0C, nC3, $06, nB2
000CF3 0CA02AA506A20CA5 	dc.b $0C, nG2, $2A, nC3, $06, nA2, $0C, nC3
000CFB 06A40CA506A40CA0 	dc.b $06, nB2, $0C, nC3, $06, nB2, $0C, nG2
000D03 24A206A2069E0CA2 	dc.b $24, nA2, $06, nA2, $06, nF2, $0C, nA2
000D0B 06A00CA206A00C99 	dc.b $06, nG2, $0C, nA2, $06, nG2, $0C, nC2
000D13 2AA506A20CA506A4 	dc.b $2A, nC3, $06, nA2, $0C, nC3, $06, nB2
000D1B 0CA506A40CA024A2 	dc.b $0C, nC3, $06, nB2, $0C, nG2, $24, nA2
000D23 06A206A00CA506A4 	dc.b $06, nA2, $06, nG2, $0C, nC3, $06, nB2
000D2B 0CA506A40CA02AA5 	dc.b $0C, nC3, $06, nB2, $0C, nG2, $2A, nC3
000D33 06A20CA506A40CA5 	dc.b $06, nA2, $0C, nC3, $06, nB2, $0C, nC3
000D3B 06A40CA024A206A2 	dc.b $06, nB2, $0C, nG2, $24, nA2, $06, nA2
000D43 069E0CA206A00CA2 	dc.b $06, nF2, $0C, nA2, $06, nG2, $0C, nA2
000D4B 06A00C99099D099B 	dc.b $06, nG2, $0C, nC2, $09, nE2, $09, nD2
000D53 0C807F7F7F0FA506 	dc.b $0C, nRst, $7F, $7F, $7F, $0F, nC3, $06
000D5B A20CA506A40CA506 	dc.b nA2, $0C, nC3, $06, nB2, $0C, nC3, $06
000D63 A40CA024A206A906 	dc.b nB2, $0C, nG2, $24, nA2, $06, nE3, $06
000D6B A70CA506A40CA506 	dc.b nD3, $0C, nC3, $06, nB2, $0C, nC3, $06
000D73 A40CA02AA506A20C 	dc.b nB2, $0C, nG2, $2A, nC3, $06, nA2, $0C
000D7B A506A40CA506A40C 	dc.b nC3, $06, nB2, $0C, nC3, $06, nB2, $0C
000D83 A024A206A2069E0C 	dc.b nG2, $24, nA2, $06, nA2, $06, nF2, $0C
000D8B A206A00CA206A00C 	dc.b nA2, $06, nG2, $0C, nA2, $06, nG2, $0C
000D93 992AA506A20CA506 	dc.b nC2, $2A, nC3, $06, nA2, $0C, nC3, $06
000D9B A40CA506A40CA024 	dc.b nB2, $0C, nC3, $06, nB2, $0C, nG2, $24
000DA3 A206A206A00CA506 	dc.b nA2, $06, nA2, $06, nG2, $0C, nC3, $06
000DAB A40CA506A40CA02A 	dc.b nB2, $0C, nC3, $06, nB2, $0C, nG2, $2A
000DB3 A506A20CA506A40C 	dc.b nC3, $06, nA2, $0C, nC3, $06, nB2, $0C
000DBB A506A40CA024A206 	dc.b nC3, $06, nB2, $0C, nG2, $24, nA2, $06
000DC3 A2069E0CA206A00C 	dc.b nA2, $06, nF2, $0C, nA2, $06, nG2, $0C
000DCB A206A00C990C9D06 	dc.b nA2, $06, nG2, $0C, nC2, $0C, nE2, $06
000DD3 9B47800799069B06 	dc.b nD2, $47, nRst, $07, nC2, $06, nD2, $06
000DDB 9D4E80069906A206 	dc.b nE2, $4E, nRst, $06, nC2, $06, nA2, $06
000DE3 9D069C4880069906 	dc.b nE2, $06, nEb2, $48, nRst, $06, nC2, $06
000DEB 9C069B66         	dc.b nEb2, $06, nD2, $66
000DEF                  	smpsJump	Maniax_PSG2_Loop,Target	
000DEF F6               	dc.b	$F6
                        	if (Maniax_PSG2_Loop<*)
000DF0                  		rom_ptr_z80(Maniax_PSG2_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
000DF0 D38C             	dc.w  ((((((Maniax_PSG2_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_PSG2_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000DF2                  Maniax_PSG3:
000DF2                  	smpsAlterNote	$00
000DF2 E100             	dc.b	$E1,$00
000DF4                  	smpsPSGvoice	$0C
000DF4 F50C             	dc.b	$F5,$0C
000DF6 801E             	dc.b nRst, $1E

000DF8                  Maniax_PSG3_Loop:
000DF8 9803800698038006 	dc.b nB1, $03, nRst, $06, nB1, $03, nRst, $06
000E00 9603800696038006 	dc.b nA1, $03, nRst, $06, nA1, $03, nRst, $06
000E08 9803800698038006 	dc.b nB1, $03, nRst, $06, nB1, $03, nRst, $06
000E10 9603800696038006 	dc.b nA1, $03, nRst, $06, nA1, $03, nRst, $06
000E18 9803800996038009 	dc.b nB1, $03, nRst, $09, nA1, $03, nRst, $09
000E20 9903800699038006 	dc.b nC2, $03, nRst, $06, nC2, $03, nRst, $06
000E28 9803800698038006 	dc.b nB1, $03, nRst, $06, nB1, $03, nRst, $06
000E30 9603800696038006 	dc.b nA1, $03, nRst, $06, nA1, $03, nRst, $06
000E38                  	smpsSetVol	$01
000E38 EC01             	dc.b	$EC,$01
000E3A 96038006         	dc.b nA1, $03, nRst, $06
000E3E                  	smpsSetVol	$02
000E3E EC02             	dc.b	$EC,$02
000E40 96038006         	dc.b nA1, $03, nRst, $06
000E44                  	smpsSetVol	$02
000E44 EC02             	dc.b	$EC,$02
000E46 9603800696038006 	dc.b nA1, $03, nRst, $06, nA1, $03, nRst, $06
000E4E                  	smpsSetVol	$01
000E4E EC01             	dc.b	$EC,$01
000E50 96038003         	dc.b nA1, $03, nRst, $03
000E54                  	smpsSetVol	$FA
000E54 ECFA             	dc.b	$EC,$FA
000E56 9603800696038006 	dc.b nA1, $03, nRst, $06, nA1, $03, nRst, $06
000E5E 9803800698038006 	dc.b nB1, $03, nRst, $06, nB1, $03, nRst, $06
000E66 9903800996038006 	dc.b nC2, $03, nRst, $09, nA1, $03, nRst, $06
000E6E 9603800698038006 	dc.b nA1, $03, nRst, $06, nB1, $03, nRst, $06
000E76 9803800699038009 	dc.b nB1, $03, nRst, $06, nC2, $03, nRst, $09
000E7E 9903800699038006 	dc.b nC2, $03, nRst, $06, nC2, $03, nRst, $06
000E86 9803800698038006 	dc.b nB1, $03, nRst, $06, nB1, $03, nRst, $06
000E8E 9803980380039803 	dc.b nB1, $03, nB1, $03, nRst, $03, nB1, $03
000E96 8006             	dc.b nRst, $06
000E98                  	smpsSetVol	$01
000E98 EC01             	dc.b	$EC,$01
000E9A 98038006         	dc.b nB1, $03, nRst, $06
000E9E                  	smpsSetVol	$02
000E9E EC02             	dc.b	$EC,$02
000EA0 98038006         	dc.b nB1, $03, nRst, $06
000EA4                  	smpsSetVol	$02
000EA4 EC02             	dc.b	$EC,$02
000EA6 98038006         	dc.b nB1, $03, nRst, $06
000EAA                  	smpsSetVol	$01
000EAA EC01             	dc.b	$EC,$01
000EAC 980380069803806B 	dc.b nB1, $03, nRst, $06, nB1, $03, nRst, $6B
000EB4 6B6B6B6B6B6B6B6B 	dc.b $6B, $6B, $6B, $6B, $6B, $6B, $6B, $6B
000EBC 6B6B6B6B6B6B6B6B 	dc.b $6B, $6B, $6B, $6B, $6B, $6B, $6B, $6B
000EC4 6B03             	dc.b $6B, $03
000EC6                  	smpsSetVol	$FA
000EC6 ECFA             	dc.b	$EC,$FA
000EC8 9703800397038009 	dc.b nBb1, $03, nRst, $03, nBb1, $03, nRst, $09
000ED0 9703800697038006 	dc.b nBb1, $03, nRst, $06, nBb1, $03, nRst, $06
000ED8 9703800397038003 	dc.b nBb1, $03, nRst, $03, nBb1, $03, nRst, $03
000EE0 9703800397039703 	dc.b nBb1, $03, nRst, $03, nBb1, $03, nBb1, $03
000EE8 8003970380069703 	dc.b nRst, $03, nBb1, $03, nRst, $06, nBb1, $03
000EF0 8009970380099903 	dc.b nRst, $09, nBb1, $03, nRst, $09, nC2, $03
000EF8 8003990380099903 	dc.b nRst, $03, nC2, $03, nRst, $09, nC2, $03
000F00 8006990380069903 	dc.b nRst, $06, nC2, $03, nRst, $06, nC2, $03
000F08 8003990380039903 	dc.b nRst, $03, nC2, $03, nRst, $03, nC2, $03
000F10 8003990399038003 	dc.b nRst, $03, nC2, $03, nC2, $03, nRst, $03
000F18 9903800699038009 	dc.b nC2, $03, nRst, $06, nC2, $03, nRst, $09
000F20 9903800999038003 	dc.b nC2, $03, nRst, $09, nC2, $03, nRst, $03
000F28 9903800999038006 	dc.b nC2, $03, nRst, $09, nC2, $03, nRst, $06
000F30 9903800699038003 	dc.b nC2, $03, nRst, $06, nC2, $03, nRst, $03
000F38 9903800399038003 	dc.b nC2, $03, nRst, $03, nC2, $03, nRst, $03
000F40 9903990380039903 	dc.b nC2, $03, nC2, $03, nRst, $03, nC2, $03
000F48 8006990380099903 	dc.b nRst, $06, nC2, $03, nRst, $09, nC2, $03
000F50 8009990380039903 	dc.b nRst, $09, nC2, $03, nRst, $03, nC2, $03
000F58 8009990380069903 	dc.b nRst, $09, nC2, $03, nRst, $06, nC2, $03
000F60 8006990380099903 	dc.b nRst, $06, nC2, $03, nRst, $09, nC2, $03
000F68 8003990380039903 	dc.b nRst, $03, nC2, $03, nRst, $03, nC2, $03
000F70 8003990380039903 	dc.b nRst, $03, nC2, $03, nRst, $03, nC2, $03
000F78 8003990380039903 	dc.b nRst, $03, nC2, $03, nRst, $03, nC2, $03
000F80                  	smpsAlterNote	$00
000F80 E100             	dc.b	$E1,$00
000F82 8003             	dc.b nRst, $03
000F84                  	smpsJump	Maniax_PSG3_Loop,Target	
000F84 F6               	dc.b	$F6
                        	if (Maniax_PSG3_Loop<*)
000F85                  		rom_ptr_z80(Maniax_PSG3_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
000F85 F88D             	dc.w  ((((((Maniax_PSG3_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_PSG3_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
000F87                  Maniax_PWM1:
                        	;smpsPan		$C0
000F87 8003930293019209 	dc.b nRst, $03, $93, $02, $93, $01, $92, $09
000F8F 9209920393029301 	dc.b $92, $09, $92, $03, $93, $02, $93, $01

000F97                  Maniax_PWM1_Loop:
000F97 92068E0381098E0C 	dc.b $92, $06, $8E, $03, dKick, $09, $8E, $0C
000F9F 8E068C068E068106 	dc.b $8E, $06, $8C, $06, $8E, $06, dKick, $06
000FA7 8E0381098E0C8E06 	dc.b $8E, $03, dKick, $09, $8E, $0C, $8E, $06
000FAF 8C068E0681068E03 	dc.b $8C, $06, $8E, $06, dKick, $06, $8E, $03
000FB7 81098E0C8E068C06 	dc.b dKick, $09, $8E, $0C, $8E, $06, $8C, $06
000FBF 8E0681068E038109 	dc.b $8E, $06, dKick, $06, $8E, $03, dKick, $09
000FC7 8E0C8E0381038C06 	dc.b $8E, $0C, $8E, $03, dKick, $03, $8C, $06
000FCF 8E03810381068E03 	dc.b $8E, $03, dKick, $03, dKick, $06, $8E, $03
000FD7 81098E0C8E068C06 	dc.b dKick, $09, $8E, $0C, $8E, $06, $8C, $06
000FDF 8E0681068E038109 	dc.b $8E, $06, dKick, $06, $8E, $03, dKick, $09
000FE7 8E0C8E068C068E06 	dc.b $8E, $0C, $8E, $06, $8C, $06, $8E, $06
000FEF 81068E0381098E0C 	dc.b dKick, $06, $8E, $03, dKick, $09, $8E, $0C
000FF7 8E068C068E068106 	dc.b $8E, $06, $8C, $06, $8E, $06, dKick, $06
000FFF 8E03810981038109 	dc.b $8E, $03, dKick, $09, dKick, $03, dKick, $09
001007 8803880388038803 	dc.b dHiTimpani, $03, dHiTimpani, $03, dHiTimpani, $03, dHiTimpani, $03
00100F 8103810389068803 	dc.b dKick, $03, dKick, $03, dMidTimpani, $06, dHiTimpani, $03
001017 8803820688068106 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dKick, $06
00101F 8803880382068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
001027 8106880388038C06 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, $8C, $06
00102F 8806810688038803 	dc.b dHiTimpani, $06, dKick, $06, dHiTimpani, $03, dHiTimpani, $03
001037 8C06880681068803 	dc.b $8C, $06, dHiTimpani, $06, dKick, $06, dHiTimpani, $03
00103F 88038C0688068106 	dc.b dHiTimpani, $03, $8C, $06, dHiTimpani, $06, dKick, $06
001047 880388038C068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, $8C, $06, dHiTimpani, $06
00104F 8106880388038C06 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, $8C, $06
001057 8806810688038803 	dc.b dHiTimpani, $06, dKick, $06, dHiTimpani, $03, dHiTimpani, $03
00105F 8C06880681068803 	dc.b $8C, $06, dHiTimpani, $06, dKick, $06, dHiTimpani, $03
001067 88038C0688068106 	dc.b dHiTimpani, $03, $8C, $06, dHiTimpani, $06, dKick, $06
00106F 880388038C068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, $8C, $06, dHiTimpani, $06
001077 8106880388038C06 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, $8C, $06
00107F 8806810688038803 	dc.b dHiTimpani, $06, dKick, $06, dHiTimpani, $03, dHiTimpani, $03
001087 8C06880681068803 	dc.b $8C, $06, dHiTimpani, $06, dKick, $06, dHiTimpani, $03
00108F 88038C0688068106 	dc.b dHiTimpani, $03, $8C, $06, dHiTimpani, $06, dKick, $06
001097 880388038C068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, $8C, $06, dHiTimpani, $06
00109F 8106880388038C06 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, $8C, $06
0010A7 8503850381068703 	dc.b $85, $03, $85, $03, dKick, $06, $87, $03
0010AF 8703860386038603 	dc.b $87, $03, $86, $03, $86, $03, $86, $03
0010B7 8503810688038803 	dc.b $85, $03, dKick, $06, dHiTimpani, $03, dHiTimpani, $03
0010BF 8C06880681068803 	dc.b $8C, $06, dHiTimpani, $06, dKick, $06, dHiTimpani, $03
0010C7 88038C0688068106 	dc.b dHiTimpani, $03, $8C, $06, dHiTimpani, $06, dKick, $06
0010CF 880388038C068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, $8C, $06, dHiTimpani, $06
0010D7 8106880388038C06 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, $8C, $06
0010DF 8806810688038803 	dc.b dHiTimpani, $06, dKick, $06, dHiTimpani, $03, dHiTimpani, $03
0010E7 8C06880681068803 	dc.b $8C, $06, dHiTimpani, $06, dKick, $06, dHiTimpani, $03
0010EF 88038C0688068106 	dc.b dHiTimpani, $03, $8C, $06, dHiTimpani, $06, dKick, $06
0010F7 880388038C068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, $8C, $06, dHiTimpani, $06
0010FF 8106880388038C06 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, $8C, $06
001107 8806810688038803 	dc.b dHiTimpani, $06, dKick, $06, dHiTimpani, $03, dHiTimpani, $03
00110F 8C06880681068803 	dc.b $8C, $06, dHiTimpani, $06, dKick, $06, dHiTimpani, $03
001117 88038C0688068106 	dc.b dHiTimpani, $03, $8C, $06, dHiTimpani, $06, dKick, $06
00111F 880388038C068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, $8C, $06, dHiTimpani, $06
001127 8106880388038C06 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, $8C, $06
00112F 8806810688038803 	dc.b dHiTimpani, $06, dKick, $06, dHiTimpani, $03, dHiTimpani, $03
001137 8C06880681068803 	dc.b $8C, $06, dHiTimpani, $06, dKick, $06, dHiTimpani, $03
00113F 88038C0688068106 	dc.b dHiTimpani, $03, $8C, $06, dHiTimpani, $06, dKick, $06
001147 880381038C068803 	dc.b dHiTimpani, $03, dKick, $03, $8C, $06, dHiTimpani, $03
00114F 81038C0689098909 	dc.b dKick, $03, $8C, $06, dMidTimpani, $09, dMidTimpani, $09
001157 89068F038F038C06 	dc.b dMidTimpani, $06, $8F, $03, $8F, $03, $8C, $06
00115F 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
001167 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
00116F 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
001177 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
00117F 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
001187 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
00118F 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
001197 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
00119F 81068A038F038C06 	dc.b dKick, $06, dLowTimpani, $03, $8F, $03, $8C, $06
0011A7 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
0011AF 8F03860687038F03 	dc.b $8F, $03, $86, $06, $87, $03, $8F, $03
0011B7 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
0011BF 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
0011C7 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
0011CF 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
0011D7 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
0011DF 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
0011E7 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
0011EF 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
0011F7 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
0011FF 8106810381068106 	dc.b dKick, $06, dKick, $03, dKick, $06, dKick, $06
001207 8103810386068603 	dc.b dKick, $03, dKick, $03, $86, $06, $86, $03
00120F 8906810381038906 	dc.b dMidTimpani, $06, dKick, $03, dKick, $03, dMidTimpani, $06
001217 8F038F038C068F03 	dc.b $8F, $03, $8F, $03, $8C, $06, $8F, $03
00121F 8F0381038A038F03 	dc.b $8F, $03, dKick, $03, dLowTimpani, $03, $8F, $03
001227 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
00122F 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
001237 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
00123F 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
001247 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
00124F 8F038F0381038A03 	dc.b $8F, $03, $8F, $03, dKick, $03, dLowTimpani, $03
001257 8F038F038C068F03 	dc.b $8F, $03, $8F, $03, $8C, $06, $8F, $03
00125F 8F0381068F038F03 	dc.b $8F, $03, dKick, $06, $8F, $03, $8F, $03
001267 8C068F038F038106 	dc.b $8C, $06, $8F, $03, $8F, $03, dKick, $06
00126F 8F038F038C068F03 	dc.b $8F, $03, $8F, $03, $8C, $06, $8F, $03
001277 8F0381068F038F03 	dc.b $8F, $03, dKick, $06, $8F, $03, $8F, $03
00127F 8C068F038F038103 	dc.b $8C, $06, $8F, $03, $8F, $03, dKick, $03
001287 8A038F038F038C06 	dc.b dLowTimpani, $03, $8F, $03, $8F, $03, $8C, $06
00128F 8F038F0388068803 	dc.b $8F, $03, $8F, $03, dHiTimpani, $06, dHiTimpani, $03
001297 8803880688038F03 	dc.b dHiTimpani, $03, dHiTimpani, $06, dHiTimpani, $03, $8F, $03
00129F 8806880388038806 	dc.b dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03, dHiTimpani, $06
0012A7 88038F0388068803 	dc.b dHiTimpani, $03, $8F, $03, dHiTimpani, $06, dHiTimpani, $03
0012AF 8803880688038F03 	dc.b dHiTimpani, $03, dHiTimpani, $06, dHiTimpani, $03, $8F, $03
0012B7 88038A038F038F03 	dc.b dHiTimpani, $03, dLowTimpani, $03, $8F, $03, $8F, $03
0012BF 8C068F038F038806 	dc.b $8C, $06, $8F, $03, $8F, $03, dHiTimpani, $06
0012C7 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
0012CF 8F03810386038F03 	dc.b $8F, $03, dKick, $03, $86, $03, $8F, $03
0012D7 8F03880681068106 	dc.b $8F, $03, dHiTimpani, $06, dKick, $06, dKick, $06
0012DF 8F038F038C068F03 	dc.b $8F, $03, $8F, $03, $8C, $06, $8F, $03
0012E7 8F0381038A038F03 	dc.b $8F, $03, dKick, $03, dLowTimpani, $03, $8F, $03
0012EF 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
0012F7 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
0012FF 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
001307 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
00130F 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
001317 8F038F0381038A03 	dc.b $8F, $03, $8F, $03, dKick, $03, dLowTimpani, $03
00131F 8F038F038C068F03 	dc.b $8F, $03, $8F, $03, $8C, $06, $8F, $03
001327 8F0381068F038F03 	dc.b $8F, $03, dKick, $06, $8F, $03, $8F, $03
00132F 8C068F038F038106 	dc.b $8C, $06, $8F, $03, $8F, $03, dKick, $06
001337 8F038F038C068F03 	dc.b $8F, $03, $8F, $03, $8C, $06, $8F, $03
00133F 8F0381068F038F03 	dc.b $8F, $03, dKick, $06, $8F, $03, $8F, $03
001347 8C068F038F038103 	dc.b $8C, $06, $8F, $03, $8F, $03, dKick, $03
00134F 8A038F038F038C06 	dc.b dLowTimpani, $03, $8F, $03, $8F, $03, $8C, $06
001357 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
00135F 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
001367 81068F038F038C06 	dc.b dKick, $06, $8F, $03, $8F, $03, $8C, $06
00136F 8F038F0381068F03 	dc.b $8F, $03, $8F, $03, dKick, $06, $8F, $03
001377 8F038C068F038F03 	dc.b $8F, $03, $8C, $06, $8F, $03, $8F, $03
00137F 81038A038F038F03 	dc.b dKick, $03, dLowTimpani, $03, $8F, $03, $8F, $03
001387 8C068F038F038106 	dc.b $8C, $06, $8F, $03, $8F, $03, dKick, $06
00138F 8F038F0381068803 	dc.b $8F, $03, $8F, $03, dKick, $06, dHiTimpani, $03
001397 8F0381068F038F03 	dc.b $8F, $03, dKick, $06, $8F, $03, $8F, $03
00139F 81068F0689068E03 	dc.b dKick, $06, $8F, $06, dMidTimpani, $06, $8E, $03
0013A7 81098E0C8E068C06 	dc.b dKick, $09, $8E, $0C, $8E, $06, $8C, $06
0013AF 8E0681068E038109 	dc.b $8E, $06, dKick, $06, $8E, $03, dKick, $09
0013B7 8E0C8E068C068E06 	dc.b $8E, $0C, $8E, $06, $8C, $06, $8E, $06
0013BF 81068E0381098E0C 	dc.b dKick, $06, $8E, $03, dKick, $09, $8E, $0C
0013C7 8E068C068E068106 	dc.b $8E, $06, $8C, $06, $8E, $06, dKick, $06
0013CF 8E0381098E0C8E06 	dc.b $8E, $03, dKick, $09, $8E, $0C, $8E, $06
0013D7 8C068E0689068E03 	dc.b $8C, $06, $8E, $06, dMidTimpani, $06, $8E, $03
0013DF 81098E0C8E068C06 	dc.b dKick, $09, $8E, $0C, $8E, $06, $8C, $06
0013E7 8E0681068E038109 	dc.b $8E, $06, dKick, $06, $8E, $03, dKick, $09
0013EF                  	smpsJump	Maniax_PWM1_Loop,Target	
0013EF F6               	dc.b	$F6
                        	if (Maniax_PWM1_Loop<*)
0013F0                  		rom_ptr_z80(Maniax_PWM1_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
0013F0 978F             	dc.w  ((((((Maniax_PWM1_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_PWM1_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
0013F2                  Maniax_PWM2:
0013F2 80068C0981098106 	dc.b nRst, $06, $8C, $09, dKick, $09, dKick, $06

0013FA                  Maniax_PWM2_Loop:
0013FA 81128112821E8112 	dc.b dKick, $12, dKick, $12, dSnare, $1E, dKick, $12
001402 821E8112821E8112 	dc.b dSnare, $1E, dKick, $12, dSnare, $1E, dKick, $12
00140A 821E8112821E8112 	dc.b dSnare, $1E, dKick, $12, dSnare, $1E, dKick, $12
001412 821E8112821E8E12 	dc.b dSnare, $1E, dKick, $12, dSnare, $1E, $8E, $12
00141A 820688038803880C 	dc.b dSnare, $06, dHiTimpani, $03, dHiTimpani, $03, dHiTimpani, $0C
001422 880C880C880C880C 	dc.b dHiTimpani, $0C, dHiTimpani, $0C, dHiTimpani, $0C, dHiTimpani, $0C
00142A 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
001432 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
00143A 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
001442 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
00144A 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
001452 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
00145A 8206880688068803 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
001462 880388068806890C 	dc.b dHiTimpani, $03, dHiTimpani, $06, dHiTimpani, $06, dMidTimpani, $0C
00146A 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
001472 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
00147A 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
001482 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
00148A 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
001492 820C880C820C880C 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $0C
00149A 820C880C820C8809 	dc.b dSnare, $0C, dHiTimpani, $0C, dSnare, $0C, dHiTimpani, $09
0014A2 8803820C82068109 	dc.b dHiTimpani, $03, dSnare, $0C, dSnare, $06, dKick, $09
0014AA 810981068A038803 	dc.b dKick, $09, dKick, $06, dLowTimpani, $03, dHiTimpani, $03
0014B2 8206880688068803 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
0014BA 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
0014C2 8A03880382068806 	dc.b dLowTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
0014CA 8806880388038206 	dc.b dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03, dSnare, $06
0014D2 880688068A038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03
0014DA 8206880688068803 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
0014E2 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
0014EA 8F03880382068806 	dc.b $8F, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
0014F2 8806860386038806 	dc.b dHiTimpani, $06, $86, $03, $86, $03, dHiTimpani, $06
0014FA 8F0688068A038803 	dc.b $8F, $06, dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03
001502 8206880688068803 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
00150A 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
001512 8A03880382068806 	dc.b dLowTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
00151A 8806880388038206 	dc.b dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03, dSnare, $06
001522 880688068A038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03
00152A 8206880688068803 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
001532 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
00153A 8A03880688068803 	dc.b dLowTimpani, $03, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
001542 88098103820C8106 	dc.b dHiTimpani, $09, dKick, $03, dSnare, $0C, dKick, $06
00154A 8A03880382068806 	dc.b dLowTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
001552 8806880388038206 	dc.b dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03, dSnare, $06
00155A 880688068A038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03
001562 8206880688068803 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
00156A 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
001572 8A03880382068806 	dc.b dLowTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
00157A 8806880388038206 	dc.b dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03, dSnare, $06
001582 880688068A038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03
00158A 8206880688068803 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03
001592 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
00159A 8A03880382068806 	dc.b dLowTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
0015A2 8806880388038206 	dc.b dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03, dSnare, $06
0015AA 880681068A038F03 	dc.b dHiTimpani, $06, dKick, $06, dLowTimpani, $03, $8F, $03
0015B2 82068F0681068F03 	dc.b dSnare, $06, $8F, $06, dKick, $06, $8F, $03
0015BA 8F0382068F068106 	dc.b $8F, $03, dSnare, $06, $8F, $06, dKick, $06
0015C2 8A038F0382068F06 	dc.b dLowTimpani, $03, $8F, $03, dSnare, $06, $8F, $06
0015CA 8106880388038206 	dc.b dKick, $06, dHiTimpani, $03, dHiTimpani, $03, dSnare, $06
0015D2 880681068A038803 	dc.b dHiTimpani, $06, dKick, $06, dLowTimpani, $03, dHiTimpani, $03
0015DA 8806880386038806 	dc.b dHiTimpani, $06, dHiTimpani, $03, $86, $03, dHiTimpani, $06
0015E2 8803880381068F06 	dc.b dHiTimpani, $03, dHiTimpani, $03, dKick, $06, $8F, $06
0015EA 88068A0388038206 	dc.b dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03, dSnare, $06
0015F2 8806880688038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03
0015FA 8206880688068A03 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03
001602 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
00160A 8803880382068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
001612 88068A0388038206 	dc.b dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03, dSnare, $06
00161A 8806880688038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03
001622 8206880688068A03 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03
00162A 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
001632 8803880382068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
00163A 88068A0388038206 	dc.b dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03, dSnare, $06
001642 8806880688038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03
00164A 8206880688068A03 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03
001652 8803820688068806 	dc.b dHiTimpani, $03, dSnare, $06, dHiTimpani, $06, dHiTimpani, $06
00165A 8803880382068806 	dc.b dHiTimpani, $03, dHiTimpani, $03, dSnare, $06, dHiTimpani, $06
001662 88068A0388038206 	dc.b dHiTimpani, $06, dLowTimpani, $03, dHiTimpani, $03, dSnare, $06
00166A 8806880688038803 	dc.b dHiTimpani, $06, dHiTimpani, $06, dHiTimpani, $03, dHiTimpani, $03
001672 8206880688068A03 	dc.b dSnare, $06, dHiTimpani, $06, dHiTimpani, $06, dLowTimpani, $03
00167A 8803880C88068803 	dc.b dHiTimpani, $03, dHiTimpani, $0C, dHiTimpani, $06, dHiTimpani, $03
001682 8803880681068112 	dc.b dHiTimpani, $03, dHiTimpani, $06, dKick, $06, dKick, $12
00168A 8112821E8112821E 	dc.b dKick, $12, dSnare, $1E, dKick, $12, dSnare, $1E
001692 8112821E8112820C 	dc.b dKick, $12, dSnare, $1E, dKick, $12, dSnare, $0C
00169A 81128112821E8112 	dc.b dKick, $12, dKick, $12, dSnare, $1E, dKick, $12
0016A2 821E811282368106 	dc.b dSnare, $1E, dKick, $12, dSnare, $36, dKick, $06
0016AA                  	smpsJump	Maniax_PWM2_Loop,Target	
0016AA F6               	dc.b	$F6
                        	if (Maniax_PWM2_Loop<*)
0016AB                  		rom_ptr_z80(Maniax_PWM2_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
0016AB FA93             	dc.w  ((((((Maniax_PWM2_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_PWM2_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
0016AD                  Maniax_PWM3:
0016AD 80068218         	dc.b nRst, $06, dSnare, $18

0016B1                  Maniax_PWM3_Loop:
0016B1 807F807F80768C0C 	dc.b nRst, $7F, nRst, $7F, nRst, $76, $8C, $0C
0016B9 810C8C188C188818 	dc.b dKick, $0C, $8C, $18, $8C, $18, dHiTimpani, $18
0016C1 8818881888188818 	dc.b dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18
0016C9 8818881888188818 	dc.b dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18
0016D1 8818881888188818 	dc.b dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18
0016D9 81068106880C8818 	dc.b dKick, $06, dKick, $06, dHiTimpani, $0C, dHiTimpani, $18
0016E1 8818881888188818 	dc.b dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18
0016E9 8818881888188818 	dc.b dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18
0016F1 8818881888188818 	dc.b dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18, dHiTimpani, $18
0016F9 8818880C88188806 	dc.b dHiTimpani, $18, dHiTimpani, $0C, dHiTimpani, $18, dHiTimpani, $06
001701 8806881888128806 	dc.b dHiTimpani, $06, dHiTimpani, $18, dHiTimpani, $12, dHiTimpani, $06
001709 8818881288068818 	dc.b dHiTimpani, $18, dHiTimpani, $12, dHiTimpani, $06, dHiTimpani, $18
001711 8812880688128803 	dc.b dHiTimpani, $12, dHiTimpani, $06, dHiTimpani, $12, dHiTimpani, $03
001719 88038106880C8806 	dc.b dHiTimpani, $03, dKick, $06, dHiTimpani, $0C, dHiTimpani, $06
001721 8818881288068818 	dc.b dHiTimpani, $18, dHiTimpani, $12, dHiTimpani, $06, dHiTimpani, $18
001729 881288068818880C 	dc.b dHiTimpani, $12, dHiTimpani, $06, dHiTimpani, $18, dHiTimpani, $0C
001731 9006880390069006 	dc.b $90, $06, dHiTimpani, $03, $90, $06, $90, $06
001739 9003900C8C0C8806 	dc.b $90, $03, $90, $0C, $8C, $0C, dHiTimpani, $06
001741 8806881888068D0C 	dc.b dHiTimpani, $06, dHiTimpani, $18, dHiTimpani, $06, $8D, $0C
001749 8806881888128806 	dc.b dHiTimpani, $06, dHiTimpani, $18, dHiTimpani, $12, dHiTimpani, $06
001751 881888068D0C8806 	dc.b dHiTimpani, $18, dHiTimpani, $06, $8D, $0C, dHiTimpani, $06
001759 8818881288068818 	dc.b dHiTimpani, $18, dHiTimpani, $12, dHiTimpani, $06, dHiTimpani, $18
001761 88068D0C8F068C18 	dc.b dHiTimpani, $06, $8D, $0C, $8F, $06, $8C, $18
001769 8C128F068C188806 	dc.b $8C, $12, $8F, $06, $8C, $18, dHiTimpani, $06
001771 8D0C8824880C8806 	dc.b $8D, $0C, dHiTimpani, $24, dHiTimpani, $0C, dHiTimpani, $06
001779 881888068D0C8806 	dc.b dHiTimpani, $18, dHiTimpani, $06, $8D, $0C, dHiTimpani, $06
001781 8818881288068818 	dc.b dHiTimpani, $18, dHiTimpani, $12, dHiTimpani, $06, dHiTimpani, $18
001789 88068D0C88068818 	dc.b dHiTimpani, $06, $8D, $0C, dHiTimpani, $06, dHiTimpani, $18
001791 8812880688188806 	dc.b dHiTimpani, $12, dHiTimpani, $06, dHiTimpani, $18, dHiTimpani, $06
001799 8D0C880688188812 	dc.b $8D, $0C, dHiTimpani, $06, dHiTimpani, $18, dHiTimpani, $12
0017A1 8806881888068D0C 	dc.b dHiTimpani, $06, dHiTimpani, $18, dHiTimpani, $06, $8D, $0C
0017A9 8824887F807F807F 	dc.b dHiTimpani, $24, dHiTimpani, $7F, nRst, $7F, nRst, $7F
0017B1 8009             	dc.b nRst, $09
0017B3                  	smpsJump	Maniax_PWM3_Loop,Target	
0017B3 F6               	dc.b	$F6
                        	if (Maniax_PWM3_Loop<*)
0017B4                  		rom_ptr_z80(Maniax_PWM3_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
0017B4 B196             	dc.w  ((((((Maniax_PWM3_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_PWM3_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
                        	
0017B6                  Maniax_PWM4:
0017B6 801E             	dc.b nRst, $1E

0017B8                  Maniax_PWM4_Loop:
0017B8 807F7F7F0F811881 	dc.b nRst, $7F, $7F, $7F, $0F, dKick, $18, dKick
0017C0 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
0017C8 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
0017D0 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
0017D8 1881308118811881 	dc.b $18, dKick, $30, dKick, $18, dKick, $18, dKick
0017E0 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
0017E8 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
0017F0 1881188118812481 	dc.b $18, dKick, $18, dKick, $18, dKick, $24, dKick
0017F8 2481188118811881 	dc.b $24, dKick, $18, dKick, $18, dKick, $18, dKick
001800 1881188118813081 	dc.b $18, dKick, $18, dKick, $18, dKick, $30, dKick
001808 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
001810 1881129009890689 	dc.b $18, dKick, $12, $90, $09, dMidTimpani, $06, dMidTimpani
001818 03890C8118811881 	dc.b $03, dMidTimpani, $0C, dKick, $18, dKick, $18, dKick
001820 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
001828 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
001830 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
001838 4881188118811881 	dc.b $48, dKick, $18, dKick, $18, dKick, $18, dKick
001840 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
001848 1881188118811881 	dc.b $18, dKick, $18, dKick, $18, dKick, $18, dKick
001850 188118817F807F80 	dc.b $18, dKick, $18, dKick, $7F, nRst, $7F, nRst
001858 7F803F           	dc.b $7F, nRst, $3F
00185B                  	smpsJump	Maniax_PWM4_Loop,Target	
00185B F6               	dc.b	$F6
                        	if (Maniax_PWM4_Loop<*)
00185C                  		rom_ptr_z80(Maniax_PWM4_Loop,Target)
                        	;dc.w z80_ptr(ptr,addr)
00185C B897             	dc.w  ((((((Maniax_PWM4_Loop)|(Target)))<<8)&$FF00)|(((((Maniax_PWM4_Loop)|(Target)))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00185E                  Maniax_Voices:
00185E 2C313171715F545F 	dc.b	$2C, $31, $31, $71, $71, $5F, $54, $5F, $5F, $05, $0A, $03, $0C, $00, $03, $03, $03, $00, $87, $00, $A7, $17, $06, $19, $06
001866 5F050A030C000303
00186E 03008700A7170619
001876 06
001877 2C313171715F545F 	dc.b	$2C, $31, $31, $71, $71, $5F, $54, $5F, $5F, $05, $0A, $03, $0C, $00, $03, $03, $03, $00, $87, $00, $A7, $17, $06, $19, $06
00187F 5F050A030C000303
001887 03008700A7170619
00188F 06
001890 360F0101011F1F1F 	dc.b	$36, $0F, $01, $01, $01, $1F, $1F, $1F, $1F, $12, $11, $0E, $00, $00, $0A, $07, $09, $FF, $0F, $1F, $0F, $18, $12, $12, $12
001898 1F12110E00000A07
0018A0 09FF0F1F0F181212
0018A8 12
0018A9 3F003200761F1F1F 	dc.b	$3F, $00, $32, $00, $76, $1F, $1F, $1F, $1F, $0E, $0E, $0E, $10, $0A, $0A, $0A, $0A, $03, $58, $38, $38, $16, $0B, $0A, $0B
0018B1 1F0E0E0E100A0A0A
0018B9 0A03583838160B0A
0018C1 0B
0018C2 2C727834341F121F 	dc.b	$2C, $72, $78, $34, $34, $1F, $12, $1F, $12, $00, $0A, $00, $0A, $00, $00, $00, $00, $0F, $1F, $0F, $1F, $17, $08, $17, $12
0018CA 12000A000A000000
0018D2 000F1F0F1F170817
0018DA 12
0018DB 2B32320472140E12 	dc.b	$2B, $32, $32, $04, $72, $14, $0E, $12, $4E, $00, $10, $12, $0C, $00, $00, $00, $00, $0A, $5A, $3A, $1A, $1C, $28, $22, $00
0018E3 4E0010120C000000
0018EB 000A5A3A1A1C2822
0018F3 00
0018F4 080A7030001F1F5F 	dc.b	$08, $0A, $70, $30, $00, $1F, $1F, $5F, $5F, $12, $0E, $0A, $0A, $00, $04, $04, $03, $2F, $2F, $2F, $2F, $24, $2D, $13, $06
0018FC 5F120E0A0A000404
001904 032F2F2F2F242D13
00190C 06
00190D 2C747434341F121F 	dc.b	$2C, $74, $74, $34, $34, $1F, $12, $1F, $1F, $00, $07, $00, $07, $00, $07, $00, $07, $00, $38, $00, $38, $16, $12, $17, $00
001915 1F00070007000700
00191D 0700380038161217
001925 00
001926 3A32087202124E14 	dc.b	$3A, $32, $08, $72, $02, $12, $4E, $14, $11, $04, $0E, $00, $04, $06, $04, $08, $07, $18, $58, $08, $3F, $1B, $21, $24, $00
00192E 11040E0004060408
001936 071858083F1B2124
00193E 00
00193F  (000001)        	even

00000 Total Error(s)

DFLOORTIMPANI      0000008B E  DHITIMPANI         00000088 E  DKICK              00000081 E
DLOWTIMPANI        0000008A E  DMIDTIMPANI        00000089 E  DSNARE             00000082 E
DTIMPANI           00000083 E  DVLOWTIMPANI       0000008B E  MANIAX_FM1         00000040
MANIAX_FM1_LOOP    00000052    MANIAX_FM2         000002BC    MANIAX_FM2_LOOP    000002CE
MANIAX_FM3         00000431    MANIAX_FM3_LOOP    00000437    MANIAX_FM4         000006B9
MANIAX_FM4_LOOP    000006BF    MANIAX_FM5         00000804    MANIAX_FM5_LOOP    0000080A
MANIAX_FM6         0000085F    MANIAX_FM6_LOOP    00000865    MANIAX_HEADER      00000000
MANIAX_PSG1        00000A60    MANIAX_PSG1_LOOP   00000A62    MANIAX_PSG2        00000CCC
MANIAX_PSG2_LOOP   00000CD3    MANIAX_PSG3        00000DF2    MANIAX_PSG3_LOOP   00000DF8
MANIAX_PWM1        00000F87    MANIAX_PWM1_LOOP   00000F97    MANIAX_PWM2        000013F2
MANIAX_PWM2_LOOP   000013FA    MANIAX_PWM3        000016AD    MANIAX_PWM3_LOOP   000016B1
MANIAX_PWM4        000017B6    MANIAX_PWM4_LOOP   000017B8    MANIAX_VOICES      0000185E
NA0                0000008A E  NA1                00000096 E  NA2                000000A2 E
NA3                000000AE E  NA4                000000BA E  NA5                000000C6 E
NA6                000000D2 E  NA7                000000DE E  NAB0               00000089 E
NAB1               00000095 E  NAB2               000000A1 E  NAB3               000000AD E
NAB4               000000B9 E  NAB5               000000C5 E  NAB6               000000D1 E
NAB7               000000DD E  NB0                0000008C E  NB1                00000098 E
NB2                000000A4 E  NB3                000000B0 E  NB4                000000BC E
NB5                000000C8 E  NB6                000000D4 E  NBB0               0000008B E
NBB1               00000097 E  NBB2               000000A3 E  NBB3               000000AF E
NBB4               000000BB E  NBB5               000000C7 E  NBB6               000000D3 E
NBB7               000000DF E  NC0                00000081 E  NC1                0000008D E
NC2                00000099 E  NC3                000000A5 E  NC4                000000B1 E
NC5                000000BD E  NC6                000000C9 E  NC7                000000D5 E
NCS0               00000082 E  NCS1               0000008E E  NCS2               0000009A E
NCS3               000000A6 E  NCS4               000000B2 E  NCS5               000000BE E
NCS6               000000CA E  NCS7               000000D6 E  ND0                00000083 E
ND1                0000008F E  ND2                0000009B E  ND3                000000A7 E
ND4                000000B3 E  ND5                000000BF E  ND6                000000CB E
ND7                000000D7 E  NE0                00000085 E  NE1                00000091 E
NE2                0000009D E  NE3                000000A9 E  NE4                000000B5 E
NE5                000000C1 E  NE6                000000CD E  NE7                000000D9 E
NEB0               00000084 E  NEB1               00000090 E  NEB2               0000009C E
NEB3               000000A8 E  NEB4               000000B4 E  NEB5               000000C0 E
NEB6               000000CC E  NEB7               000000D8 E  NF0                00000086 E
NF1                00000092 E  NF2                0000009E E  NF3                000000AA E
NF4                000000B6 E  NF5                000000C2 E  NF6                000000CE E
NF7                000000DA E  NFS0               00000087 E  NFS1               00000093 E
NFS2               0000009F E  NFS3               000000AB E  NFS4               000000B7 E
NFS5               000000C3 E  NFS6               000000CF E  NFS7               000000DB E
NG0                00000088 E  NG1                00000094 E  NG2                000000A0 E
NG3                000000AC E  NG4                000000B8 E  NG5                000000C4 E
NG6                000000D0 E  NG7                000000DC E  NRST               00000080 E
PANCENTER          000000C0 S  PANCENTRE          000000C0 S  PANLEFT            00000080 S
PANNONE            00000000 S  PANRIGHT           00000040 S  SMPSED             000000ED E
SMPSEE             000000EE E  SMPSF9             000000F9 E  SMPSMODOFF         000000F4 E
SMPSMODON          000000F1 E  SMPSNOATTACK       000000E7 E  SMPSPITCH00        00000000 E
SMPSPITCH01HI      0000000C E  SMPSPITCH01LO      000000F4 E  SMPSPITCH02HI      00000018 E
SMPSPITCH02LO      000000E8 E  SMPSPITCH03HI      00000024 E  SMPSPITCH03LO      000000DC E
SMPSPITCH04HI      00000030 E  SMPSPITCH04LO      000000D0 E  SMPSPITCH05HI      0000003C E
SMPSPITCH05LO      000000C4 E  SMPSPITCH06HI      00000048 E  SMPSPITCH06LO      000000B8 E
SMPSPITCH07HI      00000054 E  SMPSPITCH07LO      000000AC E  SMPSPITCH08HI      00000060 E
SMPSPITCH08LO      000000A0 E  SMPSPITCH09HI      0000006C E  SMPSPITCH09LO      00000094 E
SMPSPITCH10HI      00000078 E  SMPSPITCH10LO      00000088 E  TARGET             00040000 E
TEMPDIV            00000002 S
