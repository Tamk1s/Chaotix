                        	LIST MACRO
                        	LIST EXPAND
000000                  	include _s1smps2asm_S1KC.asm
                        ; Standard Octave Pitch Equates
       = 000088         smpsPitch10lo		EQU	$88
       = 000094         smpsPitch09lo		EQU	$94
       = 0000A0         smpsPitch08lo		EQU	$A0
       = 0000AC         smpsPitch07lo		EQU	$AC
       = 0000B8         smpsPitch06lo		EQU	$B8
       = 0000C4         smpsPitch05lo		EQU	$C4
       = 0000D0         smpsPitch04lo		EQU	$D0
       = 0000DC         smpsPitch03lo		EQU	$DC
       = 0000E8         smpsPitch02lo		EQU	$E8
       = 0000F4         smpsPitch01lo		EQU	$F4
       = 000000         smpsPitch00		EQU	$00
       = 00000C         smpsPitch01hi		EQU	$0C
       = 000018         smpsPitch02hi		EQU	$18
       = 000024         smpsPitch03hi		EQU	$24
       = 000030         smpsPitch04hi		EQU	$30
       = 00003C         smpsPitch05hi		EQU	$3C
       = 000048         smpsPitch06hi		EQU	$48
       = 000054         smpsPitch07hi		EQU	$54
       = 000060         smpsPitch08hi		EQU	$60
       = 00006C         smpsPitch09hi		EQU	$6C
       = 000078         smpsPitch10hi		EQU	$78

                        ; Note Equates
       = 000080         nRst			EQU	$80
       = 000081         nC0			EQU	$81
       = 000082         nCs0			EQU	$82
       = 000083         nD0			EQU	$83
       = 000084         nEb0			EQU	$84
       = 000085         nE0			EQU	$85
       = 000086         nF0			EQU	$86
       = 000087         nFs0			EQU	$87
       = 000088         nG0			EQU	$88
       = 000089         nAb0			EQU	$89
       = 00008A         nA0			EQU	$8A
       = 00008B         nBb0			EQU	$8B
       = 00008C         nB0			EQU	$8C
       = 00008D         nC1			EQU	$8D
       = 00008E         nCs1			EQU	$8E
       = 00008F         nD1			EQU	$8F
       = 000090         nEb1			EQU	$90
       = 000091         nE1			EQU	$91
       = 000092         nF1			EQU	$92
       = 000093         nFs1			EQU	$93
       = 000094         nG1			EQU	$94
       = 000095         nAb1			EQU	$95
       = 000096         nA1			EQU	$96
       = 000097         nBb1			EQU	$97
       = 000098         nB1			EQU	$98
       = 000099         nC2			EQU	$99
       = 00009A         nCs2			EQU	$9A
       = 00009B         nD2			EQU	$9B
       = 00009C         nEb2			EQU	$9C
       = 00009D         nE2			EQU	$9D
       = 00009E         nF2			EQU	$9E
       = 00009F         nFs2			EQU	$9F
       = 0000A0         nG2			EQU	$A0
       = 0000A1         nAb2			EQU	$A1
       = 0000A2         nA2			EQU	$A2
       = 0000A3         nBb2			EQU	$A3
       = 0000A4         nB2			EQU	$A4
       = 0000A5         nC3			EQU	$A5
       = 0000A6         nCs3			EQU	$A6
       = 0000A7         nD3			EQU	$A7
       = 0000A8         nEb3			EQU	$A8
       = 0000A9         nE3			EQU	$A9
       = 0000AA         nF3			EQU	$AA
       = 0000AB         nFs3			EQU	$AB
       = 0000AC         nG3			EQU	$AC
       = 0000AD         nAb3			EQU	$AD
       = 0000AE         nA3			EQU	$AE
       = 0000AF         nBb3			EQU	$AF
       = 0000B0         nB3			EQU	$B0
       = 0000B1         nC4			EQU	$B1
       = 0000B2         nCs4			EQU	$B2
       = 0000B3         nD4			EQU	$B3
       = 0000B4         nEb4			EQU	$B4
       = 0000B5         nE4			EQU	$B5
       = 0000B6         nF4			EQU	$B6
       = 0000B7         nFs4			EQU	$B7
       = 0000B8         nG4			EQU	$B8
       = 0000B9         nAb4			EQU	$B9
       = 0000BA         nA4			EQU	$BA
       = 0000BB         nBb4			EQU	$BB
       = 0000BC         nB4			EQU	$BC
       = 0000BD         nC5			EQU	$BD
       = 0000BE         nCs5			EQU	$BE
       = 0000BF         nD5			EQU	$BF
       = 0000C0         nEb5			EQU	$C0
       = 0000C1         nE5			EQU	$C1
       = 0000C2         nF5			EQU	$C2
       = 0000C3         nFs5			EQU	$C3
       = 0000C4         nG5			EQU	$C4
       = 0000C5         nAb5			EQU	$C5
       = 0000C6         nA5			EQU	$C6
       = 0000C7         nBb5			EQU	$C7
       = 0000C8         nB5			EQU	$C8
       = 0000C9         nC6			EQU	$C9
       = 0000CA         nCs6			EQU	$CA
       = 0000CB         nD6			EQU	$CB
       = 0000CC         nEb6			EQU	$CC
       = 0000CD         nE6			EQU	$CD
       = 0000CE         nF6			EQU	$CE
       = 0000CF         nFs6			EQU	$CF
       = 0000D0         nG6			EQU	$D0
       = 0000D1         nAb6			EQU	$D1
       = 0000D2         nA6			EQU	$D2
       = 0000D3         nBb6			EQU	$D3
       = 0000D4         nB6			EQU	$D4
       = 0000D5         nC7			EQU	$D5
       = 0000D6         nCs7			EQU	$D6
       = 0000D7         nD7			EQU	$D7
       = 0000D8         nEb7			EQU	$D8
       = 0000D9         nE7			EQU	$D9
       = 0000DA         nF7			EQU	$DA
       = 0000DB         nFs7			EQU	$DB
       = 0000DC         nG7			EQU	$DC
       = 0000DD         nAb7			EQU	$DD
       = 0000DE         nA7			EQU	$DE
       = 0000DF         nBb7			EQU	$DF

                        ; DAC Equates (S1)
       = 000081         dKick			EQU	$81
       = 000082         dSnare			EQU	$82
       = 000083         dTimpani		EQU	$83
       = 000088         dHiTimpani		EQU	$88
       = 000089         dMidTimpani		EQU	$89
       = 00008A         dLowTimpani		EQU	$8A
       = 00008B         dVLowTimpani	EQU	$8B
       = 00008B         dFloorTimpani	EQU $8B

                        ; PWM Equates (KC)
       = 000081         pEKick		EQU	$81
       = 000082         pESnare		EQU	$82
       = 000083         pSplashCymb	EQU	$83
       = 000084         pRideBell	EQU $84
       = 000085         pTomHi		EQU	$85
       = 000086         pTomMid		EQU	$86
       = 000087         pTomLow		EQU	$87
       = 000088         pEHiHat		EQU	$88
       = 000089         pCrashCymb	EQU $89
       = 00008A         pClap		EQU $8A
       = 00008B         pAKick		EQU $8B
       = 00008C         pASnare		EQU	$8C
       = 00008D         pBell		EQU $8D
       = 00008E         pFingSnap	EQU	$8E
       = 00008F         pCowbell	EQU	$8F
       = 000090         pClickHi	EQU	$90
       = 000091         pClickLo	EQU	$91
       = 000092         pBongoHi	EQU	$92
       = 000093         pBongoLo	EQU	$93
       = 000094         pTimpaniHi	EQU	$94
       = 000095         pTimpaniLo	EQU	$95
       = 000096         pSilence	EQU $96
                        ;!@ NEW DATA
       = 000097         pSega		EQU $97
       = 000098         pClosedHH	EQU $98
       = 000099         pOpenHH		EQU $99

                        ;!@ Convert ptrs to z80Ptr
                        ; function to make a little-endian 16-bit pointer for the Z80 sound driver
                        ;z80_ptr function x,y,((((x)|(y))<<8)&$FF00)|((((x)|(y))>>8)&$7F)|$80
                        ;z80_ptr_neg function x,y,((((y)-(x))<<8)&$FF00)|((((y)-(x))>>8)&$7F)|$80

                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        rom_ptr_z80 macro addr
                        	;dc.w z80_ptr(ptr,addr)
                        	dc.w  ((((addr)<<8)&$FF00)|(((addr)>>8)&$7F)|$80)
                            endm
                        	
                        ;Funciton to convert S1 tempo to S2 and then S3+
                        ;The conversion works for all values of main tempo other than 0 â€” this value cannot be converted exactly between the two drivers. The conversion of main tempos from Sonic 1 to Sonic 2 can be done (approximately) with the following formul
                        ;S2 main tempo = floor{ [ (S1 main tempo-1) * 256 + floor(S1 main tempo/2) ] / S1 main tempo }			
                        ;It is easy to convert between Sonic 2 and Sonic 3+ main tempo values:
                        ;S2 main tempo = (256 - S3 main tempo) mod 256
                        ;S3 main tempo = (256 - S2 main tempo) mod 256
                        tempo_conv macro tempo
                        		if tempo==0
                        			dc.b	((256 - (((256-1)*256 + (256/2)) / 256)) % 256)
                        		else
                        			dc.b	((256 - ((((tempo)-1)*256 + ((tempo)/2)) / (tempo))) % 256)
                        		endif
                        	endm

                        	
                        ;!@
                        ; macro to declare a little-endian 16-bit pointer for the Z80 sound driver
                        ;rom_ptr_z80_neg macro ptr,addr
                        	;dc.w z80_ptr_neg(ptr,addr)
                        	;dc.w	(((((addr)-(ptr))<<8)&$FF00)|((((addr)-(ptr))>>8)&$7F)|$80)
                            ;endm

                        ; Header Macros

                        ;!@
                        ; Header - Set up Voice Location
                        ;smpsHeaderVoice macro loc
                        smpsHeaderVoice macro loc,songstart
                        ;songStart set *
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	endm
                        ; Header - Set up Channel Usage	
                        smpsHeaderChan macro fm,psg
                        	if \0==2
                        		dc.b	fm,psg
                        	else
                        		dc.b	fm
                        	endif	
                        	endm	
                        	

                        	
                        smpsHeaderTempo macro div,mod
                        	dc.b	div,mod
                        	endm

                        ;!@
                        ; Header - Set up Tempo. Mod is converted from S1 to S3 tempo
                        smpsHeaderTempoC macro div,mod
                        TempDiv set div
                        	dc.b	div
                        	tempo_conv(mod)
000000                  	endm
                        	
                        ; Header - Set up DAC Channel
                        smpsHeaderDAC macro loc
                        	dc.w	loc-songStart
                        	dc.w	$00
                        	endm
                        	
                        ;!@
                        ; Header - Set up FM Channel	
                        ;smpsHeaderFM macro loc,pitch,vol
                        smpsHeaderFM macro loc,songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	endm

                        ;!@	
                        ; Header - Set up PSG Channel
                        ;smpsHeaderPSG macro loc,pitch,vol,voice
                        smpsHeaderPSG macro loc,songstart,pitch,vol,null,voice
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)
                        	dc.b	pitch,vol
                        	;dc.w	voice
                        	dc.b	null,voice
                        	endm

                        ;!@
                        ; Header - Set up SFX Channel
                        ;sHeaderSFX	macro play,patch,loc,pitch,vol
                        smpsHeaderSFX	macro play,patch,loc,pitch,vol,songstart
                        	dc.b play,patch
                        	;dc.w loc-sPointZero
                        	rom_ptr_z80(loc+songstart)
                        	dc.b pitch,vol
                            endm

                        ; Co-ord Flag Macros and Equates
                        ; E0xx - Panning, AMS, FMS
                        smpsPan macro direction,amsfms
                        panNone set $00
                        panRight set $40
                        panLeft set $80
                        panCentre set $C0
                        panCenter set $C0 ; silly Americans :U
                        	;dc.b $E0,direction+amsfms
                        	;endm		
                        	if \0==2
                        		dc.b $E0,direction|amsfms
                        	else
                        		dc.b $E0,direction
                        	endif
000000                  	endm
                        	
                        ; E1xx - Alter note values by xx
                        smpsAlterNote macro val
                        	dc.b	$E1,val
                        	endm
                        	
                        ; E2xx - Unknown
                        smpsE2 macro val
                        	dc.b	$E2,val
                        	endm

                        ; E3 - Return (generally used after F8)
                        ; F9 - Return (generally used after F8)
                        smpsReturn macro val
                        	;!@
                        	;dc.b	$E3
                        	dc.b	$F9
                        	endm
                        	
                        ; E4 - Fade in previous song (ie. 1-Up)
                        smpsFade macro val
                        	dc.b	$E4
                        	endm

                        ;!@ Invalid for S3+!
                        ; E5xx - Set channel tempo divider to xx
                        smpsChanTempoDiv macro val
                        	;Error No S3 equivalent for CF!
                        	dc.b	$E5,val	
                        	endm
                        	
                        ; E6xx - Alter Volume by xx
                        smpsAlterVol macro val
                        	dc.b	$E6,val
                        	endm
                        	
                        ; E7 - Prevent attack of next note
       = 0000E7         smpsNoAttack	EQU $E7

                        ;!@ This may have problems, needs some convesion factor due to usage of mult by tempo div in S3+
                        ; E8xx - Set note fill to xx
                        smpsNoteFill macro val		
                        	dc.b	$E8,(val/TempDiv)
                        	endm
                        	
                        ;!@
                        ; E9xx - Add xx to channel pitch
                        ; FBxx - Add xx to channel pitch
                        smpsAlterPitch macro val
                        	;!@
                        	;dc.b	$E9,val
                        	dc.b	$FB,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3
                        smpsSetTempoMod macro val
                        	;dc.b	$EA,val
                        	dc.b	$FF,$00,val
                        	endm
                        	
                        ;!@
                        ; EAxx - Set music tempo modifier to xx
                        ; FF00xx - Set music tempo to xx S3 (TEMPO - TEMPO_SET)
                        smpsSetTempoModC macro val
                        	;dc.b	$EA,val
                        	dc.b $FF,$00
                        	tempo_conv(val)
                        	endm
                        	
                        ;!@
                        ; EBxx - Set music tempo divider to xx
                        ; FF04xx - Set global tick multiplier to xx (TICK_MULT - TMULT_ALL)
                        smpsSetTempoDiv macro val
                        	;dc.b	$EB,val
                        TempDiv set val
                        	dc.b $FF,$04,val
000000                  	endm

                        ;!@	
                        ; ECxx - Add xx to PSG channel volume (VOLUME - VOL_NN_PSG)
                        ;
                        ; May need interpolation/conversion factor:
                        ; Change volume attenuation of PSG track.
                        ;The single parameter byte is added to track's current volume attenuation;
                        ;anything greater than $0F (unsigned comparison) is set to $0F (silence). Also, the flutter index is reduced by 1.
                        smpsSetVol macro val
                        	dc.b	$EC,val
                        	endm
                        	
                        ; ED - Unknown
       = 0000ED         smpsED		EQU $ED
                        	
                        ;!@ S3K= send cmd to YM2612 port; unused in S1
                        ; EE - Stops special SFX ($D0-$D4, S1 only) and restarts overridden music track
       = 0000EE         smpsEE 		EQU $EE
                        	
                        ;!@
                        ; EFxx - Set Voice of FM channel to xx
                        ; EFxx[yy] - Set patch id of FM channel to xx. If xx bit7 set, read from another song instead
                        ; (INSTRUMENT - INS_C_FMP)
                        ;smpsFMvoice macro voice
                        	;dc.b	$EF,voice
                        smpsFMvoice macro pat, song		
                        	;if song<>""
                        	if \0==2
                        		dc.b $EF,pat|$80,song+$81
                        	else
                        		dc.b $EF,pat
                        	endif
                            endm

                        ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
                        smpsModSet macro wait,speed,change,step
                        	dc.b	$F0,wait,speed,change,step
                        	endm
                        	

                        ;!@ Used very differently in S3; don't use
                        ; F1 - Turn on Modulation
       = 0000F1         smpsModOn 	EQU $F1
                        ; F4 - Turn off Modulation
       = 0000F4         smpsModOff 	EQU $F4

                        ; F2 - End of channel
                        smpsStop macro
                        	dc.b	$F2
                        	endm
                        	
                        ;!@
                        ; F3xx - PSG waveform to xx
                        ; S3+ only: If parameter byte is zero, the channel is converted
                        ; back into a normal PSG channel and the noise channel is silenced.
                        ; Otherwise, sets the PSG track to noise and sets PSG noise to parameter byte, which should be from $E0 to $E7 (inclusive).
                        smpsPSGform macro form
                        	dc.b	$F3,form
                        	endm
                        	
                        ; F5xx - PSG voice to xx
                        smpsPSGvoice macro voice
                        	dc.b	$F5,voice
                        	endm
                        	
                        ;BAD Cmpr
                        ;if (loc<*)
                        	;rom_ptr_z80_neg(*-loc,songstart)
                        ;else
                        	;rom_ptr_z80(loc-*-1,songstart)
                        ;endif

                        ;!@
                        ; F6xxxx - Jump to xxxx
                        ;smpsJump macro loc
                        smpsJump macro loc,songstart
                        	dc.b	$F6
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F7xxyyzzzz - Loop back to zzzz yy times, xx being the loop index for loop recursion fixing
                        ;smpsLoop macro index,loops,loc
                        smpsLoop macro index,loops,loc,songstart
                        	dc.b	$F7
                        	dc.b	index,loops
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm

                        ;!@
                        ; F8xxxx - Call pattern at xxxx, saving return point
                        ;smpsCall macro loc
                        smpsCall macro loc,songstart
                        	dc.b	$F8
                        	if (loc<*)
                        		rom_ptr_z80(loc+songstart)
                        	else
                        		rom_ptr_z80(loc+songstart)
                        	endif
                        	;dc.w	loc-*-1
                        	endm
                        	
                        ; F9 - Unknown
       = 0000F9         smpsF9		EQU $F9

                        ; Voices - Feedback
                        smpsVcFeedback macro val
                        vcFeedback set val
000000                  	endm

                        ; Voices - Algorithm
                        smpsVcAlgorithm macro val
                        vcAlgorithm set val
000000                  	endm

                        ; Voices - Detune
                        smpsVcDetune macro op1,op2,op3,op4
                        vcDT1 set op1
                        vcDT2 set op2
                        vcDT3 set op3
                        vcDT4 set op4
000000                  	endm

                        ; Voices - Coarse-Frequency
                        smpsVcCoarseFreq macro op1,op2,op3,op4
                        vcCF1 set op1
                        vcCF2 set op2
                        vcCF3 set op3
                        vcCF4 set op4
000000                  	endm

                        ; Voices - Rate Scale
                        smpsVcRateScale macro op1,op2,op3,op4
                        vcRS1 set op1
                        vcRS2 set op2
                        vcRS3 set op3
                        vcRS4 set op4
000000                  	endm

                        ; Voices - Attack Rate
                        smpsVcAttackRate macro op1,op2,op3,op4
                        vcAR1 set op1
                        vcAR2 set op2
                        vcAR3 set op3
                        vcAR4 set op4
000000                  	endm

                        ; Voices - Amplitude Modulation
                        smpsVcAmpMod macro op1,op2,op3,op4
                        vcAM1 set op1
                        vcAM2 set op2
                        vcAM3 set op3
                        vcAM4 set op4
000000                  	endm

                        ; Voices - First Decay Rate
                        smpsVcDecayRate1 macro op1,op2,op3,op4
                        vcD1R1 set op1
                        vcD1R2 set op2
                        vcD1R3 set op3
                        vcD1R4 set op4
000000                  	endm

                        ; Voices - Second Decay Rate
                        smpsVcDecayRate2 macro op1,op2,op3,op4
                        vcD2R1 set op1
                        vcD2R2 set op2
                        vcD2R3 set op3
                        vcD2R4 set op4
000000                  	endm

                        ; Voices - Decay Level	
                        smpsVcDecayLevel macro op1,op2,op3,op4
                        vcDL1 set op1
                        vcDL2 set op2
                        vcDL3 set op3
                        vcDL4 set op4
000000                  	endm

                        ; Voices - Release Rate
                        smpsVcReleaseRate macro op1,op2,op3,op4
                        vcRR1 set op1
                        vcRR2 set op2
                        vcRR3 set op3
                        vcRR4 set op4
000000                  	endm

                        ; Voices - Total Level
                        smpsVcTotalLevel macro op1,op2,op3,op4
                        vcTL1 set op1
                        vcTL2 set op2
                        vcTL3 set op3
                        vcTL4 set op4
                        	dc.b	(vcFeedback<<3)+vcAlgorithm
                        	dc.b	(vcDT4<<4)+vcCF4,(vcDT3<<4)+vcCF3,(vcDT2<<4)+vcCF2,(vcDT1<<4)+vcCF1
                        	dc.b	(vcRS4<<6)+vcAR4,(vcRS3<<6)+vcAR3,(vcRS2<<6)+vcAR2,(vcRS1<<6)+vcAR1
                        	dc.b	(vcAM4<<5)+vcD1R4,(vcAM3<<5)+vcD1R3,(vcAM2<<5)+vcD1R2,(vcAM1<<5)+vcD1R1
                        	dc.b	vcD2R4,vcD2R3,vcD2R2,vcD2R1
                        	dc.b	(vcDL4<<4)+vcRR4,(vcDL3<<4)+vcRR3,(vcDL2<<4)+vcRR2,(vcDL1<<4)+vcRR1
                        	dc.b	vcTL4,vcTL3,vcTL2,vcTL1	
000000                  	endm
                        	
                        	
                        ;==============================================
                        ;!@ The following CF flags/macros are KC-drive specific!
                        ;Rest here mostly used  to compile KC/Nat ASM files for BC purposes...

                        ;!@
                        ; Header - Set up a secondary PWM Channel
                        ;smpsHeaderPWM macro loc
                        smpsHeaderPWM macro loc, songstart,pitch,vol
                        	;dc.w	loc-songStart
                        	rom_ptr_z80(loc+songstart)	
                        	;!@
                        	dc.b	pitch
                        	dc.b	vol
                        	endm
                        	
                        ;!@ Unused and unneeded; leftover Sonic 32x header stuff
                        ; Header - Set up first PWM Channel
                        ;smpsHeaderPWM1 macro loc,num
                        	;dc.w	loc-songStart
                        	;dc.b	num,0
                        	;endm

                        ;!@
                        ; Header - Set up Tick Multiplier (for Sfx)
                        ;sHeaderSFX
                        smpsHeaderTick	macro tmul
                        	dc.b tmul
                            endm

                        ;!@ KC Exclusives!
                        ;# PAN_ANIM
                        ;# pan animation has 2 modes; if first arg is 0, it will end it. Otherwise, more args will be used
                        ;!0xE4, 0 > sPanAni:;								
                        ;!0xE4, 1-0xFF > sPanAni: .lb, .db, .db, .db, .db;	
                        KC_smpsPanAni macro val1,val2,val3,val4,val5
                        	if val1==0
                        		dc.b	$E4,$00
                        	else
                        		dc.b	$E4,val1,val2,val3,val4,val5
                        	endif
                        	endm


                        ; Alter Volume
                        ;!0xE5 > saVolFMP: .db, .db;								
                        KC_smpsFMAlterVol macro val1,val2
                        	dc.b	$E5,val1,val2
                        	endm

                        ;!@ KC Exclusive!	
                        ;!0xE9 > ssLFO: .db, .db;									
                        KC_smpsSetLFO macro enable,amsfms
                        	dc.b	$E9,enable,amsfms
                        	endm

                        ;!0xEA > sPlayDAC: .db | 0x80;								
                        KC_smpsPlayDACSample macro sample
                        	dc.b	$EA,(sample&$7F)
                        	endm

                        ;!@ Songstart param added
                        ;!0xEB > sLoopExit: .db, .dw {						
                        ;smpsConditionalJump macro index,loc
                        KC_smpsConditionalJump macro index,loc,songstart
                        	dc.b	$EB
                        	dc.b	index
                        	;dc.w	z80_ptr(loc)
                        	rom_ptr_z80(loc+songstart)
                        	endm

                        ;!@ Usage/naming is speculative. Called ssTransposeS3K in S3k/Nat driver...	
                        ;!0xED > sYMcmd: .db, .db;							
                        ; Set note values to xx-$40
                        KC_smpsSetNote macro val
                        	dc.b	$ED,val
                        	endm

                        ;!0xEE > sYM1cmd: .db, .db;							
                        KC_smpsFMICommand macro reg,val
                        	dc.b	$EE,reg,val
                        	endm

                        ;!0xF1 > sModEnv: .db, .db {							
                        ; Set Modulation
                        KC_smpsModChange2 macro fmmod,psgmod
                        	dc.b	$F1,fmmod,psgmod
                        	endm
                        	
                        ;!0xF4 > sModEnv: .db {
                        ; Set Modulation
                        KC_smpsModChange macro val
                        	dc.b	$F4,val
                        	endm

                        ;!@ KC exclusive!
                        ;!0xFC > sPitchSlide: .db;						
                        KC_smpsPitchSlide macro enable
                        	dc.b	$FC,enable
                        	endm
                        	
                        ;!0xFD > sRawFreq: .db;							
                        KC_smpsAlternateSMPS macro flag
                        	dc.b	$FD,flag
                        	endm

                        ;!0xFE > sSpecFM3: .db, .db, .db, .db {			
                        	;%; Broken?
                        ;}
                        KC_smpsFM3SpecialMode macro ind1,ind2,ind3,ind4
                        	dc.b	$FE,ind1,ind2,ind3,ind4
                        	Error Broken?
                        	endm

                        ;!0xFF, 1 > sPlaySound: .db;						
                        KC_smpsPlaySound macro index
                        	dc.b	$FF,$01,index
                        	endm

                        ;!0xFF, 2 > sMusPause: .db;						
                        KC_smpsHaltMusic macro flag
                        	dc.b	$FF,$02,flag
                        	endm

                        ;!@ Modified with SongStart	param
                        ;!0xFF, 3 > sCopyMem: .dw, .db {					
                        	;%; No song should ever use this command. It may good idea to remove it.
                        ;}
                        ;KC_smpsCopyData macro data,len
                        KC_smpsCopyData macro data,len,songstart
                        	Error Coord. Flag to copy data should not be used. Complain to GenesisDoes if any music uses it.
                        	;Error No song should ever use this command. It may be a good idea to remove it.
                        	dc.b	$FF,$03
                        	;dc.w	little_endian(data)
                        	rom_ptr_z80(data+songstart)
                        	dc.b	len
                        	endm

                        ;!0xFF, 5 > sSSGEG: .db, .db, .db, .db {			
                        	;=op2 .a2
                        	;:=2 .a1
                        	;:=1 \op2\
                        ;}
                        KC_smpsSSGEG macro op1,op2,op3,op4
                        	dc.b	$FF,$05,op1,op3,op2,op4
                        	endm
                        	
                        	
                        ;!0xFF, 6 > sVolEnvFM: .db, .db {
                        	;:?0 {
                        		;?volenv;
                        	;}
                        ;}	
                        KC_smpsFMVolEnv macro tone,mask
                        	dc.b	$FF,$06,tone,mask
                        	endm
                        ;==============================================

000000                  	include "KC.asm"
       = 040000         Target	EQU	$40000
       = 000040         FMVol_Half		EQU $40
       = 000000         PSGVol_Max		EQU	$00
       = 000003         PSGVol_Half		EQU	$03
       = 000007         PSGVol_Qtr		EQU $07
       = 00000F         PSGVol_Silence	EQU $0F

000000                  	smpsHeaderVoice	ZVN_Patches, Target
                        ;songStart set *
                        	;dc.w	loc-songStart
000000                  	rom_ptr_z80(ZVN_Patches+Target)
                        	;dc.w z80_ptr(ptr,addr)
000000 9889             	dc.w  (((((ZVN_Patches+Target))<<8)&$FF00)|((((ZVN_Patches+Target))>>8)&$7F)|$80)
000002                  	smpsHeaderChan		$06, $03
                        	if 2==2
000002 0603             		dc.b	$06,$03
                        	else
                        	endif	
000004                  	smpsHeaderTempoC	$04, $06
       = 000004         TempDiv set $04
000004 04               	dc.b	$04
000005                  	tempo_conv($06)
                        		if ($06)==0
                        		else
000005 2B               			dc.b	((256 - ((((($06))-1)*256 + ((($06))/2)) / (($06)))) % 256)
                        		endif
000006                  	smpsHeaderFM	ZVN_FM1, Target, $00, $10
                        	;dc.w	loc-songStart
000006                  	rom_ptr_z80(ZVN_FM1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000006 4080             	dc.w  (((((ZVN_FM1+Target))<<8)&$FF00)|((((ZVN_FM1+Target))>>8)&$7F)|$80)
000008 0010             	dc.b	$00,$10
00000A                  	smpsHeaderFM	ZVN_FM2, Target, $00, $10
                        	;dc.w	loc-songStart
00000A                  	rom_ptr_z80(ZVN_FM2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000A 4681             	dc.w  (((((ZVN_FM2+Target))<<8)&$FF00)|((((ZVN_FM2+Target))>>8)&$7F)|$80)
00000C 0010             	dc.b	$00,$10
00000E                  	smpsHeaderFM	ZVN_FM3, Target, $00, $10
                        	;dc.w	loc-songStart
00000E                  	rom_ptr_z80(ZVN_FM3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00000E 8282             	dc.w  (((((ZVN_FM3+Target))<<8)&$FF00)|((((ZVN_FM3+Target))>>8)&$7F)|$80)
000010 0010             	dc.b	$00,$10
000012                  	smpsHeaderFM	ZVN_FM4, Target, $00, $10
                        	;dc.w	loc-songStart
000012                  	rom_ptr_z80(ZVN_FM4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000012 7183             	dc.w  (((((ZVN_FM4+Target))<<8)&$FF00)|((((ZVN_FM4+Target))>>8)&$7F)|$80)
000014 0010             	dc.b	$00,$10
000016                  	smpsHeaderFM	ZVN_FM5, Target, $00, $10
                        	;dc.w	loc-songStart
000016                  	rom_ptr_z80(ZVN_FM5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000016 3F84             	dc.w  (((((ZVN_FM5+Target))<<8)&$FF00)|((((ZVN_FM5+Target))>>8)&$7F)|$80)
000018 0010             	dc.b	$00,$10
00001A                  	smpsHeaderFM	ZVN_FM6, Target, $00, $10
                        	;dc.w	loc-songStart
00001A                  	rom_ptr_z80(ZVN_FM6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001A EC84             	dc.w  (((((ZVN_FM6+Target))<<8)&$FF00)|((((ZVN_FM6+Target))>>8)&$7F)|$80)
00001C 0010             	dc.b	$00,$10
00001E                  	smpsHeaderPSG	ZVN_PSG1, Target, $DC, $02, $00, $00
                        	;dc.w	loc-songStart
00001E                  	rom_ptr_z80(ZVN_PSG1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00001E 4D85             	dc.w  (((((ZVN_PSG1+Target))<<8)&$FF00)|((((ZVN_PSG1+Target))>>8)&$7F)|$80)
000020 DC02             	dc.b	$DC,$02
                        	;dc.w	voice
000022 0000             	dc.b	$00,$00
000024                  	smpsHeaderPSG	ZVN_PSG2, Target, $DC, $02, $00, $00
                        	;dc.w	loc-songStart
000024                  	rom_ptr_z80(ZVN_PSG2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000024 5786             	dc.w  (((((ZVN_PSG2+Target))<<8)&$FF00)|((((ZVN_PSG2+Target))>>8)&$7F)|$80)
000026 DC02             	dc.b	$DC,$02
                        	;dc.w	voice
000028 0000             	dc.b	$00,$00
00002A                  	smpsHeaderPSG	ZVN_PSG3, Target, $DC, $02, $00, $00
                        	;dc.w	loc-songStart
00002A                  	rom_ptr_z80(ZVN_PSG3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00002A 9587             	dc.w  (((((ZVN_PSG3+Target))<<8)&$FF00)|((((ZVN_PSG3+Target))>>8)&$7F)|$80)
00002C DC02             	dc.b	$DC,$02
                        	;dc.w	voice
00002E 0000             	dc.b	$00,$00
000030                  	smpsHeaderPWM	ZVN_PWM1, Target, $00, $AF
                        	;dc.w	loc-songStart
000030                  	rom_ptr_z80(ZVN_PWM1+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000030 8888             	dc.w  (((((ZVN_PWM1+Target))<<8)&$FF00)|((((ZVN_PWM1+Target))>>8)&$7F)|$80)
                        	;!@
000032 00               	dc.b	$00
000033 AF               	dc.b	$AF
000034                  	smpsHeaderPWM	ZVN_PWM2, Target, $00, $AF
                        	;dc.w	loc-songStart
000034                  	rom_ptr_z80(ZVN_PWM2+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000034 1189             	dc.w  (((((ZVN_PWM2+Target))<<8)&$FF00)|((((ZVN_PWM2+Target))>>8)&$7F)|$80)
                        	;!@
000036 00               	dc.b	$00
000037 AF               	dc.b	$AF
000038                  	smpsHeaderPWM	ZVN_PWM3, Target, $00, $AF
                        	;dc.w	loc-songStart
000038                  	rom_ptr_z80(ZVN_PWM3+Target)	
                        	;dc.w z80_ptr(ptr,addr)
000038 9789             	dc.w  (((((ZVN_PWM3+Target))<<8)&$FF00)|((((ZVN_PWM3+Target))>>8)&$7F)|$80)
                        	;!@
00003A 00               	dc.b	$00
00003B AF               	dc.b	$AF
00003C                  	smpsHeaderPWM	ZVN_PWM4, Target, $00, $AF
                        	;dc.w	loc-songStart
00003C                  	rom_ptr_z80(ZVN_PWM4+Target)	
                        	;dc.w z80_ptr(ptr,addr)
00003C 9789             	dc.w  (((((ZVN_PWM4+Target))<<8)&$FF00)|((((ZVN_PWM4+Target))>>8)&$7F)|$80)
                        	;!@
00003E 00               	dc.b	$00
00003F AF               	dc.b	$AF

000040                  ZVN_FM1:	
000040                  	smpsCall		ZVN_Call1, Target
000040 F8               	dc.b	$F8
                        	if (ZVN_Call1<*)
                        	else
000041                  		rom_ptr_z80(ZVN_Call1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000041 8580             	dc.w  (((((ZVN_Call1+Target))<<8)&$FF00)|((((ZVN_Call1+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000043                  	smpsCall		ZVN_Call2, Target
000043 F8               	dc.b	$F8
                        	if (ZVN_Call2<*)
                        	else
000044                  		rom_ptr_z80(ZVN_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000044 9F80             	dc.w  (((((ZVN_Call2+Target))<<8)&$FF00)|((((ZVN_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000046                  	smpsCall		ZVN_Call3, Target
000046 F8               	dc.b	$F8
                        	if (ZVN_Call3<*)
                        	else
000047                  		rom_ptr_z80(ZVN_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000047 B480             	dc.w  (((((ZVN_Call3+Target))<<8)&$FF00)|((((ZVN_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000049                  ZVN_Loop3:
000049                  	smpsCall		ZVN_Call4, Target
000049 F8               	dc.b	$F8
                        	if (ZVN_Call4<*)
                        	else
00004A                  		rom_ptr_z80(ZVN_Call4+Target)
                        	;dc.w z80_ptr(ptr,addr)
00004A C180             	dc.w  (((((ZVN_Call4+Target))<<8)&$FF00)|((((ZVN_Call4+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00004C                  	smpsCall		ZVN_Call5, Target
00004C F8               	dc.b	$F8
                        	if (ZVN_Call5<*)
                        	else
00004D                  		rom_ptr_z80(ZVN_Call5+Target)
                        	;dc.w z80_ptr(ptr,addr)
00004D EA80             	dc.w  (((((ZVN_Call5+Target))<<8)&$FF00)|((((ZVN_Call5+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00004F                  	smpsLoop		$00, $02, ZVN_Loop3, Target
00004F F7               	dc.b	$F7
000050 0002             	dc.b	$00,$02
                        	if (ZVN_Loop3<*)
000052                  		rom_ptr_z80(ZVN_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000052 4980             	dc.w  (((((ZVN_Loop3+Target))<<8)&$FF00)|((((ZVN_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000054                  	smpsCall		ZVN_Call6, Target
000054 F8               	dc.b	$F8
                        	if (ZVN_Call6<*)
                        	else
000055                  		rom_ptr_z80(ZVN_Call6+Target)
                        	;dc.w z80_ptr(ptr,addr)
000055 0B81             	dc.w  (((((ZVN_Call6+Target))<<8)&$FF00)|((((ZVN_Call6+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000057                  	smpsCall		ZVN_Call6, Target
000057 F8               	dc.b	$F8
                        	if (ZVN_Call6<*)
                        	else
000058                  		rom_ptr_z80(ZVN_Call6+Target)
                        	;dc.w z80_ptr(ptr,addr)
000058 0B81             	dc.w  (((((ZVN_Call6+Target))<<8)&$FF00)|((((ZVN_Call6+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00005A                  ZVN_Jump1:
00005A                  	smpsCall		ZVN_Call6, Target
00005A F8               	dc.b	$F8
                        	if (ZVN_Call6<*)
                        	else
00005B                  		rom_ptr_z80(ZVN_Call6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00005B 0B81             	dc.w  (((((ZVN_Call6+Target))<<8)&$FF00)|((((ZVN_Call6+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00005D                  	smpsCall		ZVN_Call5, Target
00005D F8               	dc.b	$F8
                        	if (ZVN_Call5<*)
                        	else
00005E                  		rom_ptr_z80(ZVN_Call5+Target)
                        	;dc.w z80_ptr(ptr,addr)
00005E EA80             	dc.w  (((((ZVN_Call5+Target))<<8)&$FF00)|((((ZVN_Call5+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000060                  	smpsCall		ZVN_Call4, Target
000060 F8               	dc.b	$F8
                        	if (ZVN_Call4<*)
                        	else
000061                  		rom_ptr_z80(ZVN_Call4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000061 C180             	dc.w  (((((ZVN_Call4+Target))<<8)&$FF00)|((((ZVN_Call4+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000063                  	smpsCall		ZVN_Call5, Target
000063 F8               	dc.b	$F8
                        	if (ZVN_Call5<*)
                        	else
000064                  		rom_ptr_z80(ZVN_Call5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000064 EA80             	dc.w  (((((ZVN_Call5+Target))<<8)&$FF00)|((((ZVN_Call5+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000066                  ZVN_Loop4:
000066                  	smpsCall		ZVN_Call6, Target
000066 F8               	dc.b	$F8
                        	if (ZVN_Call6<*)
                        	else
000067                  		rom_ptr_z80(ZVN_Call6+Target)
                        	;dc.w z80_ptr(ptr,addr)
000067 0B81             	dc.w  (((((ZVN_Call6+Target))<<8)&$FF00)|((((ZVN_Call6+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000069                  	smpsLoop		$00, $03, ZVN_Loop4, Target
000069 F7               	dc.b	$F7
00006A 0003             	dc.b	$00,$03
                        	if (ZVN_Loop4<*)
00006C                  		rom_ptr_z80(ZVN_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
00006C 6680             	dc.w  (((((ZVN_Loop4+Target))<<8)&$FF00)|((((ZVN_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00006E                  	smpsCall		ZVN_Call7, Target
00006E F8               	dc.b	$F8
                        	if (ZVN_Call7<*)
                        	else
00006F                  		rom_ptr_z80(ZVN_Call7+Target)
                        	;dc.w z80_ptr(ptr,addr)
00006F 2D81             	dc.w  (((((ZVN_Call7+Target))<<8)&$FF00)|((((ZVN_Call7+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000071                  	smpsCall		ZVN_Call5, Target
000071 F8               	dc.b	$F8
                        	if (ZVN_Call5<*)
                        	else
000072                  		rom_ptr_z80(ZVN_Call5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000072 EA80             	dc.w  (((((ZVN_Call5+Target))<<8)&$FF00)|((((ZVN_Call5+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000074                  	smpsCall		ZVN_Call4, Target
000074 F8               	dc.b	$F8
                        	if (ZVN_Call4<*)
                        	else
000075                  		rom_ptr_z80(ZVN_Call4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000075 C180             	dc.w  (((((ZVN_Call4+Target))<<8)&$FF00)|((((ZVN_Call4+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000077                  	smpsCall		ZVN_Call5, Target
000077 F8               	dc.b	$F8
                        	if (ZVN_Call5<*)
                        	else
000078                  		rom_ptr_z80(ZVN_Call5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000078 EA80             	dc.w  (((((ZVN_Call5+Target))<<8)&$FF00)|((((ZVN_Call5+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00007A                  ZVN_Loop6:
00007A                  	smpsCall		ZVN_Call6, Target
00007A F8               	dc.b	$F8
                        	if (ZVN_Call6<*)
                        	else
00007B                  		rom_ptr_z80(ZVN_Call6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00007B 0B81             	dc.w  (((((ZVN_Call6+Target))<<8)&$FF00)|((((ZVN_Call6+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00007D                  	smpsLoop		$00, $03, ZVN_Loop6, Target
00007D F7               	dc.b	$F7
00007E 0003             	dc.b	$00,$03
                        	if (ZVN_Loop6<*)
000080                  		rom_ptr_z80(ZVN_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
000080 7A80             	dc.w  (((((ZVN_Loop6+Target))<<8)&$FF00)|((((ZVN_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000082                  	smpsJump		ZVN_Jump1, Target
000082 F6               	dc.b	$F6
                        	if (ZVN_Jump1<*)
000083                  		rom_ptr_z80(ZVN_Jump1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000083 5A80             	dc.w  (((((ZVN_Jump1+Target))<<8)&$FF00)|((((ZVN_Jump1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000085                  ZVN_Call1:
000085                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000085 EF02             		dc.b $EF,$02
                        	endif
000087 B406             	dc.b	nEb4, $06
000089                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
000089 EF00             		dc.b $EF,$00
                        	endif
00008B B10204BDAF060204 	dc.b	nC4, $02, $04, nC5, nBb3, $06, $02, $04
000093 BBAA060204B6B106 	dc.b	nBb4, nF3, $06, $02, $04, nF4, nC4, $06
00009B 0204BD           	dc.b	$02, $04, nC5
00009E                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00009E F9               	dc.b	$F9

00009F                  ZVN_Call2:
00009F B1060204BDB40602 	dc.b	nC4, $06, $02, $04, nC5, nEb4, $06, $02
0000A7 04C0AA060204B6AF 	dc.b	$04, nEb5, nF3, $06, $02, $04, nF4, nBb3
0000AF 060204BB         	dc.b	$06, $02, $04, nBb4
0000B3                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0000B3 F9               	dc.b	$F9

0000B4                  ZVN_Call3:
0000B4 B10C04B40C04B60C 	dc.b	nC4, $0C, $04, nEb4, $0C, $04, nF4, $0C
0000BC 04AF0C04         	dc.b	$04, nBb3, $0C, $04
0000C0                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0000C0 F9               	dc.b	$F9

0000C1                  ZVN_Call4:
0000C1                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
0000C1 EF01             		dc.b $EF,$01
                        	endif
0000C3 BD               	dc.b	nC5

0000C4                  ZVN_Loop1:
0000C4 01BDB1BDBBB9B1B6 	dc.b	$01, nC5, nC4, nC5, nBb4, nAb4, nC4, nF4
0000CC BDBDB1BDBBBBBDB4 	dc.b	nC5, nC5, nC4, nC5, nBb4, nBb4, nC5, nEb4
0000D4 BBBDB1BDB8BDB6BD 	dc.b	nBb4, nC5, nC4, nC5, nG4, nC5, nF4, nC5
0000DC B1BDB6BDB8BDB1BD 	dc.b	nC4, nC5, nF4, nC5, nG4, nC5, nC4, nC5
0000E4                  	smpsLoop		$01, $02, ZVN_Loop1, Target
0000E4 F7               	dc.b	$F7
0000E5 0102             	dc.b	$01,$02
                        	if (ZVN_Loop1<*)
0000E7                  		rom_ptr_z80(ZVN_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0000E7 C480             	dc.w  (((((ZVN_Loop1+Target))<<8)&$FF00)|((((ZVN_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0000E9                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0000E9 F9               	dc.b	$F9

0000EA                  ZVN_Call5:
0000EA                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
0000EA EF01             		dc.b $EF,$01
                        	endif
0000EC B602B8BDBBC4C2C0 	dc.b	nF4, $02, nG4, nC5, nBb4, nG5, nF5, nEb5
0000F4 BFB4B6B8B9BDC0BF 	dc.b	nD5, nEb4, nF4, nG4, nAb4, nC5, nEb5, nD5
0000FC BB               	dc.b	nBb4

0000FD                  ZVN_Loop2:
0000FD B1B6B8B6BDB8B6B4 	dc.b	nC4, nF4, nG4, nF4, nC5, nG4, nF4, nEb4
000105                  	smpsLoop		$01, $02, ZVN_Loop2, Target
000105 F7               	dc.b	$F7
000106 0102             	dc.b	$01,$02
                        	if (ZVN_Loop2<*)
000108                  		rom_ptr_z80(ZVN_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000108 FD80             	dc.w  (((((ZVN_Loop2+Target))<<8)&$FF00)|((((ZVN_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00010A                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00010A F9               	dc.b	$F9

00010B                  ZVN_Call6:
00010B B402B6B8B4BBB6B8 	dc.b	nEb4, $02, nF4, nG4, nEb4, nBb4, nF4, nG4
000113 B4B6B8B9B8BDB9B8 	dc.b	nEb4, nF4, nG4, nAb4, nG4, nC5, nAb4, nG4
00011B B6B1B3B4B1B6B1B4 	dc.b	nF4, nC4, nD4, nEb4, nC4, nF4, nC4, nEb4
000123 B1AFB1B4B6B8B6B4 	dc.b	nC4, nBb3, nC4, nEb4, nF4, nG4, nF4, nEb4
00012B B6               	dc.b	nF4
00012C                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00012C F9               	dc.b	$F9

00012D                  ZVN_Call7:
00012D                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
00012D EF02             		dc.b $EF,$02
                        	endif

00012F                  ZVN_Loop5:
00012F BD02B1C4B1C9B1C4 	dc.b	nC5, $02, nC4, nG5, nC4, nC6, nC4, nG5
000137 B1CBB1C4B1C9B1C4 	dc.b	nC4, nD6, nC4, nG5, nC4, nC6, nC4, nG5
00013F B1               	dc.b	nC4
000140                  	smpsLoop		$00, $02, ZVN_Loop5, Target
000140 F7               	dc.b	$F7
000141 0002             	dc.b	$00,$02
                        	if (ZVN_Loop5<*)
000143                  		rom_ptr_z80(ZVN_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000143 2F81             	dc.w  (((((ZVN_Loop5+Target))<<8)&$FF00)|((((ZVN_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000145                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000145 F9               	dc.b	$F9

000146                  ZVN_FM2:
000146                  	smpsAlterVol	FMVol_Half
000146 E640             	dc.b	$E6,FMVol_Half
000148                  	smpsCall		ZVN_Call8, Target
000148 F8               	dc.b	$F8
                        	if (ZVN_Call8<*)
                        	else
000149                  		rom_ptr_z80(ZVN_Call8+Target)
                        	;dc.w z80_ptr(ptr,addr)
000149 8D81             	dc.w  (((((ZVN_Call8+Target))<<8)&$FF00)|((((ZVN_Call8+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00014B                  	smpsCall		ZVN_Call9, Target
00014B F8               	dc.b	$F8
                        	if (ZVN_Call9<*)
                        	else
00014C                  		rom_ptr_z80(ZVN_Call9+Target)
                        	;dc.w z80_ptr(ptr,addr)
00014C A781             	dc.w  (((((ZVN_Call9+Target))<<8)&$FF00)|((((ZVN_Call9+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00014E                  	smpsCall		ZVN_Call10, Target
00014E F8               	dc.b	$F8
                        	if (ZVN_Call10<*)
                        	else
00014F                  		rom_ptr_z80(ZVN_Call10+Target)
                        	;dc.w z80_ptr(ptr,addr)
00014F BF81             	dc.w  (((((ZVN_Call10+Target))<<8)&$FF00)|((((ZVN_Call10+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000151                  ZVN_Loop7:
000151                  	smpsCall		ZVN_Call11, Target
000151 F8               	dc.b	$F8
                        	if (ZVN_Call11<*)
                        	else
000152                  		rom_ptr_z80(ZVN_Call11+Target)
                        	;dc.w z80_ptr(ptr,addr)
000152 D481             	dc.w  (((((ZVN_Call11+Target))<<8)&$FF00)|((((ZVN_Call11+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000154                  	smpsCall		ZVN_Call12, Target
000154 F8               	dc.b	$F8
                        	if (ZVN_Call12<*)
                        	else
000155                  		rom_ptr_z80(ZVN_Call12+Target)
                        	;dc.w z80_ptr(ptr,addr)
000155 1882             	dc.w  (((((ZVN_Call12+Target))<<8)&$FF00)|((((ZVN_Call12+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000157                  	smpsLoop		$00, $02, ZVN_Loop7, Target
000157 F7               	dc.b	$F7
000158 0002             	dc.b	$00,$02
                        	if (ZVN_Loop7<*)
00015A                  		rom_ptr_z80(ZVN_Loop7+Target)
                        	;dc.w z80_ptr(ptr,addr)
00015A 5181             	dc.w  (((((ZVN_Loop7+Target))<<8)&$FF00)|((((ZVN_Loop7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00015C                  	smpsCall		ZVN_Call13, Target
00015C F8               	dc.b	$F8
                        	if (ZVN_Call13<*)
                        	else
00015D                  		rom_ptr_z80(ZVN_Call13+Target)
                        	;dc.w z80_ptr(ptr,addr)
00015D 3C82             	dc.w  (((((ZVN_Call13+Target))<<8)&$FF00)|((((ZVN_Call13+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00015F                  	smpsCall		ZVN_Call13, Target
00015F F8               	dc.b	$F8
                        	if (ZVN_Call13<*)
                        	else
000160                  		rom_ptr_z80(ZVN_Call13+Target)
                        	;dc.w z80_ptr(ptr,addr)
000160 3C82             	dc.w  (((((ZVN_Call13+Target))<<8)&$FF00)|((((ZVN_Call13+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000162                  ZVN_Jump2:
000162                  	smpsCall		ZVN_Call13, Target
000162 F8               	dc.b	$F8
                        	if (ZVN_Call13<*)
                        	else
000163                  		rom_ptr_z80(ZVN_Call13+Target)
                        	;dc.w z80_ptr(ptr,addr)
000163 3C82             	dc.w  (((((ZVN_Call13+Target))<<8)&$FF00)|((((ZVN_Call13+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000165                  	smpsCall		ZVN_Call12, Target
000165 F8               	dc.b	$F8
                        	if (ZVN_Call12<*)
                        	else
000166                  		rom_ptr_z80(ZVN_Call12+Target)
                        	;dc.w z80_ptr(ptr,addr)
000166 1882             	dc.w  (((((ZVN_Call12+Target))<<8)&$FF00)|((((ZVN_Call12+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000168                  	smpsCall		ZVN_Call11, Target
000168 F8               	dc.b	$F8
                        	if (ZVN_Call11<*)
                        	else
000169                  		rom_ptr_z80(ZVN_Call11+Target)
                        	;dc.w z80_ptr(ptr,addr)
000169 D481             	dc.w  (((((ZVN_Call11+Target))<<8)&$FF00)|((((ZVN_Call11+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00016B                  	smpsCall		ZVN_Call12, Target
00016B F8               	dc.b	$F8
                        	if (ZVN_Call12<*)
                        	else
00016C                  		rom_ptr_z80(ZVN_Call12+Target)
                        	;dc.w z80_ptr(ptr,addr)
00016C 1882             	dc.w  (((((ZVN_Call12+Target))<<8)&$FF00)|((((ZVN_Call12+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00016E                  ZVN_Loo$8:
00016E                  	smpsCall		ZVN_Call13, Target
00016E F8               	dc.b	$F8
                        	if (ZVN_Call13<*)
                        	else
00016F                  		rom_ptr_z80(ZVN_Call13+Target)
                        	;dc.w z80_ptr(ptr,addr)
00016F 3C82             	dc.w  (((((ZVN_Call13+Target))<<8)&$FF00)|((((ZVN_Call13+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000171                  	smpsLoop		$00, $03, ZVN_Loo$8, Target
000171 F7               	dc.b	$F7
000172 0003             	dc.b	$00,$03
                        	if (ZVN_Loo$8<*)
000174                  		rom_ptr_z80(ZVN_Loo$8+Target)
                        	;dc.w z80_ptr(ptr,addr)
000174 6E81             	dc.w  (((((ZVN_Loo$8+Target))<<8)&$FF00)|((((ZVN_Loo$8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000176                  	smpsCall		ZVN_Call14, Target
000176 F8               	dc.b	$F8
                        	if (ZVN_Call14<*)
                        	else
000177                  		rom_ptr_z80(ZVN_Call14+Target)
                        	;dc.w z80_ptr(ptr,addr)
000177 5E82             	dc.w  (((((ZVN_Call14+Target))<<8)&$FF00)|((((ZVN_Call14+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000179                  	smpsCall		ZVN_Call12, Target
000179 F8               	dc.b	$F8
                        	if (ZVN_Call12<*)
                        	else
00017A                  		rom_ptr_z80(ZVN_Call12+Target)
                        	;dc.w z80_ptr(ptr,addr)
00017A 1882             	dc.w  (((((ZVN_Call12+Target))<<8)&$FF00)|((((ZVN_Call12+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00017C                  	smpsCall		ZVN_Call11, Target
00017C F8               	dc.b	$F8
                        	if (ZVN_Call11<*)
                        	else
00017D                  		rom_ptr_z80(ZVN_Call11+Target)
                        	;dc.w z80_ptr(ptr,addr)
00017D D481             	dc.w  (((((ZVN_Call11+Target))<<8)&$FF00)|((((ZVN_Call11+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00017F                  	smpsCall		ZVN_Call12, Target
00017F F8               	dc.b	$F8
                        	if (ZVN_Call12<*)
                        	else
000180                  		rom_ptr_z80(ZVN_Call12+Target)
                        	;dc.w z80_ptr(ptr,addr)
000180 1882             	dc.w  (((((ZVN_Call12+Target))<<8)&$FF00)|((((ZVN_Call12+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000182                  ZVN_Loo$9:
000182                  	smpsCall		ZVN_Call13, Target
000182 F8               	dc.b	$F8
                        	if (ZVN_Call13<*)
                        	else
000183                  		rom_ptr_z80(ZVN_Call13+Target)
                        	;dc.w z80_ptr(ptr,addr)
000183 3C82             	dc.w  (((((ZVN_Call13+Target))<<8)&$FF00)|((((ZVN_Call13+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000185                  	smpsLoop		$00, $03, ZVN_Loo$9, Target
000185 F7               	dc.b	$F7
000186 0003             	dc.b	$00,$03
                        	if (ZVN_Loo$9<*)
000188                  		rom_ptr_z80(ZVN_Loo$9+Target)
                        	;dc.w z80_ptr(ptr,addr)
000188 8281             	dc.w  (((((ZVN_Loo$9+Target))<<8)&$FF00)|((((ZVN_Loo$9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00018A                  	smpsJump		ZVN_Jump2, Target
00018A F6               	dc.b	$F6
                        	if (ZVN_Jump2<*)
00018B                  		rom_ptr_z80(ZVN_Jump2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00018B 6281             	dc.w  (((((ZVN_Jump2+Target))<<8)&$FF00)|((((ZVN_Jump2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00018D                  ZVN_Call8:
00018D 8006             	dc.b	nRst, $06
00018F                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
00018F EF00             		dc.b $EF,$00
                        	endif
000191 BD01BFC004C2C008 	dc.b	nC5, $01, nD5, nEb5, $04, nF5, nEb5, $08
000199 BD06B802B906BD02 	dc.b	nC5, $06, nG4, $02, nAb4, $06, nC5, $02
0001A1 BB04B9B810       	dc.b	nBb4, $04, nAb4, nG4, $10
0001A6                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0001A6 F9               	dc.b	$F9

0001A7                  ZVN_Call9:
0001A7 8006BD01BFC004C2 	dc.b	nRst, $06, nC5, $01, nD5, nEb5, $04, nF5
0001AF C408C006B802B906 	dc.b	nG5, $08, nEb5, $06, nG4, $02, nAb4, $06
0001B7 B802B604B4BB10   	dc.b	nG4, $02, nF4, $04, nEb4, nBb4, $10
0001BE                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0001BE F9               	dc.b	$F9

0001BF                  ZVN_Call10:
0001BF B106B404B606BB0C 	dc.b	nC4, $06, nEb4, $04, nF4, $06, nBb4, $0C
0001C7 B902B4B60CB802B9 	dc.b	nAb4, $02, nEb4, nF4, $0C, nG4, $02, nAb4
0001CF B80CB604         	dc.b	nG4, $0C, nF4, $04
0001D3                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0001D3 F9               	dc.b	$F9

0001D4                  ZVN_Call11:
0001D4                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
0001D4 EF01             		dc.b $EF,$01
                        	endif
0001D6 B101B1BDBDB1BDBB 	dc.b	nC4, $01, nC4, nC5, nC5, nC4, nC5, nBb4
0001DE B9B1B6BDBDB1BDBB 	dc.b	nAb4, nC4, nF4, nC5, nC5, nC4, nC5, nBb4
0001E6 BBBDB4BBBDB1BDB8 	dc.b	nBb4, nC5, nEb4, nBb4, nC5, nC4, nC5, nG4
0001EE BDB6BDB1BDB6BDB8 	dc.b	nC5, nF4, nC5, nC4, nC5, nF4, nC5, nG4
0001F6 BDB1BDBDBDB1BDBB 	dc.b	nC5, nC4, nC5, nC5, nC5, nC4, nC5, nBb4
0001FE B9B1B6BDBDB1BDBB 	dc.b	nAb4, nC4, nF4, nC5, nC5, nC4, nC5, nBb4
000206 BBBDB4BBBDB1BDB8 	dc.b	nBb4, nC5, nEb4, nBb4, nC5, nC4, nC5, nG4
00020E BDB6BDB1BDB6BDB8 	dc.b	nC5, nF4, nC5, nC4, nC5, nF4, nC5, nG4
000216 BD               	dc.b	nC5
000217                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000217 F9               	dc.b	$F9

000218                  ZVN_Call12:
000218 8002             	dc.b	nRst, $02
00021A                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
00021A EF01             		dc.b $EF,$01
                        	endif
00021C B6B8BDBBC4C2C0BF 	dc.b	nF4, nG4, nC5, nBb4, nG5, nF5, nEb5, nD5
000224 B4B6B8B9BDC0BFBB 	dc.b	nEb4, nF4, nG4, nAb4, nC5, nEb5, nD5, nBb4
00022C B1B6B8B6BDB8B6B4 	dc.b	nC4, nF4, nG4, nF4, nC5, nG4, nF4, nEb4
000234 B1B6B8B6BDB8B6   	dc.b	nC4, nF4, nG4, nF4, nC5, nG4, nF4
00023B                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00023B F9               	dc.b	$F9

00023C                  ZVN_Call13:
00023C 8002B4B6B8B4BBB6 	dc.b	nRst, $02, nEb4, nF4, nG4, nEb4, nBb4, nF4
000244 B8B4B6B8B9B8BDB9 	dc.b	nG4, nEb4, nF4, nG4, nAb4, nG4, nC5, nAb4
00024C B8B6B1B3B4B1B6B1 	dc.b	nG4, nF4, nC4, nD4, nEb4, nC4, nF4, nC4
000254 B4B1AFB1B4B6B8B6 	dc.b	nEb4, nC4, nBb3, nC4, nEb4, nF4, nG4, nF4
00025C B4               	dc.b	nEb4
00025D                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00025D F9               	dc.b	$F9

00025E                  ZVN_Call14:
00025E 8002             	dc.b	nRst, $02
000260                  	smpsFMvoice		$02
                        	;if song<>""
                        	if 1==2
                        	else
000260 EF02             		dc.b $EF,$02
                        	endif
000262 BDB1C4B1C9B1C4B1 	dc.b	nC5, nC4, nG5, nC4, nC6, nC4, nG5, nC4
00026A CBB1C4B1C9B1C4B1 	dc.b	nD6, nC4, nG5, nC4, nC6, nC4, nG5, nC4
000272 BDB1C4B1C9B1C4B1 	dc.b	nC5, nC4, nG5, nC4, nC6, nC4, nG5, nC4
00027A CBB1C4B1C9B1C4   	dc.b	nD6, nC4, nG5, nC4, nC6, nC4, nG5
000281                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000281 F9               	dc.b	$F9

000282                  ZVN_FM3:
000282                  	smpsCall		ZVN_Call15, Target
000282 F8               	dc.b	$F8
                        	if (ZVN_Call15<*)
                        	else
000283                  		rom_ptr_z80(ZVN_Call15+Target)
                        	;dc.w z80_ptr(ptr,addr)
000283 C982             	dc.w  (((((ZVN_Call15+Target))<<8)&$FF00)|((((ZVN_Call15+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000285                  	smpsCall		ZVN_Call16, Target
000285 F8               	dc.b	$F8
                        	if (ZVN_Call16<*)
                        	else
000286                  		rom_ptr_z80(ZVN_Call16+Target)
                        	;dc.w z80_ptr(ptr,addr)
000286 ED82             	dc.w  (((((ZVN_Call16+Target))<<8)&$FF00)|((((ZVN_Call16+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000288                  	smpsCall		ZVN_Call16, Target
000288 F8               	dc.b	$F8
                        	if (ZVN_Call16<*)
                        	else
000289                  		rom_ptr_z80(ZVN_Call16+Target)
                        	;dc.w z80_ptr(ptr,addr)
000289 ED82             	dc.w  (((((ZVN_Call16+Target))<<8)&$FF00)|((((ZVN_Call16+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00028B                  ZVN_Loop10:
00028B                  	smpsCall		ZVN_Call17, Target
00028B F8               	dc.b	$F8
                        	if (ZVN_Call17<*)
                        	else
00028C                  		rom_ptr_z80(ZVN_Call17+Target)
                        	;dc.w z80_ptr(ptr,addr)
00028C 0F83             	dc.w  (((((ZVN_Call17+Target))<<8)&$FF00)|((((ZVN_Call17+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00028E                  	smpsCall		ZVN_Call18, Target
00028E F8               	dc.b	$F8
                        	if (ZVN_Call18<*)
                        	else
00028F                  		rom_ptr_z80(ZVN_Call18+Target)
                        	;dc.w z80_ptr(ptr,addr)
00028F 2A83             	dc.w  (((((ZVN_Call18+Target))<<8)&$FF00)|((((ZVN_Call18+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000291                  	smpsLoop		$00, $02, ZVN_Loop10, Target
000291 F7               	dc.b	$F7
000292 0002             	dc.b	$00,$02
                        	if (ZVN_Loop10<*)
000294                  		rom_ptr_z80(ZVN_Loop10+Target)
                        	;dc.w z80_ptr(ptr,addr)
000294 8B82             	dc.w  (((((ZVN_Loop10+Target))<<8)&$FF00)|((((ZVN_Loop10+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000296                  	smpsCall		ZVN_Call19, Target
000296 F8               	dc.b	$F8
                        	if (ZVN_Call19<*)
                        	else
000297                  		rom_ptr_z80(ZVN_Call19+Target)
                        	;dc.w z80_ptr(ptr,addr)
000297 3383             	dc.w  (((((ZVN_Call19+Target))<<8)&$FF00)|((((ZVN_Call19+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000299                  	smpsCall		ZVN_Call20, Target
000299 F8               	dc.b	$F8
                        	if (ZVN_Call20<*)
                        	else
00029A                  		rom_ptr_z80(ZVN_Call20+Target)
                        	;dc.w z80_ptr(ptr,addr)
00029A 4D83             	dc.w  (((((ZVN_Call20+Target))<<8)&$FF00)|((((ZVN_Call20+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00029C                  ZVN_Jump3:
00029C                  	smpsCall		ZVN_Call20, Target
00029C F8               	dc.b	$F8
                        	if (ZVN_Call20<*)
                        	else
00029D                  		rom_ptr_z80(ZVN_Call20+Target)
                        	;dc.w z80_ptr(ptr,addr)
00029D 4D83             	dc.w  (((((ZVN_Call20+Target))<<8)&$FF00)|((((ZVN_Call20+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00029F                  	smpsCall		ZVN_Call18, Target
00029F F8               	dc.b	$F8
                        	if (ZVN_Call18<*)
                        	else
0002A0                  		rom_ptr_z80(ZVN_Call18+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002A0 2A83             	dc.w  (((((ZVN_Call18+Target))<<8)&$FF00)|((((ZVN_Call18+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002A2                  	smpsCall		ZVN_Call17, Target
0002A2 F8               	dc.b	$F8
                        	if (ZVN_Call17<*)
                        	else
0002A3                  		rom_ptr_z80(ZVN_Call17+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002A3 0F83             	dc.w  (((((ZVN_Call17+Target))<<8)&$FF00)|((((ZVN_Call17+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002A5                  	smpsCall		ZVN_Call18, Target
0002A5 F8               	dc.b	$F8
                        	if (ZVN_Call18<*)
                        	else
0002A6                  		rom_ptr_z80(ZVN_Call18+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002A6 2A83             	dc.w  (((((ZVN_Call18+Target))<<8)&$FF00)|((((ZVN_Call18+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002A8                  	smpsCall		ZVN_Call19, Target
0002A8 F8               	dc.b	$F8
                        	if (ZVN_Call19<*)
                        	else
0002A9                  		rom_ptr_z80(ZVN_Call19+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002A9 3383             	dc.w  (((((ZVN_Call19+Target))<<8)&$FF00)|((((ZVN_Call19+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002AB                  	smpsCall		ZVN_Call20, Target
0002AB F8               	dc.b	$F8
                        	if (ZVN_Call20<*)
                        	else
0002AC                  		rom_ptr_z80(ZVN_Call20+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002AC 4D83             	dc.w  (((((ZVN_Call20+Target))<<8)&$FF00)|((((ZVN_Call20+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002AE                  	smpsCall		ZVN_Call20, Target
0002AE F8               	dc.b	$F8
                        	if (ZVN_Call20<*)
                        	else
0002AF                  		rom_ptr_z80(ZVN_Call20+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002AF 4D83             	dc.w  (((((ZVN_Call20+Target))<<8)&$FF00)|((((ZVN_Call20+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002B1                  	smpsCall		ZVN_Call21, Target
0002B1 F8               	dc.b	$F8
                        	if (ZVN_Call21<*)
                        	else
0002B2                  		rom_ptr_z80(ZVN_Call21+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002B2 6183             	dc.w  (((((ZVN_Call21+Target))<<8)&$FF00)|((((ZVN_Call21+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002B4                  	smpsCall		ZVN_Call18, Target
0002B4 F8               	dc.b	$F8
                        	if (ZVN_Call18<*)
                        	else
0002B5                  		rom_ptr_z80(ZVN_Call18+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002B5 2A83             	dc.w  (((((ZVN_Call18+Target))<<8)&$FF00)|((((ZVN_Call18+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002B7                  	smpsCall		ZVN_Call17, Target
0002B7 F8               	dc.b	$F8
                        	if (ZVN_Call17<*)
                        	else
0002B8                  		rom_ptr_z80(ZVN_Call17+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002B8 0F83             	dc.w  (((((ZVN_Call17+Target))<<8)&$FF00)|((((ZVN_Call17+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002BA                  	smpsCall		ZVN_Call18, Target
0002BA F8               	dc.b	$F8
                        	if (ZVN_Call18<*)
                        	else
0002BB                  		rom_ptr_z80(ZVN_Call18+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002BB 2A83             	dc.w  (((((ZVN_Call18+Target))<<8)&$FF00)|((((ZVN_Call18+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002BD                  	smpsCall		ZVN_Call19, Target
0002BD F8               	dc.b	$F8
                        	if (ZVN_Call19<*)
                        	else
0002BE                  		rom_ptr_z80(ZVN_Call19+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002BE 3383             	dc.w  (((((ZVN_Call19+Target))<<8)&$FF00)|((((ZVN_Call19+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002C0                  	smpsCall		ZVN_Call20, Target
0002C0 F8               	dc.b	$F8
                        	if (ZVN_Call20<*)
                        	else
0002C1                  		rom_ptr_z80(ZVN_Call20+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002C1 4D83             	dc.w  (((((ZVN_Call20+Target))<<8)&$FF00)|((((ZVN_Call20+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002C3                  	smpsCall		ZVN_Call20, Target
0002C3 F8               	dc.b	$F8
                        	if (ZVN_Call20<*)
                        	else
0002C4                  		rom_ptr_z80(ZVN_Call20+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002C4 4D83             	dc.w  (((((ZVN_Call20+Target))<<8)&$FF00)|((((ZVN_Call20+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0002C6                  	smpsJump		ZVN_Jump3, Target
0002C6 F6               	dc.b	$F6
                        	if (ZVN_Jump3<*)
0002C7                  		rom_ptr_z80(ZVN_Jump3+Target)
                        	;dc.w z80_ptr(ptr,addr)
0002C7 9C82             	dc.w  (((((ZVN_Jump3+Target))<<8)&$FF00)|((((ZVN_Jump3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0002C9                  ZVN_Call15:
0002C9                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
0002C9 EF00             		dc.b $EF,$00
                        	endif
0002CB B102B8BDB8B3B8BD 	dc.b	nC4, $02, nG4, nC5, nG4, nD4, nG4, nC5
0002D3 BBAFB4BBB4AFB4BB 	dc.b	nBb4, nBb3, nEb4, nBb4, nEb4, nBb3, nEb4, nBb4
0002DB B4B6B9C2B9B6B9C2 	dc.b	nEb4, nF4, nAb4, nF5, nAb4, nF4, nAb4, nF5
0002E3 B9B1B8BDB8B1B8BD 	dc.b	nAb4, nC4, nG4, nC5, nG4, nC4, nG4, nC5
0002EB B8               	dc.b	nG4
0002EC                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0002EC F9               	dc.b	$F9

0002ED                  ZVN_Call16:
0002ED B102B8BDB8B3B8BD 	dc.b	nC4, $02, nG4, nC5, nG4, nD4, nG4, nC5
0002F5 BBAFB4BBB4AFB4BB 	dc.b	nBb4, nBb3, nEb4, nBb4, nEb4, nBb3, nEb4, nBb4
0002FD B4B6B9C2B9B6B9C2 	dc.b	nEb4, nF4, nAb4, nF5, nAb4, nF4, nAb4, nF5
000305 B9AFB6BBB6AFB6BB 	dc.b	nAb4, nBb3, nF4, nBb4, nF4, nBb3, nF4, nBb4
00030D B6               	dc.b	nF4
00030E                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00030E F9               	dc.b	$F9

00030F                  ZVN_Call17:
00030F                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
00030F EF01             		dc.b $EF,$01
                        	endif
000311 BD02C201C0BF08BD 	dc.b	nC5, $02, nF5, $01, nEb5, nD5, $08, nC5
000319 02BBC004BD01BFC0 	dc.b	$02, nBb4, nEb5, $04, nC5, $01, nD5, nEb5
000321 C5C408C210C008C4 	dc.b	nAb5, nG5, $08, nF5, $10, nEb5, $08, nG5
000329                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000329 F9               	dc.b	$F9

00032A                  ZVN_Call18:
00032A C910C708C5C41080 	dc.b	nC6, $10, nBb5, $08, nAb5, nG5, $10, nRst
000332                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000332 F9               	dc.b	$F9

000333                  ZVN_Call19:
000333 C001C2C406C708C5 	dc.b	nEb5, $01, nF5, nG5, $06, nBb5, $08, nAb5
00033B 04C408C206BD01BF 	dc.b	$04, nG5, $08, nF5, $06, nC5, $01, nD5
000343 C00CC208BB06C001 	dc.b	nEb5, $0C, nF5, $08, nBb4, $06, nEb5, $01
00034B C2               	dc.b	nF5
00034C                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00034C F9               	dc.b	$F9

00034D                  ZVN_Call20:
00034D C408C7C504C408C2 	dc.b	nG5, $08, nBb5, nAb5, $04, nG5, $08, nF5
000355 06BD01BFC008CC04 	dc.b	$06, nC5, $01, nD5, nEb5, $08, nEb6, $04
00035D CB08C7           	dc.b	nD6, $08, nBb5
000360                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000360 F9               	dc.b	$F9

000361                  ZVN_Call21:
000361 C418C004BFC00ABF 	dc.b	nG5, $18, nEb5, $04, nD5, nEb5, $0A, nD5
000369 01C0C20CC004BF   	dc.b	$01, nEb5, nF5, $0C, nEb5, $04, nD5
000370                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000370 F9               	dc.b	$F9

000371                  ZVN_FM4:
000371                  	smpsCall		ZVN_Call22, Target
000371 F8               	dc.b	$F8
                        	if (ZVN_Call22<*)
                        	else
000372                  		rom_ptr_z80(ZVN_Call22+Target)
                        	;dc.w z80_ptr(ptr,addr)
000372 B683             	dc.w  (((((ZVN_Call22+Target))<<8)&$FF00)|((((ZVN_Call22+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000374                  	smpsCall		ZVN_Call23, Target
000374 F8               	dc.b	$F8
                        	if (ZVN_Call23<*)
                        	else
000375                  		rom_ptr_z80(ZVN_Call23+Target)
                        	;dc.w z80_ptr(ptr,addr)
000375 BC83             	dc.w  (((((ZVN_Call23+Target))<<8)&$FF00)|((((ZVN_Call23+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000377                  	smpsCall		ZVN_Call24, Target
000377 F8               	dc.b	$F8
                        	if (ZVN_Call24<*)
                        	else
000378                  		rom_ptr_z80(ZVN_Call24+Target)
                        	;dc.w z80_ptr(ptr,addr)
000378 C483             	dc.w  (((((ZVN_Call24+Target))<<8)&$FF00)|((((ZVN_Call24+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00037A                  ZVN_Loop13:
00037A                  	smpsCall		ZVN_Call25, Target
00037A F8               	dc.b	$F8
                        	if (ZVN_Call25<*)
                        	else
00037B                  		rom_ptr_z80(ZVN_Call25+Target)
                        	;dc.w z80_ptr(ptr,addr)
00037B D983             	dc.w  (((((ZVN_Call25+Target))<<8)&$FF00)|((((ZVN_Call25+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00037D                  	smpsCall		ZVN_Call26, Target
00037D F8               	dc.b	$F8
                        	if (ZVN_Call26<*)
                        	else
00037E                  		rom_ptr_z80(ZVN_Call26+Target)
                        	;dc.w z80_ptr(ptr,addr)
00037E E883             	dc.w  (((((ZVN_Call26+Target))<<8)&$FF00)|((((ZVN_Call26+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000380                  	smpsLoop		$00, $02, ZVN_Loop13, Target
000380 F7               	dc.b	$F7
000381 0002             	dc.b	$00,$02
                        	if (ZVN_Loop13<*)
000383                  		rom_ptr_z80(ZVN_Loop13+Target)
                        	;dc.w z80_ptr(ptr,addr)
000383 7A83             	dc.w  (((((ZVN_Loop13+Target))<<8)&$FF00)|((((ZVN_Loop13+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000385                  	smpsCall		ZVN_Call27, Target
000385 F8               	dc.b	$F8
                        	if (ZVN_Call27<*)
                        	else
000386                  		rom_ptr_z80(ZVN_Call27+Target)
                        	;dc.w z80_ptr(ptr,addr)
000386 0684             	dc.w  (((((ZVN_Call27+Target))<<8)&$FF00)|((((ZVN_Call27+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000388                  	smpsCall		ZVN_Call27, Target
000388 F8               	dc.b	$F8
                        	if (ZVN_Call27<*)
                        	else
000389                  		rom_ptr_z80(ZVN_Call27+Target)
                        	;dc.w z80_ptr(ptr,addr)
000389 0684             	dc.w  (((((ZVN_Call27+Target))<<8)&$FF00)|((((ZVN_Call27+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00038B                  ZVN_Jump4:
00038B                  	smpsCall		ZVN_Call27, Target
00038B F8               	dc.b	$F8
                        	if (ZVN_Call27<*)
                        	else
00038C                  		rom_ptr_z80(ZVN_Call27+Target)
                        	;dc.w z80_ptr(ptr,addr)
00038C 0684             	dc.w  (((((ZVN_Call27+Target))<<8)&$FF00)|((((ZVN_Call27+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00038E                  	smpsCall		ZVN_Call26, Target
00038E F8               	dc.b	$F8
                        	if (ZVN_Call26<*)
                        	else
00038F                  		rom_ptr_z80(ZVN_Call26+Target)
                        	;dc.w z80_ptr(ptr,addr)
00038F E883             	dc.w  (((((ZVN_Call26+Target))<<8)&$FF00)|((((ZVN_Call26+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000391                  	smpsCall		ZVN_Call25, Target
000391 F8               	dc.b	$F8
                        	if (ZVN_Call25<*)
                        	else
000392                  		rom_ptr_z80(ZVN_Call25+Target)
                        	;dc.w z80_ptr(ptr,addr)
000392 D983             	dc.w  (((((ZVN_Call25+Target))<<8)&$FF00)|((((ZVN_Call25+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000394                  	smpsCall		ZVN_Call26, Target
000394 F8               	dc.b	$F8
                        	if (ZVN_Call26<*)
                        	else
000395                  		rom_ptr_z80(ZVN_Call26+Target)
                        	;dc.w z80_ptr(ptr,addr)
000395 E883             	dc.w  (((((ZVN_Call26+Target))<<8)&$FF00)|((((ZVN_Call26+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000397                  ZVN_Loop14:
000397                  	smpsCall		ZVN_Call27, Target
000397 F8               	dc.b	$F8
                        	if (ZVN_Call27<*)
                        	else
000398                  		rom_ptr_z80(ZVN_Call27+Target)
                        	;dc.w z80_ptr(ptr,addr)
000398 0684             	dc.w  (((((ZVN_Call27+Target))<<8)&$FF00)|((((ZVN_Call27+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00039A                  	smpsLoop		$00, $03, ZVN_Loop14, Target
00039A F7               	dc.b	$F7
00039B 0003             	dc.b	$00,$03
                        	if (ZVN_Loop14<*)
00039D                  		rom_ptr_z80(ZVN_Loop14+Target)
                        	;dc.w z80_ptr(ptr,addr)
00039D 9783             	dc.w  (((((ZVN_Loop14+Target))<<8)&$FF00)|((((ZVN_Loop14+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00039F                  	smpsCall		ZVN_Call28, Target
00039F F8               	dc.b	$F8
                        	if (ZVN_Call28<*)
                        	else
0003A0                  		rom_ptr_z80(ZVN_Call28+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003A0 2F84             	dc.w  (((((ZVN_Call28+Target))<<8)&$FF00)|((((ZVN_Call28+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0003A2                  	smpsCall		ZVN_Call26, Target
0003A2 F8               	dc.b	$F8
                        	if (ZVN_Call26<*)
                        	else
0003A3                  		rom_ptr_z80(ZVN_Call26+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003A3 E883             	dc.w  (((((ZVN_Call26+Target))<<8)&$FF00)|((((ZVN_Call26+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0003A5                  	smpsCall		ZVN_Call25, Target
0003A5 F8               	dc.b	$F8
                        	if (ZVN_Call25<*)
                        	else
0003A6                  		rom_ptr_z80(ZVN_Call25+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003A6 D983             	dc.w  (((((ZVN_Call25+Target))<<8)&$FF00)|((((ZVN_Call25+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0003A8                  	smpsCall		ZVN_Call26, Target
0003A8 F8               	dc.b	$F8
                        	if (ZVN_Call26<*)
                        	else
0003A9                  		rom_ptr_z80(ZVN_Call26+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003A9 E883             	dc.w  (((((ZVN_Call26+Target))<<8)&$FF00)|((((ZVN_Call26+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0003AB                  ZVN_Loop16:
0003AB                  	smpsCall		ZVN_Call27, Target
0003AB F8               	dc.b	$F8
                        	if (ZVN_Call27<*)
                        	else
0003AC                  		rom_ptr_z80(ZVN_Call27+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003AC 0684             	dc.w  (((((ZVN_Call27+Target))<<8)&$FF00)|((((ZVN_Call27+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0003AE                  	smpsLoop		$00, $03, ZVN_Loop16, Target
0003AE F7               	dc.b	$F7
0003AF 0003             	dc.b	$00,$03
                        	if (ZVN_Loop16<*)
0003B1                  		rom_ptr_z80(ZVN_Loop16+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003B1 AB83             	dc.w  (((((ZVN_Loop16+Target))<<8)&$FF00)|((((ZVN_Loop16+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0003B3                  	smpsJump		ZVN_Jump4, Target
0003B3 F6               	dc.b	$F6
                        	if (ZVN_Jump4<*)
0003B4                  		rom_ptr_z80(ZVN_Jump4+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003B4 8B83             	dc.w  (((((ZVN_Jump4+Target))<<8)&$FF00)|((((ZVN_Jump4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0003B6                  ZVN_Call22:
0003B6 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
0003BB                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0003BB F9               	dc.b	$F9

0003BC                  ZVN_Call23:
0003BC                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
0003BC EF00             		dc.b $EF,$00
                        	endif
0003BE A510A8AAAF       	dc.b	nC3, $10, nEb3, nF3, nBb3
0003C3                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0003C3 F9               	dc.b	$F9

0003C4                  ZVN_Call24:
0003C4 A506A5A504A306A3 	dc.b	nC3, $06, nC3, nC3, $04, nBb2, $06, nBb2
0003CC A304AA06AAAA04AF 	dc.b	nBb2, $04, nF3, $06, nF3, nF3, $04, nBb3
0003D4 06AFAF04         	dc.b	$06, nBb3, nBb3, $04
0003D8                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0003D8 F9               	dc.b	$F9

0003D9                  ZVN_Call25:
0003D9                  	smpsFMvoice		$03
                        	;if song<>""
                        	if 1==2
                        	else
0003D9 EF03             		dc.b $EF,$03
                        	endif

0003DB                  ZVN_Loop11:
0003DB BD02C904         	dc.b	nC5, $02, nC6, $04
0003DF                  	smpsLoop		$01, $0A, ZVN_Loop11, Target
0003DF F7               	dc.b	$F7
0003E0 010A             	dc.b	$01,$0A
                        	if (ZVN_Loop11<*)
0003E2                  		rom_ptr_z80(ZVN_Loop11+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003E2 DB83             	dc.w  (((((ZVN_Loop11+Target))<<8)&$FF00)|((((ZVN_Loop11+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0003E4 BD02C9           	dc.b	nC5, $02, nC6
0003E7                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0003E7 F9               	dc.b	$F9

0003E8                  ZVN_Call26:
0003E8 C202CE04         	dc.b	nF5, $02, nF6, $04
0003EC                  	smpsLoop		$01, $03, ZVN_Call26, Target
0003EC F7               	dc.b	$F7
0003ED 0103             	dc.b	$01,$03
                        	if (ZVN_Call26<*)
0003EF                  		rom_ptr_z80(ZVN_Call26+Target)
                        	;dc.w z80_ptr(ptr,addr)
0003EF E883             	dc.w  (((((ZVN_Call26+Target))<<8)&$FF00)|((((ZVN_Call26+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0003F1 C002CC04C002CC04 	dc.b	nEb5, $02, nEb6, $04, nEb5, $02, nEb6, $04
0003F9 C002             	dc.b	nEb5, $02

0003FB                  ZVN_Loop12:
0003FB C904BD02         	dc.b	nC6, $04, nC5, $02
0003FF                  	smpsLoop		$01, $05, ZVN_Loop12, Target
0003FF F7               	dc.b	$F7
000400 0105             	dc.b	$01,$05
                        	if (ZVN_Loop12<*)
000402                  		rom_ptr_z80(ZVN_Loop12+Target)
                        	;dc.w z80_ptr(ptr,addr)
000402 FB83             	dc.w  (((((ZVN_Loop12+Target))<<8)&$FF00)|((((ZVN_Loop12+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000404 C9               	dc.b	nC6
000405                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000405 F9               	dc.b	$F9

000406                  ZVN_Call27:
000406 C002CC04         	dc.b	nEb5, $02, nEb6, $04
00040A                  	smpsLoop		$01, $03, ZVN_Call27, Target
00040A F7               	dc.b	$F7
00040B 0103             	dc.b	$01,$03
                        	if (ZVN_Call27<*)
00040D                  		rom_ptr_z80(ZVN_Call27+Target)
                        	;dc.w z80_ptr(ptr,addr)
00040D 0684             	dc.w  (((((ZVN_Call27+Target))<<8)&$FF00)|((((ZVN_Call27+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00040F C202CE04C202CE04 	dc.b	nF5, $02, nF6, $04, nF5, $02, nF6, $04
000417 C202C904BD02C904 	dc.b	nF5, $02, nC6, $04, nC5, $02, nC6, $04
00041F BD02C904BB02C704 	dc.b	nC5, $02, nC6, $04, nBb4, $02, nBb5, $04
000427 BB02C704BB02C7   	dc.b	nBb4, $02, nBb5, $04, nBb4, $02, nBb5
00042E                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00042E F9               	dc.b	$F9

00042F                  ZVN_Call28:
00042F C9               	dc.b	nC6

000430                  ZVN_Loop15:
000430 04BD02C904BD02C9 	dc.b	$04, nC5, $02, nC6, $04, nC5, $02, nC6
000438 04               	dc.b	$04
000439                  	smpsLoop		$00, $04, ZVN_Loop15, Target
000439 F7               	dc.b	$F7
00043A 0004             	dc.b	$00,$04
                        	if (ZVN_Loop15<*)
00043C                  		rom_ptr_z80(ZVN_Loop15+Target)
                        	;dc.w z80_ptr(ptr,addr)
00043C 3084             	dc.w  (((((ZVN_Loop15+Target))<<8)&$FF00)|((((ZVN_Loop15+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00043E                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00043E F9               	dc.b	$F9

00043F                  ZVN_FM5:
00043F                  	smpsCall		ZVN_Call29, Target
00043F F8               	dc.b	$F8
                        	if (ZVN_Call29<*)
                        	else
000440                  		rom_ptr_z80(ZVN_Call29+Target)
                        	;dc.w z80_ptr(ptr,addr)
000440 8684             	dc.w  (((((ZVN_Call29+Target))<<8)&$FF00)|((((ZVN_Call29+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000442                  	smpsCall		ZVN_Call30, Target
000442 F8               	dc.b	$F8
                        	if (ZVN_Call30<*)
                        	else
000443                  		rom_ptr_z80(ZVN_Call30+Target)
                        	;dc.w z80_ptr(ptr,addr)
000443 8C84             	dc.w  (((((ZVN_Call30+Target))<<8)&$FF00)|((((ZVN_Call30+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000445                  	smpsCall		ZVN_Call30, Target
000445 F8               	dc.b	$F8
                        	if (ZVN_Call30<*)
                        	else
000446                  		rom_ptr_z80(ZVN_Call30+Target)
                        	;dc.w z80_ptr(ptr,addr)
000446 8C84             	dc.w  (((((ZVN_Call30+Target))<<8)&$FF00)|((((ZVN_Call30+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000448                  ZVN_Loop18:
000448                  	smpsCall		ZVN_Call31, Target
000448 F8               	dc.b	$F8
                        	if (ZVN_Call31<*)
                        	else
000449                  		rom_ptr_z80(ZVN_Call31+Target)
                        	;dc.w z80_ptr(ptr,addr)
000449 9284             	dc.w  (((((ZVN_Call31+Target))<<8)&$FF00)|((((ZVN_Call31+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00044B                  	smpsCall		ZVN_Call32, Target
00044B F8               	dc.b	$F8
                        	if (ZVN_Call32<*)
                        	else
00044C                  		rom_ptr_z80(ZVN_Call32+Target)
                        	;dc.w z80_ptr(ptr,addr)
00044C 9884             	dc.w  (((((ZVN_Call32+Target))<<8)&$FF00)|((((ZVN_Call32+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00044E                  	smpsLoop		$00, $02, ZVN_Loop18, Target
00044E F7               	dc.b	$F7
00044F 0002             	dc.b	$00,$02
                        	if (ZVN_Loop18<*)
000451                  		rom_ptr_z80(ZVN_Loop18+Target)
                        	;dc.w z80_ptr(ptr,addr)
000451 4884             	dc.w  (((((ZVN_Loop18+Target))<<8)&$FF00)|((((ZVN_Loop18+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000453                  	smpsCall		ZVN_Call33, Target
000453 F8               	dc.b	$F8
                        	if (ZVN_Call33<*)
                        	else
000454                  		rom_ptr_z80(ZVN_Call33+Target)
                        	;dc.w z80_ptr(ptr,addr)
000454 B984             	dc.w  (((((ZVN_Call33+Target))<<8)&$FF00)|((((ZVN_Call33+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000456                  	smpsCall		ZVN_Call34, Target
000456 F8               	dc.b	$F8
                        	if (ZVN_Call34<*)
                        	else
000457                  		rom_ptr_z80(ZVN_Call34+Target)
                        	;dc.w z80_ptr(ptr,addr)
000457 BF84             	dc.w  (((((ZVN_Call34+Target))<<8)&$FF00)|((((ZVN_Call34+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000459                  ZVN_Jump5:
000459                  	smpsCall		ZVN_Call35, Target
000459 F8               	dc.b	$F8
                        	if (ZVN_Call35<*)
                        	else
00045A                  		rom_ptr_z80(ZVN_Call35+Target)
                        	;dc.w z80_ptr(ptr,addr)
00045A CF84             	dc.w  (((((ZVN_Call35+Target))<<8)&$FF00)|((((ZVN_Call35+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00045C                  	smpsCall		ZVN_Call32, Target
00045C F8               	dc.b	$F8
                        	if (ZVN_Call32<*)
                        	else
00045D                  		rom_ptr_z80(ZVN_Call32+Target)
                        	;dc.w z80_ptr(ptr,addr)
00045D 9884             	dc.w  (((((ZVN_Call32+Target))<<8)&$FF00)|((((ZVN_Call32+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00045F                  	smpsCall		ZVN_Call31, Target
00045F F8               	dc.b	$F8
                        	if (ZVN_Call31<*)
                        	else
000460                  		rom_ptr_z80(ZVN_Call31+Target)
                        	;dc.w z80_ptr(ptr,addr)
000460 9284             	dc.w  (((((ZVN_Call31+Target))<<8)&$FF00)|((((ZVN_Call31+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000462                  	smpsCall		ZVN_Call32, Target
000462 F8               	dc.b	$F8
                        	if (ZVN_Call32<*)
                        	else
000463                  		rom_ptr_z80(ZVN_Call32+Target)
                        	;dc.w z80_ptr(ptr,addr)
000463 9884             	dc.w  (((((ZVN_Call32+Target))<<8)&$FF00)|((((ZVN_Call32+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000465                  	smpsCall		ZVN_Call33, Target
000465 F8               	dc.b	$F8
                        	if (ZVN_Call33<*)
                        	else
000466                  		rom_ptr_z80(ZVN_Call33+Target)
                        	;dc.w z80_ptr(ptr,addr)
000466 B984             	dc.w  (((((ZVN_Call33+Target))<<8)&$FF00)|((((ZVN_Call33+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000468                  	smpsCall		ZVN_Call34, Target
000468 F8               	dc.b	$F8
                        	if (ZVN_Call34<*)
                        	else
000469                  		rom_ptr_z80(ZVN_Call34+Target)
                        	;dc.w z80_ptr(ptr,addr)
000469 BF84             	dc.w  (((((ZVN_Call34+Target))<<8)&$FF00)|((((ZVN_Call34+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00046B                  	smpsCall		ZVN_Call35, Target
00046B F8               	dc.b	$F8
                        	if (ZVN_Call35<*)
                        	else
00046C                  		rom_ptr_z80(ZVN_Call35+Target)
                        	;dc.w z80_ptr(ptr,addr)
00046C CF84             	dc.w  (((((ZVN_Call35+Target))<<8)&$FF00)|((((ZVN_Call35+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00046E                  	smpsCall		ZVN_Call36, Target
00046E F8               	dc.b	$F8
                        	if (ZVN_Call36<*)
                        	else
00046F                  		rom_ptr_z80(ZVN_Call36+Target)
                        	;dc.w z80_ptr(ptr,addr)
00046F DB84             	dc.w  (((((ZVN_Call36+Target))<<8)&$FF00)|((((ZVN_Call36+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000471                  	smpsCall		ZVN_Call32, Target
000471 F8               	dc.b	$F8
                        	if (ZVN_Call32<*)
                        	else
000472                  		rom_ptr_z80(ZVN_Call32+Target)
                        	;dc.w z80_ptr(ptr,addr)
000472 9884             	dc.w  (((((ZVN_Call32+Target))<<8)&$FF00)|((((ZVN_Call32+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000474                  	smpsCall		ZVN_Call31, Target
000474 F8               	dc.b	$F8
                        	if (ZVN_Call31<*)
                        	else
000475                  		rom_ptr_z80(ZVN_Call31+Target)
                        	;dc.w z80_ptr(ptr,addr)
000475 9284             	dc.w  (((((ZVN_Call31+Target))<<8)&$FF00)|((((ZVN_Call31+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000477                  	smpsCall		ZVN_Call32, Target
000477 F8               	dc.b	$F8
                        	if (ZVN_Call32<*)
                        	else
000478                  		rom_ptr_z80(ZVN_Call32+Target)
                        	;dc.w z80_ptr(ptr,addr)
000478 9884             	dc.w  (((((ZVN_Call32+Target))<<8)&$FF00)|((((ZVN_Call32+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00047A                  	smpsCall		ZVN_Call33, Target
00047A F8               	dc.b	$F8
                        	if (ZVN_Call33<*)
                        	else
00047B                  		rom_ptr_z80(ZVN_Call33+Target)
                        	;dc.w z80_ptr(ptr,addr)
00047B B984             	dc.w  (((((ZVN_Call33+Target))<<8)&$FF00)|((((ZVN_Call33+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00047D                  	smpsCall		ZVN_Call34, Target
00047D F8               	dc.b	$F8
                        	if (ZVN_Call34<*)
                        	else
00047E                  		rom_ptr_z80(ZVN_Call34+Target)
                        	;dc.w z80_ptr(ptr,addr)
00047E BF84             	dc.w  (((((ZVN_Call34+Target))<<8)&$FF00)|((((ZVN_Call34+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000480                  	smpsCall		ZVN_Call35, Target
000480 F8               	dc.b	$F8
                        	if (ZVN_Call35<*)
                        	else
000481                  		rom_ptr_z80(ZVN_Call35+Target)
                        	;dc.w z80_ptr(ptr,addr)
000481 CF84             	dc.w  (((((ZVN_Call35+Target))<<8)&$FF00)|((((ZVN_Call35+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000483                  	smpsJump		ZVN_Jump5, Target
000483 F6               	dc.b	$F6
                        	if (ZVN_Jump5<*)
000484                  		rom_ptr_z80(ZVN_Jump5+Target)
                        	;dc.w z80_ptr(ptr,addr)
000484 5984             	dc.w  (((((ZVN_Jump5+Target))<<8)&$FF00)|((((ZVN_Jump5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000486                  ZVN_Call29:
000486 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
00048B                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00048B F9               	dc.b	$F9

00048C                  ZVN_Call30:
00048C 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
000491                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000491 F9               	dc.b	$F9

000492                  ZVN_Call31:
000492 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
000497                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000497 F9               	dc.b	$F9

000498                  ZVN_Call32:
000498                  	smpsFMvoice		$00
                        	;if song<>""
                        	if 1==2
                        	else
000498 EF00             		dc.b $EF,$00
                        	endif
00049A AA02B1B6B1AAB1B6 	dc.b	nF3, $02, nC4, nF4, nC4, nF3, nC4, nF4
0004A2 B1A8AAAFAAA8AAAF 	dc.b	nC4, nEb3, nF3, nBb3, nF3, nEb3, nF3, nBb3
0004AA AA               	dc.b	nF3

0004AB                  ZVN_Loop17:
0004AB A5ACB1ACB3ACB4AC 	dc.b	nC3, nG3, nC4, nG3, nD4, nG3, nEb4, nG3
0004B3                  	smpsLoop		$01, $02, ZVN_Loop17, Target
0004B3 F7               	dc.b	$F7
0004B4 0102             	dc.b	$01,$02
                        	if (ZVN_Loop17<*)
0004B6                  		rom_ptr_z80(ZVN_Loop17+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004B6 AB84             	dc.w  (((((ZVN_Loop17+Target))<<8)&$FF00)|((((ZVN_Loop17+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0004B8                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0004B8 F9               	dc.b	$F9

0004B9                  ZVN_Call33:
0004B9 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
0004BE                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0004BE F9               	dc.b	$F9

0004BF                  ZVN_Call34:
0004BF 80108080         	dc.b	nRst, $10, nRst, nRst
0004C3                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
0004C3 EF01             		dc.b $EF,$01
                        	endif
0004C5 B102B3B4B3B4B6B8 	dc.b	nC4, $02, nD4, nEb4, nD4, nEb4, nF4, nG4
0004CD BB               	dc.b	nBb4
0004CE                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0004CE F9               	dc.b	$F9

0004CF                  ZVN_Call35:
0004CF B410B608B8B10CB4 	dc.b	nEb4, $10, nF4, $08, nG4, nC4, $0C, nEb4
0004D7 04BB10           	dc.b	$04, nBb4, $10
0004DA                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0004DA F9               	dc.b	$F9

0004DB                  ZVN_Call36:
0004DB 8002C418C004BFC0 	dc.b	nRst, $02, nG5, $18, nEb5, $04, nD5, nEb5
0004E3 0ABF01C0C20CC006 	dc.b	$0A, nD5, $01, nEb5, nF5, $0C, nEb5, $06
0004EB                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0004EB F9               	dc.b	$F9

0004EC                  ZVN_FM6:
0004EC                  	smpsCall		ZVN_Call37, Target
0004EC F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
0004ED                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004ED 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0004EF                  	smpsCall		ZVN_Call38, Target
0004EF F8               	dc.b	$F8
                        	if (ZVN_Call38<*)
                        	else
0004F0                  		rom_ptr_z80(ZVN_Call38+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004F0 3185             	dc.w  (((((ZVN_Call38+Target))<<8)&$FF00)|((((ZVN_Call38+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0004F2                  	smpsCall		ZVN_Call38, Target
0004F2 F8               	dc.b	$F8
                        	if (ZVN_Call38<*)
                        	else
0004F3                  		rom_ptr_z80(ZVN_Call38+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004F3 3185             	dc.w  (((((ZVN_Call38+Target))<<8)&$FF00)|((((ZVN_Call38+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0004F5                  ZVN_Loop19:
0004F5                  	smpsCall		ZVN_Call39, Target
0004F5 F8               	dc.b	$F8
                        	if (ZVN_Call39<*)
                        	else
0004F6                  		rom_ptr_z80(ZVN_Call39+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004F6 3785             	dc.w  (((((ZVN_Call39+Target))<<8)&$FF00)|((((ZVN_Call39+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0004F8                  	smpsCall		ZVN_Call37, Target
0004F8 F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
0004F9                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004F9 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0004FB                  	smpsLoop		$00, $02, ZVN_Loop19, Target
0004FB F7               	dc.b	$F7
0004FC 0002             	dc.b	$00,$02
                        	if (ZVN_Loop19<*)
0004FE                  		rom_ptr_z80(ZVN_Loop19+Target)
                        	;dc.w z80_ptr(ptr,addr)
0004FE F584             	dc.w  (((((ZVN_Loop19+Target))<<8)&$FF00)|((((ZVN_Loop19+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000500                  	smpsCall		ZVN_Call37, Target
000500 F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
000501                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
000501 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000503                  	smpsCall		ZVN_Call37, Target
000503 F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
000504                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
000504 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000506                  ZVN_Jump6:
000506                  	smpsCall		ZVN_Call37, Target
000506 F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
000507                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
000507 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000509                  	smpsCall		ZVN_Call37, Target
000509 F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
00050A                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
00050A 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00050C                  	smpsCall		ZVN_Call39, Target
00050C F8               	dc.b	$F8
                        	if (ZVN_Call39<*)
                        	else
00050D                  		rom_ptr_z80(ZVN_Call39+Target)
                        	;dc.w z80_ptr(ptr,addr)
00050D 3785             	dc.w  (((((ZVN_Call39+Target))<<8)&$FF00)|((((ZVN_Call39+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00050F                  ZVN_Loop20:
00050F                  	smpsCall		ZVN_Call37, Target
00050F F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
000510                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
000510 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000512                  	smpsLoop		$00, $04, ZVN_Loop20, Target
000512 F7               	dc.b	$F7
000513 0004             	dc.b	$00,$04
                        	if (ZVN_Loop20<*)
000515                  		rom_ptr_z80(ZVN_Loop20+Target)
                        	;dc.w z80_ptr(ptr,addr)
000515 0F85             	dc.w  (((((ZVN_Loop20+Target))<<8)&$FF00)|((((ZVN_Loop20+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000517                  	smpsCall		ZVN_Call40, Target
000517 F8               	dc.b	$F8
                        	if (ZVN_Call40<*)
                        	else
000518                  		rom_ptr_z80(ZVN_Call40+Target)
                        	;dc.w z80_ptr(ptr,addr)
000518 3D85             	dc.w  (((((ZVN_Call40+Target))<<8)&$FF00)|((((ZVN_Call40+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00051A                  	smpsCall		ZVN_Call37, Target
00051A F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
00051B                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
00051B 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00051D                  	smpsCall		ZVN_Call39, Target
00051D F8               	dc.b	$F8
                        	if (ZVN_Call39<*)
                        	else
00051E                  		rom_ptr_z80(ZVN_Call39+Target)
                        	;dc.w z80_ptr(ptr,addr)
00051E 3785             	dc.w  (((((ZVN_Call39+Target))<<8)&$FF00)|((((ZVN_Call39+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000520                  ZVN_Loop21:
000520                  	smpsCall		ZVN_Call37, Target
000520 F8               	dc.b	$F8
                        	if (ZVN_Call37<*)
                        	else
000521                  		rom_ptr_z80(ZVN_Call37+Target)
                        	;dc.w z80_ptr(ptr,addr)
000521 2B85             	dc.w  (((((ZVN_Call37+Target))<<8)&$FF00)|((((ZVN_Call37+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000523                  	smpsLoop		$00, $04, ZVN_Loop21, Target
000523 F7               	dc.b	$F7
000524 0004             	dc.b	$00,$04
                        	if (ZVN_Loop21<*)
000526                  		rom_ptr_z80(ZVN_Loop21+Target)
                        	;dc.w z80_ptr(ptr,addr)
000526 2085             	dc.w  (((((ZVN_Loop21+Target))<<8)&$FF00)|((((ZVN_Loop21+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000528                  	smpsJump		ZVN_Jump6, Target
000528 F6               	dc.b	$F6
                        	if (ZVN_Jump6<*)
000529                  		rom_ptr_z80(ZVN_Jump6+Target)
                        	;dc.w z80_ptr(ptr,addr)
000529 0685             	dc.w  (((((ZVN_Jump6+Target))<<8)&$FF00)|((((ZVN_Jump6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00052B                  ZVN_Call37:
00052B 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
000530                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000530 F9               	dc.b	$F9

000531                  ZVN_Call38:
000531 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
000536                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000536 F9               	dc.b	$F9

000537                  ZVN_Call39:
000537 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
00053C                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00053C F9               	dc.b	$F9

00053D                  ZVN_Call40:
00053D 80108080         	dc.b	nRst, $10, nRst, nRst
000541                  	smpsFMvoice		$01
                        	;if song<>""
                        	if 1==2
                        	else
000541 EF01             		dc.b $EF,$01
                        	endif
000543 B102B3B4B3B4B6B8 	dc.b	nC4, $02, nD4, nEb4, nD4, nEb4, nF4, nG4
00054B BB               	dc.b	nBb4
00054C                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00054C F9               	dc.b	$F9

00054D                  ZVN_PSG1:
00054D                  	smpsSetVol		PSGVol_Half
00054D EC03             	dc.b	$EC,PSGVol_Half
00054F                  	smpsCall		ZVN_Call41, Target
00054F F8               	dc.b	$F8
                        	if (ZVN_Call41<*)
                        	else
000550                  		rom_ptr_z80(ZVN_Call41+Target)
                        	;dc.w z80_ptr(ptr,addr)
000550 9485             	dc.w  (((((ZVN_Call41+Target))<<8)&$FF00)|((((ZVN_Call41+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000552                  	smpsCall		ZVN_Call42, Target
000552 F8               	dc.b	$F8
                        	if (ZVN_Call42<*)
                        	else
000553                  		rom_ptr_z80(ZVN_Call42+Target)
                        	;dc.w z80_ptr(ptr,addr)
000553 AE85             	dc.w  (((((ZVN_Call42+Target))<<8)&$FF00)|((((ZVN_Call42+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000555                  	smpsCall		ZVN_Call43, Target
000555 F8               	dc.b	$F8
                        	if (ZVN_Call43<*)
                        	else
000556                  		rom_ptr_z80(ZVN_Call43+Target)
                        	;dc.w z80_ptr(ptr,addr)
000556 C385             	dc.w  (((((ZVN_Call43+Target))<<8)&$FF00)|((((ZVN_Call43+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000558                  ZVN_Loop24:
000558                  	smpsCall		ZVN_Call44, Target
000558 F8               	dc.b	$F8
                        	if (ZVN_Call44<*)
                        	else
000559                  		rom_ptr_z80(ZVN_Call44+Target)
                        	;dc.w z80_ptr(ptr,addr)
000559 D285             	dc.w  (((((ZVN_Call44+Target))<<8)&$FF00)|((((ZVN_Call44+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00055B                  	smpsCall		ZVN_Call45, Target
00055B F8               	dc.b	$F8
                        	if (ZVN_Call45<*)
                        	else
00055C                  		rom_ptr_z80(ZVN_Call45+Target)
                        	;dc.w z80_ptr(ptr,addr)
00055C FB85             	dc.w  (((((ZVN_Call45+Target))<<8)&$FF00)|((((ZVN_Call45+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00055E                  	smpsLoop		$00, $02, ZVN_Loop24, Target
00055E F7               	dc.b	$F7
00055F 0002             	dc.b	$00,$02
                        	if (ZVN_Loop24<*)
000561                  		rom_ptr_z80(ZVN_Loop24+Target)
                        	;dc.w z80_ptr(ptr,addr)
000561 5885             	dc.w  (((((ZVN_Loop24+Target))<<8)&$FF00)|((((ZVN_Loop24+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000563                  	smpsCall		ZVN_Call46, Target
000563 F8               	dc.b	$F8
                        	if (ZVN_Call46<*)
                        	else
000564                  		rom_ptr_z80(ZVN_Call46+Target)
                        	;dc.w z80_ptr(ptr,addr)
000564 1C86             	dc.w  (((((ZVN_Call46+Target))<<8)&$FF00)|((((ZVN_Call46+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000566                  	smpsCall		ZVN_Call46, Target
000566 F8               	dc.b	$F8
                        	if (ZVN_Call46<*)
                        	else
000567                  		rom_ptr_z80(ZVN_Call46+Target)
                        	;dc.w z80_ptr(ptr,addr)
000567 1C86             	dc.w  (((((ZVN_Call46+Target))<<8)&$FF00)|((((ZVN_Call46+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000569                  ZVN_Jump7:
000569                  	smpsCall		ZVN_Call46, Target
000569 F8               	dc.b	$F8
                        	if (ZVN_Call46<*)
                        	else
00056A                  		rom_ptr_z80(ZVN_Call46+Target)
                        	;dc.w z80_ptr(ptr,addr)
00056A 1C86             	dc.w  (((((ZVN_Call46+Target))<<8)&$FF00)|((((ZVN_Call46+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00056C                  	smpsCall		ZVN_Call45, Target
00056C F8               	dc.b	$F8
                        	if (ZVN_Call45<*)
                        	else
00056D                  		rom_ptr_z80(ZVN_Call45+Target)
                        	;dc.w z80_ptr(ptr,addr)
00056D FB85             	dc.w  (((((ZVN_Call45+Target))<<8)&$FF00)|((((ZVN_Call45+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00056F                  	smpsCall		ZVN_Call44, Target
00056F F8               	dc.b	$F8
                        	if (ZVN_Call44<*)
                        	else
000570                  		rom_ptr_z80(ZVN_Call44+Target)
                        	;dc.w z80_ptr(ptr,addr)
000570 D285             	dc.w  (((((ZVN_Call44+Target))<<8)&$FF00)|((((ZVN_Call44+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000572                  	smpsCall		ZVN_Call45, Target
000572 F8               	dc.b	$F8
                        	if (ZVN_Call45<*)
                        	else
000573                  		rom_ptr_z80(ZVN_Call45+Target)
                        	;dc.w z80_ptr(ptr,addr)
000573 FB85             	dc.w  (((((ZVN_Call45+Target))<<8)&$FF00)|((((ZVN_Call45+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000575                  ZVN_Loop25:
000575                  	smpsCall		ZVN_Call46, Target
000575 F8               	dc.b	$F8
                        	if (ZVN_Call46<*)
                        	else
000576                  		rom_ptr_z80(ZVN_Call46+Target)
                        	;dc.w z80_ptr(ptr,addr)
000576 1C86             	dc.w  (((((ZVN_Call46+Target))<<8)&$FF00)|((((ZVN_Call46+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000578                  	smpsLoop		$00, $03, ZVN_Loop25, Target
000578 F7               	dc.b	$F7
000579 0003             	dc.b	$00,$03
                        	if (ZVN_Loop25<*)
00057B                  		rom_ptr_z80(ZVN_Loop25+Target)
                        	;dc.w z80_ptr(ptr,addr)
00057B 7585             	dc.w  (((((ZVN_Loop25+Target))<<8)&$FF00)|((((ZVN_Loop25+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00057D                  	smpsCall		ZVN_Call47, Target
00057D F8               	dc.b	$F8
                        	if (ZVN_Call47<*)
                        	else
00057E                  		rom_ptr_z80(ZVN_Call47+Target)
                        	;dc.w z80_ptr(ptr,addr)
00057E 3E86             	dc.w  (((((ZVN_Call47+Target))<<8)&$FF00)|((((ZVN_Call47+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000580                  	smpsCall		ZVN_Call45, Target
000580 F8               	dc.b	$F8
                        	if (ZVN_Call45<*)
                        	else
000581                  		rom_ptr_z80(ZVN_Call45+Target)
                        	;dc.w z80_ptr(ptr,addr)
000581 FB85             	dc.w  (((((ZVN_Call45+Target))<<8)&$FF00)|((((ZVN_Call45+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000583                  	smpsCall		ZVN_Call44, Target
000583 F8               	dc.b	$F8
                        	if (ZVN_Call44<*)
                        	else
000584                  		rom_ptr_z80(ZVN_Call44+Target)
                        	;dc.w z80_ptr(ptr,addr)
000584 D285             	dc.w  (((((ZVN_Call44+Target))<<8)&$FF00)|((((ZVN_Call44+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000586                  	smpsCall		ZVN_Call45, Target
000586 F8               	dc.b	$F8
                        	if (ZVN_Call45<*)
                        	else
000587                  		rom_ptr_z80(ZVN_Call45+Target)
                        	;dc.w z80_ptr(ptr,addr)
000587 FB85             	dc.w  (((((ZVN_Call45+Target))<<8)&$FF00)|((((ZVN_Call45+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000589                  ZVN_Loop27:
000589                  	smpsCall		ZVN_Call46, Target
000589 F8               	dc.b	$F8
                        	if (ZVN_Call46<*)
                        	else
00058A                  		rom_ptr_z80(ZVN_Call46+Target)
                        	;dc.w z80_ptr(ptr,addr)
00058A 1C86             	dc.w  (((((ZVN_Call46+Target))<<8)&$FF00)|((((ZVN_Call46+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00058C                  	smpsLoop		$00, $03, ZVN_Loop27, Target
00058C F7               	dc.b	$F7
00058D 0003             	dc.b	$00,$03
                        	if (ZVN_Loop27<*)
00058F                  		rom_ptr_z80(ZVN_Loop27+Target)
                        	;dc.w z80_ptr(ptr,addr)
00058F 8985             	dc.w  (((((ZVN_Loop27+Target))<<8)&$FF00)|((((ZVN_Loop27+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000591                  	smpsJump		ZVN_Jump7, Target
000591 F6               	dc.b	$F6
                        	if (ZVN_Jump7<*)
000592                  		rom_ptr_z80(ZVN_Jump7+Target)
                        	;dc.w z80_ptr(ptr,addr)
000592 6985             	dc.w  (((((ZVN_Jump7+Target))<<8)&$FF00)|((((ZVN_Jump7+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000594                  ZVN_Call41:
000594                  	smpsPSGvoice	$02
000594 F502             	dc.b	$F5,$02
000596 B406             	dc.b	nEb4, $06
000598                  	smpsPSGvoice	$0A
000598 F50A             	dc.b	$F5,$0A
00059A B10204BDAF060204 	dc.b	nC4, $02, $04, nC5, nBb3, $06, $02, $04
0005A2 BBAA060204B6B106 	dc.b	nBb4, nF3, $06, $02, $04, nF4, nC4, $06
0005AA 0204BD           	dc.b	$02, $04, nC5
0005AD                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0005AD F9               	dc.b	$F9

0005AE                  ZVN_Call42:
0005AE B1060204BDB40602 	dc.b	nC4, $06, $02, $04, nC5, nEb4, $06, $02
0005B6 04C0AA060204B6AF 	dc.b	$04, nEb5, nF3, $06, $02, $04, nF4, nBb3
0005BE 060204BB         	dc.b	$06, $02, $04, nBb4
0005C2                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0005C2 F9               	dc.b	$F9

0005C3                  ZVN_Call43:
0005C3                  	smpsPSGvoice	$06
0005C3 F506             	dc.b	$F5,$06
0005C5 B10C04B40C04B60C 	dc.b	nC4, $0C, $04, nEb4, $0C, $04, nF4, $0C
0005CD 04AF0C04         	dc.b	$04, nBb3, $0C, $04
0005D1                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0005D1 F9               	dc.b	$F9

0005D2                  ZVN_Call44:
0005D2                  	smpsPSGvoice	$00
0005D2 F500             	dc.b	$F5,$00
0005D4 BD               	dc.b	nC5

0005D5                  ZVN_Loop22:
0005D5 01BDB1BDBBB9B1B6 	dc.b	$01, nC5, nC4, nC5, nBb4, nAb4, nC4, nF4
0005DD BDBDB1BDBBBBBDB4 	dc.b	nC5, nC5, nC4, nC5, nBb4, nBb4, nC5, nEb4
0005E5 BBBDB1BDB8BDB6BD 	dc.b	nBb4, nC5, nC4, nC5, nG4, nC5, nF4, nC5
0005ED B1BDB6BDB8BDB1BD 	dc.b	nC4, nC5, nF4, nC5, nG4, nC5, nC4, nC5
0005F5                  	smpsLoop		$01, $02, ZVN_Loop22, Target
0005F5 F7               	dc.b	$F7
0005F6 0102             	dc.b	$01,$02
                        	if (ZVN_Loop22<*)
0005F8                  		rom_ptr_z80(ZVN_Loop22+Target)
                        	;dc.w z80_ptr(ptr,addr)
0005F8 D585             	dc.w  (((((ZVN_Loop22+Target))<<8)&$FF00)|((((ZVN_Loop22+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0005FA                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0005FA F9               	dc.b	$F9

0005FB                  ZVN_Call45:
0005FB                  	smpsPSGvoice	$00
0005FB F500             	dc.b	$F5,$00
0005FD B602B8BDBBC4C2C0 	dc.b	nF4, $02, nG4, nC5, nBb4, nG5, nF5, nEb5
000605 BFB4B6B8B9BDC0BF 	dc.b	nD5, nEb4, nF4, nG4, nAb4, nC5, nEb5, nD5
00060D BB               	dc.b	nBb4

00060E                  ZVN_Loop23:
00060E B1B6B8B6BDB8B6B4 	dc.b	nC4, nF4, nG4, nF4, nC5, nG4, nF4, nEb4
000616                  	smpsLoop		$01, $02, ZVN_Loop23, Target
000616 F7               	dc.b	$F7
000617 0102             	dc.b	$01,$02
                        	if (ZVN_Loop23<*)
000619                  		rom_ptr_z80(ZVN_Loop23+Target)
                        	;dc.w z80_ptr(ptr,addr)
000619 0E86             	dc.w  (((((ZVN_Loop23+Target))<<8)&$FF00)|((((ZVN_Loop23+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00061B                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00061B F9               	dc.b	$F9

00061C                  ZVN_Call46:
00061C B402B6B8B4BBB6B8 	dc.b	nEb4, $02, nF4, nG4, nEb4, nBb4, nF4, nG4
000624 B4B6B8B9B8BDB9B8 	dc.b	nEb4, nF4, nG4, nAb4, nG4, nC5, nAb4, nG4
00062C B6B1B3B4B1B6B1B4 	dc.b	nF4, nC4, nD4, nEb4, nC4, nF4, nC4, nEb4
000634 B1AFB1B4B6B8B6B4 	dc.b	nC4, nBb3, nC4, nEb4, nF4, nG4, nF4, nEb4
00063C B6               	dc.b	nF4
00063D                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00063D F9               	dc.b	$F9

00063E                  ZVN_Call47:
00063E                  	smpsPSGvoice	$02
00063E F502             	dc.b	$F5,$02

000640                  ZVN_Loop26:
000640 BD02B1C4B1C9B1C4 	dc.b	nC5, $02, nC4, nG5, nC4, nC6, nC4, nG5
000648 B1CBB1C4B1C9B1C4 	dc.b	nC4, nD6, nC4, nG5, nC4, nC6, nC4, nG5
000650 B1               	dc.b	nC4
000651                  	smpsLoop		$00, $02, ZVN_Loop26, Target
000651 F7               	dc.b	$F7
000652 0002             	dc.b	$00,$02
                        	if (ZVN_Loop26<*)
000654                  		rom_ptr_z80(ZVN_Loop26+Target)
                        	;dc.w z80_ptr(ptr,addr)
000654 4086             	dc.w  (((((ZVN_Loop26+Target))<<8)&$FF00)|((((ZVN_Loop26+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000656                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000656 F9               	dc.b	$F9

000657                  ZVN_PSG2:
000657                  	smpsSetVol		PSGVol_Qtr
000657 EC07             	dc.b	$EC,PSGVol_Qtr
000659                  	smpsCall		ZVN_Call48, Target
000659 F8               	dc.b	$F8
                        	if (ZVN_Call48<*)
                        	else
00065A                  		rom_ptr_z80(ZVN_Call48+Target)
                        	;dc.w z80_ptr(ptr,addr)
00065A 9E86             	dc.w  (((((ZVN_Call48+Target))<<8)&$FF00)|((((ZVN_Call48+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00065C                  	smpsCall		ZVN_Call49, Target
00065C F8               	dc.b	$F8
                        	if (ZVN_Call49<*)
                        	else
00065D                  		rom_ptr_z80(ZVN_Call49+Target)
                        	;dc.w z80_ptr(ptr,addr)
00065D B886             	dc.w  (((((ZVN_Call49+Target))<<8)&$FF00)|((((ZVN_Call49+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00065F                  	smpsCall		ZVN_Call50, Target
00065F F8               	dc.b	$F8
                        	if (ZVN_Call50<*)
                        	else
000660                  		rom_ptr_z80(ZVN_Call50+Target)
                        	;dc.w z80_ptr(ptr,addr)
000660 D086             	dc.w  (((((ZVN_Call50+Target))<<8)&$FF00)|((((ZVN_Call50+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000662                  ZVN_Loop28:
000662                  	smpsCall		ZVN_Call51, Target
000662 F8               	dc.b	$F8
                        	if (ZVN_Call51<*)
                        	else
000663                  		rom_ptr_z80(ZVN_Call51+Target)
                        	;dc.w z80_ptr(ptr,addr)
000663 E786             	dc.w  (((((ZVN_Call51+Target))<<8)&$FF00)|((((ZVN_Call51+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000665                  	smpsCall		ZVN_Call52, Target
000665 F8               	dc.b	$F8
                        	if (ZVN_Call52<*)
                        	else
000666                  		rom_ptr_z80(ZVN_Call52+Target)
                        	;dc.w z80_ptr(ptr,addr)
000666 2B87             	dc.w  (((((ZVN_Call52+Target))<<8)&$FF00)|((((ZVN_Call52+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000668                  	smpsLoop		$00, $02, ZVN_Loop28, Target
000668 F7               	dc.b	$F7
000669 0002             	dc.b	$00,$02
                        	if (ZVN_Loop28<*)
00066B                  		rom_ptr_z80(ZVN_Loop28+Target)
                        	;dc.w z80_ptr(ptr,addr)
00066B 6286             	dc.w  (((((ZVN_Loop28+Target))<<8)&$FF00)|((((ZVN_Loop28+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00066D                  	smpsCall		ZVN_Call53, Target
00066D F8               	dc.b	$F8
                        	if (ZVN_Call53<*)
                        	else
00066E                  		rom_ptr_z80(ZVN_Call53+Target)
                        	;dc.w z80_ptr(ptr,addr)
00066E 4F87             	dc.w  (((((ZVN_Call53+Target))<<8)&$FF00)|((((ZVN_Call53+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000670                  	smpsCall		ZVN_Call53, Target
000670 F8               	dc.b	$F8
                        	if (ZVN_Call53<*)
                        	else
000671                  		rom_ptr_z80(ZVN_Call53+Target)
                        	;dc.w z80_ptr(ptr,addr)
000671 4F87             	dc.w  (((((ZVN_Call53+Target))<<8)&$FF00)|((((ZVN_Call53+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000673                  ZVN_Jum$8:
000673                  	smpsCall		ZVN_Call53, Target
000673 F8               	dc.b	$F8
                        	if (ZVN_Call53<*)
                        	else
000674                  		rom_ptr_z80(ZVN_Call53+Target)
                        	;dc.w z80_ptr(ptr,addr)
000674 4F87             	dc.w  (((((ZVN_Call53+Target))<<8)&$FF00)|((((ZVN_Call53+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000676                  	smpsCall		ZVN_Call52, Target
000676 F8               	dc.b	$F8
                        	if (ZVN_Call52<*)
                        	else
000677                  		rom_ptr_z80(ZVN_Call52+Target)
                        	;dc.w z80_ptr(ptr,addr)
000677 2B87             	dc.w  (((((ZVN_Call52+Target))<<8)&$FF00)|((((ZVN_Call52+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000679                  	smpsCall		ZVN_Call51, Target
000679 F8               	dc.b	$F8
                        	if (ZVN_Call51<*)
                        	else
00067A                  		rom_ptr_z80(ZVN_Call51+Target)
                        	;dc.w z80_ptr(ptr,addr)
00067A E786             	dc.w  (((((ZVN_Call51+Target))<<8)&$FF00)|((((ZVN_Call51+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00067C                  	smpsCall		ZVN_Call52, Target
00067C F8               	dc.b	$F8
                        	if (ZVN_Call52<*)
                        	else
00067D                  		rom_ptr_z80(ZVN_Call52+Target)
                        	;dc.w z80_ptr(ptr,addr)
00067D 2B87             	dc.w  (((((ZVN_Call52+Target))<<8)&$FF00)|((((ZVN_Call52+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00067F                  ZVN_Loop29:
00067F                  	smpsCall		ZVN_Call53, Target
00067F F8               	dc.b	$F8
                        	if (ZVN_Call53<*)
                        	else
000680                  		rom_ptr_z80(ZVN_Call53+Target)
                        	;dc.w z80_ptr(ptr,addr)
000680 4F87             	dc.w  (((((ZVN_Call53+Target))<<8)&$FF00)|((((ZVN_Call53+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000682                  	smpsLoop		$00, $03, ZVN_Loop29, Target
000682 F7               	dc.b	$F7
000683 0003             	dc.b	$00,$03
                        	if (ZVN_Loop29<*)
000685                  		rom_ptr_z80(ZVN_Loop29+Target)
                        	;dc.w z80_ptr(ptr,addr)
000685 7F86             	dc.w  (((((ZVN_Loop29+Target))<<8)&$FF00)|((((ZVN_Loop29+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000687                  	smpsCall		ZVN_Call54, Target
000687 F8               	dc.b	$F8
                        	if (ZVN_Call54<*)
                        	else
000688                  		rom_ptr_z80(ZVN_Call54+Target)
                        	;dc.w z80_ptr(ptr,addr)
000688 7187             	dc.w  (((((ZVN_Call54+Target))<<8)&$FF00)|((((ZVN_Call54+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00068A                  	smpsCall		ZVN_Call52, Target
00068A F8               	dc.b	$F8
                        	if (ZVN_Call52<*)
                        	else
00068B                  		rom_ptr_z80(ZVN_Call52+Target)
                        	;dc.w z80_ptr(ptr,addr)
00068B 2B87             	dc.w  (((((ZVN_Call52+Target))<<8)&$FF00)|((((ZVN_Call52+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00068D                  	smpsCall		ZVN_Call51, Target
00068D F8               	dc.b	$F8
                        	if (ZVN_Call51<*)
                        	else
00068E                  		rom_ptr_z80(ZVN_Call51+Target)
                        	;dc.w z80_ptr(ptr,addr)
00068E E786             	dc.w  (((((ZVN_Call51+Target))<<8)&$FF00)|((((ZVN_Call51+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000690                  	smpsCall		ZVN_Call52, Target
000690 F8               	dc.b	$F8
                        	if (ZVN_Call52<*)
                        	else
000691                  		rom_ptr_z80(ZVN_Call52+Target)
                        	;dc.w z80_ptr(ptr,addr)
000691 2B87             	dc.w  (((((ZVN_Call52+Target))<<8)&$FF00)|((((ZVN_Call52+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

000693                  ZVN_Loop30:
000693                  	smpsCall		ZVN_Call53, Target
000693 F8               	dc.b	$F8
                        	if (ZVN_Call53<*)
                        	else
000694                  		rom_ptr_z80(ZVN_Call53+Target)
                        	;dc.w z80_ptr(ptr,addr)
000694 4F87             	dc.w  (((((ZVN_Call53+Target))<<8)&$FF00)|((((ZVN_Call53+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000696                  	smpsLoop		$00, $03, ZVN_Loop30, Target
000696 F7               	dc.b	$F7
000697 0003             	dc.b	$00,$03
                        	if (ZVN_Loop30<*)
000699                  		rom_ptr_z80(ZVN_Loop30+Target)
                        	;dc.w z80_ptr(ptr,addr)
000699 9386             	dc.w  (((((ZVN_Loop30+Target))<<8)&$FF00)|((((ZVN_Loop30+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00069B                  	smpsJump		ZVN_Jum$8, Target
00069B F6               	dc.b	$F6
                        	if (ZVN_Jum$8<*)
00069C                  		rom_ptr_z80(ZVN_Jum$8+Target)
                        	;dc.w z80_ptr(ptr,addr)
00069C 7386             	dc.w  (((((ZVN_Jum$8+Target))<<8)&$FF00)|((((ZVN_Jum$8+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

00069E                  ZVN_Call48:
00069E 8006             	dc.b	nRst, $06
0006A0                  	smpsPSGvoice	$0A
0006A0 F50A             	dc.b	$F5,$0A
0006A2 BD01BFC004C2C008 	dc.b	nC5, $01, nD5, nEb5, $04, nF5, nEb5, $08
0006AA BD06B802B906BD02 	dc.b	nC5, $06, nG4, $02, nAb4, $06, nC5, $02
0006B2 BB04B9B810       	dc.b	nBb4, $04, nAb4, nG4, $10
0006B7                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0006B7 F9               	dc.b	$F9

0006B8                  ZVN_Call49:
0006B8 8006BD01BFC004C2 	dc.b	nRst, $06, nC5, $01, nD5, nEb5, $04, nF5
0006C0 C408C006B802B906 	dc.b	nG5, $08, nEb5, $06, nG4, $02, nAb4, $06
0006C8 B802B604B4BB10   	dc.b	nG4, $02, nF4, $04, nEb4, nBb4, $10
0006CF                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0006CF F9               	dc.b	$F9

0006D0                  ZVN_Call50:
0006D0 B106B404B606BB0C 	dc.b	nC4, $06, nEb4, $04, nF4, $06, nBb4, $0C
0006D8 B902B4B60CB802B9 	dc.b	nAb4, $02, nEb4, nF4, $0C, nG4, $02, nAb4
0006E0 B80C             	dc.b	nG4, $0C
0006E2                  	smpsPSGvoice	$06
0006E2 F506             	dc.b	$F5,$06
0006E4 B604             	dc.b	nF4, $04
0006E6                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0006E6 F9               	dc.b	$F9

0006E7                  ZVN_Call51:
0006E7                  	smpsPSGvoice	$00
0006E7 F500             	dc.b	$F5,$00
0006E9 B101B1BDBDB1BDBB 	dc.b	nC4, $01, nC4, nC5, nC5, nC4, nC5, nBb4
0006F1 B9B1B6BDBDB1BDBB 	dc.b	nAb4, nC4, nF4, nC5, nC5, nC4, nC5, nBb4
0006F9 BBBDB4BBBDB1BDB8 	dc.b	nBb4, nC5, nEb4, nBb4, nC5, nC4, nC5, nG4
000701 BDB6BDB1BDB6BDB8 	dc.b	nC5, nF4, nC5, nC4, nC5, nF4, nC5, nG4
000709 BDB1BDBDBDB1BDBB 	dc.b	nC5, nC4, nC5, nC5, nC5, nC4, nC5, nBb4
000711 B9B1B6BDBDB1BDBB 	dc.b	nAb4, nC4, nF4, nC5, nC5, nC4, nC5, nBb4
000719 BBBDB4BBBDB1BDB8 	dc.b	nBb4, nC5, nEb4, nBb4, nC5, nC4, nC5, nG4
000721 BDB6BDB1BDB6BDB8 	dc.b	nC5, nF4, nC5, nC4, nC5, nF4, nC5, nG4
000729 BD               	dc.b	nC5
00072A                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00072A F9               	dc.b	$F9

00072B                  ZVN_Call52:
00072B 8002             	dc.b	nRst, $02
00072D                  	smpsPSGvoice	$00
00072D F500             	dc.b	$F5,$00
00072F B6B8BDBBC4C2C0BF 	dc.b	nF4, nG4, nC5, nBb4, nG5, nF5, nEb5, nD5
000737 B4B6B8B9BDC0BFBB 	dc.b	nEb4, nF4, nG4, nAb4, nC5, nEb5, nD5, nBb4
00073F B1B6B8B6BDB8B6B4 	dc.b	nC4, nF4, nG4, nF4, nC5, nG4, nF4, nEb4
000747 B1B6B8B6BDB8B6   	dc.b	nC4, nF4, nG4, nF4, nC5, nG4, nF4
00074E                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00074E F9               	dc.b	$F9

00074F                  ZVN_Call53:
00074F 8002B4B6B8B4BBB6 	dc.b	nRst, $02, nEb4, nF4, nG4, nEb4, nBb4, nF4
000757 B8B4B6B8B9B8BDB9 	dc.b	nG4, nEb4, nF4, nG4, nAb4, nG4, nC5, nAb4
00075F B8B6B1B3B4B1B6B1 	dc.b	nG4, nF4, nC4, nD4, nEb4, nC4, nF4, nC4
000767 B4B1AFB1B4B6B8B6 	dc.b	nEb4, nC4, nBb3, nC4, nEb4, nF4, nG4, nF4
00076F B4               	dc.b	nEb4
000770                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000770 F9               	dc.b	$F9

000771                  ZVN_Call54:
000771 8002             	dc.b	nRst, $02
000773                  	smpsPSGvoice	$02
000773 F502             	dc.b	$F5,$02
000775 BDB1C4B1C9B1C4B1 	dc.b	nC5, nC4, nG5, nC4, nC6, nC4, nG5, nC4
00077D CBB1C4B1C9B1C4B1 	dc.b	nD6, nC4, nG5, nC4, nC6, nC4, nG5, nC4
000785 BDB1C4B1C9B1C4B1 	dc.b	nC5, nC4, nG5, nC4, nC6, nC4, nG5, nC4
00078D CBB1C4B1C9B1C4   	dc.b	nD6, nC4, nG5, nC4, nC6, nC4, nG5
000794                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000794 F9               	dc.b	$F9

000795                  ZVN_PSG3:
000795                  	smpsSetVol		PSGVol_Half
000795 EC03             	dc.b	$EC,PSGVol_Half
000797                  	smpsCall		ZVN_Call55, Target
000797 F8               	dc.b	$F8
                        	if (ZVN_Call55<*)
                        	else
000798                  		rom_ptr_z80(ZVN_Call55+Target)
                        	;dc.w z80_ptr(ptr,addr)
000798 DC87             	dc.w  (((((ZVN_Call55+Target))<<8)&$FF00)|((((ZVN_Call55+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00079A                  	smpsCall		ZVN_Call56, Target
00079A F8               	dc.b	$F8
                        	if (ZVN_Call56<*)
                        	else
00079B                  		rom_ptr_z80(ZVN_Call56+Target)
                        	;dc.w z80_ptr(ptr,addr)
00079B 0088             	dc.w  (((((ZVN_Call56+Target))<<8)&$FF00)|((((ZVN_Call56+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00079D                  	smpsCall		ZVN_Call56, Target
00079D F8               	dc.b	$F8
                        	if (ZVN_Call56<*)
                        	else
00079E                  		rom_ptr_z80(ZVN_Call56+Target)
                        	;dc.w z80_ptr(ptr,addr)
00079E 0088             	dc.w  (((((ZVN_Call56+Target))<<8)&$FF00)|((((ZVN_Call56+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0007A0                  ZVN_Loop33:
0007A0                  	smpsCall		ZVN_Call57, Target
0007A0 F8               	dc.b	$F8
                        	if (ZVN_Call57<*)
                        	else
0007A1                  		rom_ptr_z80(ZVN_Call57+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007A1 2288             	dc.w  (((((ZVN_Call57+Target))<<8)&$FF00)|((((ZVN_Call57+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007A3                  	smpsCall		ZVN_Call58, Target
0007A3 F8               	dc.b	$F8
                        	if (ZVN_Call58<*)
                        	else
0007A4                  		rom_ptr_z80(ZVN_Call58+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007A4 3188             	dc.w  (((((ZVN_Call58+Target))<<8)&$FF00)|((((ZVN_Call58+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007A6                  	smpsLoop		$00, $02, ZVN_Loop33, Target
0007A6 F7               	dc.b	$F7
0007A7 0002             	dc.b	$00,$02
                        	if (ZVN_Loop33<*)
0007A9                  		rom_ptr_z80(ZVN_Loop33+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007A9 A087             	dc.w  (((((ZVN_Loop33+Target))<<8)&$FF00)|((((ZVN_Loop33+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007AB                  	smpsCall		ZVN_Call59, Target
0007AB F8               	dc.b	$F8
                        	if (ZVN_Call59<*)
                        	else
0007AC                  		rom_ptr_z80(ZVN_Call59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007AC 4F88             	dc.w  (((((ZVN_Call59+Target))<<8)&$FF00)|((((ZVN_Call59+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007AE                  	smpsCall		ZVN_Call59, Target
0007AE F8               	dc.b	$F8
                        	if (ZVN_Call59<*)
                        	else
0007AF                  		rom_ptr_z80(ZVN_Call59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007AF 4F88             	dc.w  (((((ZVN_Call59+Target))<<8)&$FF00)|((((ZVN_Call59+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0007B1                  ZVN_Jum$9:
0007B1                  	smpsCall		ZVN_Call59, Target
0007B1 F8               	dc.b	$F8
                        	if (ZVN_Call59<*)
                        	else
0007B2                  		rom_ptr_z80(ZVN_Call59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007B2 4F88             	dc.w  (((((ZVN_Call59+Target))<<8)&$FF00)|((((ZVN_Call59+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007B4                  	smpsCall		ZVN_Call58, Target
0007B4 F8               	dc.b	$F8
                        	if (ZVN_Call58<*)
                        	else
0007B5                  		rom_ptr_z80(ZVN_Call58+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007B5 3188             	dc.w  (((((ZVN_Call58+Target))<<8)&$FF00)|((((ZVN_Call58+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007B7                  	smpsCall		ZVN_Call57, Target
0007B7 F8               	dc.b	$F8
                        	if (ZVN_Call57<*)
                        	else
0007B8                  		rom_ptr_z80(ZVN_Call57+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007B8 2288             	dc.w  (((((ZVN_Call57+Target))<<8)&$FF00)|((((ZVN_Call57+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007BA                  	smpsCall		ZVN_Call58, Target
0007BA F8               	dc.b	$F8
                        	if (ZVN_Call58<*)
                        	else
0007BB                  		rom_ptr_z80(ZVN_Call58+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007BB 3188             	dc.w  (((((ZVN_Call58+Target))<<8)&$FF00)|((((ZVN_Call58+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0007BD                  ZVN_Loop34:
0007BD                  	smpsCall		ZVN_Call59, Target
0007BD F8               	dc.b	$F8
                        	if (ZVN_Call59<*)
                        	else
0007BE                  		rom_ptr_z80(ZVN_Call59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007BE 4F88             	dc.w  (((((ZVN_Call59+Target))<<8)&$FF00)|((((ZVN_Call59+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007C0                  	smpsLoop		$00, $03, ZVN_Loop34, Target
0007C0 F7               	dc.b	$F7
0007C1 0003             	dc.b	$00,$03
                        	if (ZVN_Loop34<*)
0007C3                  		rom_ptr_z80(ZVN_Loop34+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007C3 BD87             	dc.w  (((((ZVN_Loop34+Target))<<8)&$FF00)|((((ZVN_Loop34+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007C5                  	smpsCall		ZVN_Call60, Target
0007C5 F8               	dc.b	$F8
                        	if (ZVN_Call60<*)
                        	else
0007C6                  		rom_ptr_z80(ZVN_Call60+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007C6 7888             	dc.w  (((((ZVN_Call60+Target))<<8)&$FF00)|((((ZVN_Call60+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007C8                  	smpsCall		ZVN_Call58, Target
0007C8 F8               	dc.b	$F8
                        	if (ZVN_Call58<*)
                        	else
0007C9                  		rom_ptr_z80(ZVN_Call58+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007C9 3188             	dc.w  (((((ZVN_Call58+Target))<<8)&$FF00)|((((ZVN_Call58+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007CB                  	smpsCall		ZVN_Call57, Target
0007CB F8               	dc.b	$F8
                        	if (ZVN_Call57<*)
                        	else
0007CC                  		rom_ptr_z80(ZVN_Call57+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007CC 2288             	dc.w  (((((ZVN_Call57+Target))<<8)&$FF00)|((((ZVN_Call57+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007CE                  	smpsCall		ZVN_Call58, Target
0007CE F8               	dc.b	$F8
                        	if (ZVN_Call58<*)
                        	else
0007CF                  		rom_ptr_z80(ZVN_Call58+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007CF 3188             	dc.w  (((((ZVN_Call58+Target))<<8)&$FF00)|((((ZVN_Call58+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0007D1                  ZVN_Loop36:
0007D1                  	smpsCall		ZVN_Call59, Target
0007D1 F8               	dc.b	$F8
                        	if (ZVN_Call59<*)
                        	else
0007D2                  		rom_ptr_z80(ZVN_Call59+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007D2 4F88             	dc.w  (((((ZVN_Call59+Target))<<8)&$FF00)|((((ZVN_Call59+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0007D4                  	smpsLoop		$00, $03, ZVN_Loop36, Target
0007D4 F7               	dc.b	$F7
0007D5 0003             	dc.b	$00,$03
                        	if (ZVN_Loop36<*)
0007D7                  		rom_ptr_z80(ZVN_Loop36+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007D7 D187             	dc.w  (((((ZVN_Loop36+Target))<<8)&$FF00)|((((ZVN_Loop36+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0007D9                  	smpsJump		ZVN_Jum$9, Target
0007D9 F6               	dc.b	$F6
                        	if (ZVN_Jum$9<*)
0007DA                  		rom_ptr_z80(ZVN_Jum$9+Target)
                        	;dc.w z80_ptr(ptr,addr)
0007DA B187             	dc.w  (((((ZVN_Jum$9+Target))<<8)&$FF00)|((((ZVN_Jum$9+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0007DC                  ZVN_Call55:
0007DC                  	smpsPSGvoice	$0A
0007DC F50A             	dc.b	$F5,$0A
0007DE B102B8BDB8B3B8BD 	dc.b	nC4, $02, nG4, nC5, nG4, nD4, nG4, nC5
0007E6 BBAFB4BBB4AFB4BB 	dc.b	nBb4, nBb3, nEb4, nBb4, nEb4, nBb3, nEb4, nBb4
0007EE B4B6B9C2B9B6B9C2 	dc.b	nEb4, nF4, nAb4, nF5, nAb4, nF4, nAb4, nF5
0007F6 B9B1B8BDB8B1B8BD 	dc.b	nAb4, nC4, nG4, nC5, nG4, nC4, nG4, nC5
0007FE B8               	dc.b	nG4
0007FF                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0007FF F9               	dc.b	$F9

000800                  ZVN_Call56:
000800 B102B8BDB8B3B8BD 	dc.b	nC4, $02, nG4, nC5, nG4, nD4, nG4, nC5
000808 BBAFB4BBB4AFB4BB 	dc.b	nBb4, nBb3, nEb4, nBb4, nEb4, nBb3, nEb4, nBb4
000810 B4B6B9C2B9B6B9C2 	dc.b	nEb4, nF4, nAb4, nF5, nAb4, nF4, nAb4, nF5
000818 B9AFB6BBB6AFB6BB 	dc.b	nAb4, nBb3, nF4, nBb4, nF4, nBb3, nF4, nBb4
000820 B6               	dc.b	nF4
000821                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000821 F9               	dc.b	$F9

000822                  ZVN_Call57:
000822                  	smpsPSGvoice	$06
000822 F506             	dc.b	$F5,$06

000824                  ZVN_Loop31:
000824 BD02C904         	dc.b	nC5, $02, nC6, $04
000828                  	smpsLoop		$01, $0A, ZVN_Loop31, Target
000828 F7               	dc.b	$F7
000829 010A             	dc.b	$01,$0A
                        	if (ZVN_Loop31<*)
00082B                  		rom_ptr_z80(ZVN_Loop31+Target)
                        	;dc.w z80_ptr(ptr,addr)
00082B 2488             	dc.w  (((((ZVN_Loop31+Target))<<8)&$FF00)|((((ZVN_Loop31+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00082D BD02C9           	dc.b	nC5, $02, nC6
000830                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000830 F9               	dc.b	$F9

000831                  ZVN_Call58:
000831 C202CE04         	dc.b	nF5, $02, nF6, $04
000835                  	smpsLoop		$01, $03, ZVN_Call58, Target
000835 F7               	dc.b	$F7
000836 0103             	dc.b	$01,$03
                        	if (ZVN_Call58<*)
000838                  		rom_ptr_z80(ZVN_Call58+Target)
                        	;dc.w z80_ptr(ptr,addr)
000838 3188             	dc.w  (((((ZVN_Call58+Target))<<8)&$FF00)|((((ZVN_Call58+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00083A C002CC04C002CC04 	dc.b	nEb5, $02, nEb6, $04, nEb5, $02, nEb6, $04
000842 C002             	dc.b	nEb5, $02

000844                  ZVN_Loop32:
000844 C904BD02         	dc.b	nC6, $04, nC5, $02
000848                  	smpsLoop		$01, $05, ZVN_Loop32, Target
000848 F7               	dc.b	$F7
000849 0105             	dc.b	$01,$05
                        	if (ZVN_Loop32<*)
00084B                  		rom_ptr_z80(ZVN_Loop32+Target)
                        	;dc.w z80_ptr(ptr,addr)
00084B 4488             	dc.w  (((((ZVN_Loop32+Target))<<8)&$FF00)|((((ZVN_Loop32+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00084D C9               	dc.b	nC6
00084E                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00084E F9               	dc.b	$F9

00084F                  ZVN_Call59:
00084F C002CC04         	dc.b	nEb5, $02, nEb6, $04
000853                  	smpsLoop		$01, $03, ZVN_Call59, Target
000853 F7               	dc.b	$F7
000854 0103             	dc.b	$01,$03
                        	if (ZVN_Call59<*)
000856                  		rom_ptr_z80(ZVN_Call59+Target)
                        	;dc.w z80_ptr(ptr,addr)
000856 4F88             	dc.w  (((((ZVN_Call59+Target))<<8)&$FF00)|((((ZVN_Call59+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000858 C202CE04C202CE04 	dc.b	nF5, $02, nF6, $04, nF5, $02, nF6, $04
000860 C202C904BD02C904 	dc.b	nF5, $02, nC6, $04, nC5, $02, nC6, $04
000868 BD02C904BB02C704 	dc.b	nC5, $02, nC6, $04, nBb4, $02, nBb5, $04
000870 BB02C704BB02C7   	dc.b	nBb4, $02, nBb5, $04, nBb4, $02, nBb5
000877                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000877 F9               	dc.b	$F9

000878                  ZVN_Call60:
000878 C9               	dc.b	nC6

000879                  ZVN_Loop35:
000879 04BD02C904BD02C9 	dc.b	$04, nC5, $02, nC6, $04, nC5, $02, nC6
000881 04               	dc.b	$04
000882                  	smpsLoop		$00, $04, ZVN_Loop35, Target
000882 F7               	dc.b	$F7
000883 0004             	dc.b	$00,$04
                        	if (ZVN_Loop35<*)
000885                  		rom_ptr_z80(ZVN_Loop35+Target)
                        	;dc.w z80_ptr(ptr,addr)
000885 7988             	dc.w  (((((ZVN_Loop35+Target))<<8)&$FF00)|((((ZVN_Loop35+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000887                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000887 F9               	dc.b	$F9
                        	
000888                  ZVN_PWM1:
000888                  	smpsCall		ZVN_PWM1_Call1, Target
000888 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call1<*)
                        	else
000889                  		rom_ptr_z80(ZVN_PWM1_Call1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000889 CB88             	dc.w  (((((ZVN_PWM1_Call1+Target))<<8)&$FF00)|((((ZVN_PWM1_Call1+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00088B                  	smpsLoop		$00, $03, ZVN_PWM1, Target
00088B F7               	dc.b	$F7
00088C 0003             	dc.b	$00,$03
                        	if (ZVN_PWM1<*)
00088E                  		rom_ptr_z80(ZVN_PWM1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00088E 8888             	dc.w  (((((ZVN_PWM1+Target))<<8)&$FF00)|((((ZVN_PWM1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000890                  ZVN_PWM1_Loop2:
000890                  	smpsCall		ZVN_PWM1_Call2, Target
000890 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call2<*)
                        	else
000891                  		rom_ptr_z80(ZVN_PWM1_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000891 D188             	dc.w  (((((ZVN_PWM1_Call2+Target))<<8)&$FF00)|((((ZVN_PWM1_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000893                  	smpsCall		ZVN_PWM1_Call3, Target
000893 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call3<*)
                        	else
000894                  		rom_ptr_z80(ZVN_PWM1_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000894 E788             	dc.w  (((((ZVN_PWM1_Call3+Target))<<8)&$FF00)|((((ZVN_PWM1_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000896                  	smpsLoop		$00, $02, ZVN_PWM1_Loop2, Target
000896 F7               	dc.b	$F7
000897 0002             	dc.b	$00,$02
                        	if (ZVN_PWM1_Loop2<*)
000899                  		rom_ptr_z80(ZVN_PWM1_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000899 9088             	dc.w  (((((ZVN_PWM1_Loop2+Target))<<8)&$FF00)|((((ZVN_PWM1_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
00089B                  	smpsCall		ZVN_PWM1_Call2, Target
00089B F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call2<*)
                        	else
00089C                  		rom_ptr_z80(ZVN_PWM1_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00089C D188             	dc.w  (((((ZVN_PWM1_Call2+Target))<<8)&$FF00)|((((ZVN_PWM1_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00089E                  	smpsCall		ZVN_PWM1_Call2, Target
00089E F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call2<*)
                        	else
00089F                  		rom_ptr_z80(ZVN_PWM1_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00089F D188             	dc.w  (((((ZVN_PWM1_Call2+Target))<<8)&$FF00)|((((ZVN_PWM1_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0008A1                  ZVN_PWM1_Loop3:
0008A1                  	smpsCall		ZVN_PWM1_Call2, Target
0008A1 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call2<*)
                        	else
0008A2                  		rom_ptr_z80(ZVN_PWM1_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008A2 D188             	dc.w  (((((ZVN_PWM1_Call2+Target))<<8)&$FF00)|((((ZVN_PWM1_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0008A4                  	smpsCall		ZVN_PWM1_Call3, Target
0008A4 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call3<*)
                        	else
0008A5                  		rom_ptr_z80(ZVN_PWM1_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008A5 E788             	dc.w  (((((ZVN_PWM1_Call3+Target))<<8)&$FF00)|((((ZVN_PWM1_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0008A7                  	smpsLoop		$00, $02, ZVN_PWM1_Loop3, Target
0008A7 F7               	dc.b	$F7
0008A8 0002             	dc.b	$00,$02
                        	if (ZVN_PWM1_Loop3<*)
0008AA                  		rom_ptr_z80(ZVN_PWM1_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008AA A188             	dc.w  (((((ZVN_PWM1_Loop3+Target))<<8)&$FF00)|((((ZVN_PWM1_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0008AC                  ZVN_PWM1_Loop4:
0008AC                  	smpsCall		ZVN_PWM1_Call2, Target
0008AC F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call2<*)
                        	else
0008AD                  		rom_ptr_z80(ZVN_PWM1_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008AD D188             	dc.w  (((((ZVN_PWM1_Call2+Target))<<8)&$FF00)|((((ZVN_PWM1_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0008AF                  	smpsLoop		$00, $03, ZVN_PWM1_Loop4, Target
0008AF F7               	dc.b	$F7
0008B0 0003             	dc.b	$00,$03
                        	if (ZVN_PWM1_Loop4<*)
0008B2                  		rom_ptr_z80(ZVN_PWM1_Loop4+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008B2 AC88             	dc.w  (((((ZVN_PWM1_Loop4+Target))<<8)&$FF00)|((((ZVN_PWM1_Loop4+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008B4                  	smpsCall		ZVN_PWM1_Call1, Target
0008B4 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call1<*)
                        	else
0008B5                  		rom_ptr_z80(ZVN_PWM1_Call1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008B5 CB88             	dc.w  (((((ZVN_PWM1_Call1+Target))<<8)&$FF00)|((((ZVN_PWM1_Call1+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

0008B7                  ZVN_PWM1_Loop5:
0008B7                  	smpsCall		ZVN_PWM1_Call3, Target
0008B7 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call3<*)
                        	else
0008B8                  		rom_ptr_z80(ZVN_PWM1_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008B8 E788             	dc.w  (((((ZVN_PWM1_Call3+Target))<<8)&$FF00)|((((ZVN_PWM1_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0008BA                  	smpsCall		ZVN_PWM1_Call2, Target
0008BA F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call2<*)
                        	else
0008BB                  		rom_ptr_z80(ZVN_PWM1_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008BB D188             	dc.w  (((((ZVN_PWM1_Call2+Target))<<8)&$FF00)|((((ZVN_PWM1_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0008BD                  	smpsLoop		$00, $02, ZVN_PWM1_Loop5, Target
0008BD F7               	dc.b	$F7
0008BE 0002             	dc.b	$00,$02
                        	if (ZVN_PWM1_Loop5<*)
0008C0                  		rom_ptr_z80(ZVN_PWM1_Loop5+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008C0 B788             	dc.w  (((((ZVN_PWM1_Loop5+Target))<<8)&$FF00)|((((ZVN_PWM1_Loop5+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008C2                  	smpsCall		ZVN_PWM1_Call2, Target
0008C2 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call2<*)
                        	else
0008C3                  		rom_ptr_z80(ZVN_PWM1_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008C3 D188             	dc.w  (((((ZVN_PWM1_Call2+Target))<<8)&$FF00)|((((ZVN_PWM1_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0008C5                  	smpsCall		ZVN_PWM1_Call4, Target
0008C5 F8               	dc.b	$F8
                        	if (ZVN_PWM1_Call4<*)
                        	else
0008C6                  		rom_ptr_z80(ZVN_PWM1_Call4+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008C6 FB88             	dc.w  (((((ZVN_PWM1_Call4+Target))<<8)&$FF00)|((((ZVN_PWM1_Call4+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
0008C8                  	smpsJump		ZVN_PWM1_Loop3, Target
0008C8 F6               	dc.b	$F6
                        	if (ZVN_PWM1_Loop3<*)
0008C9                  		rom_ptr_z80(ZVN_PWM1_Loop3+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008C9 A188             	dc.w  (((((ZVN_PWM1_Loop3+Target))<<8)&$FF00)|((((ZVN_PWM1_Loop3+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

0008CB                  ZVN_PWM1_Call1:
0008CB 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
0008D0                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0008D0 F9               	dc.b	$F9

0008D1                  ZVN_PWM1_Call2:
0008D1 98               	dc.b	$98

0008D2                  ZVN_PWM1_Loop1:
0008D2 0298989804020498 	dc.b	$02, $98, $98, $98, $04, $02, $04, $98
0008DA 98020401989804   	dc.b	$98, $02, $04, $01, $98, $98, $04
0008E1                  	smpsLoop		$01, $02, ZVN_PWM1_Loop1, Target
0008E1 F7               	dc.b	$F7
0008E2 0102             	dc.b	$01,$02
                        	if (ZVN_PWM1_Loop1<*)
0008E4                  		rom_ptr_z80(ZVN_PWM1_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
0008E4 D288             	dc.w  (((((ZVN_PWM1_Loop1+Target))<<8)&$FF00)|((((ZVN_PWM1_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
0008E6                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0008E6 F9               	dc.b	$F9

0008E7                  ZVN_PWM1_Call3:
0008E7 9804069898040204 	dc.b	$98, $04, $06, $98, $98, $04, $02, $04
0008EF 019898040A020498 	dc.b	$01, $98, $98, $04, $0A, $02, $04, $98
0008F7 98020A           	dc.b	$98, $02, $0A
0008FA                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
0008FA F9               	dc.b	$F9

0008FB                  ZVN_PWM1_Call4:
0008FB 98               	dc.b	$98

0008FC                  ZVN_PWM1_Loop6:
0008FC 0298989804020498 	dc.b	$02, $98, $98, $98, $04, $02, $04, $98
000904 98020401989804   	dc.b	$98, $02, $04, $01, $98, $98, $04
00090B                  	smpsLoop		$00, $02, ZVN_PWM1_Loop6, Target
00090B F7               	dc.b	$F7
00090C 0002             	dc.b	$00,$02
                        	if (ZVN_PWM1_Loop6<*)
00090E                  		rom_ptr_z80(ZVN_PWM1_Loop6+Target)
                        	;dc.w z80_ptr(ptr,addr)
00090E FC88             	dc.w  (((((ZVN_PWM1_Loop6+Target))<<8)&$FF00)|((((ZVN_PWM1_Loop6+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000910                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000910 F9               	dc.b	$F9
                        	
000911                  ZVN_PWM2:
000911                  	smpsCall		ZVN_PWM2_Call1, Target
000911 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call1<*)
                        	else
000912                  		rom_ptr_z80(ZVN_PWM2_Call1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000912 5689             	dc.w  (((((ZVN_PWM2_Call1+Target))<<8)&$FF00)|((((ZVN_PWM2_Call1+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000914                  	smpsLoop		$00, $03, ZVN_PWM2, Target
000914 F7               	dc.b	$F7
000915 0003             	dc.b	$00,$03
                        	if (ZVN_PWM2<*)
000917                  		rom_ptr_z80(ZVN_PWM2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000917 1189             	dc.w  (((((ZVN_PWM2+Target))<<8)&$FF00)|((((ZVN_PWM2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000919                  ZVN_PWM2_Loop1:
000919                  	smpsCall		ZVN_PWM2_Call2, Target
000919 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
00091A                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00091A 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00091C                  	smpsCall		ZVN_PWM2_Call3, Target
00091C F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call3<*)
                        	else
00091D                  		rom_ptr_z80(ZVN_PWM2_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00091D 6C89             	dc.w  (((((ZVN_PWM2_Call3+Target))<<8)&$FF00)|((((ZVN_PWM2_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00091F                  	smpsLoop		$00, $02, ZVN_PWM2_Loop1, Target
00091F F7               	dc.b	$F7
000920 0002             	dc.b	$00,$02
                        	if (ZVN_PWM2_Loop1<*)
000922                  		rom_ptr_z80(ZVN_PWM2_Loop1+Target)
                        	;dc.w z80_ptr(ptr,addr)
000922 1989             	dc.w  (((((ZVN_PWM2_Loop1+Target))<<8)&$FF00)|((((ZVN_PWM2_Loop1+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000924                  	smpsCall		ZVN_PWM2_Call4, Target
000924 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call4<*)
                        	else
000925                  		rom_ptr_z80(ZVN_PWM2_Call4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000925 8789             	dc.w  (((((ZVN_PWM2_Call4+Target))<<8)&$FF00)|((((ZVN_PWM2_Call4+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000927                  	smpsCall		ZVN_PWM2_Call2, Target
000927 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
000928                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000928 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1

00092A                  ZVN_PWM2_Loop2:
00092A                  	smpsCall		ZVN_PWM2_Call2, Target
00092A F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
00092B                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00092B 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00092D                  	smpsCall		ZVN_PWM2_Call3, Target
00092D F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call3<*)
                        	else
00092E                  		rom_ptr_z80(ZVN_PWM2_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
00092E 6C89             	dc.w  (((((ZVN_PWM2_Call3+Target))<<8)&$FF00)|((((ZVN_PWM2_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000930                  	smpsLoop		$00, $02, ZVN_PWM2_Loop2, Target
000930 F7               	dc.b	$F7
000931 0002             	dc.b	$00,$02
                        	if (ZVN_PWM2_Loop2<*)
000933                  		rom_ptr_z80(ZVN_PWM2_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000933 2A89             	dc.w  (((((ZVN_PWM2_Loop2+Target))<<8)&$FF00)|((((ZVN_PWM2_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1
000935                  	smpsCall		ZVN_PWM2_Call4, Target
000935 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call4<*)
                        	else
000936                  		rom_ptr_z80(ZVN_PWM2_Call4+Target)
                        	;dc.w z80_ptr(ptr,addr)
000936 8789             	dc.w  (((((ZVN_PWM2_Call4+Target))<<8)&$FF00)|((((ZVN_PWM2_Call4+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000938                  	smpsCall		ZVN_PWM2_Call2, Target
000938 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
000939                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000939 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00093B                  	smpsCall		ZVN_PWM2_Call2, Target
00093B F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
00093C                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00093C 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00093E                  	smpsCall		ZVN_PWM2_Call1, Target
00093E F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call1<*)
                        	else
00093F                  		rom_ptr_z80(ZVN_PWM2_Call1+Target)
                        	;dc.w z80_ptr(ptr,addr)
00093F 5689             	dc.w  (((((ZVN_PWM2_Call1+Target))<<8)&$FF00)|((((ZVN_PWM2_Call1+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000941                  	smpsCall		ZVN_PWM2_Call3, Target
000941 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call3<*)
                        	else
000942                  		rom_ptr_z80(ZVN_PWM2_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000942 6C89             	dc.w  (((((ZVN_PWM2_Call3+Target))<<8)&$FF00)|((((ZVN_PWM2_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000944                  	smpsCall		ZVN_PWM2_Call2, Target
000944 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
000945                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000945 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000947                  	smpsCall		ZVN_PWM2_Call3, Target
000947 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call3<*)
                        	else
000948                  		rom_ptr_z80(ZVN_PWM2_Call3+Target)
                        	;dc.w z80_ptr(ptr,addr)
000948 6C89             	dc.w  (((((ZVN_PWM2_Call3+Target))<<8)&$FF00)|((((ZVN_PWM2_Call3+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00094A                  	smpsCall		ZVN_PWM2_Call4, Target
00094A F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call4<*)
                        	else
00094B                  		rom_ptr_z80(ZVN_PWM2_Call4+Target)
                        	;dc.w z80_ptr(ptr,addr)
00094B 8789             	dc.w  (((((ZVN_PWM2_Call4+Target))<<8)&$FF00)|((((ZVN_PWM2_Call4+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
00094D                  	smpsCall		ZVN_PWM2_Call2, Target
00094D F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
00094E                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
00094E 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000950                  	smpsCall		ZVN_PWM2_Call2, Target
000950 F8               	dc.b	$F8
                        	if (ZVN_PWM2_Call2<*)
                        	else
000951                  		rom_ptr_z80(ZVN_PWM2_Call2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000951 5C89             	dc.w  (((((ZVN_PWM2_Call2+Target))<<8)&$FF00)|((((ZVN_PWM2_Call2+Target))>>8)&$7F)|$80)
                        	endif
                        	;dc.w	loc-*-1
000953                  	smpsJump		ZVN_PWM2_Loop2, Target
000953 F6               	dc.b	$F6
                        	if (ZVN_PWM2_Loop2<*)
000954                  		rom_ptr_z80(ZVN_PWM2_Loop2+Target)
                        	;dc.w z80_ptr(ptr,addr)
000954 2A89             	dc.w  (((((ZVN_PWM2_Loop2+Target))<<8)&$FF00)|((((ZVN_PWM2_Loop2+Target))>>8)&$7F)|$80)
                        	else
                        	endif
                        	;dc.w	loc-*-1

000956                  ZVN_PWM2_Call1:
000956 8010808080       	dc.b	nRst, $10, nRst, nRst, nRst
00095B                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00095B F9               	dc.b	$F9

00095C                  ZVN_PWM2_Call2:
00095C 80088C0604068C8C 	dc.b	nRst, $08, $8C, $06, $04, $06, $8C, $8C
000964 0A0604068C8C02   	dc.b	$0A, $06, $04, $06, $8C, $8C, $02
00096B                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
00096B F9               	dc.b	$F9

00096C                  ZVN_PWM2_Call3:
00096C 80028C0406018C8C 	dc.b	nRst, $02, $8C, $04, $06, $01, $8C, $8C
000974 04068C8C04028C8C 	dc.b	$04, $06, $8C, $8C, $04, $02, $8C, $8C
00097C 8C06040602018C8C 	dc.b	$8C, $06, $04, $06, $02, $01, $8C, $8C
000984 028C             	dc.b	$02, $8C
000986                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000986 F9               	dc.b	$F9

000987                  ZVN_PWM2_Call4:
000987 80088C0604068C8C 	dc.b	nRst, $08, $8C, $06, $04, $06, $8C, $8C
00098F 0A0604068C8C02   	dc.b	$0A, $06, $04, $06, $8C, $8C, $02
000996                  	smpsReturn
                        	;!@
                        	;dc.b	$E3
000996 F9               	dc.b	$F9
                        	
000997                  ZVN_PWM3:
000997                  ZVN_PWM4:
000997                  	smpsStop
000997 F2               	dc.b	$F2

000998                  ZVN_Patches:	
000998 07               	dc.b	$07
000999 0133D408DFDFDFDF 	dc.b	$01, $33, $D4, $08,	$DF, $DF, $DF, $DF
0009A1 0305050500000000 	dc.b	$03, $05, $05, $05,	$00, $00, $00, $00
0009A9 2A2A2A2A18181F1F 	dc.b	$2A, $2A, $2A, $2A,	$18, $18, $1F, $1F
                        	
0009B1 2E               	dc.b	$2E
0009B2 D532D3311C0A0F0F 	dc.b	$D5, $32, $D3, $31,	$1C, $0A, $0F, $0F
0009BA 0204020402040404 	dc.b	$02, $04, $02, $04,	$02, $04, $04, $04
0009C2 0606060626141A14 	dc.b	$06, $06, $06, $06,	$26, $14, $1A, $14
                        	
0009CA 1C               	dc.b	$1C
0009CB 3137D1D116131714 	dc.b	$31, $37, $D1, $D1,	$16, $13, $17, $14
0009D3 080809080A0A0A0A 	dc.b	$08, $08, $09, $08,	$0A, $0A, $0A, $0A
0009DB 03130313201A181A 	dc.b	$03, $13, $03, $13,	$20, $1A, $18, $1A
                        	
0009E3 3D               	dc.b	$3D
0009E4 0030D0001F1F1F11 	dc.b	$00, $30, $D0, $00,	$1F, $1F, $1F, $11
0009EC 0B09001F00000000 	dc.b	$0B, $09, $00, $1F,	$00, $00, $00, $00
0009F4 FFF90F0720121620 	dc.b	$FF, $F9, $0F, $07,	$20, $12, $16, $20

00000 Total Error(s)

DFLOORTIMPANI      0000008B E  DHITIMPANI         00000088 E  DKICK              00000081 E
DLOWTIMPANI        0000008A E  DMIDTIMPANI        00000089 E  DSNARE             00000082 E
DTIMPANI           00000083 E  DVLOWTIMPANI       0000008B E  FMVOL_HALF         00000040 E
NA0                0000008A E  NA1                00000096 E  NA2                000000A2 E
NA3                000000AE E  NA4                000000BA E  NA5                000000C6 E
NA6                000000D2 E  NA7                000000DE E  NAB0               00000089 E
NAB1               00000095 E  NAB2               000000A1 E  NAB3               000000AD E
NAB4               000000B9 E  NAB5               000000C5 E  NAB6               000000D1 E
NAB7               000000DD E  NB0                0000008C E  NB1                00000098 E
NB2                000000A4 E  NB3                000000B0 E  NB4                000000BC E
NB5                000000C8 E  NB6                000000D4 E  NBB0               0000008B E
NBB1               00000097 E  NBB2               000000A3 E  NBB3               000000AF E
NBB4               000000BB E  NBB5               000000C7 E  NBB6               000000D3 E
NBB7               000000DF E  NC0                00000081 E  NC1                0000008D E
NC2                00000099 E  NC3                000000A5 E  NC4                000000B1 E
NC5                000000BD E  NC6                000000C9 E  NC7                000000D5 E
NCS0               00000082 E  NCS1               0000008E E  NCS2               0000009A E
NCS3               000000A6 E  NCS4               000000B2 E  NCS5               000000BE E
NCS6               000000CA E  NCS7               000000D6 E  ND0                00000083 E
ND1                0000008F E  ND2                0000009B E  ND3                000000A7 E
ND4                000000B3 E  ND5                000000BF E  ND6                000000CB E
ND7                000000D7 E  NE0                00000085 E  NE1                00000091 E
NE2                0000009D E  NE3                000000A9 E  NE4                000000B5 E
NE5                000000C1 E  NE6                000000CD E  NE7                000000D9 E
NEB0               00000084 E  NEB1               00000090 E  NEB2               0000009C E
NEB3               000000A8 E  NEB4               000000B4 E  NEB5               000000C0 E
NEB6               000000CC E  NEB7               000000D8 E  NF0                00000086 E
NF1                00000092 E  NF2                0000009E E  NF3                000000AA E
NF4                000000B6 E  NF5                000000C2 E  NF6                000000CE E
NF7                000000DA E  NFS0               00000087 E  NFS1               00000093 E
NFS2               0000009F E  NFS3               000000AB E  NFS4               000000B7 E
NFS5               000000C3 E  NFS6               000000CF E  NFS7               000000DB E
NG0                00000088 E  NG1                00000094 E  NG2                000000A0 E
NG3                000000AC E  NG4                000000B8 E  NG5                000000C4 E
NG6                000000D0 E  NG7                000000DC E  NRST               00000080 E
PAKICK             0000008B E  PASNARE            0000008C E  PBELL              0000008D E
PBONGOHI           00000092 E  PBONGOLO           00000093 E  PCLAP              0000008A E
PCLICKHI           00000090 E  PCLICKLO           00000091 E  PCLOSEDHH          00000098 E
PCOWBELL           0000008F E  PCRASHCYMB         00000089 E  PEHIHAT            00000088 E
PEKICK             00000081 E  PESNARE            00000082 E  PFINGSNAP          0000008E E
POPENHH            00000099 E  PRIDEBELL          00000084 E  PSEGA              00000097 E
PSGVOL_HALF        00000003 E  PSGVOL_MAX         00000000 E  PSGVOL_QTR         00000007 E
PSGVOL_SILENCE     0000000F E  PSILENCE           00000096 E  PSPLASHCYMB        00000083 E
PTIMPANIHI         00000094 E  PTIMPANILO         00000095 E  PTOMHI             00000085 E
PTOMLOW            00000087 E  PTOMMID            00000086 E  SMPSED             000000ED E
SMPSEE             000000EE E  SMPSF9             000000F9 E  SMPSMODOFF         000000F4 E
SMPSMODON          000000F1 E  SMPSNOATTACK       000000E7 E  SMPSPITCH00        00000000 E
SMPSPITCH01HI      0000000C E  SMPSPITCH01LO      000000F4 E  SMPSPITCH02HI      00000018 E
SMPSPITCH02LO      000000E8 E  SMPSPITCH03HI      00000024 E  SMPSPITCH03LO      000000DC E
SMPSPITCH04HI      00000030 E  SMPSPITCH04LO      000000D0 E  SMPSPITCH05HI      0000003C E
SMPSPITCH05LO      000000C4 E  SMPSPITCH06HI      00000048 E  SMPSPITCH06LO      000000B8 E
SMPSPITCH07HI      00000054 E  SMPSPITCH07LO      000000AC E  SMPSPITCH08HI      00000060 E
SMPSPITCH08LO      000000A0 E  SMPSPITCH09HI      0000006C E  SMPSPITCH09LO      00000094 E
SMPSPITCH10HI      00000078 E  SMPSPITCH10LO      00000088 E  TARGET             00040000 E
TEMPDIV            00000004 S  ZVN_CALL1          00000085    ZVN_CALL10         000001BF
ZVN_CALL11         000001D4    ZVN_CALL12         00000218    ZVN_CALL13         0000023C
ZVN_CALL14         0000025E    ZVN_CALL15         000002C9    ZVN_CALL16         000002ED
ZVN_CALL17         0000030F    ZVN_CALL18         0000032A    ZVN_CALL19         00000333
ZVN_CALL2          0000009F    ZVN_CALL20         0000034D    ZVN_CALL21         00000361
ZVN_CALL22         000003B6    ZVN_CALL23         000003BC    ZVN_CALL24         000003C4
ZVN_CALL25         000003D9    ZVN_CALL26         000003E8    ZVN_CALL27         00000406
ZVN_CALL28         0000042F    ZVN_CALL29         00000486    ZVN_CALL3          000000B4
ZVN_CALL30         0000048C    ZVN_CALL31         00000492    ZVN_CALL32         00000498
ZVN_CALL33         000004B9    ZVN_CALL34         000004BF    ZVN_CALL35         000004CF
ZVN_CALL36         000004DB    ZVN_CALL37         0000052B    ZVN_CALL38         00000531
ZVN_CALL39         00000537    ZVN_CALL4          000000C1    ZVN_CALL40         0000053D
ZVN_CALL41         00000594    ZVN_CALL42         000005AE    ZVN_CALL43         000005C3
ZVN_CALL44         000005D2    ZVN_CALL45         000005FB    ZVN_CALL46         0000061C
ZVN_CALL47         0000063E    ZVN_CALL48         0000069E    ZVN_CALL49         000006B8
ZVN_CALL5          000000EA    ZVN_CALL50         000006D0    ZVN_CALL51         000006E7
ZVN_CALL52         0000072B    ZVN_CALL53         0000074F    ZVN_CALL54         00000771
ZVN_CALL55         000007DC    ZVN_CALL56         00000800    ZVN_CALL57         00000822
ZVN_CALL58         00000831    ZVN_CALL59         0000084F    ZVN_CALL6          0000010B
ZVN_CALL60         00000878    ZVN_CALL7          0000012D    ZVN_CALL8          0000018D
ZVN_CALL9          000001A7    ZVN_FM1            00000040    ZVN_FM2            00000146
ZVN_FM3            00000282    ZVN_FM4            00000371    ZVN_FM5            0000043F
ZVN_FM6            000004EC    ZVN_JUM$8          00000673    ZVN_JUM$9          000007B1
ZVN_JUMP1          0000005A    ZVN_JUMP2          00000162    ZVN_JUMP3          0000029C
ZVN_JUMP4          0000038B    ZVN_JUMP5          00000459    ZVN_JUMP6          00000506
ZVN_JUMP7          00000569    ZVN_LOO$8          0000016E    ZVN_LOO$9          00000182
ZVN_LOOP1          000000C4    ZVN_LOOP10         0000028B    ZVN_LOOP11         000003DB
ZVN_LOOP12         000003FB    ZVN_LOOP13         0000037A    ZVN_LOOP14         00000397
ZVN_LOOP15         00000430    ZVN_LOOP16         000003AB    ZVN_LOOP17         000004AB
ZVN_LOOP18         00000448    ZVN_LOOP19         000004F5    ZVN_LOOP2          000000FD
ZVN_LOOP20         0000050F    ZVN_LOOP21         00000520    ZVN_LOOP22         000005D5
ZVN_LOOP23         0000060E    ZVN_LOOP24         00000558    ZVN_LOOP25         00000575
ZVN_LOOP26         00000640    ZVN_LOOP27         00000589    ZVN_LOOP28         00000662
ZVN_LOOP29         0000067F    ZVN_LOOP3          00000049    ZVN_LOOP30         00000693
ZVN_LOOP31         00000824    ZVN_LOOP32         00000844    ZVN_LOOP33         000007A0
ZVN_LOOP34         000007BD    ZVN_LOOP35         00000879    ZVN_LOOP36         000007D1
ZVN_LOOP4          00000066    ZVN_LOOP5          0000012F    ZVN_LOOP6          0000007A
ZVN_LOOP7          00000151    ZVN_PATCHES        00000998    ZVN_PSG1           0000054D
ZVN_PSG2           00000657    ZVN_PSG3           00000795    ZVN_PWM1           00000888
ZVN_PWM1_CALL1     000008CB    ZVN_PWM1_CALL2     000008D1    ZVN_PWM1_CALL3     000008E7
ZVN_PWM1_CALL4     000008FB    ZVN_PWM1_LOOP1     000008D2    ZVN_PWM1_LOOP2     00000890
ZVN_PWM1_LOOP3     000008A1    ZVN_PWM1_LOOP4     000008AC    ZVN_PWM1_LOOP5     000008B7
ZVN_PWM1_LOOP6     000008FC    ZVN_PWM2           00000911    ZVN_PWM2_CALL1     00000956
ZVN_PWM2_CALL2     0000095C    ZVN_PWM2_CALL3     0000096C    ZVN_PWM2_CALL4     00000987
ZVN_PWM2_LOOP1     00000919    ZVN_PWM2_LOOP2     0000092A    ZVN_PWM3           00000997
ZVN_PWM4           00000997
